<?xml version="1.0" encoding="UTF-8" standalone="yes"?><report><class name="com/google/zxing/pdf417/PDF417Writer"><method name="encode" desc="(Ljava/lang/String;Lcom/google/zxing/BarcodeFormat;IILjava/util/Map;)Lcom/google/zxing/common/BitMatrix;"><du var="contents" def="53" use="87" covered="0"/><du var="format" def="53" use="53" target="54" covered="0"/><du var="format" def="53" use="53" target="57" covered="0"/><du var="format" def="53" use="54" covered="0"/><du var="width" def="53" use="87" covered="0"/><du var="height" def="53" use="87" covered="0"/><du var="hints" def="53" use="61" target="62" covered="0"/><du var="hints" def="53" use="61" target="87" covered="0"/><du var="hints" def="53" use="62" target="63" covered="0"/><du var="hints" def="53" use="62" target="65" covered="0"/><du var="hints" def="53" use="65" target="66" covered="0"/><du var="hints" def="53" use="65" target="68" covered="0"/><du var="hints" def="53" use="68" target="69" covered="0"/><du var="hints" def="53" use="68" target="75" covered="0"/><du var="hints" def="53" use="75" target="76" covered="0"/><du var="hints" def="53" use="75" target="78" covered="0"/><du var="hints" def="53" use="78" target="79" covered="0"/><du var="hints" def="53" use="78" target="81" covered="0"/><du var="hints" def="53" use="81" target="82" covered="0"/><du var="hints" def="53" use="81" target="87" covered="0"/><du var="hints" def="53" use="82" covered="0"/><du var="hints" def="53" use="79" covered="0"/><du var="hints" def="53" use="76" covered="0"/><du var="hints" def="53" use="69" covered="0"/><du var="hints" def="53" use="66" covered="0"/><du var="hints" def="53" use="63" covered="0"/><du var="PDF_417" def="53" use="53" target="54" covered="0"/><du var="PDF_417" def="53" use="53" target="57" covered="0"/><du var="PDF417_COMPACT" def="53" use="62" target="63" covered="0"/><du var="PDF417_COMPACT" def="53" use="62" target="65" covered="0"/><du var="PDF417_COMPACT" def="53" use="63" covered="0"/><du var="PDF417_COMPACTION" def="53" use="65" target="66" covered="0"/><du var="PDF417_COMPACTION" def="53" use="65" target="68" covered="0"/><du var="PDF417_COMPACTION" def="53" use="66" covered="0"/><du var="PDF417_DIMENSIONS" def="53" use="68" target="69" covered="0"/><du var="PDF417_DIMENSIONS" def="53" use="68" target="75" covered="0"/><du var="PDF417_DIMENSIONS" def="53" use="69" covered="0"/><du var="MARGIN" def="53" use="75" target="76" covered="0"/><du var="MARGIN" def="53" use="75" target="78" covered="0"/><du var="MARGIN" def="53" use="76" covered="0"/><du var="ERROR_CORRECTION" def="53" use="78" target="79" covered="0"/><du var="ERROR_CORRECTION" def="53" use="78" target="81" covered="0"/><du var="ERROR_CORRECTION" def="53" use="79" covered="0"/><du var="CHARACTER_SET" def="53" use="81" target="82" covered="0"/><du var="CHARACTER_SET" def="53" use="81" target="87" covered="0"/><du var="CHARACTER_SET" def="53" use="82" covered="0"/><du var="encoder" def="57" use="87" covered="0"/><du var="encoder" def="57" use="83" covered="0"/><du var="encoder" def="57" use="70" covered="0"/><du var="encoder" def="57" use="66" covered="0"/><du var="encoder" def="57" use="63" covered="0"/><du var="margin" def="58" use="87" covered="0"/><du var="errorCorrectionLevel" def="59" use="87" covered="0"/><du var="margin" def="76" use="87" covered="0"/><du var="errorCorrectionLevel" def="79" use="87" covered="0"/><counter type="DU" missed="55" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bitMatrixFromEncoder" desc="(Lcom/google/zxing/pdf417/encoder/PDF417;Ljava/lang/String;IIII)Lcom/google/zxing/common/BitMatrix;"><du var="encoder" def="107" use="128" covered="0"/><du var="width" def="107" use="112" target="112" covered="0"/><du var="width" def="107" use="112" target="112" covered="0"/><du var="width" def="107" use="117" covered="0"/><du var="height" def="107" use="112" target="112" covered="0"/><du var="height" def="107" use="112" target="112" covered="0"/><du var="height" def="107" use="118" covered="0"/><du var="margin" def="107" use="135" covered="0"/><du var="margin" def="107" use="133" covered="0"/><du var="aspectRatio" def="109" use="128" covered="0"/><du var="originalScale" def="110" use="112" target="112" covered="0"/><du var="originalScale" def="110" use="112" target="112" covered="0"/><du var="originalScale" def="110" use="117" covered="0"/><du var="originalScale" def="110" use="118" covered="0"/><du var="originalScale" def="110" use="135" covered="0"/><du var="originalScale" def="110" use="113" covered="0"/><du var="rotated" def="111" use="130" target="131" covered="0"/><du var="rotated" def="111" use="130" target="133" covered="0"/><du var="originalScale" def="113" use="117" covered="0"/><du var="originalScale" def="113" use="118" covered="0"/><du var="originalScale" def="113" use="135" covered="0"/><du var="rotated" def="114" use="130" target="131" covered="0"/><du var="rotated" def="114" use="130" target="133" covered="0"/><du var="scaleX" def="117" use="121" target="122" covered="0"/><du var="scaleX" def="117" use="121" target="124" covered="0"/><du var="scaleX" def="117" use="122" covered="0"/><du var="scaleY" def="118" use="121" target="122" covered="0"/><du var="scaleY" def="118" use="121" target="124" covered="0"/><du var="scaleY" def="118" use="124" covered="0"/><du var="scale" def="122" use="127" target="129" covered="0"/><du var="scale" def="122" use="127" target="135" covered="0"/><du var="scale" def="122" use="128" covered="0"/><du var="scale" def="124" use="127" target="129" covered="0"/><du var="scale" def="124" use="127" target="135" covered="0"/><du var="scale" def="124" use="128" covered="0"/><du var="scaledMatrix" def="128" use="133" covered="0"/><du var="scaledMatrix" def="128" use="131" covered="0"/><du var="scaledMatrix" def="131" use="133" covered="0"/><counter type="DU" missed="38" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bitMatrixFromBitArray" desc="([[BI)Lcom/google/zxing/common/BitMatrix;"><du var="input" def="147" use="149" target="158" covered="0"/><du var="input" def="147" use="149" target="150" covered="0"/><du var="input" def="147" use="150" covered="0"/><du var="input" def="147" use="151" target="149" covered="0"/><du var="input" def="147" use="151" target="153" covered="0"/><du var="margin" def="147" use="154" covered="0"/><du var="output" def="147" use="154" covered="0"/><du var="output" def="147" use="158" covered="0"/><du var="y" def="149" use="149" target="158" covered="0"/><du var="y" def="149" use="149" target="150" covered="0"/><du var="y" def="149" use="150" covered="0"/><du var="y" def="149" use="149" covered="0"/><du var="yOutput" def="149" use="154" covered="0"/><du var="yOutput" def="149" use="149" covered="0"/><du var="inputY" def="150" use="153" target="154" covered="0"/><du var="inputY" def="150" use="153" target="151" covered="0"/><du var="x" def="151" use="151" target="149" covered="0"/><du var="x" def="151" use="151" target="153" covered="0"/><du var="x" def="151" use="153" target="154" covered="0"/><du var="x" def="151" use="153" target="151" covered="0"/><du var="x" def="151" use="151" covered="0"/><du var="x" def="151" use="154" covered="0"/><du var="x" def="151" use="151" target="149" covered="0"/><du var="x" def="151" use="151" target="153" covered="0"/><du var="x" def="151" use="153" target="154" covered="0"/><du var="x" def="151" use="153" target="151" covered="0"/><du var="x" def="151" use="151" covered="0"/><du var="x" def="151" use="154" covered="0"/><du var="y" def="149" use="149" target="158" covered="0"/><du var="y" def="149" use="149" target="150" covered="0"/><du var="y" def="149" use="150" covered="0"/><du var="y" def="149" use="149" covered="0"/><du var="yOutput" def="149" use="154" covered="0"/><du var="yOutput" def="149" use="149" covered="0"/><counter type="DU" missed="34" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rotateArray" desc="([[B)[[B"><du var="bitarray" def="165" use="166" target="174" covered="0"/><du var="bitarray" def="165" use="166" target="169" covered="0"/><du var="bitarray" def="165" use="169" covered="0"/><du var="bitarray" def="165" use="170" target="166" covered="0"/><du var="bitarray" def="165" use="170" target="171" covered="0"/><du var="bitarray" def="165" use="171" covered="0"/><du var="temp" def="165" use="171" covered="0"/><du var="temp" def="165" use="174" covered="0"/><du var="ii" def="166" use="166" target="174" covered="0"/><du var="ii" def="166" use="166" target="169" covered="0"/><du var="ii" def="166" use="169" covered="0"/><du var="ii" def="166" use="171" covered="0"/><du var="ii" def="166" use="166" covered="0"/><du var="inverseii" def="169" use="171" covered="0"/><du var="jj" def="170" use="170" target="166" covered="0"/><du var="jj" def="170" use="170" target="171" covered="0"/><du var="jj" def="170" use="171" covered="0"/><du var="jj" def="170" use="170" covered="0"/><du var="jj" def="170" use="170" target="166" covered="0"/><du var="jj" def="170" use="170" target="171" covered="0"/><du var="jj" def="170" use="171" covered="0"/><du var="jj" def="170" use="170" covered="0"/><du var="ii" def="166" use="166" target="174" covered="0"/><du var="ii" def="166" use="166" target="169" covered="0"/><du var="ii" def="166" use="169" covered="0"/><du var="ii" def="166" use="171" covered="0"/><du var="ii" def="166" use="166" covered="0"/><counter type="DU" missed="27" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="154" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/pdf417/decoder/DetectionResult"><method name="getDetectionResultColumns" desc="()[Lcom/google/zxing/pdf417/decoder/DetectionResultColumn;"><du var="this" def="43" use="49" covered="0"/><du var="this" def="43" use="51" covered="0"/><du var="this.detectionResultColumns" def="43" use="51" covered="0"/><du var="unadjustedCodewordCount" def="45" use="48" covered="0"/><du var="previousUnadjustedCount" def="48" use="47" target="51" covered="0"/><du var="previousUnadjustedCount" def="48" use="47" target="48" covered="0"/><du var="unadjustedCodewordCount" def="49" use="50" target="50" covered="0"/><du var="unadjustedCodewordCount" def="49" use="50" target="51" covered="0"/><du var="unadjustedCodewordCount" def="49" use="47" target="51" covered="0"/><du var="unadjustedCodewordCount" def="49" use="47" target="48" covered="0"/><du var="unadjustedCodewordCount" def="49" use="48" covered="0"/><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustIndicatorColumnRowNumbers" desc="(Lcom/google/zxing/pdf417/decoder/DetectionResultColumn;)V"><du var="this" def="55" use="57" covered="0"/><du var="detectionResultColumn" def="55" use="55" target="56" covered="0"/><du var="detectionResultColumn" def="55" use="55" target="59" covered="0"/><du var="detectionResultColumn" def="55" use="57" covered="0"/><du var="this.barcodeMetadata" def="55" use="57" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustRowNumbers" desc="()I"><du var="this" def="69" use="73" target="84" covered="0"/><du var="this" def="69" use="73" target="74" covered="0"/><du var="this" def="69" use="74" covered="0"/><du var="this" def="69" use="80" covered="0"/><du var="this.detectionResultColumns" def="69" use="74" covered="0"/><du var="this.barcodeColumnCount" def="69" use="73" target="84" covered="0"/><du var="this.barcodeColumnCount" def="69" use="73" target="74" covered="0"/><du var="unadjustedCount" def="69" use="70" target="71" covered="0"/><du var="unadjustedCount" def="69" use="70" target="73" covered="0"/><du var="unadjustedCount" def="69" use="84" covered="0"/><du var="barcodeColumn" def="73" use="73" target="84" covered="0"/><du var="barcodeColumn" def="73" use="73" target="74" covered="0"/><du var="barcodeColumn" def="73" use="74" covered="0"/><du var="barcodeColumn" def="73" use="80" covered="0"/><du var="barcodeColumn" def="73" use="73" covered="0"/><du var="codewords" def="74" use="75" target="73" covered="0"/><du var="codewords" def="74" use="75" target="76" covered="0"/><du var="codewords" def="74" use="76" target="77" covered="0"/><du var="codewords" def="74" use="76" target="79" covered="0"/><du var="codewords" def="74" use="79" target="80" covered="0"/><du var="codewords" def="74" use="79" target="75" covered="0"/><du var="codewords" def="74" use="80" covered="0"/><du var="codewordsRow" def="75" use="75" target="73" covered="0"/><du var="codewordsRow" def="75" use="75" target="76" covered="0"/><du var="codewordsRow" def="75" use="76" target="77" covered="0"/><du var="codewordsRow" def="75" use="76" target="79" covered="0"/><du var="codewordsRow" def="75" use="79" target="80" covered="0"/><du var="codewordsRow" def="75" use="79" target="75" covered="0"/><du var="codewordsRow" def="75" use="75" covered="0"/><du var="codewordsRow" def="75" use="80" covered="0"/><du var="codewordsRow" def="75" use="75" target="73" covered="0"/><du var="codewordsRow" def="75" use="75" target="76" covered="0"/><du var="codewordsRow" def="75" use="76" target="77" covered="0"/><du var="codewordsRow" def="75" use="76" target="79" covered="0"/><du var="codewordsRow" def="75" use="79" target="80" covered="0"/><du var="codewordsRow" def="75" use="79" target="75" covered="0"/><du var="codewordsRow" def="75" use="75" covered="0"/><du var="codewordsRow" def="75" use="80" covered="0"/><du var="barcodeColumn" def="73" use="73" target="84" covered="0"/><du var="barcodeColumn" def="73" use="73" target="74" covered="0"/><du var="barcodeColumn" def="73" use="74" covered="0"/><du var="barcodeColumn" def="73" use="80" covered="0"/><du var="barcodeColumn" def="73" use="73" covered="0"/><counter type="DU" missed="43" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustRowNumbersFromBothRI" desc="()V"><du var="this" def="98" use="98" target="98" covered="0"/><du var="this" def="98" use="98" target="99" covered="0"/><du var="this" def="98" use="98" target="99" covered="0"/><du var="this" def="98" use="98" target="101" covered="0"/><du var="this" def="98" use="101" covered="0"/><du var="this" def="98" use="102" covered="0"/><du var="this" def="98" use="107" target="103" covered="0"/><du var="this" def="98" use="107" target="108" covered="0"/><du var="this" def="98" use="108" covered="0"/><du var="this" def="98" use="114" covered="0"/><du var="this.detectionResultColumns" def="98" use="98" target="98" covered="0"/><du var="this.detectionResultColumns" def="98" use="98" target="99" covered="0"/><du var="this.detectionResultColumns" def="98" use="98" target="99" covered="0"/><du var="this.detectionResultColumns" def="98" use="98" target="101" covered="0"/><du var="this.detectionResultColumns" def="98" use="101" covered="0"/><du var="this.detectionResultColumns" def="98" use="102" covered="0"/><du var="this.detectionResultColumns" def="98" use="108" covered="0"/><du var="this.detectionResultColumns" def="98" use="114" covered="0"/><du var="this.barcodeColumnCount" def="98" use="98" target="99" covered="0"/><du var="this.barcodeColumnCount" def="98" use="98" target="101" covered="0"/><du var="this.barcodeColumnCount" def="98" use="102" covered="0"/><du var="this.barcodeColumnCount" def="98" use="107" target="103" covered="0"/><du var="this.barcodeColumnCount" def="98" use="107" target="108" covered="0"/><du var="LRIcodewords" def="101" use="103" target="119" covered="0"/><du var="LRIcodewords" def="101" use="103" target="104" covered="0"/><du var="LRIcodewords" def="101" use="104" target="105" covered="0"/><du var="LRIcodewords" def="101" use="104" target="103" covered="0"/><du var="LRIcodewords" def="101" use="106" target="107" covered="0"/><du var="LRIcodewords" def="101" use="106" target="103" covered="0"/><du var="LRIcodewords" def="101" use="112" covered="0"/><du var="RRIcodewords" def="102" use="105" target="106" covered="0"/><du var="RRIcodewords" def="102" use="105" target="103" covered="0"/><du var="RRIcodewords" def="102" use="106" target="107" covered="0"/><du var="RRIcodewords" def="102" use="106" target="103" covered="0"/><du var="codewordsRow" def="103" use="103" target="119" covered="0"/><du var="codewordsRow" def="103" use="103" target="104" covered="0"/><du var="codewordsRow" def="103" use="104" target="105" covered="0"/><du var="codewordsRow" def="103" use="104" target="103" covered="0"/><du var="codewordsRow" def="103" use="103" covered="0"/><du var="codewordsRow" def="103" use="105" target="106" covered="0"/><du var="codewordsRow" def="103" use="105" target="103" covered="0"/><du var="codewordsRow" def="103" use="106" target="107" covered="0"/><du var="codewordsRow" def="103" use="106" target="103" covered="0"/><du var="codewordsRow" def="103" use="108" covered="0"/><du var="codewordsRow" def="103" use="112" covered="0"/><du var="codewordsRow" def="103" use="114" covered="0"/><du var="barcodeColumn" def="107" use="107" target="103" covered="0"/><du var="barcodeColumn" def="107" use="107" target="108" covered="0"/><du var="barcodeColumn" def="107" use="108" covered="0"/><du var="barcodeColumn" def="107" use="107" covered="0"/><du var="barcodeColumn" def="107" use="114" covered="0"/><du var="codeword" def="108" use="109" target="110" covered="0"/><du var="codeword" def="108" use="109" target="112" covered="0"/><du var="codeword" def="108" use="112" covered="0"/><du var="codeword" def="108" use="113" target="114" covered="0"/><du var="codeword" def="108" use="113" target="107" covered="0"/><du var="barcodeColumn" def="107" use="107" target="103" covered="0"/><du var="barcodeColumn" def="107" use="107" target="108" covered="0"/><du var="barcodeColumn" def="107" use="108" covered="0"/><du var="barcodeColumn" def="107" use="107" covered="0"/><du var="barcodeColumn" def="107" use="114" covered="0"/><du var="codewordsRow" def="103" use="103" target="119" covered="0"/><du var="codewordsRow" def="103" use="103" target="104" covered="0"/><du var="codewordsRow" def="103" use="104" target="105" covered="0"/><du var="codewordsRow" def="103" use="104" target="103" covered="0"/><du var="codewordsRow" def="103" use="103" covered="0"/><du var="codewordsRow" def="103" use="105" target="106" covered="0"/><du var="codewordsRow" def="103" use="105" target="103" covered="0"/><du var="codewordsRow" def="103" use="106" target="107" covered="0"/><du var="codewordsRow" def="103" use="106" target="103" covered="0"/><du var="codewordsRow" def="103" use="108" covered="0"/><du var="codewordsRow" def="103" use="112" covered="0"/><du var="codewordsRow" def="103" use="114" covered="0"/><counter type="DU" missed="73" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustRowNumbersFromRRI" desc="()I"><du var="this" def="122" use="122" target="123" covered="0"/><du var="this" def="122" use="122" target="125" covered="0"/><du var="this" def="122" use="126" covered="0"/><du var="this" def="122" use="133" covered="0"/><du var="this" def="122" use="134" covered="0"/><du var="this.detectionResultColumns" def="122" use="122" target="123" covered="0"/><du var="this.detectionResultColumns" def="122" use="122" target="125" covered="0"/><du var="this.detectionResultColumns" def="122" use="126" covered="0"/><du var="this.detectionResultColumns" def="122" use="134" covered="0"/><du var="this.barcodeColumnCount" def="122" use="122" target="123" covered="0"/><du var="this.barcodeColumnCount" def="122" use="122" target="125" covered="0"/><du var="this.barcodeColumnCount" def="122" use="126" covered="0"/><du var="this.barcodeColumnCount" def="122" use="133" covered="0"/><du var="unadjustedCount" def="125" use="138" covered="0"/><du var="unadjustedCount" def="125" use="143" covered="0"/><du var="codewords" def="126" use="127" target="143" covered="0"/><du var="codewords" def="126" use="127" target="128" covered="0"/><du var="codewords" def="126" use="128" target="129" covered="0"/><du var="codewords" def="126" use="128" target="131" covered="0"/><du var="codewords" def="126" use="131" covered="0"/><du var="codewordsRow" def="127" use="127" target="143" covered="0"/><du var="codewordsRow" def="127" use="127" target="128" covered="0"/><du var="codewordsRow" def="127" use="128" target="129" covered="0"/><du var="codewordsRow" def="127" use="128" target="131" covered="0"/><du var="codewordsRow" def="127" use="131" covered="0"/><du var="codewordsRow" def="127" use="127" covered="0"/><du var="codewordsRow" def="127" use="134" covered="0"/><du var="rowIndicatorRowNumber" def="131" use="136" covered="0"/><du var="invalidRowCounts" def="132" use="133" target="127" covered="0"/><du var="invalidRowCounts" def="132" use="133" target="134" covered="0"/><du var="invalidRowCounts" def="132" use="136" covered="0"/><du var="barcodeColumn" def="133" use="133" target="133" covered="0"/><du var="barcodeColumn" def="133" use="133" target="127" covered="0"/><du var="barcodeColumn" def="133" use="134" covered="0"/><du var="barcodeColumn" def="133" use="133" covered="0"/><du var="codeword" def="134" use="135" target="136" covered="0"/><du var="codeword" def="134" use="135" target="133" covered="0"/><du var="codeword" def="134" use="136" covered="0"/><du var="codeword" def="134" use="137" target="138" covered="0"/><du var="codeword" def="134" use="137" target="133" covered="0"/><du var="invalidRowCounts" def="136" use="133" target="127" covered="0"/><du var="invalidRowCounts" def="136" use="133" target="134" covered="0"/><du var="invalidRowCounts" def="136" use="136" covered="0"/><du var="unadjustedCount" def="138" use="143" covered="0"/><du var="unadjustedCount" def="138" use="138" covered="0"/><du var="barcodeColumn" def="133" use="133" target="133" covered="0"/><du var="barcodeColumn" def="133" use="133" target="127" covered="0"/><du var="barcodeColumn" def="133" use="134" covered="0"/><du var="barcodeColumn" def="133" use="133" covered="0"/><du var="codewordsRow" def="127" use="127" target="143" covered="0"/><du var="codewordsRow" def="127" use="127" target="128" covered="0"/><du var="codewordsRow" def="127" use="128" target="129" covered="0"/><du var="codewordsRow" def="127" use="128" target="131" covered="0"/><du var="codewordsRow" def="127" use="131" covered="0"/><du var="codewordsRow" def="127" use="127" covered="0"/><du var="codewordsRow" def="127" use="134" covered="0"/><counter type="DU" missed="56" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustRowNumbersFromLRI" desc="()I"><du var="this" def="147" use="147" target="148" covered="0"/><du var="this" def="147" use="147" target="150" covered="0"/><du var="this" def="147" use="151" covered="0"/><du var="this" def="147" use="158" target="158" covered="0"/><du var="this" def="147" use="158" target="152" covered="0"/><du var="this" def="147" use="159" covered="0"/><du var="this.detectionResultColumns" def="147" use="147" target="148" covered="0"/><du var="this.detectionResultColumns" def="147" use="147" target="150" covered="0"/><du var="this.detectionResultColumns" def="147" use="151" covered="0"/><du var="this.detectionResultColumns" def="147" use="159" covered="0"/><du var="this.barcodeColumnCount" def="147" use="158" target="158" covered="0"/><du var="this.barcodeColumnCount" def="147" use="158" target="152" covered="0"/><du var="unadjustedCount" def="150" use="163" covered="0"/><du var="unadjustedCount" def="150" use="168" covered="0"/><du var="codewords" def="151" use="152" target="168" covered="0"/><du var="codewords" def="151" use="152" target="153" covered="0"/><du var="codewords" def="151" use="153" target="154" covered="0"/><du var="codewords" def="151" use="153" target="156" covered="0"/><du var="codewords" def="151" use="156" covered="0"/><du var="codewordsRow" def="152" use="152" target="168" covered="0"/><du var="codewordsRow" def="152" use="152" target="153" covered="0"/><du var="codewordsRow" def="152" use="153" target="154" covered="0"/><du var="codewordsRow" def="152" use="153" target="156" covered="0"/><du var="codewordsRow" def="152" use="156" covered="0"/><du var="codewordsRow" def="152" use="152" covered="0"/><du var="codewordsRow" def="152" use="159" covered="0"/><du var="rowIndicatorRowNumber" def="156" use="161" covered="0"/><du var="invalidRowCounts" def="157" use="158" target="152" covered="0"/><du var="invalidRowCounts" def="157" use="158" target="159" covered="0"/><du var="invalidRowCounts" def="157" use="161" covered="0"/><du var="barcodeColumn" def="158" use="158" target="158" covered="0"/><du var="barcodeColumn" def="158" use="158" target="152" covered="0"/><du var="barcodeColumn" def="158" use="159" covered="0"/><du var="barcodeColumn" def="158" use="158" covered="0"/><du var="codeword" def="159" use="160" target="161" covered="0"/><du var="codeword" def="159" use="160" target="158" covered="0"/><du var="codeword" def="159" use="161" covered="0"/><du var="codeword" def="159" use="162" target="163" covered="0"/><du var="codeword" def="159" use="162" target="158" covered="0"/><du var="invalidRowCounts" def="161" use="158" target="152" covered="0"/><du var="invalidRowCounts" def="161" use="158" target="159" covered="0"/><du var="invalidRowCounts" def="161" use="161" covered="0"/><du var="unadjustedCount" def="163" use="168" covered="0"/><du var="unadjustedCount" def="163" use="163" covered="0"/><du var="barcodeColumn" def="158" use="158" target="158" covered="0"/><du var="barcodeColumn" def="158" use="158" target="152" covered="0"/><du var="barcodeColumn" def="158" use="159" covered="0"/><du var="barcodeColumn" def="158" use="158" covered="0"/><du var="codewordsRow" def="152" use="152" target="168" covered="0"/><du var="codewordsRow" def="152" use="152" target="153" covered="0"/><du var="codewordsRow" def="152" use="153" target="154" covered="0"/><du var="codewordsRow" def="152" use="153" target="156" covered="0"/><du var="codewordsRow" def="152" use="156" covered="0"/><du var="codewordsRow" def="152" use="152" covered="0"/><du var="codewordsRow" def="152" use="159" covered="0"/><counter type="DU" missed="55" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustRowNumberIfValid" desc="(IILcom/google/zxing/pdf417/decoder/Codeword;)I"><du var="rowIndicatorRowNumber" def="172" use="176" target="177" covered="0"/><du var="rowIndicatorRowNumber" def="172" use="176" target="180" covered="0"/><du var="rowIndicatorRowNumber" def="172" use="177" covered="0"/><du var="invalidRowCounts" def="172" use="183" covered="0"/><du var="invalidRowCounts" def="172" use="180" covered="0"/><du var="invalidRowCounts" def="172" use="173" covered="0"/><du var="codeword" def="172" use="172" target="173" covered="0"/><du var="codeword" def="172" use="172" target="175" covered="0"/><du var="codeword" def="172" use="175" target="176" covered="0"/><du var="codeword" def="172" use="175" target="183" covered="0"/><du var="codeword" def="172" use="176" target="177" covered="0"/><du var="codeword" def="172" use="176" target="180" covered="0"/><du var="codeword" def="172" use="177" covered="0"/><du var="invalidRowCounts" def="178" use="183" covered="0"/><du var="invalidRowCounts" def="180" use="183" covered="0"/><counter type="DU" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustRowNumbers" desc="(II[Lcom/google/zxing/pdf417/decoder/Codeword;)V"><du var="this" def="187" use="190" target="191" covered="0"/><du var="this" def="187" use="190" target="194" covered="0"/><du var="this" def="187" use="191" covered="0"/><du var="barcodeColumn" def="187" use="190" target="191" covered="0"/><du var="barcodeColumn" def="187" use="190" target="194" covered="0"/><du var="barcodeColumn" def="187" use="191" covered="0"/><du var="codewordsRow" def="187" use="196" covered="0"/><du var="codewordsRow" def="187" use="197" covered="0"/><du var="codewordsRow" def="187" use="199" target="200" covered="0"/><du var="codewordsRow" def="187" use="199" target="204" covered="0"/><du var="codewordsRow" def="187" use="204" target="205" covered="0"/><du var="codewordsRow" def="187" use="204" target="209" covered="0"/><du var="codewordsRow" def="187" use="209" target="210" covered="0"/><du var="codewordsRow" def="187" use="209" target="214" covered="0"/><du var="codewordsRow" def="187" use="214" target="215" covered="0"/><du var="codewordsRow" def="187" use="214" target="219" covered="0"/><du var="codewordsRow" def="187" use="215" covered="0"/><du var="codewordsRow" def="187" use="216" covered="0"/><du var="codewordsRow" def="187" use="217" covered="0"/><du var="codewordsRow" def="187" use="210" covered="0"/><du var="codewordsRow" def="187" use="211" covered="0"/><du var="codewordsRow" def="187" use="212" covered="0"/><du var="codewordsRow" def="187" use="205" covered="0"/><du var="codewordsRow" def="187" use="206" covered="0"/><du var="codewordsRow" def="187" use="207" covered="0"/><du var="codewordsRow" def="187" use="200" covered="0"/><du var="codewordsRow" def="187" use="201" covered="0"/><du var="codewordsRow" def="187" use="202" covered="0"/><du var="codewords" def="187" use="209" target="210" covered="0"/><du var="codewords" def="187" use="209" target="214" covered="0"/><du var="codewords" def="187" use="214" target="215" covered="0"/><du var="codewords" def="187" use="214" target="219" covered="0"/><du var="codewords" def="187" use="215" covered="0"/><du var="codewords" def="187" use="210" covered="0"/><du var="codewords" def="187" use="205" covered="0"/><du var="codewords" def="187" use="200" covered="0"/><du var="this.detectionResultColumns" def="187" use="190" target="191" covered="0"/><du var="this.detectionResultColumns" def="187" use="190" target="194" covered="0"/><du var="this.detectionResultColumns" def="187" use="191" covered="0"/><du var="codeword" def="187" use="220" target="221" covered="0"/><du var="codeword" def="187" use="220" target="219" covered="0"/><du var="previousColumnCodewords" def="188" use="196" covered="0"/><du var="previousColumnCodewords" def="188" use="216" covered="0"/><du var="previousColumnCodewords" def="188" use="211" covered="0"/><du var="previousColumnCodewords" def="188" use="206" covered="0"/><du var="previousColumnCodewords" def="188" use="201" covered="0"/><du var="nextColumnCodewords" def="189" use="197" covered="0"/><du var="nextColumnCodewords" def="189" use="217" covered="0"/><du var="nextColumnCodewords" def="189" use="212" covered="0"/><du var="nextColumnCodewords" def="189" use="207" covered="0"/><du var="nextColumnCodewords" def="189" use="202" covered="0"/><du var="nextColumnCodewords" def="191" use="197" covered="0"/><du var="nextColumnCodewords" def="191" use="217" covered="0"/><du var="nextColumnCodewords" def="191" use="212" covered="0"/><du var="nextColumnCodewords" def="191" use="207" covered="0"/><du var="nextColumnCodewords" def="191" use="202" covered="0"/><du var="otherCodewords" def="194" use="219" covered="0"/><du var="otherCodewords" def="194" use="219" covered="0"/><du var="otherCodewords" def="194" use="215" covered="0"/><du var="otherCodewords" def="194" use="216" covered="0"/><du var="otherCodewords" def="194" use="217" covered="0"/><du var="otherCodewords" def="194" use="210" covered="0"/><du var="otherCodewords" def="194" use="211" covered="0"/><du var="otherCodewords" def="194" use="212" covered="0"/><du var="otherCodewords" def="194" use="205" covered="0"/><du var="otherCodewords" def="194" use="206" covered="0"/><du var="otherCodewords" def="194" use="207" covered="0"/><du var="otherCodewords" def="194" use="200" covered="0"/><du var="otherCodewords" def="194" use="201" covered="0"/><du var="otherCodewords" def="194" use="202" covered="0"/><du var="otherCodeword" def="219" use="220" target="221" covered="0"/><du var="otherCodeword" def="219" use="220" target="219" covered="0"/><counter type="DU" missed="83" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustRowNumber" desc="(Lcom/google/zxing/pdf417/decoder/Codeword;Lcom/google/zxing/pdf417/decoder/Codeword;)Z"><du var="codeword" def="230" use="233" target="234" covered="0"/><du var="codeword" def="230" use="233" target="237" covered="0"/><du var="codeword" def="230" use="234" covered="0"/><du var="otherCodeword" def="230" use="230" target="231" covered="0"/><du var="otherCodeword" def="230" use="230" target="233" covered="0"/><du var="otherCodeword" def="230" use="233" target="233" covered="0"/><du var="otherCodeword" def="230" use="233" target="237" covered="0"/><du var="otherCodeword" def="230" use="233" target="234" covered="0"/><du var="otherCodeword" def="230" use="233" target="237" covered="0"/><du var="otherCodeword" def="230" use="234" covered="0"/><counter type="DU" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><du var="this" def="270" use="277" target="289" covered="0"/><du var="this" def="270" use="277" target="278" covered="0"/><du var="this" def="270" use="278" target="279" covered="0"/><du var="this" def="270" use="278" target="282" covered="0"/><du var="this" def="270" use="282" covered="0"/><du var="this" def="270" use="272" covered="0"/><du var="this.detectionResultColumns" def="270" use="278" target="279" covered="0"/><du var="this.detectionResultColumns" def="270" use="278" target="282" covered="0"/><du var="this.detectionResultColumns" def="270" use="282" covered="0"/><du var="this.detectionResultColumns" def="270" use="272" covered="0"/><du var="this.barcodeColumnCount" def="270" use="277" target="289" covered="0"/><du var="this.barcodeColumnCount" def="270" use="277" target="278" covered="0"/><du var="this.barcodeColumnCount" def="270" use="272" covered="0"/><du var="rowIndicatorColumn" def="270" use="271" target="272" covered="0"/><du var="rowIndicatorColumn" def="270" use="271" target="274" covered="0"/><du var="rowIndicatorColumn" def="270" use="275" target="291" covered="0"/><du var="rowIndicatorColumn" def="270" use="275" target="276" covered="0"/><du var="rowIndicatorColumn" def="272" use="275" target="291" covered="0"/><du var="rowIndicatorColumn" def="272" use="275" target="276" covered="0"/><du var="formatter" def="274" use="276" covered="0"/><du var="formatter" def="274" use="287" covered="0"/><du var="formatter" def="274" use="284" covered="0"/><du var="formatter" def="274" use="279" covered="0"/><du var="formatter" def="274" use="289" covered="0"/><du var="formatter" def="274" use="291" covered="0"/><du var="formatter" def="274" use="292" covered="0"/><du var="codewordsRow" def="275" use="275" target="291" covered="0"/><du var="codewordsRow" def="275" use="275" target="276" covered="0"/><du var="codewordsRow" def="275" use="276" covered="0"/><du var="codewordsRow" def="275" use="282" covered="0"/><du var="codewordsRow" def="275" use="275" covered="0"/><du var="barcodeColumn" def="277" use="277" target="289" covered="0"/><du var="barcodeColumn" def="277" use="277" target="278" covered="0"/><du var="barcodeColumn" def="277" use="278" target="279" covered="0"/><du var="barcodeColumn" def="277" use="278" target="282" covered="0"/><du var="barcodeColumn" def="277" use="282" covered="0"/><du var="barcodeColumn" def="277" use="277" covered="0"/><du var="codeword" def="282" use="283" target="284" covered="0"/><du var="codeword" def="282" use="283" target="287" covered="0"/><du var="codeword" def="282" use="287" covered="0"/><du var="codeword" def="282" use="287" covered="0"/><du var="barcodeColumn" def="277" use="277" target="289" covered="0"/><du var="barcodeColumn" def="277" use="277" target="278" covered="0"/><du var="barcodeColumn" def="277" use="278" target="279" covered="0"/><du var="barcodeColumn" def="277" use="278" target="282" covered="0"/><du var="barcodeColumn" def="277" use="282" covered="0"/><du var="barcodeColumn" def="277" use="277" covered="0"/><du var="codewordsRow" def="275" use="275" target="291" covered="0"/><du var="codewordsRow" def="275" use="275" target="276" covered="0"/><du var="codewordsRow" def="275" use="276" covered="0"/><du var="codewordsRow" def="275" use="282" covered="0"/><du var="codewordsRow" def="275" use="275" covered="0"/><counter type="DU" missed="52" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="403" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/pdf417/decoder/BoundingBox"><method name="&lt;init&gt;" desc="(Lcom/google/zxing/common/BitMatrix;Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;)V"><du var="this" def="38" use="49" covered="0"/><du var="image" def="38" use="49" covered="0"/><du var="topLeft" def="38" use="43" target="43" covered="0"/><du var="topLeft" def="38" use="43" target="44" covered="0"/><du var="topLeft" def="38" use="45" target="45" covered="0"/><du var="topLeft" def="38" use="45" target="46" covered="0"/><du var="topLeft" def="38" use="49" covered="0"/><du var="bottomLeft" def="38" use="44" target="44" covered="0"/><du var="bottomLeft" def="38" use="44" target="45" covered="0"/><du var="bottomLeft" def="38" use="49" covered="0"/><du var="bottomLeft" def="38" use="45" target="46" covered="0"/><du var="bottomLeft" def="38" use="45" target="47" covered="0"/><du var="topRight" def="38" use="46" target="46" covered="0"/><du var="topRight" def="38" use="46" target="49" covered="0"/><du var="topRight" def="38" use="49" covered="0"/><du var="topRight" def="38" use="43" target="44" covered="0"/><du var="topRight" def="38" use="43" target="47" covered="0"/><du var="bottomRight" def="38" use="49" covered="0"/><du var="bottomRight" def="38" use="46" target="47" covered="0"/><du var="bottomRight" def="38" use="46" target="49" covered="0"/><du var="bottomRight" def="38" use="44" target="45" covered="0"/><du var="bottomRight" def="38" use="44" target="47" covered="0"/><counter type="DU" missed="22" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="merge" desc="(Lcom/google/zxing/pdf417/decoder/BoundingBox;Lcom/google/zxing/pdf417/decoder/BoundingBox;)Lcom/google/zxing/pdf417/decoder/BoundingBox;"><du var="leftBox" def="70" use="70" target="71" covered="0"/><du var="leftBox" def="70" use="70" target="73" covered="0"/><du var="leftBox" def="70" use="76" covered="0"/><du var="leftBox" def="70" use="74" covered="0"/><du var="rightBox" def="70" use="73" target="74" covered="0"/><du var="rightBox" def="70" use="73" target="76" covered="0"/><du var="rightBox" def="70" use="76" covered="0"/><du var="rightBox" def="70" use="71" covered="0"/><du var="leftBox.image" def="70" use="76" covered="0"/><du var="leftBox.topLeft" def="70" use="76" covered="0"/><du var="leftBox.bottomLeft" def="70" use="76" covered="0"/><du var="rightBox.topRight" def="70" use="76" covered="0"/><du var="rightBox.bottomRight" def="70" use="76" covered="0"/><counter type="DU" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addMissingRows" desc="(IIZ)Lcom/google/zxing/pdf417/decoder/BoundingBox;"><du var="this" def="80" use="113" covered="0"/><du var="this" def="80" use="114" covered="0"/><du var="this" def="80" use="100" covered="0"/><du var="this" def="80" use="102" target="103" covered="0"/><du var="this" def="80" use="102" target="105" covered="0"/><du var="this" def="80" use="103" covered="0"/><du var="this" def="80" use="86" covered="0"/><du var="missingStartRows" def="80" use="85" target="86" covered="0"/><du var="missingStartRows" def="80" use="85" target="99" covered="0"/><du var="missingStartRows" def="80" use="87" covered="0"/><du var="missingEndRows" def="80" use="99" target="100" covered="0"/><du var="missingEndRows" def="80" use="99" target="113" covered="0"/><du var="missingEndRows" def="80" use="101" covered="0"/><du var="isLeft" def="80" use="100" target="100" covered="0"/><du var="isLeft" def="80" use="100" target="100" covered="0"/><du var="isLeft" def="80" use="106" target="107" covered="0"/><du var="isLeft" def="80" use="106" target="109" covered="0"/><du var="isLeft" def="80" use="86" target="86" covered="0"/><du var="isLeft" def="80" use="86" target="86" covered="0"/><du var="isLeft" def="80" use="92" target="93" covered="0"/><du var="isLeft" def="80" use="92" target="95" covered="0"/><du var="this.topLeft" def="80" use="86" covered="0"/><du var="this.bottomLeft" def="80" use="100" covered="0"/><du var="this.topRight" def="80" use="86" covered="0"/><du var="this.bottomRight" def="80" use="100" covered="0"/><du var="this.image" def="80" use="114" covered="0"/><du var="this.image" def="80" use="102" target="103" covered="0"/><du var="this.image" def="80" use="102" target="105" covered="0"/><du var="this.image" def="80" use="103" covered="0"/><du var="newTopLeft" def="80" use="114" covered="0"/><du var="newBottomLeft" def="81" use="114" covered="0"/><du var="newTopRight" def="82" use="114" covered="0"/><du var="newBottomRight" def="83" use="114" covered="0"/><du var="top" def="86" use="91" covered="0"/><du var="newMinY" def="87" use="88" target="89" covered="0"/><du var="newMinY" def="87" use="88" target="91" covered="0"/><du var="newMinY" def="87" use="91" covered="0"/><du var="newMinY" def="89" use="91" covered="0"/><du var="newTop" def="91" use="95" covered="0"/><du var="newTop" def="91" use="93" covered="0"/><du var="newTopLeft" def="93" use="114" covered="0"/><du var="newTopRight" def="95" use="114" covered="0"/><du var="bottom" def="100" use="105" covered="0"/><du var="newMaxY" def="101" use="102" target="103" covered="0"/><du var="newMaxY" def="101" use="102" target="105" covered="0"/><du var="newMaxY" def="101" use="105" covered="0"/><du var="newMaxY" def="103" use="105" covered="0"/><du var="newBottom" def="105" use="109" covered="0"/><du var="newBottom" def="105" use="107" covered="0"/><du var="newBottomLeft" def="107" use="114" covered="0"/><du var="newBottomRight" def="109" use="114" covered="0"/><counter type="DU" missed="51" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateMinMaxValues" desc="()V"><du var="this" def="118" use="118" target="119" covered="0"/><du var="this" def="118" use="118" target="121" covered="0"/><du var="this" def="118" use="121" target="122" covered="0"/><du var="this" def="118" use="121" target="126" covered="0"/><du var="this" def="118" use="126" covered="0"/><du var="this" def="118" use="127" covered="0"/><du var="this" def="118" use="128" covered="0"/><du var="this" def="118" use="129" covered="0"/><du var="this" def="118" use="122" covered="0"/><du var="this" def="118" use="122" covered="0"/><du var="this" def="118" use="123" covered="0"/><du var="this" def="118" use="123" covered="0"/><du var="this" def="118" use="119" covered="0"/><du var="this" def="118" use="119" covered="0"/><du var="this" def="118" use="120" covered="0"/><du var="this" def="118" use="120" covered="0"/><du var="this.topLeft" def="118" use="118" target="119" covered="0"/><du var="this.topLeft" def="118" use="118" target="121" covered="0"/><du var="this.topLeft" def="118" use="126" covered="0"/><du var="this.topLeft" def="118" use="128" covered="0"/><du var="this.topLeft" def="118" use="122" covered="0"/><du var="this.topRight" def="118" use="121" target="122" covered="0"/><du var="this.topRight" def="118" use="121" target="126" covered="0"/><du var="this.topRight" def="118" use="127" covered="0"/><du var="this.topRight" def="118" use="128" covered="0"/><du var="this.topRight" def="118" use="119" covered="0"/><du var="this.bottomRight" def="118" use="127" covered="0"/><du var="this.bottomRight" def="118" use="129" covered="0"/><du var="this.bottomRight" def="118" use="120" covered="0"/><du var="this.bottomLeft" def="118" use="126" covered="0"/><du var="this.bottomLeft" def="118" use="129" covered="0"/><du var="this.bottomLeft" def="118" use="123" covered="0"/><du var="this.image" def="118" use="122" covered="0"/><du var="this.image" def="118" use="123" covered="0"/><du var="this.topLeft" def="119" use="126" covered="0"/><du var="this.topLeft" def="119" use="128" covered="0"/><du var="this.bottomLeft" def="120" use="126" covered="0"/><du var="this.bottomLeft" def="120" use="129" covered="0"/><du var="this.topRight" def="122" use="127" covered="0"/><du var="this.topRight" def="122" use="128" covered="0"/><du var="this.bottomRight" def="123" use="127" covered="0"/><du var="this.bottomRight" def="123" use="129" covered="0"/><counter type="DU" missed="42" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="128" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/pdf417/decoder/PDF417CodewordDecoder"><method name="getDecodedValue" desc="([I)I"><du var="moduleBitCount" def="52" use="56" covered="0"/><du var="decodedValue" def="52" use="53" target="54" covered="0"/><du var="decodedValue" def="52" use="53" target="56" covered="0"/><du var="decodedValue" def="52" use="54" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sampleBitCounts" desc="([I)[I"><du var="moduleBitCount" def="60" use="68" target="69" covered="0"/><du var="moduleBitCount" def="60" use="68" target="72" covered="0"/><du var="moduleBitCount" def="60" use="69" covered="0"/><du var="bitCountSum" def="60" use="65" covered="0"/><du var="result" def="61" use="72" covered="0"/><du var="result" def="61" use="74" covered="0"/><du var="bitCountIndex" def="62" use="68" target="69" covered="0"/><du var="bitCountIndex" def="62" use="68" target="72" covered="0"/><du var="bitCountIndex" def="62" use="72" covered="0"/><du var="bitCountIndex" def="62" use="69" covered="0"/><du var="bitCountIndex" def="62" use="70" covered="0"/><du var="sumPreviousBits" def="63" use="68" target="69" covered="0"/><du var="sumPreviousBits" def="63" use="68" target="72" covered="0"/><du var="sumPreviousBits" def="63" use="69" covered="0"/><du var="i" def="64" use="64" target="74" covered="0"/><du var="i" def="64" use="64" target="66" covered="0"/><du var="i" def="64" use="65" covered="0"/><du var="i" def="64" use="64" covered="0"/><du var="sampleIndex" def="65" use="68" target="69" covered="0"/><du var="sampleIndex" def="65" use="68" target="72" covered="0"/><du var="sumPreviousBits" def="69" use="68" target="69" covered="0"/><du var="sumPreviousBits" def="69" use="68" target="72" covered="0"/><du var="sumPreviousBits" def="69" use="69" covered="0"/><du var="bitCountIndex" def="70" use="72" covered="0"/><du var="bitCountIndex" def="70" use="68" target="69" covered="0"/><du var="bitCountIndex" def="70" use="68" target="72" covered="0"/><du var="bitCountIndex" def="70" use="69" covered="0"/><du var="bitCountIndex" def="70" use="70" covered="0"/><du var="i" def="64" use="64" target="74" covered="0"/><du var="i" def="64" use="64" target="66" covered="0"/><du var="i" def="64" use="65" covered="0"/><du var="i" def="64" use="64" covered="0"/><counter type="DU" missed="32" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDecodedCodewordValue" desc="([I)I"><du var="decodedValue" def="78" use="79" target="79" covered="0"/><du var="decodedValue" def="78" use="79" target="79" covered="0"/><du var="decodedValue" def="78" use="79" covered="0"/><counter type="DU" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBitValue" desc="([I)I"><du var="moduleBitCount" def="83" use="84" target="89" covered="0"/><du var="moduleBitCount" def="83" use="84" target="85" covered="0"/><du var="moduleBitCount" def="83" use="85" target="84" covered="0"/><du var="moduleBitCount" def="83" use="85" target="86" covered="0"/><du var="result" def="83" use="86" covered="0"/><du var="result" def="83" use="89" covered="0"/><du var="i" def="84" use="84" target="89" covered="0"/><du var="i" def="84" use="84" target="85" covered="0"/><du var="i" def="84" use="85" target="84" covered="0"/><du var="i" def="84" use="85" target="86" covered="0"/><du var="i" def="84" use="86" target="86" covered="0"/><du var="i" def="84" use="86" target="86" covered="0"/><du var="i" def="84" use="84" covered="0"/><du var="bit" def="85" use="85" target="84" covered="0"/><du var="bit" def="85" use="85" target="86" covered="0"/><du var="bit" def="85" use="85" covered="0"/><du var="result" def="86" use="86" covered="0"/><du var="result" def="86" use="89" covered="0"/><du var="bit" def="85" use="85" target="84" covered="0"/><du var="bit" def="85" use="85" target="86" covered="0"/><du var="bit" def="85" use="85" covered="0"/><du var="i" def="84" use="84" target="89" covered="0"/><du var="i" def="84" use="84" target="85" covered="0"/><du var="i" def="84" use="85" target="84" covered="0"/><du var="i" def="84" use="85" target="86" covered="0"/><du var="i" def="84" use="86" target="86" covered="0"/><du var="i" def="84" use="86" target="86" covered="0"/><du var="i" def="84" use="84" covered="0"/><counter type="DU" missed="28" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClosestDecodedValue" desc="([I)I"><du var="moduleBitCount" def="93" use="96" covered="0"/><du var="RATIOS_TABLE" def="93" use="100" target="115" covered="0"/><du var="RATIOS_TABLE" def="93" use="100" target="101" covered="0"/><du var="RATIOS_TABLE" def="93" use="102" covered="0"/><du var="SYMBOL_TABLE" def="93" use="112" covered="0"/><du var="bitCountSum" def="93" use="96" covered="0"/><du var="bitCountRatios" def="94" use="95" target="98" covered="0"/><du var="bitCountRatios" def="94" use="95" target="96" covered="0"/><du var="bitCountRatios" def="94" use="96" covered="0"/><du var="bitCountRatios" def="94" use="104" covered="0"/><du var="i" def="95" use="95" target="98" covered="0"/><du var="i" def="95" use="95" target="96" covered="0"/><du var="i" def="95" use="96" covered="0"/><du var="i" def="95" use="95" covered="0"/><du var="i" def="95" use="95" target="98" covered="0"/><du var="i" def="95" use="95" target="96" covered="0"/><du var="i" def="95" use="96" covered="0"/><du var="i" def="95" use="95" covered="0"/><du var="bestMatchError" def="98" use="106" target="107" covered="0"/><du var="bestMatchError" def="98" use="106" target="103" covered="0"/><du var="bestMatchError" def="98" use="110" target="111" covered="0"/><du var="bestMatchError" def="98" use="110" target="100" covered="0"/><du var="bestMatch" def="99" use="115" covered="0"/><du var="j" def="100" use="100" target="115" covered="0"/><du var="j" def="100" use="100" target="101" covered="0"/><du var="j" def="100" use="102" covered="0"/><du var="j" def="100" use="100" covered="0"/><du var="j" def="100" use="112" covered="0"/><du var="error" def="101" use="105" covered="0"/><du var="error" def="101" use="110" target="111" covered="0"/><du var="error" def="101" use="110" target="100" covered="0"/><du var="error" def="101" use="111" covered="0"/><du var="ratioTableRow" def="102" use="104" covered="0"/><du var="k" def="103" use="103" target="110" covered="0"/><du var="k" def="103" use="103" target="104" covered="0"/><du var="k" def="103" use="104" covered="0"/><du var="k" def="103" use="103" covered="0"/><du var="error" def="105" use="106" target="107" covered="0"/><du var="error" def="105" use="106" target="103" covered="0"/><du var="error" def="105" use="105" covered="0"/><du var="error" def="105" use="110" target="111" covered="0"/><du var="error" def="105" use="110" target="100" covered="0"/><du var="error" def="105" use="111" covered="0"/><du var="k" def="103" use="103" target="110" covered="0"/><du var="k" def="103" use="103" target="104" covered="0"/><du var="k" def="103" use="104" covered="0"/><du var="k" def="103" use="103" covered="0"/><du var="bestMatchError" def="111" use="106" target="107" covered="0"/><du var="bestMatchError" def="111" use="106" target="103" covered="0"/><du var="bestMatchError" def="111" use="110" target="111" covered="0"/><du var="bestMatchError" def="111" use="110" target="100" covered="0"/><du var="bestMatch" def="112" use="115" covered="0"/><du var="j" def="100" use="100" target="115" covered="0"/><du var="j" def="100" use="100" target="101" covered="0"/><du var="j" def="100" use="102" covered="0"/><du var="j" def="100" use="100" covered="0"/><du var="j" def="100" use="112" covered="0"/><counter type="DU" missed="57" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="124" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/pdf417/decoder/DetectionResultRowIndicatorColumn"><method name="setRowNumbers" desc="()V"><du var="codeword" def="35" use="36" target="37" covered="0"/><du var="codeword" def="35" use="36" target="35" covered="0"/><du var="codeword" def="35" use="37" covered="0"/><counter type="DU" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustCompleteIndicatorColumnRowNumbers" desc="(Lcom/google/zxing/pdf417/decoder/BarcodeMetadata;)V"><du var="this" def="47" use="51" target="51" covered="0"/><du var="this" def="47" use="51" target="51" covered="0"/><du var="this" def="47" use="52" target="52" covered="0"/><du var="this" def="47" use="52" target="52" covered="0"/><du var="this" def="47" use="53" covered="0"/><du var="this" def="47" use="54" covered="0"/><du var="barcodeMetadata" def="47" use="86" target="87" covered="0"/><du var="barcodeMetadata" def="47" use="86" target="88" covered="0"/><du var="this.isLeft" def="47" use="51" target="51" covered="0"/><du var="this.isLeft" def="47" use="51" target="51" covered="0"/><du var="this.isLeft" def="47" use="52" target="52" covered="0"/><du var="this.isLeft" def="47" use="52" target="52" covered="0"/><du var="codewords" def="47" use="62" target="63" covered="0"/><du var="codewords" def="47" use="62" target="65" covered="0"/><du var="codewords" def="47" use="65" covered="0"/><du var="codewords" def="47" use="88" covered="0"/><du var="codewords" def="47" use="103" covered="0"/><du var="codewords" def="47" use="100" target="100" covered="0"/><du var="codewords" def="47" use="100" target="100" covered="0"/><du var="boundingBox" def="50" use="51" covered="0"/><du var="boundingBox" def="50" use="52" covered="0"/><du var="top" def="51" use="53" covered="0"/><du var="lastRow" def="54" use="61" target="111" covered="0"/><du var="lastRow" def="54" use="61" target="62" covered="0"/><du var="barcodeRow" def="58" use="75" covered="0"/><du var="maxRowHeight" def="59" use="91" target="92" covered="0"/><du var="maxRowHeight" def="59" use="91" target="94" covered="0"/><du var="maxRowHeight" def="59" use="92" covered="0"/><du var="maxRowHeight" def="59" use="82" covered="0"/><du var="currentRowHeight" def="60" use="82" covered="0"/><du var="currentRowHeight" def="60" use="80" covered="0"/><du var="codewordsRow" def="61" use="61" target="111" covered="0"/><du var="codewordsRow" def="61" use="61" target="62" covered="0"/><du var="codewordsRow" def="61" use="62" target="63" covered="0"/><du var="codewordsRow" def="61" use="62" target="65" covered="0"/><du var="codewordsRow" def="61" use="65" covered="0"/><du var="codewordsRow" def="61" use="88" covered="0"/><du var="codewordsRow" def="61" use="61" covered="0"/><du var="codewordsRow" def="61" use="87" target="88" covered="0"/><du var="codewordsRow" def="61" use="87" target="91" covered="0"/><du var="codewordsRow" def="61" use="96" target="96" covered="0"/><du var="codewordsRow" def="61" use="96" target="96" covered="0"/><du var="codewordsRow" def="61" use="103" covered="0"/><du var="codewordsRow" def="61" use="100" target="100" covered="0"/><du var="codewordsRow" def="61" use="100" target="100" covered="0"/><du var="codeword" def="65" use="86" target="87" covered="0"/><du var="codeword" def="65" use="86" target="88" covered="0"/><du var="codeword" def="65" use="105" covered="0"/><du var="codeword" def="65" use="84" covered="0"/><du var="rowDifference" def="75" use="79" target="80" covered="0"/><du var="rowDifference" def="75" use="79" target="81" covered="0"/><du var="rowDifference" def="75" use="81" target="82" covered="0"/><du var="rowDifference" def="75" use="81" target="85" covered="0"/><du var="rowDifference" def="75" use="85" target="86" covered="0"/><du var="rowDifference" def="75" use="85" target="88" covered="0"/><du var="rowDifference" def="75" use="87" target="88" covered="0"/><du var="rowDifference" def="75" use="87" target="91" covered="0"/><du var="rowDifference" def="75" use="94" covered="0"/><du var="rowDifference" def="75" use="92" covered="0"/><du var="currentRowHeight" def="80" use="82" covered="0"/><du var="currentRowHeight" def="80" use="80" covered="0"/><du var="maxRowHeight" def="82" use="91" target="92" covered="0"/><du var="maxRowHeight" def="82" use="91" target="94" covered="0"/><du var="maxRowHeight" def="82" use="92" covered="0"/><du var="maxRowHeight" def="82" use="82" covered="0"/><du var="currentRowHeight" def="83" use="82" covered="0"/><du var="currentRowHeight" def="83" use="80" covered="0"/><du var="barcodeRow" def="84" use="75" covered="0"/><du var="checkedRows" def="92" use="96" target="96" covered="0"/><du var="checkedRows" def="92" use="96" target="96" covered="0"/><du var="checkedRows" def="92" use="97" target="97" covered="0"/><du var="checkedRows" def="92" use="97" target="102" covered="0"/><du var="checkedRows" def="94" use="96" target="96" covered="0"/><du var="checkedRows" def="94" use="96" target="96" covered="0"/><du var="checkedRows" def="94" use="97" target="97" covered="0"/><du var="checkedRows" def="94" use="97" target="102" covered="0"/><du var="closePreviousCodewordFound" def="96" use="102" target="103" covered="0"/><du var="closePreviousCodewordFound" def="96" use="102" target="105" covered="0"/><du var="closePreviousCodewordFound" def="96" use="97" target="102" covered="0"/><du var="closePreviousCodewordFound" def="96" use="97" target="100" covered="0"/><du var="i" def="97" use="97" target="97" covered="0"/><du var="i" def="97" use="97" target="102" covered="0"/><du var="i" def="97" use="100" target="100" covered="0"/><du var="i" def="97" use="100" target="100" covered="0"/><du var="i" def="97" use="97" covered="0"/><du var="closePreviousCodewordFound" def="100" use="102" target="103" covered="0"/><du var="closePreviousCodewordFound" def="100" use="102" target="105" covered="0"/><du var="closePreviousCodewordFound" def="100" use="97" target="102" covered="0"/><du var="closePreviousCodewordFound" def="100" use="97" target="100" covered="0"/><du var="i" def="97" use="97" target="97" covered="0"/><du var="i" def="97" use="97" target="102" covered="0"/><du var="i" def="97" use="100" target="100" covered="0"/><du var="i" def="97" use="100" target="100" covered="0"/><du var="i" def="97" use="97" covered="0"/><du var="barcodeRow" def="105" use="75" covered="0"/><du var="currentRowHeight" def="106" use="82" covered="0"/><du var="currentRowHeight" def="106" use="80" covered="0"/><du var="codewordsRow" def="61" use="61" target="111" covered="0"/><du var="codewordsRow" def="61" use="61" target="62" covered="0"/><du var="codewordsRow" def="61" use="62" target="63" covered="0"/><du var="codewordsRow" def="61" use="62" target="65" covered="0"/><du var="codewordsRow" def="61" use="65" covered="0"/><du var="codewordsRow" def="61" use="88" covered="0"/><du var="codewordsRow" def="61" use="61" covered="0"/><du var="codewordsRow" def="61" use="87" target="88" covered="0"/><du var="codewordsRow" def="61" use="87" target="91" covered="0"/><du var="codewordsRow" def="61" use="96" target="96" covered="0"/><du var="codewordsRow" def="61" use="96" target="96" covered="0"/><du var="codewordsRow" def="61" use="103" covered="0"/><du var="codewordsRow" def="61" use="100" target="100" covered="0"/><du var="codewordsRow" def="61" use="100" target="100" covered="0"/><counter type="DU" missed="111" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRowHeights" desc="()[I"><du var="this" def="114" use="118" covered="0"/><du var="this" def="114" use="120" covered="0"/><du var="this" def="114" use="120" covered="0"/><du var="barcodeMetadata" def="114" use="115" target="116" covered="0"/><du var="barcodeMetadata" def="114" use="115" target="118" covered="0"/><du var="barcodeMetadata" def="114" use="118" covered="0"/><du var="barcodeMetadata" def="114" use="119" covered="0"/><du var="result" def="119" use="123" target="125" covered="0"/><du var="result" def="119" use="123" target="127" covered="0"/><du var="result" def="119" use="127" covered="0"/><du var="result" def="119" use="130" covered="0"/><du var="codeword" def="120" use="121" target="122" covered="0"/><du var="codeword" def="120" use="121" target="120" covered="0"/><du var="codeword" def="120" use="122" covered="0"/><du var="rowNumber" def="122" use="123" target="125" covered="0"/><du var="rowNumber" def="122" use="123" target="127" covered="0"/><du var="rowNumber" def="122" use="127" covered="0"/><counter type="DU" missed="28" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustIncompleteIndicatorColumnRowNumbers" desc="(Lcom/google/zxing/pdf417/decoder/BarcodeMetadata;)V"><du var="this" def="137" use="138" target="138" covered="0"/><du var="this" def="137" use="138" target="138" covered="0"/><du var="this" def="137" use="139" target="139" covered="0"/><du var="this" def="137" use="139" target="139" covered="0"/><du var="this" def="137" use="140" covered="0"/><du var="this" def="137" use="141" covered="0"/><du var="this" def="137" use="143" covered="0"/><du var="barcodeMetadata" def="137" use="165" target="166" covered="0"/><du var="barcodeMetadata" def="137" use="165" target="168" covered="0"/><du var="this.isLeft" def="137" use="138" target="138" covered="0"/><du var="this.isLeft" def="137" use="138" target="138" covered="0"/><du var="this.isLeft" def="137" use="139" target="139" covered="0"/><du var="this.isLeft" def="137" use="139" target="139" covered="0"/><du var="boundingBox" def="137" use="138" covered="0"/><du var="boundingBox" def="137" use="139" covered="0"/><du var="top" def="138" use="140" covered="0"/><du var="lastRow" def="141" use="147" target="173" covered="0"/><du var="lastRow" def="141" use="147" target="148" covered="0"/><du var="codewords" def="143" use="148" target="149" covered="0"/><du var="codewords" def="143" use="148" target="151" covered="0"/><du var="codewords" def="143" use="151" covered="0"/><du var="codewords" def="143" use="166" covered="0"/><du var="barcodeRow" def="144" use="155" covered="0"/><du var="maxRowHeight" def="145" use="162" covered="0"/><du var="currentRowHeight" def="146" use="162" covered="0"/><du var="currentRowHeight" def="146" use="160" covered="0"/><du var="codewordsRow" def="147" use="147" target="173" covered="0"/><du var="codewordsRow" def="147" use="147" target="148" covered="0"/><du var="codewordsRow" def="147" use="148" target="149" covered="0"/><du var="codewordsRow" def="147" use="148" target="151" covered="0"/><du var="codewordsRow" def="147" use="151" covered="0"/><du var="codewordsRow" def="147" use="147" covered="0"/><du var="codewordsRow" def="147" use="166" covered="0"/><du var="codeword" def="151" use="165" target="166" covered="0"/><du var="codeword" def="151" use="165" target="168" covered="0"/><du var="codeword" def="151" use="168" covered="0"/><du var="codeword" def="151" use="164" covered="0"/><du var="rowDifference" def="155" use="159" target="160" covered="0"/><du var="rowDifference" def="155" use="159" target="161" covered="0"/><du var="rowDifference" def="155" use="161" target="162" covered="0"/><du var="rowDifference" def="155" use="161" target="165" covered="0"/><du var="currentRowHeight" def="160" use="162" covered="0"/><du var="currentRowHeight" def="160" use="160" covered="0"/><du var="maxRowHeight" def="162" use="162" covered="0"/><du var="currentRowHeight" def="163" use="162" covered="0"/><du var="currentRowHeight" def="163" use="160" covered="0"/><du var="barcodeRow" def="164" use="155" covered="0"/><du var="barcodeRow" def="168" use="155" covered="0"/><du var="currentRowHeight" def="169" use="162" covered="0"/><du var="currentRowHeight" def="169" use="160" covered="0"/><du var="codewordsRow" def="147" use="147" target="173" covered="0"/><du var="codewordsRow" def="147" use="147" target="148" covered="0"/><du var="codewordsRow" def="147" use="148" target="149" covered="0"/><du var="codewordsRow" def="147" use="148" target="151" covered="0"/><du var="codewordsRow" def="147" use="151" covered="0"/><du var="codewordsRow" def="147" use="147" covered="0"/><du var="codewordsRow" def="147" use="166" covered="0"/><counter type="DU" missed="57" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBarcodeMetadata" desc="()Lcom/google/zxing/pdf417/decoder/BarcodeMetadata;"><du var="this" def="176" use="188" target="189" covered="0"/><du var="this" def="176" use="188" target="191" covered="0"/><du var="this" def="176" use="216" covered="0"/><du var="this.isLeft" def="176" use="188" target="189" covered="0"/><du var="this.isLeft" def="176" use="188" target="191" covered="0"/><du var="codewords" def="176" use="216" covered="0"/><du var="barcodeColumnCount" def="177" use="200" covered="0"/><du var="barcodeColumnCount" def="177" use="205" target="206" covered="0"/><du var="barcodeColumnCount" def="177" use="205" target="212" covered="0"/><du var="barcodeColumnCount" def="177" use="209" target="210" covered="0"/><du var="barcodeColumnCount" def="177" use="209" target="212" covered="0"/><du var="barcodeColumnCount" def="177" use="214" covered="0"/><du var="barcodeRowCountUpperPart" def="178" use="193" covered="0"/><du var="barcodeRowCountUpperPart" def="178" use="206" target="207" covered="0"/><du var="barcodeRowCountUpperPart" def="178" use="206" target="212" covered="0"/><du var="barcodeRowCountUpperPart" def="178" use="210" target="211" covered="0"/><du var="barcodeRowCountUpperPart" def="178" use="210" target="212" covered="0"/><du var="barcodeRowCountUpperPart" def="178" use="211" target="212" covered="0"/><du var="barcodeRowCountUpperPart" def="178" use="211" target="214" covered="0"/><du var="barcodeRowCountUpperPart" def="178" use="214" covered="0"/><du var="barcodeRowCountLowerPart" def="179" use="197" covered="0"/><du var="barcodeRowCountLowerPart" def="179" use="207" target="208" covered="0"/><du var="barcodeRowCountLowerPart" def="179" use="207" target="212" covered="0"/><du var="barcodeRowCountLowerPart" def="179" use="210" target="211" covered="0"/><du var="barcodeRowCountLowerPart" def="179" use="210" target="212" covered="0"/><du var="barcodeRowCountLowerPart" def="179" use="211" target="212" covered="0"/><du var="barcodeRowCountLowerPart" def="179" use="211" target="214" covered="0"/><du var="barcodeRowCountLowerPart" def="179" use="214" covered="0"/><du var="barcodeECLevel" def="180" use="196" covered="0"/><du var="barcodeECLevel" def="180" use="208" target="209" covered="0"/><du var="barcodeECLevel" def="180" use="208" target="212" covered="0"/><du var="barcodeECLevel" def="180" use="214" covered="0"/><du var="codeword" def="181" use="182" target="183" covered="0"/><du var="codeword" def="181" use="182" target="185" covered="0"/><du var="codeword" def="181" use="185" covered="0"/><du var="codeword" def="181" use="186" covered="0"/><du var="codeword" def="181" use="187" covered="0"/><du var="rowIndicatorValue" def="186" use="200" covered="0"/><du var="rowIndicatorValue" def="186" use="196" covered="0"/><du var="rowIndicatorValue" def="186" use="197" covered="0"/><du var="rowIndicatorValue" def="186" use="193" covered="0"/><du var="codewordRowNumber" def="187" use="191" target="181" covered="0"/><du var="codewordRowNumber" def="187" use="191" target="193" covered="0"/><du var="codewordRowNumber" def="187" use="191" target="196" covered="0"/><du var="codewordRowNumber" def="187" use="191" target="200" covered="0"/><du var="codewordRowNumber" def="187" use="189" covered="0"/><du var="codewordRowNumber" def="189" use="191" target="181" covered="0"/><du var="codewordRowNumber" def="189" use="191" target="193" covered="0"/><du var="codewordRowNumber" def="189" use="191" target="196" covered="0"/><du var="codewordRowNumber" def="189" use="191" target="200" covered="0"/><counter type="DU" missed="61" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeIncorrectCodewords" desc="([Lcom/google/zxing/pdf417/decoder/Codeword;Lcom/google/zxing/pdf417/decoder/BarcodeMetadata;)V"><du var="this" def="223" use="234" target="235" covered="0"/><du var="this" def="223" use="234" target="237" covered="0"/><du var="codewords" def="223" use="223" target="256" covered="0"/><du var="codewords" def="223" use="223" target="224" covered="0"/><du var="codewords" def="223" use="224" covered="0"/><du var="codewords" def="223" use="225" target="226" covered="0"/><du var="codewords" def="223" use="225" target="228" covered="0"/><du var="codewords" def="223" use="251" covered="0"/><du var="codewords" def="223" use="246" covered="0"/><du var="codewords" def="223" use="240" covered="0"/><du var="codewords" def="223" use="231" covered="0"/><du var="barcodeMetadata" def="223" use="230" target="231" covered="0"/><du var="barcodeMetadata" def="223" use="230" target="234" covered="0"/><du var="barcodeMetadata" def="223" use="250" target="251" covered="0"/><du var="barcodeMetadata" def="223" use="250" target="223" covered="0"/><du var="barcodeMetadata" def="223" use="244" target="245" covered="0"/><du var="barcodeMetadata" def="223" use="244" target="246" covered="0"/><du var="barcodeMetadata" def="223" use="245" target="246" covered="0"/><du var="barcodeMetadata" def="223" use="245" target="223" covered="0"/><du var="barcodeMetadata" def="223" use="239" target="240" covered="0"/><du var="barcodeMetadata" def="223" use="239" target="223" covered="0"/><du var="this.isLeft" def="223" use="234" target="235" covered="0"/><du var="this.isLeft" def="223" use="234" target="237" covered="0"/><du var="codewordRow" def="223" use="223" target="256" covered="0"/><du var="codewordRow" def="223" use="223" target="224" covered="0"/><du var="codewordRow" def="223" use="224" covered="0"/><du var="codewordRow" def="223" use="225" target="226" covered="0"/><du var="codewordRow" def="223" use="225" target="228" covered="0"/><du var="codewordRow" def="223" use="251" covered="0"/><du var="codewordRow" def="223" use="246" covered="0"/><du var="codewordRow" def="223" use="240" covered="0"/><du var="codewordRow" def="223" use="223" covered="0"/><du var="codewordRow" def="223" use="231" covered="0"/><du var="codeword" def="224" use="228" covered="0"/><du var="codeword" def="224" use="229" covered="0"/><du var="rowIndicatorValue" def="228" use="250" target="251" covered="0"/><du var="rowIndicatorValue" def="228" use="250" target="223" covered="0"/><du var="rowIndicatorValue" def="228" use="244" target="245" covered="0"/><du var="rowIndicatorValue" def="228" use="244" target="246" covered="0"/><du var="rowIndicatorValue" def="228" use="245" target="246" covered="0"/><du var="rowIndicatorValue" def="228" use="245" target="223" covered="0"/><du var="rowIndicatorValue" def="228" use="239" target="240" covered="0"/><du var="rowIndicatorValue" def="228" use="239" target="223" covered="0"/><du var="codewordRowNumber" def="229" use="230" target="231" covered="0"/><du var="codewordRowNumber" def="229" use="230" target="234" covered="0"/><du var="codewordRowNumber" def="229" use="237" target="223" covered="0"/><du var="codewordRowNumber" def="229" use="237" target="239" covered="0"/><du var="codewordRowNumber" def="229" use="237" target="244" covered="0"/><du var="codewordRowNumber" def="229" use="237" target="250" covered="0"/><du var="codewordRowNumber" def="229" use="235" covered="0"/><du var="codewordRowNumber" def="235" use="237" target="223" covered="0"/><du var="codewordRowNumber" def="235" use="237" target="239" covered="0"/><du var="codewordRowNumber" def="235" use="237" target="244" covered="0"/><du var="codewordRowNumber" def="235" use="237" target="250" covered="0"/><du var="codewordRow" def="223" use="223" target="256" covered="0"/><du var="codewordRow" def="223" use="223" target="224" covered="0"/><du var="codewordRow" def="223" use="224" covered="0"/><du var="codewordRow" def="223" use="225" target="226" covered="0"/><du var="codewordRow" def="223" use="225" target="228" covered="0"/><du var="codewordRow" def="223" use="251" covered="0"/><du var="codewordRow" def="223" use="246" covered="0"/><du var="codewordRow" def="223" use="240" covered="0"/><du var="codewordRow" def="223" use="223" covered="0"/><du var="codewordRow" def="223" use="231" covered="0"/><counter type="DU" missed="64" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="335" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/pdf417/decoder/PDF417ScanningDecoder"><method name="decode" desc="(Lcom/google/zxing/common/BitMatrix;Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;II)Lcom/google/zxing/common/DecoderResult;"><du var="image" def="59" use="69" covered="0"/><du var="image" def="59" use="65" covered="0"/><du var="image" def="59" use="114" covered="0"/><du var="imageTopLeft" def="59" use="64" target="65" covered="0"/><du var="imageTopLeft" def="59" use="64" target="68" covered="0"/><du var="imageTopLeft" def="59" use="65" covered="0"/><du var="imageTopRight" def="59" use="68" target="69" covered="0"/><du var="imageTopRight" def="59" use="68" target="72" covered="0"/><du var="imageTopRight" def="59" use="69" covered="0"/><du var="minCodewordWidth" def="59" use="69" covered="0"/><du var="minCodewordWidth" def="59" use="65" covered="0"/><du var="minCodewordWidth" def="59" use="114" covered="0"/><du var="minCodewordWidth" def="59" use="119" covered="0"/><du var="maxCodewordWidth" def="59" use="69" covered="0"/><du var="maxCodewordWidth" def="59" use="65" covered="0"/><du var="maxCodewordWidth" def="59" use="114" covered="0"/><du var="maxCodewordWidth" def="59" use="120" covered="0"/><du var="boundingBox" def="59" use="81" covered="0"/><du var="boundingBox" def="59" use="77" target="77" covered="0"/><du var="boundingBox" def="59" use="77" target="79" covered="0"/><du var="boundingBox" def="59" use="78" target="79" covered="0"/><du var="boundingBox" def="59" use="78" target="81" covered="0"/><du var="boundingBox" def="59" use="69" covered="0"/><du var="boundingBox" def="59" use="65" covered="0"/><du var="boundingBox" def="59" use="98" covered="0"/><du var="boundingBox" def="59" use="106" covered="0"/><du var="boundingBox" def="59" use="106" target="90" covered="0"/><du var="boundingBox" def="59" use="106" target="107" covered="0"/><du var="boundingBox" def="59" use="114" covered="0"/><du var="boundingBox" def="59" use="108" target="109" covered="0"/><du var="boundingBox" def="59" use="108" target="114" covered="0"/><du var="boundingBox" def="59" use="100" covered="0"/><du var="leftRowIndicatorColumn" def="60" use="72" covered="0"/><du var="leftRowIndicatorColumn" def="60" use="86" covered="0"/><du var="leftRowIndicatorColumn" def="60" use="89" target="89" covered="0"/><du var="leftRowIndicatorColumn" def="60" use="89" target="89" covered="0"/><du var="rightRowIndicatorColumn" def="61" use="72" covered="0"/><du var="rightRowIndicatorColumn" def="61" use="87" covered="0"/><du var="detectionResult" def="62" use="85" covered="0"/><du var="detectionResult" def="62" use="86" covered="0"/><du var="detectionResult" def="62" use="87" covered="0"/><du var="detectionResult" def="62" use="92" target="94" covered="0"/><du var="detectionResult" def="62" use="92" target="97" covered="0"/><du var="detectionResult" def="62" use="102" covered="0"/><du var="detectionResult" def="62" use="107" covered="0"/><du var="detectionResult" def="62" use="124" covered="0"/><du var="i" def="63" use="63" target="85" covered="0"/><du var="i" def="63" use="63" target="64" covered="0"/><du var="i" def="63" use="76" target="76" covered="0"/><du var="i" def="63" use="76" target="81" covered="0"/><du var="i" def="63" use="63" covered="0"/><du var="leftRowIndicatorColumn" def="65" use="72" covered="0"/><du var="leftRowIndicatorColumn" def="65" use="86" covered="0"/><du var="leftRowIndicatorColumn" def="65" use="89" target="89" covered="0"/><du var="leftRowIndicatorColumn" def="65" use="89" target="89" covered="0"/><du var="rightRowIndicatorColumn" def="69" use="72" covered="0"/><du var="rightRowIndicatorColumn" def="69" use="87" covered="0"/><du var="detectionResult" def="72" use="73" target="74" covered="0"/><du var="detectionResult" def="72" use="73" target="76" covered="0"/><du var="detectionResult" def="72" use="81" covered="0"/><du var="detectionResult" def="72" use="85" covered="0"/><du var="detectionResult" def="72" use="86" covered="0"/><du var="detectionResult" def="72" use="87" covered="0"/><du var="detectionResult" def="72" use="92" target="94" covered="0"/><du var="detectionResult" def="72" use="92" target="97" covered="0"/><du var="detectionResult" def="72" use="102" covered="0"/><du var="detectionResult" def="72" use="107" covered="0"/><du var="detectionResult" def="72" use="124" covered="0"/><du var="detectionResult" def="72" use="76" target="77" covered="0"/><du var="detectionResult" def="72" use="76" target="81" covered="0"/><du var="detectionResult" def="72" use="77" target="77" covered="0"/><du var="detectionResult" def="72" use="77" target="79" covered="0"/><du var="detectionResult" def="72" use="79" covered="0"/><du var="detectionResult" def="72" use="78" target="79" covered="0"/><du var="detectionResult" def="72" use="78" target="81" covered="0"/><du var="boundingBox" def="79" use="81" covered="0"/><du var="boundingBox" def="79" use="77" target="77" covered="0"/><du var="boundingBox" def="79" use="77" target="79" covered="0"/><du var="boundingBox" def="79" use="78" target="79" covered="0"/><du var="boundingBox" def="79" use="78" target="81" covered="0"/><du var="boundingBox" def="79" use="69" covered="0"/><du var="boundingBox" def="79" use="65" covered="0"/><du var="boundingBox" def="79" use="98" covered="0"/><du var="boundingBox" def="79" use="106" covered="0"/><du var="boundingBox" def="79" use="106" target="90" covered="0"/><du var="boundingBox" def="79" use="106" target="107" covered="0"/><du var="boundingBox" def="79" use="114" covered="0"/><du var="boundingBox" def="79" use="108" target="109" covered="0"/><du var="boundingBox" def="79" use="108" target="114" covered="0"/><du var="boundingBox" def="79" use="100" covered="0"/><du var="i" def="63" use="63" target="85" covered="0"/><du var="i" def="63" use="63" target="64" covered="0"/><du var="i" def="63" use="76" target="76" covered="0"/><du var="i" def="63" use="76" target="81" covered="0"/><du var="i" def="63" use="63" covered="0"/><du var="maxBarcodeColumn" def="85" use="90" target="124" covered="0"/><du var="maxBarcodeColumn" def="85" use="90" target="91" covered="0"/><du var="maxBarcodeColumn" def="85" use="91" covered="0"/><du var="maxBarcodeColumn" def="85" use="97" target="98" covered="0"/><du var="maxBarcodeColumn" def="85" use="97" target="100" covered="0"/><du var="leftToRight" def="89" use="91" target="91" covered="0"/><du var="leftToRight" def="89" use="91" target="91" covered="0"/><du var="leftToRight" def="89" use="107" covered="0"/><du var="leftToRight" def="89" use="114" covered="0"/><du var="barcodeColumnCount" def="90" use="90" target="124" covered="0"/><du var="barcodeColumnCount" def="90" use="90" target="91" covered="0"/><du var="barcodeColumnCount" def="90" use="91" covered="0"/><du var="barcodeColumnCount" def="90" use="90" covered="0"/><du var="barcodeColumn" def="91" use="92" target="94" covered="0"/><du var="barcodeColumn" def="91" use="92" target="97" covered="0"/><du var="barcodeColumn" def="91" use="97" target="97" covered="0"/><du var="barcodeColumn" def="91" use="97" target="98" covered="0"/><du var="barcodeColumn" def="91" use="98" target="98" covered="0"/><du var="barcodeColumn" def="91" use="98" target="98" covered="0"/><du var="barcodeColumn" def="91" use="102" covered="0"/><du var="barcodeColumn" def="91" use="107" covered="0"/><du var="barcodeColumn" def="91" use="97" target="98" covered="0"/><du var="barcodeColumn" def="91" use="97" target="100" covered="0"/><du var="detectionResultColumn" def="98" use="102" covered="0"/><du var="detectionResultColumn" def="98" use="117" covered="0"/><du var="detectionResultColumn" def="100" use="102" covered="0"/><du var="detectionResultColumn" def="100" use="117" covered="0"/><du var="previousStartColumn" def="104" use="109" target="110" covered="0"/><du var="previousStartColumn" def="104" use="109" target="112" covered="0"/><du var="previousStartColumn" def="104" use="112" covered="0"/><du var="imageRow" def="106" use="106" target="90" covered="0"/><du var="imageRow" def="106" use="106" target="107" covered="0"/><du var="imageRow" def="106" use="107" covered="0"/><du var="imageRow" def="106" use="114" covered="0"/><du var="imageRow" def="106" use="106" covered="0"/><du var="imageRow" def="106" use="117" covered="0"/><du var="startColumn" def="107" use="108" target="108" covered="0"/><du var="startColumn" def="107" use="108" target="109" covered="0"/><du var="startColumn" def="107" use="108" target="109" covered="0"/><du var="startColumn" def="107" use="108" target="114" covered="0"/><du var="startColumn" def="107" use="114" covered="0"/><du var="startColumn" def="107" use="118" covered="0"/><du var="startColumn" def="112" use="114" covered="0"/><du var="startColumn" def="112" use="118" covered="0"/><du var="codeword" def="114" use="116" target="117" covered="0"/><du var="codeword" def="114" use="116" target="106" covered="0"/><du var="codeword" def="114" use="117" covered="0"/><du var="codeword" def="114" use="119" covered="0"/><du var="codeword" def="114" use="120" covered="0"/><du var="previousStartColumn" def="118" use="109" target="110" covered="0"/><du var="previousStartColumn" def="118" use="109" target="112" covered="0"/><du var="previousStartColumn" def="118" use="112" covered="0"/><du var="minCodewordWidth" def="119" use="114" covered="0"/><du var="minCodewordWidth" def="119" use="119" covered="0"/><du var="maxCodewordWidth" def="120" use="114" covered="0"/><du var="maxCodewordWidth" def="120" use="120" covered="0"/><du var="imageRow" def="106" use="106" target="90" covered="0"/><du var="imageRow" def="106" use="106" target="107" covered="0"/><du var="imageRow" def="106" use="107" covered="0"/><du var="imageRow" def="106" use="114" covered="0"/><du var="imageRow" def="106" use="106" covered="0"/><du var="imageRow" def="106" use="117" covered="0"/><du var="barcodeColumnCount" def="90" use="90" target="124" covered="0"/><du var="barcodeColumnCount" def="90" use="90" target="91" covered="0"/><du var="barcodeColumnCount" def="90" use="91" covered="0"/><du var="barcodeColumnCount" def="90" use="90" covered="0"/><counter type="DU" missed="161" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="merge" desc="(Lcom/google/zxing/pdf417/decoder/DetectionResultRowIndicatorColumn;Lcom/google/zxing/pdf417/decoder/DetectionResultRowIndicatorColumn;)Lcom/google/zxing/pdf417/decoder/DetectionResult;"><du var="leftRowIndicatorColumn" def="130" use="130" target="130" covered="0"/><du var="leftRowIndicatorColumn" def="130" use="130" target="133" covered="0"/><du var="leftRowIndicatorColumn" def="130" use="133" covered="0"/><du var="leftRowIndicatorColumn" def="130" use="137" covered="0"/><du var="rightRowIndicatorColumn" def="130" use="133" covered="0"/><du var="rightRowIndicatorColumn" def="130" use="137" covered="0"/><du var="rightRowIndicatorColumn" def="130" use="130" target="131" covered="0"/><du var="rightRowIndicatorColumn" def="130" use="130" target="133" covered="0"/><du var="barcodeMetadata" def="133" use="134" target="135" covered="0"/><du var="barcodeMetadata" def="133" use="134" target="137" covered="0"/><du var="barcodeMetadata" def="133" use="139" covered="0"/><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustBoundingBox" desc="(Lcom/google/zxing/pdf417/decoder/DetectionResultRowIndicatorColumn;)Lcom/google/zxing/pdf417/decoder/BoundingBox;"><du var="rowIndicatorColumn" def="144" use="144" target="145" covered="0"/><du var="rowIndicatorColumn" def="144" use="144" target="147" covered="0"/><du var="rowIndicatorColumn" def="144" use="147" covered="0"/><du var="rowIndicatorColumn" def="144" use="159" covered="0"/><du var="rowIndicatorColumn" def="144" use="173" covered="0"/><du var="rowHeights" def="147" use="148" target="149" covered="0"/><du var="rowHeights" def="147" use="148" target="151" covered="0"/><du var="rowHeights" def="147" use="151" covered="0"/><du var="rowHeights" def="147" use="153" covered="0"/><du var="rowHeights" def="147" use="153" covered="0"/><du var="rowHeights" def="147" use="164" covered="0"/><du var="rowHeights" def="147" use="165" covered="0"/><du var="rowHeights" def="147" use="166" target="167" covered="0"/><du var="rowHeights" def="147" use="166" target="164" covered="0"/><du var="maxRowHeight" def="151" use="154" covered="0"/><du var="maxRowHeight" def="151" use="165" covered="0"/><du var="missingStartRows" def="152" use="154" covered="0"/><du var="missingStartRows" def="152" use="160" target="160" covered="0"/><du var="missingStartRows" def="152" use="160" target="163" covered="0"/><du var="missingStartRows" def="152" use="173" covered="0"/><du var="missingStartRows" def="152" use="161" covered="0"/><du var="rowHeight" def="153" use="155" target="156" covered="0"/><du var="rowHeight" def="153" use="155" target="153" covered="0"/><du var="missingStartRows" def="154" use="154" covered="0"/><du var="missingStartRows" def="154" use="160" target="160" covered="0"/><du var="missingStartRows" def="154" use="160" target="163" covered="0"/><du var="missingStartRows" def="154" use="173" covered="0"/><du var="missingStartRows" def="154" use="161" covered="0"/><du var="codewords" def="159" use="170" covered="0"/><du var="codewords" def="159" use="170" target="173" covered="0"/><du var="codewords" def="159" use="170" target="171" covered="0"/><du var="codewords" def="159" use="160" target="163" covered="0"/><du var="codewords" def="159" use="160" target="161" covered="0"/><du var="row" def="160" use="160" target="163" covered="0"/><du var="row" def="160" use="160" target="161" covered="0"/><du var="row" def="160" use="160" covered="0"/><du var="missingStartRows" def="161" use="160" target="160" covered="0"/><du var="missingStartRows" def="161" use="160" target="163" covered="0"/><du var="missingStartRows" def="161" use="173" covered="0"/><du var="missingStartRows" def="161" use="161" covered="0"/><du var="row" def="160" use="160" target="163" covered="0"/><du var="row" def="160" use="160" target="161" covered="0"/><du var="row" def="160" use="160" covered="0"/><du var="missingEndRows" def="163" use="165" covered="0"/><du var="missingEndRows" def="163" use="170" target="170" covered="0"/><du var="missingEndRows" def="163" use="170" target="173" covered="0"/><du var="missingEndRows" def="163" use="173" covered="0"/><du var="missingEndRows" def="163" use="171" covered="0"/><du var="row" def="164" use="164" target="170" covered="0"/><du var="row" def="164" use="164" target="165" covered="0"/><du var="row" def="164" use="165" covered="0"/><du var="row" def="164" use="166" target="167" covered="0"/><du var="row" def="164" use="166" target="164" covered="0"/><du var="row" def="164" use="164" covered="0"/><du var="missingEndRows" def="165" use="165" covered="0"/><du var="missingEndRows" def="165" use="170" target="170" covered="0"/><du var="missingEndRows" def="165" use="170" target="173" covered="0"/><du var="missingEndRows" def="165" use="173" covered="0"/><du var="missingEndRows" def="165" use="171" covered="0"/><du var="row" def="164" use="164" target="170" covered="0"/><du var="row" def="164" use="164" target="165" covered="0"/><du var="row" def="164" use="165" covered="0"/><du var="row" def="164" use="166" target="167" covered="0"/><du var="row" def="164" use="166" target="164" covered="0"/><du var="row" def="164" use="164" covered="0"/><du var="row" def="170" use="170" target="173" covered="0"/><du var="row" def="170" use="170" target="171" covered="0"/><du var="row" def="170" use="170" covered="0"/><du var="missingEndRows" def="171" use="170" target="170" covered="0"/><du var="missingEndRows" def="171" use="170" target="173" covered="0"/><du var="missingEndRows" def="171" use="173" covered="0"/><du var="missingEndRows" def="171" use="171" covered="0"/><du var="row" def="170" use="170" target="173" covered="0"/><du var="row" def="170" use="170" target="171" covered="0"/><du var="row" def="170" use="170" covered="0"/><counter type="DU" missed="86" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMax" desc="([I)I"><du var="maxValue" def="178" use="180" covered="0"/><du var="maxValue" def="178" use="182" covered="0"/><du var="maxValue" def="180" use="180" covered="0"/><du var="maxValue" def="180" use="182" covered="0"/><counter type="DU" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBarcodeMetadata" desc="(Lcom/google/zxing/pdf417/decoder/DetectionResultRowIndicatorColumn;Lcom/google/zxing/pdf417/decoder/DetectionResultRowIndicatorColumn;)Lcom/google/zxing/pdf417/decoder/BarcodeMetadata;"><du var="leftRowIndicatorColumn" def="188" use="188" target="189" covered="0"/><du var="leftRowIndicatorColumn" def="188" use="188" target="190" covered="0"/><du var="leftRowIndicatorColumn" def="188" use="189" covered="0"/><du var="leftRowIndicatorColumn" def="188" use="189" target="190" covered="0"/><du var="leftRowIndicatorColumn" def="188" use="189" target="193" covered="0"/><du var="rightRowIndicatorColumn" def="188" use="190" target="190" covered="0"/><du var="rightRowIndicatorColumn" def="188" use="190" target="190" covered="0"/><du var="rightRowIndicatorColumn" def="188" use="190" covered="0"/><du var="rightRowIndicatorColumn" def="188" use="193" target="194" covered="0"/><du var="rightRowIndicatorColumn" def="188" use="193" target="195" covered="0"/><du var="rightRowIndicatorColumn" def="188" use="194" covered="0"/><du var="rightRowIndicatorColumn" def="188" use="194" target="195" covered="0"/><du var="rightRowIndicatorColumn" def="188" use="194" target="198" covered="0"/><du var="leftBarcodeMetadata" def="189" use="195" covered="0"/><du var="leftBarcodeMetadata" def="189" use="198" target="199" covered="0"/><du var="leftBarcodeMetadata" def="189" use="198" target="203" covered="0"/><du var="leftBarcodeMetadata" def="189" use="203" covered="0"/><du var="leftBarcodeMetadata" def="189" use="199" target="200" covered="0"/><du var="leftBarcodeMetadata" def="189" use="199" target="203" covered="0"/><du var="leftBarcodeMetadata" def="189" use="200" target="201" covered="0"/><du var="leftBarcodeMetadata" def="189" use="200" target="203" covered="0"/><du var="rightBarcodeMetadata" def="194" use="198" target="199" covered="0"/><du var="rightBarcodeMetadata" def="194" use="198" target="203" covered="0"/><du var="rightBarcodeMetadata" def="194" use="199" target="200" covered="0"/><du var="rightBarcodeMetadata" def="194" use="199" target="203" covered="0"/><du var="rightBarcodeMetadata" def="194" use="200" target="201" covered="0"/><du var="rightBarcodeMetadata" def="194" use="200" target="203" covered="0"/><counter type="DU" missed="27" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRowIndicatorColumn" desc="(Lcom/google/zxing/common/BitMatrix;Lcom/google/zxing/pdf417/decoder/BoundingBox;Lcom/google/zxing/ResultPoint;ZII)Lcom/google/zxing/pdf417/decoder/DetectionResultRowIndicatorColumn;"><du var="image" def="212" use="219" covered="0"/><du var="boundingBox" def="212" use="217" target="218" covered="0"/><du var="boundingBox" def="212" use="217" target="214" covered="0"/><du var="boundingBox" def="212" use="217" target="214" covered="0"/><du var="boundingBox" def="212" use="217" target="219" covered="0"/><du var="startPoint" def="212" use="216" covered="0"/><du var="startPoint" def="212" use="217" covered="0"/><du var="leftToRight" def="212" use="219" covered="0"/><du var="leftToRight" def="212" use="223" target="224" covered="0"/><du var="leftToRight" def="212" use="223" target="226" covered="0"/><du var="minCodewordWidth" def="212" use="219" covered="0"/><du var="maxCodewordWidth" def="212" use="219" covered="0"/><du var="rowIndicatorColumn" def="212" use="222" covered="0"/><du var="rowIndicatorColumn" def="212" use="231" covered="0"/><du var="i" def="214" use="214" target="231" covered="0"/><du var="i" def="214" use="214" target="215" covered="0"/><du var="i" def="214" use="215" target="215" covered="0"/><du var="i" def="214" use="215" target="215" covered="0"/><du var="i" def="214" use="214" covered="0"/><du var="increment" def="215" use="218" covered="0"/><du var="startColumn" def="216" use="219" covered="0"/><du var="imageRow" def="217" use="217" target="218" covered="0"/><du var="imageRow" def="217" use="217" target="214" covered="0"/><du var="imageRow" def="217" use="217" target="214" covered="0"/><du var="imageRow" def="217" use="217" target="219" covered="0"/><du var="imageRow" def="217" use="219" covered="0"/><du var="imageRow" def="217" use="218" covered="0"/><du var="imageRow" def="217" use="222" covered="0"/><du var="codeword" def="219" use="221" target="222" covered="0"/><du var="codeword" def="219" use="221" target="218" covered="0"/><du var="codeword" def="219" use="222" covered="0"/><du var="codeword" def="219" use="226" covered="0"/><du var="codeword" def="219" use="224" covered="0"/><du var="startColumn" def="224" use="219" covered="0"/><du var="startColumn" def="226" use="219" covered="0"/><du var="imageRow" def="218" use="217" target="218" covered="0"/><du var="imageRow" def="218" use="217" target="214" covered="0"/><du var="imageRow" def="218" use="217" target="214" covered="0"/><du var="imageRow" def="218" use="217" target="219" covered="0"/><du var="imageRow" def="218" use="219" covered="0"/><du var="imageRow" def="218" use="218" covered="0"/><du var="imageRow" def="218" use="222" covered="0"/><du var="i" def="214" use="214" target="231" covered="0"/><du var="i" def="214" use="214" target="215" covered="0"/><du var="i" def="214" use="215" target="215" covered="0"/><du var="i" def="214" use="215" target="215" covered="0"/><du var="i" def="214" use="214" covered="0"/><counter type="DU" missed="47" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustCodewordCount" desc="(Lcom/google/zxing/pdf417/decoder/DetectionResult;[[Lcom/google/zxing/pdf417/decoder/BarcodeValue;)V"><du var="barcodeMatrix01" def="236" use="248" covered="0"/><du var="barcodeMatrix01" def="236" use="245" covered="0"/><du var="numberOfCodewords" def="237" use="241" target="242" covered="0"/><du var="numberOfCodewords" def="237" use="241" target="246" covered="0"/><du var="numberOfCodewords" def="237" use="246" target="248" covered="0"/><du var="numberOfCodewords" def="237" use="246" target="250" covered="0"/><du var="calculatedNumberOfCodewords" def="238" use="246" target="248" covered="0"/><du var="calculatedNumberOfCodewords" def="238" use="246" target="250" covered="0"/><du var="calculatedNumberOfCodewords" def="238" use="248" covered="0"/><du var="calculatedNumberOfCodewords" def="238" use="242" target="242" covered="0"/><du var="calculatedNumberOfCodewords" def="238" use="242" target="243" covered="0"/><du var="calculatedNumberOfCodewords" def="238" use="242" target="243" covered="0"/><du var="calculatedNumberOfCodewords" def="238" use="242" target="245" covered="0"/><du var="calculatedNumberOfCodewords" def="238" use="245" covered="0"/><counter type="DU" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createDecoderResult" desc="(Lcom/google/zxing/pdf417/decoder/DetectionResult;)Lcom/google/zxing/common/DecoderResult;"><du var="detectionResult" def="254" use="260" target="274" covered="0"/><du var="detectionResult" def="254" use="260" target="261" covered="0"/><du var="detectionResult" def="254" use="261" target="260" covered="0"/><du var="detectionResult" def="254" use="261" target="262" covered="0"/><du var="detectionResult" def="254" use="263" covered="0"/><du var="detectionResult" def="254" use="278" covered="0"/><du var="barcodeMatrix" def="254" use="262" covered="0"/><du var="erasures" def="256" use="265" covered="0"/><du var="erasures" def="256" use="278" covered="0"/><du var="codewords" def="257" use="267" covered="0"/><du var="codewords" def="257" use="278" covered="0"/><du var="ambiguousIndexValuesList" def="258" use="270" covered="0"/><du var="ambiguousIndexValuesList" def="258" use="274" covered="0"/><du var="ambiguousIndexValuesList" def="258" use="276" covered="0"/><du var="ambiguousIndexesList" def="259" use="269" covered="0"/><du var="ambiguousIndexesList" def="259" use="278" covered="0"/><du var="row" def="260" use="260" target="274" covered="0"/><du var="row" def="260" use="260" target="261" covered="0"/><du var="row" def="260" use="262" covered="0"/><du var="row" def="260" use="263" covered="0"/><du var="row" def="260" use="260" covered="0"/><du var="column" def="261" use="261" target="260" covered="0"/><du var="column" def="261" use="261" target="262" covered="0"/><du var="column" def="261" use="262" covered="0"/><du var="column" def="261" use="263" covered="0"/><du var="column" def="261" use="261" covered="0"/><du var="values" def="262" use="264" target="265" covered="0"/><du var="values" def="262" use="264" target="266" covered="0"/><du var="values" def="262" use="266" target="267" covered="0"/><du var="values" def="262" use="266" target="269" covered="0"/><du var="values" def="262" use="270" covered="0"/><du var="values" def="262" use="267" covered="0"/><du var="codewordIndex" def="263" use="269" covered="0"/><du var="codewordIndex" def="263" use="267" covered="0"/><du var="codewordIndex" def="263" use="265" covered="0"/><du var="column" def="261" use="261" target="260" covered="0"/><du var="column" def="261" use="261" target="262" covered="0"/><du var="column" def="261" use="262" covered="0"/><du var="column" def="261" use="263" covered="0"/><du var="column" def="261" use="261" covered="0"/><du var="row" def="260" use="260" target="274" covered="0"/><du var="row" def="260" use="260" target="261" covered="0"/><du var="row" def="260" use="262" covered="0"/><du var="row" def="260" use="263" covered="0"/><du var="row" def="260" use="260" covered="0"/><du var="ambiguousIndexValues" def="274" use="275" target="278" covered="0"/><du var="ambiguousIndexValues" def="274" use="275" target="276" covered="0"/><du var="ambiguousIndexValues" def="274" use="276" covered="0"/><du var="ambiguousIndexValues" def="274" use="278" covered="0"/><du var="i" def="275" use="275" target="278" covered="0"/><du var="i" def="275" use="275" target="276" covered="0"/><du var="i" def="275" use="276" covered="0"/><du var="i" def="275" use="275" covered="0"/><du var="i" def="275" use="275" target="278" covered="0"/><du var="i" def="275" use="275" target="276" covered="0"/><du var="i" def="275" use="276" covered="0"/><du var="i" def="275" use="275" covered="0"/><counter type="DU" missed="57" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createDecoderResultFromAmbiguousValues" desc="(I[I[I[I[[I)Lcom/google/zxing/common/DecoderResult;"><du var="ecLevel" def="301" use="309" covered="0"/><du var="codewords" def="301" use="306" covered="0"/><du var="codewords" def="301" use="309" covered="0"/><du var="erasureArray" def="301" use="309" covered="0"/><du var="ambiguousIndexes" def="301" use="306" covered="0"/><du var="ambiguousIndexValues" def="301" use="306" covered="0"/><du var="ambiguousIndexCount" def="301" use="305" target="309" covered="0"/><du var="ambiguousIndexCount" def="301" use="305" target="306" covered="0"/><du var="ambiguousIndexCount" def="301" use="306" covered="0"/><du var="i" def="305" use="305" target="309" covered="0"/><du var="i" def="305" use="305" target="306" covered="0"/><du var="i" def="305" use="306" covered="0"/><du var="i" def="305" use="305" covered="0"/><du var="i" def="305" use="305" target="309" covered="0"/><du var="i" def="305" use="305" target="306" covered="0"/><du var="i" def="305" use="306" covered="0"/><du var="i" def="305" use="305" covered="0"/><du var="tries" def="304" use="304" target="328" covered="0"/><du var="tries" def="304" use="304" target="305" covered="0"/><counter type="DU" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createBarcodeMatrix" desc="(Lcom/google/zxing/pdf417/decoder/DetectionResult;)[[Lcom/google/zxing/pdf417/decoder/BarcodeValue;"><du var="detectionResult" def="333" use="341" covered="0"/><du var="detectionResult" def="333" use="341" covered="0"/><du var="barcodeMatrix" def="332" use="334" target="340" covered="0"/><du var="barcodeMatrix" def="332" use="334" target="335" covered="0"/><du var="barcodeMatrix" def="332" use="335" target="334" covered="0"/><du var="barcodeMatrix" def="332" use="335" target="336" covered="0"/><du var="barcodeMatrix" def="332" use="336" covered="0"/><du var="barcodeMatrix" def="332" use="347" target="349" covered="0"/><du var="barcodeMatrix" def="332" use="347" target="351" covered="0"/><du var="barcodeMatrix" def="332" use="351" covered="0"/><du var="barcodeMatrix" def="332" use="358" covered="0"/><du var="row" def="334" use="334" target="340" covered="0"/><du var="row" def="334" use="334" target="335" covered="0"/><du var="row" def="334" use="335" target="334" covered="0"/><du var="row" def="334" use="335" target="336" covered="0"/><du var="row" def="334" use="336" covered="0"/><du var="row" def="334" use="334" covered="0"/><du var="column" def="335" use="335" target="334" covered="0"/><du var="column" def="335" use="335" target="336" covered="0"/><du var="column" def="335" use="336" covered="0"/><du var="column" def="335" use="335" covered="0"/><du var="column" def="335" use="335" target="334" covered="0"/><du var="column" def="335" use="335" target="336" covered="0"/><du var="column" def="335" use="336" covered="0"/><du var="column" def="335" use="335" covered="0"/><du var="row" def="334" use="334" target="340" covered="0"/><du var="row" def="334" use="334" target="335" covered="0"/><du var="row" def="334" use="335" target="334" covered="0"/><du var="row" def="334" use="335" target="336" covered="0"/><du var="row" def="334" use="336" covered="0"/><du var="row" def="334" use="334" covered="0"/><du var="column" def="340" use="356" covered="0"/><du var="column" def="340" use="351" covered="0"/><du var="detectionResultColumn" def="341" use="342" target="343" covered="0"/><du var="detectionResultColumn" def="341" use="342" target="356" covered="0"/><du var="detectionResultColumn" def="341" use="343" covered="0"/><du var="detectionResultColumn" def="341" use="343" covered="0"/><du var="codeword" def="343" use="344" target="345" covered="0"/><du var="codeword" def="343" use="344" target="343" covered="0"/><du var="codeword" def="343" use="345" covered="0"/><du var="codeword" def="343" use="351" covered="0"/><du var="rowNumber" def="345" use="346" target="347" covered="0"/><du var="rowNumber" def="345" use="346" target="343" covered="0"/><du var="rowNumber" def="345" use="347" target="349" covered="0"/><du var="rowNumber" def="345" use="347" target="351" covered="0"/><du var="rowNumber" def="345" use="351" covered="0"/><du var="column" def="356" use="356" covered="0"/><du var="column" def="356" use="351" covered="0"/><counter type="DU" missed="70" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBarcodeColumn" desc="(Lcom/google/zxing/pdf417/decoder/DetectionResult;I)Z"><du var="detectionResult" def="362" use="362" target="362" covered="0"/><du var="detectionResult" def="362" use="362" target="362" covered="0"/><du var="barcodeColumn" def="362" use="362" target="362" covered="0"/><du var="barcodeColumn" def="362" use="362" target="362" covered="0"/><du var="barcodeColumn" def="362" use="362" target="362" covered="0"/><du var="barcodeColumn" def="362" use="362" target="362" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStartColumn" desc="(Lcom/google/zxing/pdf417/decoder/DetectionResult;IIZ)I"><du var="detectionResult" def="369" use="371" target="372" covered="0"/><du var="detectionResult" def="369" use="371" target="374" covered="0"/><du var="detectionResult" def="369" use="377" covered="0"/><du var="detectionResult" def="369" use="381" target="382" covered="0"/><du var="detectionResult" def="369" use="381" target="384" covered="0"/><du var="detectionResult" def="369" use="389" target="401" covered="0"/><du var="detectionResult" def="369" use="389" target="390" covered="0"/><du var="detectionResult" def="369" use="391" covered="0"/><du var="detectionResult" def="369" use="391" covered="0"/><du var="detectionResult" def="369" use="401" covered="0"/><du var="detectionResult" def="369" use="382" covered="0"/><du var="detectionResult" def="369" use="372" covered="0"/><du var="barcodeColumn" def="369" use="371" target="372" covered="0"/><du var="barcodeColumn" def="369" use="371" target="374" covered="0"/><du var="barcodeColumn" def="369" use="377" covered="0"/><du var="barcodeColumn" def="369" use="381" target="382" covered="0"/><du var="barcodeColumn" def="369" use="381" target="384" covered="0"/><du var="barcodeColumn" def="369" use="389" target="401" covered="0"/><du var="barcodeColumn" def="369" use="389" target="390" covered="0"/><du var="barcodeColumn" def="369" use="390" covered="0"/><du var="barcodeColumn" def="369" use="382" covered="0"/><du var="barcodeColumn" def="369" use="372" covered="0"/><du var="imageRow" def="369" use="377" covered="0"/><du var="imageRow" def="369" use="382" covered="0"/><du var="imageRow" def="369" use="372" covered="0"/><du var="leftToRight" def="369" use="369" target="369" covered="0"/><du var="leftToRight" def="369" use="369" target="369" covered="0"/><du var="leftToRight" def="369" use="393" target="393" covered="0"/><du var="leftToRight" def="369" use="393" target="393" covered="0"/><du var="leftToRight" def="369" use="401" target="401" covered="0"/><du var="leftToRight" def="369" use="401" target="401" covered="0"/><du var="leftToRight" def="369" use="385" target="385" covered="0"/><du var="leftToRight" def="369" use="385" target="385" covered="0"/><du var="leftToRight" def="369" use="379" target="379" covered="0"/><du var="leftToRight" def="369" use="379" target="379" covered="0"/><du var="leftToRight" def="369" use="375" target="375" covered="0"/><du var="leftToRight" def="369" use="375" target="375" covered="0"/><du var="offset" def="369" use="371" target="372" covered="0"/><du var="offset" def="369" use="371" target="374" covered="0"/><du var="offset" def="369" use="381" target="382" covered="0"/><du var="offset" def="369" use="381" target="384" covered="0"/><du var="offset" def="369" use="389" target="401" covered="0"/><du var="offset" def="369" use="389" target="390" covered="0"/><du var="offset" def="369" use="390" covered="0"/><du var="offset" def="369" use="393" covered="0"/><du var="offset" def="369" use="382" covered="0"/><du var="offset" def="369" use="372" covered="0"/><du var="codeword" def="370" use="374" target="375" covered="0"/><du var="codeword" def="370" use="374" target="377" covered="0"/><du var="codeword" def="370" use="375" covered="0"/><du var="codeword" def="372" use="374" target="375" covered="0"/><du var="codeword" def="372" use="374" target="377" covered="0"/><du var="codeword" def="372" use="375" covered="0"/><du var="codeword" def="377" use="378" target="379" covered="0"/><du var="codeword" def="377" use="378" target="381" covered="0"/><du var="codeword" def="377" use="384" target="385" covered="0"/><du var="codeword" def="377" use="384" target="387" covered="0"/><du var="codeword" def="377" use="385" covered="0"/><du var="codeword" def="377" use="379" covered="0"/><du var="codeword" def="382" use="384" target="385" covered="0"/><du var="codeword" def="382" use="384" target="387" covered="0"/><du var="codeword" def="382" use="385" covered="0"/><du var="skippedColumns" def="387" use="393" covered="0"/><du var="skippedColumns" def="387" use="399" covered="0"/><du var="barcodeColumn" def="390" use="389" target="401" covered="0"/><du var="barcodeColumn" def="390" use="389" target="390" covered="0"/><du var="barcodeColumn" def="390" use="390" covered="0"/><du var="previousRowCodeword" def="391" use="392" target="393" covered="0"/><du var="previousRowCodeword" def="391" use="392" target="391" covered="0"/><du var="previousRowCodeword" def="391" use="393" covered="0"/><du var="skippedColumns" def="399" use="393" covered="0"/><du var="skippedColumns" def="399" use="399" covered="0"/><counter type="DU" missed="83" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detectCodeword" desc="(Lcom/google/zxing/common/BitMatrix;IIZIIII)Lcom/google/zxing/pdf417/decoder/Codeword;"><du var="leftToRight" def="412" use="423" target="424" covered="0"/><du var="leftToRight" def="412" use="423" target="426" covered="0"/><du var="minCodewordWidth" def="412" use="448" target="451" covered="0"/><du var="minCodewordWidth" def="412" use="448" target="454" covered="0"/><du var="maxCodewordWidth" def="412" use="448" target="451" covered="0"/><du var="maxCodewordWidth" def="412" use="448" target="454" covered="0"/><du var="startColumn" def="412" use="431" covered="0"/><du var="startColumn" def="412" use="424" covered="0"/><du var="startColumn" def="412" use="459" covered="0"/><du var="moduleBitCount" def="417" use="418" target="419" covered="0"/><du var="moduleBitCount" def="417" use="418" target="422" covered="0"/><du var="moduleBitCount" def="417" use="422" covered="0"/><du var="moduleBitCount" def="417" use="426" target="431" covered="0"/><du var="moduleBitCount" def="417" use="426" target="427" covered="0"/><du var="moduleBitCount" def="417" use="427" covered="0"/><du var="moduleBitCount" def="417" use="428" covered="0"/><du var="moduleBitCount" def="417" use="429" covered="0"/><du var="moduleBitCount" def="417" use="454" covered="0"/><du var="codewordBitCount" def="422" use="432" covered="0"/><du var="codewordBitCount" def="422" use="448" target="451" covered="0"/><du var="codewordBitCount" def="422" use="448" target="454" covered="0"/><du var="codewordBitCount" def="422" use="424" covered="0"/><du var="endColumn" def="424" use="459" covered="0"/><du var="i" def="426" use="426" target="431" covered="0"/><du var="i" def="426" use="426" target="427" covered="0"/><du var="i" def="426" use="427" covered="0"/><du var="i" def="426" use="428" covered="0"/><du var="i" def="426" use="429" covered="0"/><du var="i" def="426" use="426" covered="0"/><du var="i" def="426" use="426" target="431" covered="0"/><du var="i" def="426" use="426" target="427" covered="0"/><du var="i" def="426" use="427" covered="0"/><du var="i" def="426" use="428" covered="0"/><du var="i" def="426" use="429" covered="0"/><du var="i" def="426" use="426" covered="0"/><du var="endColumn" def="431" use="459" covered="0"/><du var="startColumn" def="432" use="459" covered="0"/><du var="decodedValue" def="454" use="459" covered="0"/><du var="codeword" def="455" use="456" target="457" covered="0"/><du var="codeword" def="455" use="456" target="459" covered="0"/><du var="codeword" def="455" use="459" covered="0"/><counter type="DU" missed="41" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModuleBitCount" desc="(Lcom/google/zxing/common/BitMatrix;IIZII)[I"><du var="image" def="468" use="475" target="476" covered="0"/><du var="image" def="468" use="475" target="479" covered="0"/><du var="minColumn" def="468" use="473" target="474" covered="0"/><du var="minColumn" def="468" use="473" target="483" covered="0"/><du var="minColumn" def="468" use="484" target="485" covered="0"/><du var="minColumn" def="468" use="484" target="488" covered="0"/><du var="maxColumn" def="468" use="484" target="485" covered="0"/><du var="maxColumn" def="468" use="484" target="488" covered="0"/><du var="maxColumn" def="468" use="473" target="473" covered="0"/><du var="maxColumn" def="468" use="473" target="483" covered="0"/><du var="leftToRight" def="468" use="471" target="471" covered="0"/><du var="leftToRight" def="468" use="471" target="471" covered="0"/><du var="leftToRight" def="468" use="472" covered="0"/><du var="leftToRight" def="468" use="473" target="473" covered="0"/><du var="leftToRight" def="468" use="473" target="473" covered="0"/><du var="leftToRight" def="468" use="484" target="484" covered="0"/><du var="leftToRight" def="468" use="484" target="484" covered="0"/><du var="imageRow" def="468" use="475" target="476" covered="0"/><du var="imageRow" def="468" use="475" target="479" covered="0"/><du var="imageColumn" def="468" use="473" target="474" covered="0"/><du var="imageColumn" def="468" use="473" target="483" covered="0"/><du var="imageColumn" def="468" use="484" target="485" covered="0"/><du var="imageColumn" def="468" use="484" target="488" covered="0"/><du var="imageColumn" def="468" use="475" target="476" covered="0"/><du var="imageColumn" def="468" use="475" target="479" covered="0"/><du var="imageColumn" def="468" use="477" covered="0"/><du var="imageColumn" def="468" use="473" target="473" covered="0"/><du var="imageColumn" def="468" use="473" target="483" covered="0"/><du var="moduleBitCount" def="469" use="483" target="484" covered="0"/><du var="moduleBitCount" def="469" use="483" target="486" covered="0"/><du var="moduleBitCount" def="469" use="486" covered="0"/><du var="moduleBitCount" def="469" use="485" target="486" covered="0"/><du var="moduleBitCount" def="469" use="485" target="488" covered="0"/><du var="moduleBitCount" def="469" use="473" target="483" covered="0"/><du var="moduleBitCount" def="469" use="473" target="475" covered="0"/><du var="moduleBitCount" def="469" use="476" covered="0"/><du var="moduleNumber" def="470" use="483" target="484" covered="0"/><du var="moduleNumber" def="470" use="483" target="486" covered="0"/><du var="moduleNumber" def="470" use="485" target="486" covered="0"/><du var="moduleNumber" def="470" use="485" target="488" covered="0"/><du var="moduleNumber" def="470" use="473" target="483" covered="0"/><du var="moduleNumber" def="470" use="473" target="475" covered="0"/><du var="moduleNumber" def="470" use="479" covered="0"/><du var="moduleNumber" def="470" use="476" covered="0"/><du var="increment" def="471" use="477" covered="0"/><du var="previousPixelValue" def="472" use="475" target="476" covered="0"/><du var="previousPixelValue" def="472" use="475" target="479" covered="0"/><du var="previousPixelValue" def="472" use="480" target="480" covered="0"/><du var="previousPixelValue" def="472" use="480" target="480" covered="0"/><du var="imageColumn" def="477" use="473" target="474" covered="0"/><du var="imageColumn" def="477" use="473" target="483" covered="0"/><du var="imageColumn" def="477" use="484" target="485" covered="0"/><du var="imageColumn" def="477" use="484" target="488" covered="0"/><du var="imageColumn" def="477" use="475" target="476" covered="0"/><du var="imageColumn" def="477" use="475" target="479" covered="0"/><du var="imageColumn" def="477" use="477" covered="0"/><du var="imageColumn" def="477" use="473" target="473" covered="0"/><du var="imageColumn" def="477" use="473" target="483" covered="0"/><du var="moduleNumber" def="479" use="483" target="484" covered="0"/><du var="moduleNumber" def="479" use="483" target="486" covered="0"/><du var="moduleNumber" def="479" use="485" target="486" covered="0"/><du var="moduleNumber" def="479" use="485" target="488" covered="0"/><du var="moduleNumber" def="479" use="473" target="483" covered="0"/><du var="moduleNumber" def="479" use="473" target="475" covered="0"/><du var="moduleNumber" def="479" use="479" covered="0"/><du var="moduleNumber" def="479" use="476" covered="0"/><du var="previousPixelValue" def="480" use="475" target="476" covered="0"/><du var="previousPixelValue" def="480" use="475" target="479" covered="0"/><du var="previousPixelValue" def="480" use="480" target="480" covered="0"/><du var="previousPixelValue" def="480" use="480" target="480" covered="0"/><counter type="DU" missed="70" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustCodewordStartColumn" desc="(Lcom/google/zxing/common/BitMatrix;IIZII)I"><du var="image" def="501" use="506" target="512" covered="0"/><du var="image" def="501" use="506" target="507" covered="0"/><du var="minColumn" def="501" use="505" target="505" covered="0"/><du var="minColumn" def="501" use="505" target="512" covered="0"/><du var="maxColumn" def="501" use="505" target="506" covered="0"/><du var="maxColumn" def="501" use="505" target="512" covered="0"/><du var="leftToRight" def="501" use="502" target="502" covered="0"/><du var="leftToRight" def="501" use="502" target="502" covered="0"/><du var="leftToRight" def="501" use="505" target="505" covered="0"/><du var="leftToRight" def="501" use="505" target="505" covered="0"/><du var="leftToRight" def="501" use="513" target="513" covered="0"/><du var="leftToRight" def="501" use="513" target="513" covered="0"/><du var="leftToRight" def="501" use="506" target="512" covered="0"/><du var="leftToRight" def="501" use="506" target="507" covered="0"/><du var="codewordStartColumn" def="501" use="507" target="508" covered="0"/><du var="codewordStartColumn" def="501" use="507" target="510" covered="0"/><du var="codewordStartColumn" def="501" use="508" covered="0"/><du var="imageRow" def="501" use="506" target="512" covered="0"/><du var="imageRow" def="501" use="506" target="507" covered="0"/><du var="correctedStartColumn" def="501" use="505" target="506" covered="0"/><du var="correctedStartColumn" def="501" use="505" target="512" covered="0"/><du var="correctedStartColumn" def="501" use="506" target="512" covered="0"/><du var="correctedStartColumn" def="501" use="506" target="507" covered="0"/><du var="correctedStartColumn" def="501" use="507" target="508" covered="0"/><du var="correctedStartColumn" def="501" use="507" target="510" covered="0"/><du var="correctedStartColumn" def="501" use="510" covered="0"/><du var="correctedStartColumn" def="501" use="505" target="505" covered="0"/><du var="correctedStartColumn" def="501" use="505" target="512" covered="0"/><du var="correctedStartColumn" def="501" use="515" covered="0"/><du var="increment" def="502" use="512" covered="0"/><du var="increment" def="502" use="510" covered="0"/><du var="i" def="504" use="504" target="515" covered="0"/><du var="i" def="504" use="504" target="505" covered="0"/><du var="i" def="504" use="504" covered="0"/><du var="correctedStartColumn" def="510" use="505" target="506" covered="0"/><du var="correctedStartColumn" def="510" use="505" target="512" covered="0"/><du var="correctedStartColumn" def="510" use="515" covered="0"/><du var="correctedStartColumn" def="510" use="506" target="512" covered="0"/><du var="correctedStartColumn" def="510" use="506" target="507" covered="0"/><du var="correctedStartColumn" def="510" use="507" target="508" covered="0"/><du var="correctedStartColumn" def="510" use="507" target="510" covered="0"/><du var="correctedStartColumn" def="510" use="510" covered="0"/><du var="correctedStartColumn" def="510" use="505" target="505" covered="0"/><du var="correctedStartColumn" def="510" use="505" target="512" covered="0"/><du var="increment" def="512" use="512" covered="0"/><du var="increment" def="512" use="510" covered="0"/><du var="leftToRight" def="513" use="505" target="505" covered="0"/><du var="leftToRight" def="513" use="505" target="505" covered="0"/><du var="leftToRight" def="513" use="513" target="513" covered="0"/><du var="leftToRight" def="513" use="513" target="513" covered="0"/><du var="leftToRight" def="513" use="506" target="512" covered="0"/><du var="leftToRight" def="513" use="506" target="507" covered="0"/><du var="i" def="504" use="504" target="515" covered="0"/><du var="i" def="504" use="504" target="505" covered="0"/><du var="i" def="504" use="504" covered="0"/><counter type="DU" missed="55" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkCodewordSkew" desc="(III)Z"><du var="codewordSize" def="519" use="519" target="520" covered="0"/><du var="codewordSize" def="519" use="519" target="519" covered="0"/><du var="codewordSize" def="519" use="519" target="519" covered="0"/><du var="codewordSize" def="519" use="519" target="519" covered="0"/><du var="minCodewordWidth" def="519" use="519" target="520" covered="0"/><du var="minCodewordWidth" def="519" use="519" target="519" covered="0"/><du var="maxCodewordWidth" def="519" use="519" target="519" covered="0"/><du var="maxCodewordWidth" def="519" use="519" target="519" covered="0"/><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeCodewords" desc="([II[I)Lcom/google/zxing/common/DecoderResult;"><du var="codewords" def="525" use="525" target="526" covered="0"/><du var="codewords" def="525" use="525" target="529" covered="0"/><du var="codewords" def="525" use="530" covered="0"/><du var="codewords" def="525" use="531" covered="0"/><du var="codewords" def="525" use="534" covered="0"/><du var="ecLevel" def="525" use="529" covered="0"/><du var="ecLevel" def="525" use="534" covered="0"/><du var="erasures" def="525" use="530" covered="0"/><du var="erasures" def="525" use="536" covered="0"/><counter type="DU" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="correctErrors" desc="([I[II)I"><du var="codewords" def="550" use="557" covered="0"/><du var="erasures" def="550" use="550" target="551" covered="0"/><du var="erasures" def="550" use="550" target="552" covered="0"/><du var="erasures" def="550" use="557" covered="0"/><du var="erasures" def="550" use="551" target="552" covered="0"/><du var="erasures" def="550" use="551" target="555" covered="0"/><du var="numECCodewords" def="550" use="552" target="553" covered="0"/><du var="numECCodewords" def="550" use="552" target="555" covered="0"/><du var="numECCodewords" def="550" use="553" target="555" covered="0"/><du var="numECCodewords" def="550" use="553" target="557" covered="0"/><du var="numECCodewords" def="550" use="557" covered="0"/><du var="numECCodewords" def="550" use="551" target="552" covered="0"/><du var="numECCodewords" def="550" use="551" target="555" covered="0"/><du var="errorCorrection" def="550" use="557" covered="0"/><counter type="DU" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="verifyCodewordCount" desc="([II)V"><du var="codewords" def="564" use="564" target="567" covered="0"/><du var="codewords" def="564" use="564" target="572" covered="0"/><du var="codewords" def="564" use="572" covered="0"/><du var="codewords" def="564" use="573" target="574" covered="0"/><du var="codewords" def="564" use="573" target="576" covered="0"/><du var="codewords" def="564" use="578" target="579" covered="0"/><du var="codewords" def="564" use="578" target="581" covered="0"/><du var="codewords" def="564" use="579" covered="0"/><du var="numECCodewords" def="564" use="578" target="579" covered="0"/><du var="numECCodewords" def="564" use="578" target="581" covered="0"/><du var="numECCodewords" def="564" use="579" covered="0"/><du var="numberOfCodewords" def="572" use="573" target="574" covered="0"/><du var="numberOfCodewords" def="572" use="573" target="576" covered="0"/><du var="numberOfCodewords" def="572" use="576" target="578" covered="0"/><du var="numberOfCodewords" def="572" use="576" target="584" covered="0"/><counter type="DU" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBitCountForCodeword" desc="(I)[I"><du var="codeword" def="587" use="591" target="592" covered="0"/><du var="codeword" def="587" use="591" target="598" covered="0"/><du var="codeword" def="587" use="599" covered="0"/><du var="codeword" def="587" use="592" covered="0"/><du var="result" def="587" use="598" covered="0"/><du var="result" def="587" use="601" covered="0"/><du var="previousValue" def="588" use="591" target="592" covered="0"/><du var="previousValue" def="588" use="591" target="598" covered="0"/><du var="i" def="589" use="598" covered="0"/><du var="i" def="589" use="593" covered="0"/><du var="previousValue" def="592" use="591" target="592" covered="0"/><du var="previousValue" def="592" use="591" target="598" covered="0"/><du var="i" def="593" use="594" target="595" covered="0"/><du var="i" def="593" use="594" target="598" covered="0"/><du var="i" def="593" use="598" covered="0"/><du var="i" def="593" use="593" covered="0"/><du var="codeword" def="599" use="591" target="592" covered="0"/><du var="codeword" def="599" use="591" target="598" covered="0"/><du var="codeword" def="599" use="599" covered="0"/><du var="codeword" def="599" use="592" covered="0"/><counter type="DU" missed="20" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="([[Lcom/google/zxing/pdf417/decoder/BarcodeValue;)Ljava/lang/String;"><du var="barcodeMatrix" def="613" use="614" target="627" covered="0"/><du var="barcodeMatrix" def="613" use="614" target="615" covered="0"/><du var="barcodeMatrix" def="613" use="616" target="625" covered="0"/><du var="barcodeMatrix" def="613" use="616" target="617" covered="0"/><du var="barcodeMatrix" def="613" use="617" covered="0"/><du var="formatter" def="613" use="615" covered="0"/><du var="formatter" def="613" use="621" covered="0"/><du var="formatter" def="613" use="619" covered="0"/><du var="formatter" def="613" use="625" covered="0"/><du var="formatter" def="613" use="627" covered="0"/><du var="formatter" def="613" use="628" covered="0"/><du var="row" def="614" use="614" target="627" covered="0"/><du var="row" def="614" use="614" target="615" covered="0"/><du var="row" def="614" use="615" covered="0"/><du var="row" def="614" use="616" target="625" covered="0"/><du var="row" def="614" use="616" target="617" covered="0"/><du var="row" def="614" use="617" covered="0"/><du var="row" def="614" use="614" covered="0"/><du var="column" def="616" use="616" target="625" covered="0"/><du var="column" def="616" use="616" target="617" covered="0"/><du var="column" def="616" use="617" covered="0"/><du var="column" def="616" use="616" covered="0"/><du var="barcodeValue" def="617" use="618" target="619" covered="0"/><du var="barcodeValue" def="617" use="618" target="621" covered="0"/><du var="barcodeValue" def="617" use="621" covered="0"/><du var="barcodeValue" def="617" use="622" covered="0"/><du var="column" def="616" use="616" target="625" covered="0"/><du var="column" def="616" use="616" target="617" covered="0"/><du var="column" def="616" use="617" covered="0"/><du var="column" def="616" use="616" covered="0"/><du var="row" def="614" use="614" target="627" covered="0"/><du var="row" def="614" use="614" target="615" covered="0"/><du var="row" def="614" use="615" covered="0"/><du var="row" def="614" use="616" target="625" covered="0"/><du var="row" def="614" use="616" target="617" covered="0"/><du var="row" def="614" use="617" covered="0"/><du var="row" def="614" use="614" covered="0"/><counter type="DU" missed="37" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="865" covered="0"/><counter type="METHOD" missed="21" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/pdf417/decoder/ec/ModulusGF"><method name="&lt;init&gt;" desc="(II)V"><du var="this" def="37" use="43" covered="1"/><du var="this" def="37" use="47" covered="1"/><du var="this" def="37" use="50" covered="1"/><du var="this" def="37" use="50" covered="1"/><du var="this" def="37" use="51" covered="1"/><du var="this" def="37" use="51" covered="1"/><du var="modulus" def="37" use="42" target="46" covered="1"/><du var="modulus" def="37" use="42" target="43" covered="1"/><du var="modulus" def="37" use="44" covered="1"/><du var="modulus" def="37" use="46" target="50" covered="1"/><du var="modulus" def="37" use="46" target="47" covered="1"/><du var="generator" def="37" use="44" covered="1"/><du var="this.expTable" def="39" use="43" covered="1"/><du var="this.expTable" def="39" use="47" covered="1"/><du var="this.logTable" def="40" use="47" covered="1"/><du var="x" def="41" use="43" covered="1"/><du var="x" def="41" use="44" covered="1"/><du var="i" def="42" use="42" target="46" covered="0"/><du var="i" def="42" use="42" target="43" covered="1"/><du var="i" def="42" use="43" covered="1"/><du var="i" def="42" use="42" covered="1"/><du var="x" def="44" use="43" covered="1"/><du var="x" def="44" use="44" covered="1"/><du var="i" def="42" use="42" target="46" covered="1"/><du var="i" def="42" use="42" target="43" covered="1"/><du var="i" def="42" use="43" covered="1"/><du var="i" def="42" use="42" covered="1"/><du var="i" def="46" use="46" target="50" covered="0"/><du var="i" def="46" use="46" target="47" covered="1"/><du var="i" def="46" use="47" covered="1"/><du var="i" def="46" use="46" covered="1"/><du var="i" def="46" use="46" target="50" covered="1"/><du var="i" def="46" use="46" target="47" covered="1"/><du var="i" def="46" use="47" covered="1"/><du var="i" def="46" use="46" covered="1"/><counter type="DU" missed="2" covered="33"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildMonomial" desc="(II)Lcom/google/zxing/pdf417/decoder/ec/ModulusPoly;"><du var="this" def="64" use="72" covered="0"/><du var="this" def="64" use="68" covered="0"/><du var="degree" def="64" use="64" target="65" covered="0"/><du var="degree" def="64" use="64" target="67" covered="0"/><du var="degree" def="64" use="70" covered="0"/><du var="coefficient" def="64" use="67" target="68" covered="0"/><du var="coefficient" def="64" use="67" target="70" covered="0"/><du var="coefficient" def="64" use="71" covered="0"/><du var="this.zero" def="64" use="68" covered="0"/><counter type="DU" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="log" desc="(I)I"><du var="this" def="88" use="91" covered="0"/><du var="a" def="88" use="88" target="89" covered="0"/><du var="a" def="88" use="88" target="91" covered="0"/><du var="a" def="88" use="91" covered="0"/><du var="this.logTable" def="88" use="91" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverse" desc="(I)I"><du var="this" def="95" use="98" covered="0"/><du var="a" def="95" use="95" target="96" covered="0"/><du var="a" def="95" use="95" target="98" covered="0"/><du var="a" def="95" use="98" covered="0"/><du var="this.expTable" def="95" use="98" covered="0"/><du var="this.modulus" def="95" use="98" covered="0"/><du var="this.logTable" def="95" use="98" covered="0"/><counter type="DU" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiply" desc="(II)I"><du var="this" def="102" use="105" covered="0"/><du var="a" def="102" use="102" target="102" covered="0"/><du var="a" def="102" use="102" target="103" covered="0"/><du var="a" def="102" use="105" covered="0"/><du var="b" def="102" use="102" target="103" covered="0"/><du var="b" def="102" use="102" target="105" covered="0"/><du var="b" def="102" use="105" covered="0"/><du var="this.expTable" def="102" use="105" covered="0"/><du var="this.logTable" def="102" use="105" covered="0"/><du var="this.modulus" def="102" use="105" covered="0"/><counter type="DU" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="33" covered="33"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/pdf417/decoder/ec/ModulusPoly"><method name="&lt;init&gt;" desc="(Lcom/google/zxing/pdf417/decoder/ec/ModulusGF;[I)V"><du var="this" def="28" use="32" covered="1"/><du var="this" def="28" use="51" covered="1"/><du var="this" def="28" use="43" covered="0"/><du var="this" def="28" use="44" covered="0"/><du var="this" def="28" use="41" covered="0"/><du var="field" def="28" use="32" covered="1"/><du var="coefficients" def="28" use="29" target="30" covered="0"/><du var="coefficients" def="28" use="29" target="32" covered="1"/><du var="coefficients" def="28" use="33" covered="1"/><du var="coefficients" def="28" use="51" covered="1"/><du var="coefficients" def="28" use="34" target="36" covered="0"/><du var="coefficients" def="28" use="34" target="51" covered="0"/><du var="coefficients" def="28" use="44" covered="0"/><du var="coefficients" def="28" use="37" target="40" covered="0"/><du var="coefficients" def="28" use="37" target="38" covered="0"/><du var="coefficientsLength" def="33" use="34" target="34" covered="0"/><du var="coefficientsLength" def="33" use="34" target="51" covered="1"/><du var="coefficientsLength" def="33" use="37" target="37" covered="0"/><du var="coefficientsLength" def="33" use="37" target="40" covered="0"/><du var="coefficientsLength" def="33" use="40" target="41" covered="0"/><du var="coefficientsLength" def="33" use="40" target="43" covered="0"/><du var="coefficientsLength" def="33" use="43" covered="0"/><du var="firstNonZero" def="36" use="37" target="37" covered="0"/><du var="firstNonZero" def="36" use="37" target="40" covered="0"/><du var="firstNonZero" def="36" use="40" target="41" covered="0"/><du var="firstNonZero" def="36" use="40" target="43" covered="0"/><du var="firstNonZero" def="36" use="43" covered="0"/><du var="firstNonZero" def="36" use="44" covered="0"/><du var="firstNonZero" def="36" use="37" target="40" covered="0"/><du var="firstNonZero" def="36" use="37" target="38" covered="0"/><du var="firstNonZero" def="36" use="38" covered="0"/><du var="firstNonZero" def="38" use="37" target="37" covered="0"/><du var="firstNonZero" def="38" use="37" target="40" covered="0"/><du var="firstNonZero" def="38" use="40" target="41" covered="0"/><du var="firstNonZero" def="38" use="40" target="43" covered="0"/><du var="firstNonZero" def="38" use="43" covered="0"/><du var="firstNonZero" def="38" use="44" covered="0"/><du var="firstNonZero" def="38" use="37" target="40" covered="0"/><du var="firstNonZero" def="38" use="37" target="38" covered="0"/><du var="firstNonZero" def="38" use="38" covered="0"/><counter type="DU" missed="33" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isZero" desc="()Z"><du var="this" def="70" use="70" target="70" covered="0"/><du var="this" def="70" use="70" target="70" covered="0"/><du var="this.coefficients" def="70" use="70" target="70" covered="0"/><du var="this.coefficients" def="70" use="70" target="70" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluateAt" desc="(I)I"><du var="this" def="84" use="96" covered="0"/><du var="this" def="84" use="97" covered="0"/><du var="this" def="84" use="99" covered="0"/><du var="this" def="84" use="91" covered="0"/><du var="this" def="84" use="91" covered="0"/><du var="this" def="84" use="92" covered="0"/><du var="this" def="84" use="86" covered="0"/><du var="a" def="84" use="84" target="86" covered="0"/><du var="a" def="84" use="84" target="88" covered="0"/><du var="a" def="84" use="88" target="90" covered="0"/><du var="a" def="84" use="88" target="96" covered="0"/><du var="a" def="84" use="99" covered="0"/><du var="this.coefficients" def="84" use="96" covered="0"/><du var="this.coefficients" def="84" use="97" covered="0"/><du var="this.coefficients" def="84" use="99" covered="0"/><du var="this.coefficients" def="84" use="91" covered="0"/><du var="this.coefficients" def="84" use="91" covered="0"/><du var="this.field" def="84" use="99" covered="0"/><du var="this.field" def="84" use="92" covered="0"/><du var="result" def="90" use="92" covered="0"/><du var="result" def="90" use="94" covered="0"/><du var="result" def="92" use="92" covered="0"/><du var="result" def="92" use="94" covered="0"/><du var="result" def="96" use="99" covered="0"/><du var="result" def="96" use="101" covered="0"/><du var="size" def="97" use="98" target="101" covered="0"/><du var="size" def="97" use="98" target="99" covered="0"/><du var="i" def="98" use="98" target="101" covered="0"/><du var="i" def="98" use="98" target="99" covered="0"/><du var="i" def="98" use="99" covered="0"/><du var="i" def="98" use="98" covered="0"/><du var="result" def="99" use="99" covered="0"/><du var="result" def="99" use="101" covered="0"/><du var="i" def="98" use="98" target="101" covered="0"/><du var="i" def="98" use="98" target="99" covered="0"/><du var="i" def="98" use="99" covered="0"/><du var="i" def="98" use="98" covered="0"/><counter type="DU" missed="48" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lcom/google/zxing/pdf417/decoder/ec/ModulusPoly;)Lcom/google/zxing/pdf417/decoder/ec/ModulusPoly;"><du var="this" def="105" use="105" target="106" covered="0"/><du var="this" def="105" use="105" target="108" covered="0"/><du var="this" def="105" use="108" target="109" covered="0"/><du var="this" def="105" use="108" target="111" covered="0"/><du var="this" def="105" use="115" covered="0"/><du var="this" def="105" use="128" covered="0"/><du var="this" def="105" use="131" covered="0"/><du var="this" def="105" use="112" covered="0"/><du var="other" def="105" use="105" target="106" covered="0"/><du var="other" def="105" use="105" target="108" covered="0"/><du var="other" def="105" use="111" target="112" covered="0"/><du var="other" def="105" use="111" target="115" covered="0"/><du var="other" def="105" use="116" covered="0"/><du var="other" def="105" use="109" covered="0"/><du var="this.field" def="105" use="105" target="106" covered="0"/><du var="this.field" def="105" use="105" target="108" covered="0"/><du var="this.field" def="105" use="128" covered="0"/><du var="this.field" def="105" use="131" covered="0"/><du var="other.field" def="105" use="105" target="106" covered="0"/><du var="other.field" def="105" use="105" target="108" covered="0"/><du var="this.coefficients" def="105" use="115" covered="0"/><du var="other.coefficients" def="105" use="116" covered="0"/><du var="smallerCoefficients" def="115" use="117" target="118" covered="0"/><du var="smallerCoefficients" def="115" use="117" target="122" covered="0"/><du var="smallerCoefficients" def="115" use="123" covered="0"/><du var="smallerCoefficients" def="115" use="128" covered="0"/><du var="smallerCoefficients" def="115" use="118" covered="0"/><du var="largerCoefficients" def="116" use="117" target="118" covered="0"/><du var="largerCoefficients" def="116" use="117" target="122" covered="0"/><du var="largerCoefficients" def="116" use="122" covered="0"/><du var="largerCoefficients" def="116" use="123" covered="0"/><du var="largerCoefficients" def="116" use="125" covered="0"/><du var="largerCoefficients" def="116" use="127" target="131" covered="0"/><du var="largerCoefficients" def="116" use="127" target="128" covered="0"/><du var="largerCoefficients" def="116" use="128" covered="0"/><du var="largerCoefficients" def="116" use="119" covered="0"/><du var="smallerCoefficients" def="119" use="123" covered="0"/><du var="smallerCoefficients" def="119" use="128" covered="0"/><du var="largerCoefficients" def="120" use="122" covered="0"/><du var="largerCoefficients" def="120" use="123" covered="0"/><du var="largerCoefficients" def="120" use="125" covered="0"/><du var="largerCoefficients" def="120" use="127" target="131" covered="0"/><du var="largerCoefficients" def="120" use="127" target="128" covered="0"/><du var="largerCoefficients" def="120" use="128" covered="0"/><du var="sumDiff" def="122" use="128" covered="0"/><du var="sumDiff" def="122" use="131" covered="0"/><du var="lengthDiff" def="123" use="128" covered="0"/><du var="i" def="127" use="127" target="131" covered="0"/><du var="i" def="127" use="127" target="128" covered="0"/><du var="i" def="127" use="128" covered="0"/><du var="i" def="127" use="127" covered="0"/><du var="i" def="127" use="127" target="131" covered="0"/><du var="i" def="127" use="127" target="128" covered="0"/><du var="i" def="127" use="128" covered="0"/><du var="i" def="127" use="127" covered="0"/><counter type="DU" missed="55" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(Lcom/google/zxing/pdf417/decoder/ec/ModulusPoly;)Lcom/google/zxing/pdf417/decoder/ec/ModulusPoly;"><du var="this" def="135" use="135" target="136" covered="0"/><du var="this" def="135" use="135" target="138" covered="0"/><du var="this" def="135" use="141" covered="0"/><du var="this" def="135" use="139" covered="0"/><du var="other" def="135" use="135" target="136" covered="0"/><du var="other" def="135" use="135" target="138" covered="0"/><du var="other" def="135" use="138" target="139" covered="0"/><du var="other" def="135" use="138" target="141" covered="0"/><du var="other" def="135" use="141" covered="0"/><du var="this.field" def="135" use="135" target="136" covered="0"/><du var="this.field" def="135" use="135" target="138" covered="0"/><du var="other.field" def="135" use="135" target="136" covered="0"/><du var="other.field" def="135" use="135" target="138" covered="0"/><counter type="DU" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiply" desc="(Lcom/google/zxing/pdf417/decoder/ec/ModulusPoly;)Lcom/google/zxing/pdf417/decoder/ec/ModulusPoly;"><du var="this" def="145" use="145" target="146" covered="0"/><du var="this" def="145" use="145" target="148" covered="0"/><du var="this" def="145" use="148" target="148" covered="0"/><du var="this" def="145" use="148" target="149" covered="0"/><du var="this" def="145" use="149" covered="0"/><du var="this" def="145" use="151" covered="0"/><du var="this" def="145" use="159" covered="0"/><du var="this" def="145" use="162" covered="0"/><du var="other" def="145" use="145" target="146" covered="0"/><du var="other" def="145" use="145" target="148" covered="0"/><du var="other" def="145" use="148" target="149" covered="0"/><du var="other" def="145" use="148" target="151" covered="0"/><du var="other" def="145" use="153" covered="0"/><du var="this.field" def="145" use="145" target="146" covered="0"/><du var="this.field" def="145" use="145" target="148" covered="0"/><du var="this.field" def="145" use="149" covered="0"/><du var="this.field" def="145" use="159" covered="0"/><du var="this.field" def="145" use="162" covered="0"/><du var="other.field" def="145" use="145" target="146" covered="0"/><du var="other.field" def="145" use="145" target="148" covered="0"/><du var="this.coefficients" def="145" use="151" covered="0"/><du var="other.coefficients" def="145" use="153" covered="0"/><du var="aCoefficients" def="151" use="157" covered="0"/><du var="aLength" def="152" use="156" target="162" covered="0"/><du var="aLength" def="152" use="156" target="157" covered="0"/><du var="bCoefficients" def="153" use="159" covered="0"/><du var="bLength" def="154" use="158" target="156" covered="0"/><du var="bLength" def="154" use="158" target="159" covered="0"/><du var="product" def="155" use="159" covered="0"/><du var="product" def="155" use="162" covered="0"/><du var="i" def="156" use="156" target="162" covered="0"/><du var="i" def="156" use="156" target="157" covered="0"/><du var="i" def="156" use="157" covered="0"/><du var="i" def="156" use="159" covered="0"/><du var="i" def="156" use="156" covered="0"/><du var="aCoeff" def="157" use="159" covered="0"/><du var="j" def="158" use="158" target="156" covered="0"/><du var="j" def="158" use="158" target="159" covered="0"/><du var="j" def="158" use="159" covered="0"/><du var="j" def="158" use="158" covered="0"/><du var="j" def="158" use="158" target="156" covered="0"/><du var="j" def="158" use="158" target="159" covered="0"/><du var="j" def="158" use="159" covered="0"/><du var="j" def="158" use="158" covered="0"/><du var="i" def="156" use="156" target="162" covered="0"/><du var="i" def="156" use="156" target="157" covered="0"/><du var="i" def="156" use="157" covered="0"/><du var="i" def="156" use="159" covered="0"/><du var="i" def="156" use="156" covered="0"/><counter type="DU" missed="49" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negative" desc="()Lcom/google/zxing/pdf417/decoder/ec/ModulusPoly;"><du var="this" def="166" use="169" covered="0"/><du var="this" def="166" use="171" covered="0"/><du var="this.coefficients" def="166" use="169" covered="0"/><du var="this.field" def="166" use="169" covered="0"/><du var="this.field" def="166" use="171" covered="0"/><du var="size" def="166" use="168" target="171" covered="0"/><du var="size" def="166" use="168" target="169" covered="0"/><du var="negativeCoefficients" def="167" use="169" covered="0"/><du var="negativeCoefficients" def="167" use="171" covered="0"/><du var="i" def="168" use="168" target="171" covered="0"/><du var="i" def="168" use="168" target="169" covered="0"/><du var="i" def="168" use="169" covered="0"/><du var="i" def="168" use="168" covered="0"/><du var="i" def="168" use="168" target="171" covered="0"/><du var="i" def="168" use="168" target="169" covered="0"/><du var="i" def="168" use="169" covered="0"/><du var="i" def="168" use="168" covered="0"/><counter type="DU" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiply" desc="(I)Lcom/google/zxing/pdf417/decoder/ec/ModulusPoly;"><du var="this" def="175" use="181" covered="0"/><du var="this" def="175" use="184" covered="0"/><du var="this" def="175" use="186" covered="0"/><du var="this" def="175" use="179" covered="0"/><du var="this" def="175" use="176" covered="0"/><du var="scalar" def="175" use="175" target="176" covered="0"/><du var="scalar" def="175" use="175" target="178" covered="0"/><du var="scalar" def="175" use="178" target="179" covered="0"/><du var="scalar" def="175" use="178" target="181" covered="0"/><du var="scalar" def="175" use="184" covered="0"/><du var="this.field" def="175" use="184" covered="0"/><du var="this.field" def="175" use="186" covered="0"/><du var="this.field" def="175" use="176" covered="0"/><du var="this.coefficients" def="175" use="181" covered="0"/><du var="this.coefficients" def="175" use="184" covered="0"/><du var="size" def="181" use="183" target="186" covered="0"/><du var="size" def="181" use="183" target="184" covered="0"/><du var="product" def="182" use="184" covered="0"/><du var="product" def="182" use="186" covered="0"/><du var="i" def="183" use="183" target="186" covered="0"/><du var="i" def="183" use="183" target="184" covered="0"/><du var="i" def="183" use="184" covered="0"/><du var="i" def="183" use="183" covered="0"/><du var="i" def="183" use="183" target="186" covered="0"/><du var="i" def="183" use="183" target="184" covered="0"/><du var="i" def="183" use="184" covered="0"/><du var="i" def="183" use="183" covered="0"/><counter type="DU" missed="27" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyByMonomial" desc="(II)Lcom/google/zxing/pdf417/decoder/ec/ModulusPoly;"><du var="this" def="190" use="196" covered="0"/><du var="this" def="190" use="199" covered="0"/><du var="this" def="190" use="201" covered="0"/><du var="this" def="190" use="194" covered="0"/><du var="degree" def="190" use="190" target="191" covered="0"/><du var="degree" def="190" use="190" target="193" covered="0"/><du var="degree" def="190" use="197" covered="0"/><du var="coefficient" def="190" use="193" target="194" covered="0"/><du var="coefficient" def="190" use="193" target="196" covered="0"/><du var="coefficient" def="190" use="199" covered="0"/><du var="this.field" def="190" use="199" covered="0"/><du var="this.field" def="190" use="201" covered="0"/><du var="this.field" def="190" use="194" covered="0"/><du var="this.coefficients" def="190" use="196" covered="0"/><du var="this.coefficients" def="190" use="199" covered="0"/><du var="size" def="196" use="198" target="201" covered="0"/><du var="size" def="196" use="198" target="199" covered="0"/><du var="product" def="197" use="199" covered="0"/><du var="product" def="197" use="201" covered="0"/><du var="i" def="198" use="198" target="201" covered="0"/><du var="i" def="198" use="198" target="199" covered="0"/><du var="i" def="198" use="199" covered="0"/><du var="i" def="198" use="198" covered="0"/><du var="i" def="198" use="198" target="201" covered="0"/><du var="i" def="198" use="198" target="199" covered="0"/><du var="i" def="198" use="199" covered="0"/><du var="i" def="198" use="198" covered="0"/><counter type="DU" missed="27" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><du var="this" def="234" use="236" covered="0"/><du var="result" def="234" use="242" target="243" covered="0"/><du var="result" def="234" use="242" target="246" covered="0"/><du var="result" def="234" use="247" covered="0"/><du var="result" def="234" use="253" covered="0"/><du var="result" def="234" use="254" covered="0"/><du var="result" def="234" use="251" covered="0"/><du var="result" def="234" use="243" covered="0"/><du var="result" def="234" use="239" covered="0"/><du var="result" def="234" use="259" covered="0"/><du var="degree" def="235" use="235" target="259" covered="0"/><du var="degree" def="235" use="235" target="236" covered="0"/><du var="degree" def="235" use="236" covered="0"/><du var="degree" def="235" use="235" covered="0"/><du var="degree" def="235" use="246" target="246" covered="0"/><du var="degree" def="235" use="246" target="247" covered="0"/><du var="degree" def="235" use="249" target="250" covered="0"/><du var="degree" def="235" use="249" target="235" covered="0"/><du var="degree" def="235" use="250" target="251" covered="0"/><du var="degree" def="235" use="250" target="253" covered="0"/><du var="degree" def="235" use="254" covered="0"/><du var="coefficient" def="236" use="237" target="238" covered="0"/><du var="coefficient" def="236" use="237" target="235" covered="0"/><du var="coefficient" def="236" use="238" target="239" covered="0"/><du var="coefficient" def="236" use="238" target="242" covered="0"/><du var="coefficient" def="236" use="247" covered="0"/><du var="coefficient" def="236" use="246" target="247" covered="0"/><du var="coefficient" def="236" use="246" target="249" covered="0"/><du var="coefficient" def="236" use="240" covered="0"/><du var="coefficient" def="240" use="247" covered="0"/><du var="coefficient" def="240" use="246" target="247" covered="0"/><du var="coefficient" def="240" use="246" target="249" covered="0"/><du var="degree" def="235" use="235" target="259" covered="0"/><du var="degree" def="235" use="235" target="236" covered="0"/><du var="degree" def="235" use="236" covered="0"/><du var="degree" def="235" use="235" covered="0"/><du var="degree" def="235" use="246" target="246" covered="0"/><du var="degree" def="235" use="246" target="247" covered="0"/><du var="degree" def="235" use="249" target="250" covered="0"/><du var="degree" def="235" use="249" target="235" covered="0"/><du var="degree" def="235" use="250" target="251" covered="0"/><du var="degree" def="235" use="250" target="253" covered="0"/><du var="degree" def="235" use="254" covered="0"/><counter type="DU" missed="43" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="316" covered="7"/><counter type="METHOD" missed="9" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/pdf417/decoder/ec/ErrorCorrection"><method name="decode" desc="([II[I)I"><du var="this" def="49" use="53" covered="0"/><du var="this" def="49" use="64" covered="0"/><du var="this" def="49" use="74" covered="0"/><du var="this" def="49" use="77" covered="0"/><du var="this" def="49" use="84" covered="0"/><du var="this" def="49" use="85" covered="0"/><du var="this" def="49" use="88" covered="0"/><du var="this" def="49" use="92" covered="0"/><du var="this" def="49" use="67" covered="0"/><du var="this" def="49" use="69" covered="0"/><du var="this" def="49" use="69" covered="0"/><du var="received" def="49" use="88" covered="0"/><du var="received" def="49" use="92" covered="0"/><du var="received" def="49" use="67" covered="0"/><du var="numECCodewords" def="49" use="54" covered="0"/><du var="numECCodewords" def="49" use="77" covered="0"/><du var="erasures" def="49" use="65" target="66" covered="0"/><du var="erasures" def="49" use="65" target="74" covered="0"/><du var="erasures" def="49" use="66" covered="0"/><du var="erasures" def="49" use="66" covered="0"/><du var="this.field" def="49" use="53" covered="0"/><du var="this.field" def="49" use="64" covered="0"/><du var="this.field" def="49" use="74" covered="0"/><du var="this.field" def="49" use="77" covered="0"/><du var="this.field" def="49" use="88" covered="0"/><du var="this.field" def="49" use="92" covered="0"/><du var="this.field" def="49" use="67" covered="0"/><du var="this.field" def="49" use="69" covered="0"/><du var="this.field" def="49" use="69" covered="0"/><du var="poly" def="49" use="53" covered="0"/><du var="S" def="50" use="54" covered="0"/><du var="S" def="50" use="74" covered="0"/><du var="error" def="51" use="60" target="61" covered="0"/><du var="error" def="51" use="60" target="64" covered="0"/><du var="i" def="52" use="52" target="60" covered="0"/><du var="i" def="52" use="52" target="53" covered="0"/><du var="i" def="52" use="53" covered="0"/><du var="i" def="52" use="54" covered="0"/><du var="i" def="52" use="52" covered="0"/><du var="eval" def="53" use="55" target="56" covered="0"/><du var="eval" def="53" use="55" target="52" covered="0"/><du var="error" def="56" use="60" target="61" covered="0"/><du var="error" def="56" use="60" target="64" covered="0"/><du var="i" def="52" use="52" target="60" covered="0"/><du var="i" def="52" use="52" target="53" covered="0"/><du var="i" def="52" use="53" covered="0"/><du var="i" def="52" use="54" covered="0"/><du var="i" def="52" use="52" covered="0"/><du var="knownErrors" def="64" use="70" covered="0"/><du var="knownErrors" def="70" use="70" covered="0"/><du var="errorLocations" def="84" use="87" target="94" covered="0"/><du var="errorLocations" def="84" use="87" target="88" covered="0"/><du var="errorLocations" def="84" use="88" covered="0"/><du var="errorLocations" def="84" use="94" covered="0"/><du var="errorMagnitudes" def="85" use="92" covered="0"/><du var="i" def="87" use="87" target="94" covered="0"/><du var="i" def="87" use="87" target="88" covered="0"/><du var="i" def="87" use="88" covered="0"/><du var="i" def="87" use="92" covered="0"/><du var="i" def="87" use="87" covered="0"/><du var="position" def="88" use="89" target="90" covered="0"/><du var="position" def="88" use="89" target="92" covered="0"/><du var="position" def="88" use="92" covered="0"/><du var="i" def="87" use="87" target="94" covered="0"/><du var="i" def="87" use="87" target="88" covered="0"/><du var="i" def="87" use="88" covered="0"/><du var="i" def="87" use="92" covered="0"/><du var="i" def="87" use="87" covered="0"/><counter type="DU" missed="79" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runEuclideanAlgorithm" desc="(Lcom/google/zxing/pdf417/decoder/ec/ModulusPoly;Lcom/google/zxing/pdf417/decoder/ec/ModulusPoly;I)[Lcom/google/zxing/pdf417/decoder/ec/ModulusPoly;"><du var="this" def="100" use="108" covered="0"/><du var="this" def="100" use="109" covered="0"/><du var="this" def="100" use="124" covered="0"/><du var="this" def="100" use="126" covered="0"/><du var="this" def="100" use="129" covered="0"/><du var="this" def="100" use="130" covered="0"/><du var="this" def="100" use="142" covered="0"/><du var="a" def="100" use="100" target="101" covered="0"/><du var="a" def="100" use="100" target="106" covered="0"/><du var="a" def="100" use="106" covered="0"/><du var="a" def="100" use="101" covered="0"/><du var="b" def="100" use="100" target="101" covered="0"/><du var="b" def="100" use="100" target="106" covered="0"/><du var="b" def="100" use="107" covered="0"/><du var="b" def="100" use="102" covered="0"/><du var="R" def="100" use="112" target="137" covered="0"/><du var="R" def="100" use="112" target="113" covered="0"/><du var="this.field" def="100" use="108" covered="0"/><du var="this.field" def="100" use="109" covered="0"/><du var="this.field" def="100" use="124" covered="0"/><du var="this.field" def="100" use="126" covered="0"/><du var="this.field" def="100" use="129" covered="0"/><du var="this.field" def="100" use="130" covered="0"/><du var="this.field" def="100" use="142" covered="0"/><du var="a" def="102" use="106" covered="0"/><du var="b" def="103" use="107" covered="0"/><du var="rLast" def="106" use="113" covered="0"/><du var="r" def="107" use="112" target="137" covered="0"/><du var="r" def="107" use="112" target="113" covered="0"/><du var="r" def="107" use="115" covered="0"/><du var="r" def="107" use="144" covered="0"/><du var="tLast" def="108" use="114" covered="0"/><du var="t" def="109" use="116" covered="0"/><du var="t" def="109" use="137" covered="0"/><du var="t" def="109" use="143" covered="0"/><du var="rLastLast" def="113" use="123" covered="0"/><du var="tLastLast" def="114" use="134" covered="0"/><du var="rLast" def="115" use="119" target="121" covered="0"/><du var="rLast" def="115" use="119" target="123" covered="0"/><du var="rLast" def="115" use="125" covered="0"/><du var="rLast" def="115" use="127" target="127" covered="0"/><du var="rLast" def="115" use="127" target="134" covered="0"/><du var="rLast" def="115" use="113" covered="0"/><du var="rLast" def="115" use="128" covered="0"/><du var="rLast" def="115" use="131" covered="0"/><du var="tLast" def="116" use="134" covered="0"/><du var="tLast" def="116" use="114" covered="0"/><du var="r" def="123" use="127" target="127" covered="0"/><du var="r" def="123" use="127" target="134" covered="0"/><du var="r" def="123" use="112" target="137" covered="0"/><du var="r" def="123" use="112" target="113" covered="0"/><du var="r" def="123" use="115" covered="0"/><du var="r" def="123" use="144" covered="0"/><du var="r" def="123" use="127" target="134" covered="0"/><du var="r" def="123" use="127" target="128" covered="0"/><du var="r" def="123" use="128" covered="0"/><du var="r" def="123" use="129" covered="0"/><du var="r" def="123" use="131" covered="0"/><du var="q" def="124" use="134" covered="0"/><du var="q" def="124" use="130" covered="0"/><du var="dltInverse" def="126" use="129" covered="0"/><du var="q" def="130" use="134" covered="0"/><du var="q" def="130" use="130" covered="0"/><du var="r" def="131" use="127" target="127" covered="0"/><du var="r" def="131" use="127" target="134" covered="0"/><du var="r" def="131" use="112" target="137" covered="0"/><du var="r" def="131" use="112" target="113" covered="0"/><du var="r" def="131" use="115" covered="0"/><du var="r" def="131" use="144" covered="0"/><du var="r" def="131" use="127" target="134" covered="0"/><du var="r" def="131" use="127" target="128" covered="0"/><du var="r" def="131" use="128" covered="0"/><du var="r" def="131" use="129" covered="0"/><du var="r" def="131" use="131" covered="0"/><du var="t" def="134" use="116" covered="0"/><du var="t" def="134" use="137" covered="0"/><du var="t" def="134" use="143" covered="0"/><du var="sigmaTildeAtZero" def="137" use="138" target="139" covered="0"/><du var="sigmaTildeAtZero" def="137" use="138" target="142" covered="0"/><du var="sigmaTildeAtZero" def="137" use="142" covered="0"/><counter type="DU" missed="80" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findErrorLocations" desc="(Lcom/google/zxing/pdf417/decoder/ec/ModulusPoly;)[I"><du var="this" def="150" use="153" target="153" covered="0"/><du var="this" def="150" use="153" target="159" covered="0"/><du var="this" def="150" use="155" covered="0"/><du var="errorLocator" def="150" use="154" target="155" covered="0"/><du var="errorLocator" def="150" use="154" target="153" covered="0"/><du var="this.field" def="150" use="153" target="153" covered="0"/><du var="this.field" def="150" use="153" target="159" covered="0"/><du var="this.field" def="150" use="155" covered="0"/><du var="numErrors" def="150" use="159" target="160" covered="0"/><du var="numErrors" def="150" use="159" target="162" covered="0"/><du var="numErrors" def="150" use="153" target="159" covered="0"/><du var="numErrors" def="150" use="153" target="154" covered="0"/><du var="result" def="151" use="162" covered="0"/><du var="result" def="151" use="155" covered="0"/><du var="e" def="152" use="159" target="160" covered="0"/><du var="e" def="152" use="159" target="162" covered="0"/><du var="e" def="152" use="153" target="159" covered="0"/><du var="e" def="152" use="153" target="154" covered="0"/><du var="e" def="152" use="155" covered="0"/><du var="e" def="152" use="156" covered="0"/><du var="i" def="153" use="153" target="153" covered="0"/><du var="i" def="153" use="153" target="159" covered="0"/><du var="i" def="153" use="154" target="155" covered="0"/><du var="i" def="153" use="154" target="153" covered="0"/><du var="i" def="153" use="153" covered="0"/><du var="i" def="153" use="155" covered="0"/><du var="e" def="156" use="159" target="160" covered="0"/><du var="e" def="156" use="159" target="162" covered="0"/><du var="e" def="156" use="153" target="159" covered="0"/><du var="e" def="156" use="153" target="154" covered="0"/><du var="e" def="156" use="155" covered="0"/><du var="e" def="156" use="156" covered="0"/><du var="i" def="153" use="153" target="153" covered="0"/><du var="i" def="153" use="153" target="159" covered="0"/><du var="i" def="153" use="154" target="155" covered="0"/><du var="i" def="153" use="154" target="153" covered="0"/><du var="i" def="153" use="153" covered="0"/><du var="i" def="153" use="155" covered="0"/><counter type="DU" missed="38" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findErrorMagnitudes" desc="(Lcom/google/zxing/pdf417/decoder/ec/ModulusPoly;Lcom/google/zxing/pdf417/decoder/ec/ModulusPoly;[I)[I"><du var="this" def="168" use="171" covered="0"/><du var="this" def="168" use="174" covered="0"/><du var="this" def="168" use="180" covered="0"/><du var="this" def="168" use="181" covered="0"/><du var="this" def="168" use="182" covered="0"/><du var="this" def="168" use="183" covered="0"/><du var="errorEvaluator" def="168" use="181" covered="0"/><du var="errorLocator" def="168" use="171" covered="0"/><du var="errorLocations" def="168" use="177" covered="0"/><du var="errorLocations" def="168" use="180" covered="0"/><du var="this.field" def="168" use="171" covered="0"/><du var="this.field" def="168" use="174" covered="0"/><du var="this.field" def="168" use="180" covered="0"/><du var="this.field" def="168" use="181" covered="0"/><du var="this.field" def="168" use="182" covered="0"/><du var="this.field" def="168" use="183" covered="0"/><du var="errorLocatorDegree" def="168" use="170" target="174" covered="0"/><du var="errorLocatorDegree" def="168" use="170" target="171" covered="0"/><du var="errorLocatorDegree" def="168" use="171" covered="0"/><du var="formalDerivativeCoefficients" def="169" use="171" covered="0"/><du var="formalDerivativeCoefficients" def="169" use="174" covered="0"/><du var="i" def="170" use="170" target="174" covered="0"/><du var="i" def="170" use="170" target="171" covered="0"/><du var="i" def="170" use="171" covered="0"/><du var="i" def="170" use="170" covered="0"/><du var="i" def="170" use="170" target="174" covered="0"/><du var="i" def="170" use="170" target="171" covered="0"/><du var="i" def="170" use="171" covered="0"/><du var="i" def="170" use="170" covered="0"/><du var="formalDerivative" def="174" use="182" covered="0"/><du var="s" def="177" use="179" target="185" covered="0"/><du var="s" def="177" use="179" target="180" covered="0"/><du var="result" def="178" use="183" covered="0"/><du var="result" def="178" use="185" covered="0"/><du var="i" def="179" use="179" target="185" covered="0"/><du var="i" def="179" use="179" target="180" covered="0"/><du var="i" def="179" use="180" covered="0"/><du var="i" def="179" use="183" covered="0"/><du var="i" def="179" use="179" covered="0"/><du var="i" def="179" use="179" target="185" covered="0"/><du var="i" def="179" use="179" target="180" covered="0"/><du var="i" def="179" use="180" covered="0"/><du var="i" def="179" use="183" covered="0"/><du var="i" def="179" use="179" covered="0"/><counter type="DU" missed="44" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="241" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/pdf417/decoder/DecodedBitStreamParser"><method name="decode" desc="([ILjava/lang/String;)Lcom/google/zxing/common/DecoderResult;"><du var="codewords" def="96" use="102" target="151" covered="0"/><du var="codewords" def="96" use="102" target="103" covered="0"/><du var="codewords" def="96" use="131" covered="0"/><du var="codewords" def="96" use="145" target="146" covered="0"/><du var="codewords" def="96" use="145" target="148" covered="0"/><du var="codewords" def="96" use="146" covered="0"/><du var="codewords" def="96" use="118" covered="0"/><du var="codewords" def="96" use="112" covered="0"/><du var="codewords" def="96" use="115" covered="0"/><du var="codewords" def="96" use="109" covered="0"/><du var="codewords" def="96" use="105" covered="0"/><du var="codewords" def="96" use="142" covered="0"/><du var="ecLevel" def="96" use="154" covered="0"/><du var="result" def="96" use="112" covered="0"/><du var="result" def="96" use="115" covered="0"/><du var="result" def="96" use="109" covered="0"/><du var="result" def="96" use="105" covered="0"/><du var="result" def="96" use="142" covered="0"/><du var="result" def="96" use="151" target="152" covered="0"/><du var="result" def="96" use="151" target="154" covered="0"/><du var="result" def="96" use="154" covered="0"/><du var="encoding" def="97" use="109" covered="0"/><du var="codeIndex" def="100" use="102" target="151" covered="0"/><du var="codeIndex" def="100" use="102" target="103" covered="0"/><du var="codeIndex" def="100" use="131" covered="0"/><du var="codeIndex" def="100" use="119" covered="0"/><du var="codeIndex" def="100" use="124" covered="0"/><du var="codeIndex" def="100" use="128" covered="0"/><du var="codeIndex" def="100" use="112" covered="0"/><du var="codeIndex" def="100" use="115" covered="0"/><du var="codeIndex" def="100" use="109" covered="0"/><du var="codeIndex" def="100" use="105" covered="0"/><du var="codeIndex" def="100" use="141" covered="0"/><du var="code" def="100" use="103" target="141" covered="0"/><du var="code" def="100" use="103" target="105" covered="0"/><du var="code" def="100" use="103" target="109" covered="0"/><du var="code" def="100" use="103" target="115" covered="0"/><du var="code" def="100" use="103" target="112" covered="0"/><du var="code" def="100" use="103" target="136" covered="0"/><du var="code" def="100" use="103" target="128" covered="0"/><du var="code" def="100" use="103" target="124" covered="0"/><du var="code" def="100" use="103" target="119" covered="0"/><du var="code" def="100" use="103" target="131" covered="0"/><du var="code" def="100" use="109" covered="0"/><du var="resultMetadata" def="101" use="131" covered="0"/><du var="resultMetadata" def="101" use="155" covered="0"/><du var="codeIndex" def="105" use="145" target="146" covered="0"/><du var="codeIndex" def="105" use="145" target="148" covered="0"/><du var="codeIndex" def="105" use="146" covered="0"/><du var="codeIndex" def="109" use="145" target="146" covered="0"/><du var="codeIndex" def="109" use="145" target="148" covered="0"/><du var="codeIndex" def="109" use="146" covered="0"/><du var="codeIndex" def="112" use="145" target="146" covered="0"/><du var="codeIndex" def="112" use="145" target="148" covered="0"/><du var="codeIndex" def="112" use="146" covered="0"/><du var="codeIndex" def="115" use="145" target="146" covered="0"/><du var="codeIndex" def="115" use="145" target="148" covered="0"/><du var="codeIndex" def="115" use="146" covered="0"/><du var="codeIndex" def="119" use="145" target="146" covered="0"/><du var="codeIndex" def="119" use="145" target="148" covered="0"/><du var="codeIndex" def="119" use="146" covered="0"/><du var="encoding" def="120" use="109" covered="0"/><du var="codeIndex" def="124" use="145" target="146" covered="0"/><du var="codeIndex" def="124" use="145" target="148" covered="0"/><du var="codeIndex" def="124" use="146" covered="0"/><du var="codeIndex" def="128" use="145" target="146" covered="0"/><du var="codeIndex" def="128" use="145" target="148" covered="0"/><du var="codeIndex" def="128" use="146" covered="0"/><du var="codeIndex" def="131" use="145" target="146" covered="0"/><du var="codeIndex" def="131" use="145" target="148" covered="0"/><du var="codeIndex" def="131" use="146" covered="0"/><du var="codeIndex" def="142" use="145" target="146" covered="0"/><du var="codeIndex" def="142" use="145" target="148" covered="0"/><du var="codeIndex" def="142" use="146" covered="0"/><du var="codeIndex" def="146" use="102" target="151" covered="0"/><du var="codeIndex" def="146" use="102" target="103" covered="0"/><du var="codeIndex" def="146" use="131" covered="0"/><du var="codeIndex" def="146" use="119" covered="0"/><du var="codeIndex" def="146" use="124" covered="0"/><du var="codeIndex" def="146" use="128" covered="0"/><du var="codeIndex" def="146" use="112" covered="0"/><du var="codeIndex" def="146" use="115" covered="0"/><du var="codeIndex" def="146" use="109" covered="0"/><du var="codeIndex" def="146" use="105" covered="0"/><du var="codeIndex" def="146" use="141" covered="0"/><du var="code" def="146" use="103" target="141" covered="0"/><du var="code" def="146" use="103" target="105" covered="0"/><du var="code" def="146" use="103" target="109" covered="0"/><du var="code" def="146" use="103" target="115" covered="0"/><du var="code" def="146" use="103" target="112" covered="0"/><du var="code" def="146" use="103" target="136" covered="0"/><du var="code" def="146" use="103" target="128" covered="0"/><du var="code" def="146" use="103" target="124" covered="0"/><du var="code" def="146" use="103" target="119" covered="0"/><du var="code" def="146" use="103" target="131" covered="0"/><du var="code" def="146" use="109" covered="0"/><counter type="DU" missed="96" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeMacroBlock" desc="([IILcom/google/zxing/pdf417/PDF417ResultMetadata;)I"><du var="codewords" def="161" use="161" target="163" covered="0"/><du var="codewords" def="161" use="161" target="165" covered="0"/><du var="codewords" def="161" use="167" covered="0"/><du var="codewords" def="161" use="173" covered="0"/><du var="codewords" def="161" use="176" target="207" covered="0"/><du var="codewords" def="161" use="176" target="202" covered="0"/><du var="codewords" def="161" use="176" target="178" covered="0"/><du var="codewords" def="161" use="179" covered="0"/><du var="codewords" def="161" use="183" target="183" covered="0"/><du var="codewords" def="161" use="183" target="199" covered="0"/><du var="codewords" def="161" use="184" covered="0"/><du var="codeIndex" def="161" use="161" target="163" covered="0"/><du var="codeIndex" def="161" use="161" target="165" covered="0"/><du var="codeIndex" def="161" use="167" covered="0"/><du var="codeIndex" def="161" use="166" covered="0"/><du var="codeIndex" def="161" use="173" covered="0"/><du var="resultMetadata" def="161" use="169" covered="0"/><du var="resultMetadata" def="161" use="174" covered="0"/><du var="resultMetadata" def="161" use="199" covered="0"/><du var="resultMetadata" def="161" use="190" covered="0"/><du var="resultMetadata" def="161" use="202" covered="0"/><du var="segmentIndexArray" def="165" use="167" covered="0"/><du var="segmentIndexArray" def="165" use="169" covered="0"/><du var="i" def="166" use="166" target="169" covered="0"/><du var="i" def="166" use="166" target="167" covered="0"/><du var="i" def="166" use="167" covered="0"/><du var="i" def="166" use="166" covered="0"/><du var="i" def="166" use="166" target="169" covered="0"/><du var="i" def="166" use="166" target="167" covered="0"/><du var="i" def="166" use="167" covered="0"/><du var="i" def="166" use="166" covered="0"/><du var="codeIndex" def="166" use="167" covered="0"/><du var="codeIndex" def="166" use="166" covered="0"/><du var="codeIndex" def="166" use="173" covered="0"/><du var="codeIndex" def="173" use="176" target="207" covered="0"/><du var="codeIndex" def="173" use="176" target="202" covered="0"/><du var="codeIndex" def="173" use="176" target="178" covered="0"/><du var="codeIndex" def="173" use="178" covered="0"/><du var="codeIndex" def="173" use="203" covered="0"/><du var="codeIndex" def="173" use="207" covered="0"/><du var="codeIndex" def="178" use="183" target="183" covered="0"/><du var="codeIndex" def="178" use="183" target="199" covered="0"/><du var="codeIndex" def="178" use="207" covered="0"/><du var="codeIndex" def="178" use="184" covered="0"/><du var="additionalOptionCodeWords" def="179" use="199" covered="0"/><du var="additionalOptionCodeWords" def="179" use="186" covered="0"/><du var="additionalOptionCodeWordsIndex" def="180" use="199" covered="0"/><du var="additionalOptionCodeWordsIndex" def="180" use="186" covered="0"/><du var="end" def="182" use="183" target="199" covered="0"/><du var="end" def="182" use="183" target="184" covered="0"/><du var="codeIndex" def="184" use="191" covered="0"/><du var="codeIndex" def="184" use="183" target="183" covered="0"/><du var="codeIndex" def="184" use="183" target="199" covered="0"/><du var="codeIndex" def="184" use="207" covered="0"/><du var="codeIndex" def="184" use="184" covered="0"/><du var="code" def="184" use="185" target="186" covered="0"/><du var="code" def="184" use="185" target="188" covered="0"/><du var="code" def="184" use="188" target="195" covered="0"/><du var="code" def="184" use="188" target="190" covered="0"/><du var="code" def="184" use="186" covered="0"/><du var="additionalOptionCodeWordsIndex" def="186" use="199" covered="0"/><du var="additionalOptionCodeWordsIndex" def="186" use="186" covered="0"/><du var="codeIndex" def="191" use="183" target="183" covered="0"/><du var="codeIndex" def="191" use="183" target="199" covered="0"/><du var="codeIndex" def="191" use="207" covered="0"/><du var="codeIndex" def="191" use="184" covered="0"/><du var="end" def="192" use="183" target="199" covered="0"/><du var="end" def="192" use="183" target="184" covered="0"/><du var="codeIndex" def="203" use="207" covered="0"/><counter type="DU" missed="69" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="textCompaction" desc="([IILjava/lang/StringBuilder;)I"><du var="codewords" def="222" use="228" target="228" covered="0"/><du var="codewords" def="222" use="228" target="264" covered="0"/><du var="codewords" def="222" use="229" covered="0"/><du var="codewords" def="222" use="257" covered="0"/><du var="codeIndex" def="222" use="228" target="228" covered="0"/><du var="codeIndex" def="222" use="228" target="264" covered="0"/><du var="codeIndex" def="222" use="265" covered="0"/><du var="codeIndex" def="222" use="229" covered="0"/><du var="result" def="222" use="264" covered="0"/><du var="textCompactionData" def="222" use="264" covered="0"/><du var="textCompactionData" def="222" use="256" covered="0"/><du var="textCompactionData" def="222" use="238" covered="0"/><du var="textCompactionData" def="222" use="231" covered="0"/><du var="textCompactionData" def="222" use="232" covered="0"/><du var="byteCompactionData" def="224" use="264" covered="0"/><du var="byteCompactionData" def="224" use="258" covered="0"/><du var="index" def="226" use="264" covered="0"/><du var="index" def="226" use="256" covered="0"/><du var="index" def="226" use="258" covered="0"/><du var="index" def="226" use="259" covered="0"/><du var="index" def="226" use="238" covered="0"/><du var="index" def="226" use="231" covered="0"/><du var="index" def="226" use="232" covered="0"/><du var="index" def="226" use="233" covered="0"/><du var="end" def="227" use="228" target="264" covered="0"/><du var="end" def="227" use="228" target="229" covered="0"/><du var="codeIndex" def="229" use="257" covered="0"/><du var="codeIndex" def="229" use="246" covered="0"/><du var="codeIndex" def="229" use="228" target="228" covered="0"/><du var="codeIndex" def="229" use="228" target="264" covered="0"/><du var="codeIndex" def="229" use="265" covered="0"/><du var="codeIndex" def="229" use="229" covered="0"/><du var="code" def="229" use="230" target="231" covered="0"/><du var="code" def="229" use="230" target="235" covered="0"/><du var="code" def="229" use="235" target="228" covered="0"/><du var="code" def="229" use="235" target="238" covered="0"/><du var="code" def="229" use="235" target="246" covered="0"/><du var="code" def="229" use="235" target="256" covered="0"/><du var="code" def="229" use="231" covered="0"/><du var="code" def="229" use="232" covered="0"/><du var="index" def="233" use="264" covered="0"/><du var="index" def="233" use="256" covered="0"/><du var="index" def="233" use="258" covered="0"/><du var="index" def="233" use="259" covered="0"/><du var="index" def="233" use="238" covered="0"/><du var="index" def="233" use="231" covered="0"/><du var="index" def="233" use="232" covered="0"/><du var="index" def="233" use="233" covered="0"/><du var="index" def="238" use="264" covered="0"/><du var="index" def="238" use="256" covered="0"/><du var="index" def="238" use="258" covered="0"/><du var="index" def="238" use="259" covered="0"/><du var="index" def="238" use="238" covered="0"/><du var="index" def="238" use="231" covered="0"/><du var="index" def="238" use="232" covered="0"/><du var="index" def="238" use="233" covered="0"/><du var="codeIndex" def="246" use="228" target="228" covered="0"/><du var="codeIndex" def="246" use="228" target="264" covered="0"/><du var="codeIndex" def="246" use="265" covered="0"/><du var="codeIndex" def="246" use="229" covered="0"/><du var="end" def="247" use="228" target="264" covered="0"/><du var="end" def="247" use="228" target="229" covered="0"/><du var="codeIndex" def="257" use="228" target="228" covered="0"/><du var="codeIndex" def="257" use="228" target="264" covered="0"/><du var="codeIndex" def="257" use="265" covered="0"/><du var="codeIndex" def="257" use="229" covered="0"/><du var="index" def="259" use="264" covered="0"/><du var="index" def="259" use="256" covered="0"/><du var="index" def="259" use="258" covered="0"/><du var="index" def="259" use="259" covered="0"/><du var="index" def="259" use="238" covered="0"/><du var="index" def="259" use="231" covered="0"/><du var="index" def="259" use="232" covered="0"/><du var="index" def="259" use="233" covered="0"/><counter type="DU" missed="74" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeTextCompaction" desc="([I[IILjava/lang/StringBuilder;)V"><du var="textCompactionData" def="292" use="296" covered="0"/><du var="byteCompactionData" def="292" use="445" covered="0"/><du var="byteCompactionData" def="292" use="406" covered="0"/><du var="byteCompactionData" def="292" use="387" covered="0"/><du var="byteCompactionData" def="292" use="354" covered="0"/><du var="byteCompactionData" def="292" use="321" covered="0"/><du var="length" def="292" use="295" target="460" covered="0"/><du var="length" def="292" use="295" target="296" covered="0"/><du var="result" def="292" use="445" covered="0"/><du var="result" def="292" use="406" covered="0"/><du var="result" def="292" use="387" covered="0"/><du var="result" def="292" use="354" covered="0"/><du var="result" def="292" use="321" covered="0"/><du var="result" def="292" use="456" covered="0"/><du var="ALPHA" def="292" use="448" covered="0"/><du var="ALPHA" def="292" use="440" covered="0"/><du var="ALPHA" def="292" use="426" covered="0"/><du var="ALPHA" def="292" use="409" covered="0"/><du var="ALPHA" def="292" use="403" covered="0"/><du var="ALPHA" def="292" use="390" covered="0"/><du var="ALPHA" def="292" use="379" covered="0"/><du var="ALPHA" def="292" use="357" covered="0"/><du var="ALPHA" def="292" use="324" covered="0"/><du var="LOWER" def="292" use="376" covered="0"/><du var="LOWER" def="292" use="310" covered="0"/><du var="MIXED" def="292" use="345" covered="0"/><du var="MIXED" def="292" use="313" covered="0"/><du var="PUNCT_SHIFT" def="292" use="384" covered="0"/><du var="PUNCT_SHIFT" def="292" use="350" covered="0"/><du var="PUNCT_SHIFT" def="292" use="318" covered="0"/><du var="ALPHA_SHIFT" def="292" use="342" covered="0"/><du var="MIXED_CHARS" def="292" use="366" covered="0"/><du var="PUNCT" def="292" use="370" covered="0"/><du var="PUNCT_CHARS" def="292" use="436" covered="0"/><du var="PUNCT_CHARS" def="292" use="399" covered="0"/><du var="subMode" def="292" use="298" target="454" covered="0"/><du var="subMode" def="292" use="298" target="301" covered="0"/><du var="subMode" def="292" use="298" target="332" covered="0"/><du var="subMode" def="292" use="298" target="365" covered="0"/><du var="subMode" def="292" use="298" target="398" covered="0"/><du var="subMode" def="292" use="298" target="417" covered="0"/><du var="subMode" def="292" use="298" target="434" covered="0"/><du var="subMode" def="292" use="383" covered="0"/><du var="subMode" def="292" use="349" covered="0"/><du var="subMode" def="292" use="341" covered="0"/><du var="subMode" def="292" use="317" covered="0"/><du var="priorToShiftMode" def="293" use="434" covered="0"/><du var="priorToShiftMode" def="293" use="417" covered="0"/><du var="i" def="294" use="295" target="460" covered="0"/><du var="i" def="294" use="295" target="296" covered="0"/><du var="i" def="294" use="296" covered="0"/><du var="i" def="294" use="445" covered="0"/><du var="i" def="294" use="406" covered="0"/><du var="i" def="294" use="387" covered="0"/><du var="i" def="294" use="354" covered="0"/><du var="i" def="294" use="321" covered="0"/><du var="i" def="294" use="458" covered="0"/><du var="subModeCh" def="296" use="435" target="436" covered="0"/><du var="subModeCh" def="296" use="435" target="438" covered="0"/><du var="subModeCh" def="296" use="438" target="454" covered="0"/><du var="subModeCh" def="296" use="438" target="440" covered="0"/><du var="subModeCh" def="296" use="438" target="448" covered="0"/><du var="subModeCh" def="296" use="438" target="445" covered="0"/><du var="subModeCh" def="296" use="436" covered="0"/><du var="subModeCh" def="296" use="418" target="419" covered="0"/><du var="subModeCh" def="296" use="418" target="421" covered="0"/><du var="subModeCh" def="296" use="421" target="430" covered="0"/><du var="subModeCh" def="296" use="421" target="423" covered="0"/><du var="subModeCh" def="296" use="421" target="426" covered="0"/><du var="subModeCh" def="296" use="419" covered="0"/><du var="subModeCh" def="296" use="398" target="399" covered="0"/><du var="subModeCh" def="296" use="398" target="401" covered="0"/><du var="subModeCh" def="296" use="401" target="413" covered="0"/><du var="subModeCh" def="296" use="401" target="403" covered="0"/><du var="subModeCh" def="296" use="401" target="409" covered="0"/><du var="subModeCh" def="296" use="401" target="406" covered="0"/><du var="subModeCh" def="296" use="399" covered="0"/><du var="subModeCh" def="296" use="365" target="366" covered="0"/><du var="subModeCh" def="296" use="365" target="368" covered="0"/><du var="subModeCh" def="296" use="368" target="394" covered="0"/><du var="subModeCh" def="296" use="368" target="370" covered="0"/><du var="subModeCh" def="296" use="368" target="373" covered="0"/><du var="subModeCh" def="296" use="368" target="376" covered="0"/><du var="subModeCh" def="296" use="368" target="379" covered="0"/><du var="subModeCh" def="296" use="368" target="383" covered="0"/><du var="subModeCh" def="296" use="368" target="390" covered="0"/><du var="subModeCh" def="296" use="368" target="387" covered="0"/><du var="subModeCh" def="296" use="366" covered="0"/><du var="subModeCh" def="296" use="332" target="333" covered="0"/><du var="subModeCh" def="296" use="332" target="335" covered="0"/><du var="subModeCh" def="296" use="335" target="361" covered="0"/><du var="subModeCh" def="296" use="335" target="337" covered="0"/><du var="subModeCh" def="296" use="335" target="341" covered="0"/><du var="subModeCh" def="296" use="335" target="345" covered="0"/><du var="subModeCh" def="296" use="335" target="349" covered="0"/><du var="subModeCh" def="296" use="335" target="357" covered="0"/><du var="subModeCh" def="296" use="335" target="354" covered="0"/><du var="subModeCh" def="296" use="333" covered="0"/><du var="subModeCh" def="296" use="301" target="303" covered="0"/><du var="subModeCh" def="296" use="301" target="305" covered="0"/><du var="subModeCh" def="296" use="305" target="328" covered="0"/><du var="subModeCh" def="296" use="305" target="307" covered="0"/><du var="subModeCh" def="296" use="305" target="310" covered="0"/><du var="subModeCh" def="296" use="305" target="313" covered="0"/><du var="subModeCh" def="296" use="305" target="317" covered="0"/><du var="subModeCh" def="296" use="305" target="324" covered="0"/><du var="subModeCh" def="296" use="305" target="321" covered="0"/><du var="subModeCh" def="296" use="303" covered="0"/><du var="ch" def="297" use="454" target="456" covered="0"/><du var="ch" def="297" use="454" target="458" covered="0"/><du var="ch" def="297" use="456" covered="0"/><du var="ch" def="303" use="454" target="456" covered="0"/><du var="ch" def="303" use="454" target="458" covered="0"/><du var="ch" def="303" use="456" covered="0"/><du var="ch" def="307" use="454" target="456" covered="0"/><du var="ch" def="307" use="454" target="458" covered="0"/><du var="ch" def="307" use="456" covered="0"/><du var="subMode" def="310" use="298" target="454" covered="0"/><du var="subMode" def="310" use="298" target="301" covered="0"/><du var="subMode" def="310" use="298" target="332" covered="0"/><du var="subMode" def="310" use="298" target="365" covered="0"/><du var="subMode" def="310" use="298" target="398" covered="0"/><du var="subMode" def="310" use="298" target="417" covered="0"/><du var="subMode" def="310" use="298" target="434" covered="0"/><du var="subMode" def="310" use="383" covered="0"/><du var="subMode" def="310" use="349" covered="0"/><du var="subMode" def="310" use="341" covered="0"/><du var="subMode" def="310" use="317" covered="0"/><du var="subMode" def="313" use="298" target="454" covered="0"/><du var="subMode" def="313" use="298" target="301" covered="0"/><du var="subMode" def="313" use="298" target="332" covered="0"/><du var="subMode" def="313" use="298" target="365" covered="0"/><du var="subMode" def="313" use="298" target="398" covered="0"/><du var="subMode" def="313" use="298" target="417" covered="0"/><du var="subMode" def="313" use="298" target="434" covered="0"/><du var="subMode" def="313" use="383" covered="0"/><du var="subMode" def="313" use="349" covered="0"/><du var="subMode" def="313" use="341" covered="0"/><du var="subMode" def="313" use="317" covered="0"/><du var="priorToShiftMode" def="317" use="434" covered="0"/><du var="priorToShiftMode" def="317" use="417" covered="0"/><du var="subMode" def="318" use="298" target="454" covered="0"/><du var="subMode" def="318" use="298" target="301" covered="0"/><du var="subMode" def="318" use="298" target="332" covered="0"/><du var="subMode" def="318" use="298" target="365" covered="0"/><du var="subMode" def="318" use="298" target="398" covered="0"/><du var="subMode" def="318" use="298" target="417" covered="0"/><du var="subMode" def="318" use="298" target="434" covered="0"/><du var="subMode" def="318" use="383" covered="0"/><du var="subMode" def="318" use="349" covered="0"/><du var="subMode" def="318" use="341" covered="0"/><du var="subMode" def="318" use="317" covered="0"/><du var="subMode" def="324" use="298" target="454" covered="0"/><du var="subMode" def="324" use="298" target="301" covered="0"/><du var="subMode" def="324" use="298" target="332" covered="0"/><du var="subMode" def="324" use="298" target="365" covered="0"/><du var="subMode" def="324" use="298" target="398" covered="0"/><du var="subMode" def="324" use="298" target="417" covered="0"/><du var="subMode" def="324" use="298" target="434" covered="0"/><du var="subMode" def="324" use="383" covered="0"/><du var="subMode" def="324" use="349" covered="0"/><du var="subMode" def="324" use="341" covered="0"/><du var="subMode" def="324" use="317" covered="0"/><du var="ch" def="333" use="454" target="456" covered="0"/><du var="ch" def="333" use="454" target="458" covered="0"/><du var="ch" def="333" use="456" covered="0"/><du var="ch" def="337" use="454" target="456" covered="0"/><du var="ch" def="337" use="454" target="458" covered="0"/><du var="ch" def="337" use="456" covered="0"/><du var="priorToShiftMode" def="341" use="434" covered="0"/><du var="priorToShiftMode" def="341" use="417" covered="0"/><du var="subMode" def="342" use="298" target="454" covered="0"/><du var="subMode" def="342" use="298" target="301" covered="0"/><du var="subMode" def="342" use="298" target="332" covered="0"/><du var="subMode" def="342" use="298" target="365" covered="0"/><du var="subMode" def="342" use="298" target="398" covered="0"/><du var="subMode" def="342" use="298" target="417" covered="0"/><du var="subMode" def="342" use="298" target="434" covered="0"/><du var="subMode" def="342" use="383" covered="0"/><du var="subMode" def="342" use="349" covered="0"/><du var="subMode" def="342" use="341" covered="0"/><du var="subMode" def="342" use="317" covered="0"/><du var="subMode" def="345" use="298" target="454" covered="0"/><du var="subMode" def="345" use="298" target="301" covered="0"/><du var="subMode" def="345" use="298" target="332" covered="0"/><du var="subMode" def="345" use="298" target="365" covered="0"/><du var="subMode" def="345" use="298" target="398" covered="0"/><du var="subMode" def="345" use="298" target="417" covered="0"/><du var="subMode" def="345" use="298" target="434" covered="0"/><du var="subMode" def="345" use="383" covered="0"/><du var="subMode" def="345" use="349" covered="0"/><du var="subMode" def="345" use="341" covered="0"/><du var="subMode" def="345" use="317" covered="0"/><du var="priorToShiftMode" def="349" use="434" covered="0"/><du var="priorToShiftMode" def="349" use="417" covered="0"/><du var="subMode" def="350" use="298" target="454" covered="0"/><du var="subMode" def="350" use="298" target="301" covered="0"/><du var="subMode" def="350" use="298" target="332" covered="0"/><du var="subMode" def="350" use="298" target="365" covered="0"/><du var="subMode" def="350" use="298" target="398" covered="0"/><du var="subMode" def="350" use="298" target="417" covered="0"/><du var="subMode" def="350" use="298" target="434" covered="0"/><du var="subMode" def="350" use="383" covered="0"/><du var="subMode" def="350" use="349" covered="0"/><du var="subMode" def="350" use="341" covered="0"/><du var="subMode" def="350" use="317" covered="0"/><du var="subMode" def="357" use="298" target="454" covered="0"/><du var="subMode" def="357" use="298" target="301" covered="0"/><du var="subMode" def="357" use="298" target="332" covered="0"/><du var="subMode" def="357" use="298" target="365" covered="0"/><du var="subMode" def="357" use="298" target="398" covered="0"/><du var="subMode" def="357" use="298" target="417" covered="0"/><du var="subMode" def="357" use="298" target="434" covered="0"/><du var="subMode" def="357" use="383" covered="0"/><du var="subMode" def="357" use="349" covered="0"/><du var="subMode" def="357" use="341" covered="0"/><du var="subMode" def="357" use="317" covered="0"/><du var="ch" def="366" use="454" target="456" covered="0"/><du var="ch" def="366" use="454" target="458" covered="0"/><du var="ch" def="366" use="456" covered="0"/><du var="subMode" def="370" use="298" target="454" covered="0"/><du var="subMode" def="370" use="298" target="301" covered="0"/><du var="subMode" def="370" use="298" target="332" covered="0"/><du var="subMode" def="370" use="298" target="365" covered="0"/><du var="subMode" def="370" use="298" target="398" covered="0"/><du var="subMode" def="370" use="298" target="417" covered="0"/><du var="subMode" def="370" use="298" target="434" covered="0"/><du var="subMode" def="370" use="383" covered="0"/><du var="subMode" def="370" use="349" covered="0"/><du var="subMode" def="370" use="341" covered="0"/><du var="subMode" def="370" use="317" covered="0"/><du var="ch" def="373" use="454" target="456" covered="0"/><du var="ch" def="373" use="454" target="458" covered="0"/><du var="ch" def="373" use="456" covered="0"/><du var="subMode" def="376" use="298" target="454" covered="0"/><du var="subMode" def="376" use="298" target="301" covered="0"/><du var="subMode" def="376" use="298" target="332" covered="0"/><du var="subMode" def="376" use="298" target="365" covered="0"/><du var="subMode" def="376" use="298" target="398" covered="0"/><du var="subMode" def="376" use="298" target="417" covered="0"/><du var="subMode" def="376" use="298" target="434" covered="0"/><du var="subMode" def="376" use="383" covered="0"/><du var="subMode" def="376" use="349" covered="0"/><du var="subMode" def="376" use="341" covered="0"/><du var="subMode" def="376" use="317" covered="0"/><du var="subMode" def="379" use="298" target="454" covered="0"/><du var="subMode" def="379" use="298" target="301" covered="0"/><du var="subMode" def="379" use="298" target="332" covered="0"/><du var="subMode" def="379" use="298" target="365" covered="0"/><du var="subMode" def="379" use="298" target="398" covered="0"/><du var="subMode" def="379" use="298" target="417" covered="0"/><du var="subMode" def="379" use="298" target="434" covered="0"/><du var="subMode" def="379" use="383" covered="0"/><du var="subMode" def="379" use="349" covered="0"/><du var="subMode" def="379" use="341" covered="0"/><du var="subMode" def="379" use="317" covered="0"/><du var="priorToShiftMode" def="383" use="434" covered="0"/><du var="priorToShiftMode" def="383" use="417" covered="0"/><du var="subMode" def="384" use="298" target="454" covered="0"/><du var="subMode" def="384" use="298" target="301" covered="0"/><du var="subMode" def="384" use="298" target="332" covered="0"/><du var="subMode" def="384" use="298" target="365" covered="0"/><du var="subMode" def="384" use="298" target="398" covered="0"/><du var="subMode" def="384" use="298" target="417" covered="0"/><du var="subMode" def="384" use="298" target="434" covered="0"/><du var="subMode" def="384" use="383" covered="0"/><du var="subMode" def="384" use="349" covered="0"/><du var="subMode" def="384" use="341" covered="0"/><du var="subMode" def="384" use="317" covered="0"/><du var="subMode" def="390" use="298" target="454" covered="0"/><du var="subMode" def="390" use="298" target="301" covered="0"/><du var="subMode" def="390" use="298" target="332" covered="0"/><du var="subMode" def="390" use="298" target="365" covered="0"/><du var="subMode" def="390" use="298" target="398" covered="0"/><du var="subMode" def="390" use="298" target="417" covered="0"/><du var="subMode" def="390" use="298" target="434" covered="0"/><du var="subMode" def="390" use="383" covered="0"/><du var="subMode" def="390" use="349" covered="0"/><du var="subMode" def="390" use="341" covered="0"/><du var="subMode" def="390" use="317" covered="0"/><du var="ch" def="399" use="454" target="456" covered="0"/><du var="ch" def="399" use="454" target="458" covered="0"/><du var="ch" def="399" use="456" covered="0"/><du var="subMode" def="403" use="298" target="454" covered="0"/><du var="subMode" def="403" use="298" target="301" covered="0"/><du var="subMode" def="403" use="298" target="332" covered="0"/><du var="subMode" def="403" use="298" target="365" covered="0"/><du var="subMode" def="403" use="298" target="398" covered="0"/><du var="subMode" def="403" use="298" target="417" covered="0"/><du var="subMode" def="403" use="298" target="434" covered="0"/><du var="subMode" def="403" use="383" covered="0"/><du var="subMode" def="403" use="349" covered="0"/><du var="subMode" def="403" use="341" covered="0"/><du var="subMode" def="403" use="317" covered="0"/><du var="subMode" def="409" use="298" target="454" covered="0"/><du var="subMode" def="409" use="298" target="301" covered="0"/><du var="subMode" def="409" use="298" target="332" covered="0"/><du var="subMode" def="409" use="298" target="365" covered="0"/><du var="subMode" def="409" use="298" target="398" covered="0"/><du var="subMode" def="409" use="298" target="417" covered="0"/><du var="subMode" def="409" use="298" target="434" covered="0"/><du var="subMode" def="409" use="383" covered="0"/><du var="subMode" def="409" use="349" covered="0"/><du var="subMode" def="409" use="341" covered="0"/><du var="subMode" def="409" use="317" covered="0"/><du var="subMode" def="417" use="298" target="454" covered="0"/><du var="subMode" def="417" use="298" target="301" covered="0"/><du var="subMode" def="417" use="298" target="332" covered="0"/><du var="subMode" def="417" use="298" target="365" covered="0"/><du var="subMode" def="417" use="298" target="398" covered="0"/><du var="subMode" def="417" use="298" target="417" covered="0"/><du var="subMode" def="417" use="298" target="434" covered="0"/><du var="subMode" def="417" use="383" covered="0"/><du var="subMode" def="417" use="349" covered="0"/><du var="subMode" def="417" use="341" covered="0"/><du var="subMode" def="417" use="317" covered="0"/><du var="ch" def="419" use="454" target="456" covered="0"/><du var="ch" def="419" use="454" target="458" covered="0"/><du var="ch" def="419" use="456" covered="0"/><du var="ch" def="423" use="454" target="456" covered="0"/><du var="ch" def="423" use="454" target="458" covered="0"/><du var="ch" def="423" use="456" covered="0"/><du var="subMode" def="426" use="298" target="454" covered="0"/><du var="subMode" def="426" use="298" target="301" covered="0"/><du var="subMode" def="426" use="298" target="332" covered="0"/><du var="subMode" def="426" use="298" target="365" covered="0"/><du var="subMode" def="426" use="298" target="398" covered="0"/><du var="subMode" def="426" use="298" target="417" covered="0"/><du var="subMode" def="426" use="298" target="434" covered="0"/><du var="subMode" def="426" use="383" covered="0"/><du var="subMode" def="426" use="349" covered="0"/><du var="subMode" def="426" use="341" covered="0"/><du var="subMode" def="426" use="317" covered="0"/><du var="subMode" def="434" use="298" target="454" covered="0"/><du var="subMode" def="434" use="298" target="301" covered="0"/><du var="subMode" def="434" use="298" target="332" covered="0"/><du var="subMode" def="434" use="298" target="365" covered="0"/><du var="subMode" def="434" use="298" target="398" covered="0"/><du var="subMode" def="434" use="298" target="417" covered="0"/><du var="subMode" def="434" use="298" target="434" covered="0"/><du var="subMode" def="434" use="383" covered="0"/><du var="subMode" def="434" use="349" covered="0"/><du var="subMode" def="434" use="341" covered="0"/><du var="subMode" def="434" use="317" covered="0"/><du var="ch" def="436" use="454" target="456" covered="0"/><du var="ch" def="436" use="454" target="458" covered="0"/><du var="ch" def="436" use="456" covered="0"/><du var="subMode" def="440" use="298" target="454" covered="0"/><du var="subMode" def="440" use="298" target="301" covered="0"/><du var="subMode" def="440" use="298" target="332" covered="0"/><du var="subMode" def="440" use="298" target="365" covered="0"/><du var="subMode" def="440" use="298" target="398" covered="0"/><du var="subMode" def="440" use="298" target="417" covered="0"/><du var="subMode" def="440" use="298" target="434" covered="0"/><du var="subMode" def="440" use="383" covered="0"/><du var="subMode" def="440" use="349" covered="0"/><du var="subMode" def="440" use="341" covered="0"/><du var="subMode" def="440" use="317" covered="0"/><du var="subMode" def="448" use="298" target="454" covered="0"/><du var="subMode" def="448" use="298" target="301" covered="0"/><du var="subMode" def="448" use="298" target="332" covered="0"/><du var="subMode" def="448" use="298" target="365" covered="0"/><du var="subMode" def="448" use="298" target="398" covered="0"/><du var="subMode" def="448" use="298" target="417" covered="0"/><du var="subMode" def="448" use="298" target="434" covered="0"/><du var="subMode" def="448" use="383" covered="0"/><du var="subMode" def="448" use="349" covered="0"/><du var="subMode" def="448" use="341" covered="0"/><du var="subMode" def="448" use="317" covered="0"/><du var="i" def="458" use="295" target="460" covered="0"/><du var="i" def="458" use="295" target="296" covered="0"/><du var="i" def="458" use="296" covered="0"/><du var="i" def="458" use="445" covered="0"/><du var="i" def="458" use="406" covered="0"/><du var="i" def="458" use="387" covered="0"/><du var="i" def="458" use="354" covered="0"/><du var="i" def="458" use="321" covered="0"/><du var="i" def="458" use="458" covered="0"/><counter type="DU" missed="378" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="byteCompaction" desc="(I[ILjava/nio/charset/Charset;ILjava/lang/StringBuilder;)I"><du var="mode" def="479" use="484" target="571" covered="0"/><du var="mode" def="479" use="484" target="489" covered="0"/><du var="mode" def="479" use="484" target="539" covered="0"/><du var="codewords" def="479" use="539" target="539" covered="0"/><du var="codewords" def="479" use="539" target="571" covered="0"/><du var="codewords" def="479" use="540" covered="0"/><du var="codewords" def="479" use="490" covered="0"/><du var="codewords" def="479" use="491" target="491" covered="0"/><du var="codewords" def="479" use="491" target="523" covered="0"/><du var="codewords" def="479" use="523" target="523" covered="0"/><du var="codewords" def="479" use="523" target="530" covered="0"/><du var="codewords" def="479" use="495" covered="0"/><du var="encoding" def="479" use="571" covered="0"/><du var="codeIndex" def="479" use="539" target="539" covered="0"/><du var="codeIndex" def="479" use="539" target="571" covered="0"/><du var="codeIndex" def="479" use="540" covered="0"/><du var="codeIndex" def="479" use="490" covered="0"/><du var="codeIndex" def="479" use="572" covered="0"/><du var="result" def="479" use="571" covered="0"/><du var="decodedBytes" def="479" use="563" covered="0"/><du var="decodedBytes" def="479" use="531" covered="0"/><du var="decodedBytes" def="479" use="513" covered="0"/><du var="decodedBytes" def="479" use="571" covered="0"/><du var="count" def="480" use="559" target="559" covered="0"/><du var="count" def="480" use="559" target="539" covered="0"/><du var="count" def="480" use="559" target="562" covered="0"/><du var="count" def="480" use="559" target="539" covered="0"/><du var="count" def="480" use="542" covered="0"/><du var="count" def="480" use="530" target="534" covered="0"/><du var="count" def="480" use="530" target="531" covered="0"/><du var="count" def="480" use="524" covered="0"/><du var="count" def="480" use="492" covered="0"/><du var="value" def="481" use="563" covered="0"/><du var="value" def="481" use="544" covered="0"/><du var="value" def="481" use="494" covered="0"/><du var="end" def="482" use="539" target="571" covered="0"/><du var="end" def="482" use="539" target="540" covered="0"/><du var="end" def="482" use="491" target="523" covered="0"/><du var="end" def="482" use="491" target="492" covered="0"/><du var="byteCompactedCodewords" def="489" use="531" covered="0"/><du var="byteCompactedCodewords" def="489" use="524" covered="0"/><du var="byteCompactedCodewords" def="489" use="492" covered="0"/><du var="codeIndex" def="490" use="491" target="491" covered="0"/><du var="codeIndex" def="490" use="491" target="523" covered="0"/><du var="codeIndex" def="490" use="523" target="523" covered="0"/><du var="codeIndex" def="490" use="523" target="530" covered="0"/><du var="codeIndex" def="490" use="572" covered="0"/><du var="codeIndex" def="490" use="495" covered="0"/><du var="nextCode" def="490" use="523" target="524" covered="0"/><du var="nextCode" def="490" use="523" target="530" covered="0"/><du var="nextCode" def="490" use="524" covered="0"/><du var="nextCode" def="490" use="492" covered="0"/><du var="nextCode" def="490" use="494" covered="0"/><du var="count" def="492" use="530" target="534" covered="0"/><du var="count" def="492" use="530" target="531" covered="0"/><du var="count" def="492" use="524" covered="0"/><du var="count" def="492" use="492" covered="0"/><du var="count" def="492" use="509" target="509" covered="0"/><du var="count" def="492" use="509" target="491" covered="0"/><du var="count" def="492" use="509" target="512" covered="0"/><du var="count" def="492" use="509" target="491" covered="0"/><du var="value" def="494" use="494" covered="0"/><du var="value" def="494" use="513" covered="0"/><du var="codeIndex" def="495" use="505" covered="0"/><du var="codeIndex" def="495" use="491" target="491" covered="0"/><du var="codeIndex" def="495" use="491" target="523" covered="0"/><du var="codeIndex" def="495" use="523" target="523" covered="0"/><du var="codeIndex" def="495" use="523" target="530" covered="0"/><du var="codeIndex" def="495" use="572" covered="0"/><du var="codeIndex" def="495" use="495" covered="0"/><du var="nextCode" def="495" use="497" target="509" covered="0"/><du var="nextCode" def="495" use="497" target="505" covered="0"/><du var="nextCode" def="495" use="523" target="524" covered="0"/><du var="nextCode" def="495" use="523" target="530" covered="0"/><du var="nextCode" def="495" use="524" covered="0"/><du var="nextCode" def="495" use="492" covered="0"/><du var="nextCode" def="495" use="494" covered="0"/><du var="codeIndex" def="505" use="491" target="491" covered="0"/><du var="codeIndex" def="505" use="491" target="523" covered="0"/><du var="codeIndex" def="505" use="523" target="523" covered="0"/><du var="codeIndex" def="505" use="523" target="530" covered="0"/><du var="codeIndex" def="505" use="572" covered="0"/><du var="codeIndex" def="505" use="495" covered="0"/><du var="end" def="506" use="491" target="523" covered="0"/><du var="end" def="506" use="491" target="492" covered="0"/><du var="j" def="512" use="512" target="515" covered="0"/><du var="j" def="512" use="512" target="513" covered="0"/><du var="j" def="512" use="513" covered="0"/><du var="j" def="512" use="512" covered="0"/><du var="j" def="512" use="512" target="515" covered="0"/><du var="j" def="512" use="512" target="513" covered="0"/><du var="j" def="512" use="513" covered="0"/><du var="j" def="512" use="512" covered="0"/><du var="value" def="515" use="494" covered="0"/><du var="count" def="516" use="530" target="534" covered="0"/><du var="count" def="516" use="530" target="531" covered="0"/><du var="count" def="516" use="524" covered="0"/><du var="count" def="516" use="492" covered="0"/><du var="count" def="524" use="530" target="534" covered="0"/><du var="count" def="524" use="530" target="531" covered="0"/><du var="i" def="530" use="530" target="534" covered="0"/><du var="i" def="530" use="530" target="531" covered="0"/><du var="i" def="530" use="531" covered="0"/><du var="i" def="530" use="530" covered="0"/><du var="i" def="530" use="530" target="534" covered="0"/><du var="i" def="530" use="530" target="531" covered="0"/><du var="i" def="530" use="531" covered="0"/><du var="i" def="530" use="530" covered="0"/><du var="codeIndex" def="540" use="554" covered="0"/><du var="codeIndex" def="540" use="539" target="539" covered="0"/><du var="codeIndex" def="540" use="539" target="571" covered="0"/><du var="codeIndex" def="540" use="572" covered="0"/><du var="codeIndex" def="540" use="540" covered="0"/><du var="code" def="540" use="541" target="542" covered="0"/><du var="code" def="540" use="541" target="546" covered="0"/><du var="code" def="540" use="546" target="559" covered="0"/><du var="code" def="540" use="546" target="554" covered="0"/><du var="code" def="540" use="544" covered="0"/><du var="count" def="542" use="559" target="559" covered="0"/><du var="count" def="542" use="559" target="539" covered="0"/><du var="count" def="542" use="542" covered="0"/><du var="count" def="542" use="559" target="562" covered="0"/><du var="count" def="542" use="559" target="539" covered="0"/><du var="value" def="544" use="544" covered="0"/><du var="value" def="544" use="563" covered="0"/><du var="codeIndex" def="554" use="539" target="539" covered="0"/><du var="codeIndex" def="554" use="539" target="571" covered="0"/><du var="codeIndex" def="554" use="572" covered="0"/><du var="codeIndex" def="554" use="540" covered="0"/><du var="end" def="555" use="539" target="571" covered="0"/><du var="end" def="555" use="539" target="540" covered="0"/><du var="j" def="562" use="562" target="565" covered="0"/><du var="j" def="562" use="562" target="563" covered="0"/><du var="j" def="562" use="563" covered="0"/><du var="j" def="562" use="562" covered="0"/><du var="j" def="562" use="562" target="565" covered="0"/><du var="j" def="562" use="562" target="563" covered="0"/><du var="j" def="562" use="563" covered="0"/><du var="j" def="562" use="562" covered="0"/><du var="value" def="565" use="563" covered="0"/><du var="value" def="565" use="544" covered="0"/><du var="count" def="566" use="559" target="559" covered="0"/><du var="count" def="566" use="559" target="539" covered="0"/><du var="count" def="566" use="559" target="562" covered="0"/><du var="count" def="566" use="559" target="539" covered="0"/><du var="count" def="566" use="542" covered="0"/><counter type="DU" missed="146" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="numericCompaction" desc="([IILjava/lang/StringBuilder;)I"><du var="codewords" def="584" use="589" target="589" covered="0"/><du var="codewords" def="584" use="589" target="624" covered="0"/><du var="codewords" def="584" use="590" covered="0"/><du var="codewords" def="584" use="591" target="592" covered="0"/><du var="codewords" def="584" use="591" target="594" covered="0"/><du var="codeIndex" def="584" use="589" target="589" covered="0"/><du var="codeIndex" def="584" use="589" target="624" covered="0"/><du var="codeIndex" def="584" use="624" covered="0"/><du var="codeIndex" def="584" use="590" covered="0"/><du var="result" def="584" use="619" covered="0"/><du var="count" def="584" use="610" target="611" covered="0"/><du var="count" def="584" use="610" target="617" covered="0"/><du var="count" def="584" use="617" target="618" covered="0"/><du var="count" def="584" use="617" target="589" covered="0"/><du var="count" def="584" use="618" covered="0"/><du var="count" def="584" use="595" covered="0"/><du var="count" def="584" use="596" covered="0"/><du var="end" def="585" use="589" target="624" covered="0"/><du var="end" def="585" use="589" target="590" covered="0"/><du var="end" def="585" use="612" target="617" covered="0"/><du var="end" def="585" use="612" target="589" covered="0"/><du var="numericCodewords" def="587" use="618" covered="0"/><du var="numericCodewords" def="587" use="595" covered="0"/><du var="codeIndex" def="590" use="591" target="592" covered="0"/><du var="codeIndex" def="590" use="591" target="594" covered="0"/><du var="codeIndex" def="590" use="605" covered="0"/><du var="codeIndex" def="590" use="589" target="589" covered="0"/><du var="codeIndex" def="590" use="589" target="624" covered="0"/><du var="codeIndex" def="590" use="624" covered="0"/><du var="codeIndex" def="590" use="590" covered="0"/><du var="code" def="590" use="594" target="595" covered="0"/><du var="code" def="590" use="594" target="598" covered="0"/><du var="code" def="590" use="598" target="610" covered="0"/><du var="code" def="590" use="598" target="605" covered="0"/><du var="code" def="590" use="611" target="612" covered="0"/><du var="code" def="590" use="611" target="617" covered="0"/><du var="code" def="590" use="595" covered="0"/><du var="end" def="592" use="589" target="624" covered="0"/><du var="end" def="592" use="589" target="590" covered="0"/><du var="end" def="592" use="612" target="617" covered="0"/><du var="end" def="592" use="612" target="589" covered="0"/><du var="count" def="596" use="610" target="611" covered="0"/><du var="count" def="596" use="610" target="617" covered="0"/><du var="count" def="596" use="617" target="618" covered="0"/><du var="count" def="596" use="617" target="589" covered="0"/><du var="count" def="596" use="595" covered="0"/><du var="count" def="596" use="596" covered="0"/><du var="count" def="596" use="618" covered="0"/><du var="codeIndex" def="605" use="589" target="589" covered="0"/><du var="codeIndex" def="605" use="589" target="624" covered="0"/><du var="codeIndex" def="605" use="624" covered="0"/><du var="codeIndex" def="605" use="590" covered="0"/><du var="end" def="606" use="589" target="624" covered="0"/><du var="end" def="606" use="589" target="590" covered="0"/><du var="end" def="606" use="612" target="617" covered="0"/><du var="end" def="606" use="612" target="589" covered="0"/><du var="count" def="620" use="610" target="611" covered="0"/><du var="count" def="620" use="610" target="617" covered="0"/><du var="count" def="620" use="617" target="618" covered="0"/><du var="count" def="620" use="617" target="589" covered="0"/><du var="count" def="620" use="618" covered="0"/><du var="count" def="620" use="595" covered="0"/><du var="count" def="620" use="596" covered="0"/><counter type="DU" missed="63" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeBase900toBase10" desc="([II)Ljava/lang/String;"><du var="codewords" def="671" use="673" covered="0"/><du var="count" def="671" use="672" target="675" covered="0"/><du var="count" def="671" use="672" target="673" covered="0"/><du var="count" def="671" use="673" covered="0"/><du var="EXP900" def="671" use="673" covered="0"/><du var="result" def="671" use="673" covered="0"/><du var="result" def="671" use="675" covered="0"/><du var="i" def="672" use="672" target="675" covered="0"/><du var="i" def="672" use="672" target="673" covered="0"/><du var="i" def="672" use="673" covered="0"/><du var="i" def="672" use="672" covered="0"/><du var="result" def="673" use="673" covered="0"/><du var="result" def="673" use="675" covered="0"/><du var="i" def="672" use="672" target="675" covered="0"/><du var="i" def="672" use="672" target="673" covered="0"/><du var="i" def="672" use="673" covered="0"/><du var="i" def="672" use="672" covered="0"/><du var="resultString" def="675" use="676" target="677" covered="0"/><du var="resultString" def="675" use="676" target="679" covered="0"/><du var="resultString" def="675" use="679" covered="0"/><counter type="DU" missed="20" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="$SWITCH_TABLE$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode" desc="()[I"><du var="$SWITCH_TABLE$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode" def="35" use="35" target="35" covered="0"/><du var="$SWITCH_TABLE$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode" def="35" use="35" target="35" covered="0"/><du var="$SWITCH_TABLE$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode" def="35" use="35" covered="0"/><du var="ALPHA" def="35" use="35" covered="0"/><du var="ALPHA_SHIFT" def="35" use="35" covered="0"/><du var="LOWER" def="35" use="35" covered="0"/><du var="MIXED" def="35" use="35" covered="0"/><du var="PUNCT" def="35" use="35" covered="0"/><du var="PUNCT_SHIFT" def="35" use="35" covered="0"/><counter type="DU" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="855" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/pdf417/decoder/Codeword"><method name="isValidRowNumber" desc="(I)Z"><du var="this" def="44" use="44" target="44" covered="0"/><du var="this" def="44" use="44" target="44" covered="0"/><du var="rowNumber" def="44" use="44" target="44" covered="0"/><du var="rowNumber" def="44" use="44" target="44" covered="0"/><du var="rowNumber" def="44" use="44" target="44" covered="0"/><du var="rowNumber" def="44" use="44" target="44" covered="0"/><du var="this.bucket" def="44" use="44" target="44" covered="0"/><du var="this.bucket" def="44" use="44" target="44" covered="0"/><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/pdf417/decoder/DetectionResultColumn"><method name="getCodewordNearby" desc="(I)Lcom/google/zxing/pdf417/decoder/Codeword;"><du var="this" def="37" use="42" covered="0"/><du var="this" def="37" use="49" covered="0"/><du var="this" def="37" use="50" target="51" covered="0"/><du var="this" def="37" use="50" target="41" covered="0"/><du var="this" def="37" use="51" covered="0"/><du var="this" def="37" use="44" covered="0"/><du var="imageRow" def="37" use="42" covered="0"/><du var="imageRow" def="37" use="49" covered="0"/><du var="this.codewords" def="37" use="50" target="51" covered="0"/><du var="this.codewords" def="37" use="50" target="41" covered="0"/><du var="this.codewords" def="37" use="51" covered="0"/><du var="this.codewords" def="37" use="44" covered="0"/><du var="codeword" def="37" use="38" target="39" covered="0"/><du var="codeword" def="37" use="38" target="41" covered="0"/><du var="codeword" def="37" use="39" covered="0"/><du var="i" def="41" use="41" target="57" covered="0"/><du var="i" def="41" use="41" target="42" covered="0"/><du var="i" def="41" use="42" covered="0"/><du var="i" def="41" use="49" covered="0"/><du var="i" def="41" use="41" covered="0"/><du var="nearImageRow" def="42" use="43" target="44" covered="0"/><du var="nearImageRow" def="42" use="43" target="49" covered="0"/><du var="nearImageRow" def="42" use="44" covered="0"/><du var="codeword" def="44" use="45" target="46" covered="0"/><du var="codeword" def="44" use="45" target="49" covered="0"/><du var="codeword" def="44" use="46" covered="0"/><du var="nearImageRow" def="49" use="50" target="51" covered="0"/><du var="nearImageRow" def="49" use="50" target="41" covered="0"/><du var="nearImageRow" def="49" use="51" covered="0"/><du var="codeword" def="51" use="52" target="53" covered="0"/><du var="codeword" def="51" use="52" target="41" covered="0"/><du var="codeword" def="51" use="53" covered="0"/><du var="i" def="41" use="41" target="57" covered="0"/><du var="i" def="41" use="41" target="42" covered="0"/><du var="i" def="41" use="42" covered="0"/><du var="i" def="41" use="49" covered="0"/><du var="i" def="41" use="41" covered="0"/><counter type="DU" missed="37" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><du var="formatter" def="82" use="89" covered="0"/><du var="formatter" def="82" use="86" covered="0"/><du var="formatter" def="82" use="91" covered="0"/><du var="formatter" def="82" use="92" covered="0"/><du var="row" def="83" use="89" covered="0"/><du var="row" def="83" use="86" covered="0"/><du var="codeword" def="84" use="85" target="86" covered="0"/><du var="codeword" def="84" use="85" target="89" covered="0"/><du var="codeword" def="84" use="89" covered="0"/><du var="codeword" def="84" use="89" covered="0"/><du var="row" def="86" use="89" covered="0"/><du var="row" def="86" use="86" covered="0"/><du var="row" def="89" use="89" covered="0"/><du var="row" def="89" use="86" covered="0"/><counter type="DU" missed="25" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="62" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/pdf417/decoder/BarcodeValue"><method name="setValue" desc="(I)V"><du var="this" def="37" use="42" covered="0"/><du var="value" def="37" use="42" covered="0"/><du var="this.values" def="37" use="42" covered="0"/><du var="confidence" def="37" use="38" target="39" covered="0"/><du var="confidence" def="37" use="38" target="41" covered="0"/><du var="confidence" def="37" use="41" covered="0"/><du var="confidence" def="39" use="41" covered="0"/><counter type="DU" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()[I"><du var="maxConfidence" def="50" use="53" target="54" covered="0"/><du var="maxConfidence" def="50" use="53" target="57" covered="0"/><du var="maxConfidence" def="50" use="57" target="58" covered="0"/><du var="maxConfidence" def="50" use="57" target="52" covered="0"/><du var="result" def="51" use="58" covered="0"/><du var="result" def="51" use="55" covered="0"/><du var="result" def="51" use="56" covered="0"/><du var="result" def="51" use="61" covered="0"/><du var="entry" def="52" use="53" target="54" covered="0"/><du var="entry" def="52" use="53" target="57" covered="0"/><du var="entry" def="52" use="57" target="58" covered="0"/><du var="entry" def="52" use="57" target="52" covered="0"/><du var="entry" def="52" use="58" covered="0"/><du var="entry" def="52" use="54" covered="0"/><du var="entry" def="52" use="56" covered="0"/><du var="maxConfidence" def="54" use="53" target="54" covered="0"/><du var="maxConfidence" def="54" use="53" target="57" covered="0"/><du var="maxConfidence" def="54" use="57" target="58" covered="0"/><du var="maxConfidence" def="54" use="57" target="52" covered="0"/><counter type="DU" missed="22" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="29" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/pdf417/PDF417Common"><method name="toIntArray" desc="(Ljava/util/Collection;)[I"><du var="list" def="56" use="56" target="56" covered="0"/><du var="list" def="56" use="56" target="57" covered="0"/><du var="list" def="56" use="56" target="57" covered="0"/><du var="list" def="56" use="56" target="59" covered="0"/><du var="list" def="56" use="59" covered="0"/><du var="list" def="56" use="61" covered="0"/><du var="EMPTY_INT_ARRAY" def="56" use="57" covered="0"/><du var="result" def="59" use="62" covered="0"/><du var="result" def="59" use="64" covered="0"/><du var="i" def="60" use="62" covered="0"/><du var="i" def="62" use="62" covered="0"/><counter type="DU" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCodeword" desc="(I)I"><du var="CODEWORD_TABLE" def="72" use="76" covered="0"/><du var="i" def="72" use="73" target="74" covered="0"/><du var="i" def="72" use="73" target="76" covered="0"/><du var="i" def="72" use="76" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="18" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/pdf417/PDF417Reader"><method name="decode" desc="(Lcom/google/zxing/BinaryBitmap;Ljava/util/Map;)Lcom/google/zxing/Result;"><du var="result" def="61" use="62" target="62" covered="0"/><du var="result" def="61" use="62" target="63" covered="0"/><du var="result" def="61" use="62" target="62" covered="0"/><du var="result" def="61" use="62" target="63" covered="0"/><du var="result" def="61" use="62" target="63" covered="0"/><du var="result" def="61" use="62" target="65" covered="0"/><du var="result" def="61" use="65" covered="0"/><counter type="DU" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decode" desc="(Lcom/google/zxing/BinaryBitmap;Ljava/util/Map;Z)[Lcom/google/zxing/Result;"><du var="PDF_417" def="84" use="89" covered="0"/><du var="ERROR_CORRECTION_LEVEL" def="84" use="90" covered="0"/><du var="PDF417_EXTRA_METADATA" def="84" use="93" covered="0"/><du var="results" def="84" use="95" covered="0"/><du var="results" def="84" use="97" covered="0"/><du var="detectorResult" def="85" use="87" covered="0"/><du var="result" def="89" use="95" covered="0"/><du var="result" def="89" use="93" covered="0"/><du var="pdf417ResultMetadata" def="91" use="92" target="93" covered="0"/><du var="pdf417ResultMetadata" def="91" use="92" target="95" covered="0"/><du var="pdf417ResultMetadata" def="91" use="93" covered="0"/><counter type="DU" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxWidth" desc="(Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;)I"><du var="p1" def="101" use="101" target="101" covered="0"/><du var="p1" def="101" use="101" target="102" covered="0"/><du var="p1" def="101" use="104" covered="0"/><du var="p2" def="101" use="101" target="102" covered="0"/><du var="p2" def="101" use="101" target="104" covered="0"/><du var="p2" def="101" use="104" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinWidth" desc="(Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;)I"><du var="p1" def="108" use="108" target="108" covered="0"/><du var="p1" def="108" use="108" target="109" covered="0"/><du var="p1" def="108" use="111" covered="0"/><du var="p2" def="108" use="108" target="109" covered="0"/><du var="p2" def="108" use="108" target="111" covered="0"/><du var="p2" def="108" use="111" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="33" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/pdf417/detector/Detector"><method name="detect" desc="(Lcom/google/zxing/BinaryBitmap;Ljava/util/Map;Z)Lcom/google/zxing/pdf417/detector/PDF417DetectorResult;"><du var="multiple" def="79" use="85" covered="0"/><du var="bitMatrix" def="79" use="87" covered="0"/><du var="bitMatrix" def="79" use="83" covered="0"/><du var="barcodeCoordinates" def="81" use="82" target="83" covered="0"/><du var="barcodeCoordinates" def="81" use="82" target="87" covered="0"/><du var="barcodeCoordinates" def="81" use="87" covered="0"/><du var="bitMatrix" def="83" use="87" covered="0"/><du var="barcodeCoordinates" def="85" use="87" covered="0"/><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detect" desc="(ZLcom/google/zxing/common/BitMatrix;)Ljava/util/List;"><du var="multiple" def="98" use="127" target="128" covered="0"/><du var="multiple" def="98" use="127" target="132" covered="0"/><du var="bitMatrix" def="98" use="102" target="140" covered="0"/><du var="bitMatrix" def="98" use="102" target="103" covered="0"/><du var="bitMatrix" def="98" use="103" covered="0"/><du var="barcodeCoordinates" def="98" use="126" covered="0"/><du var="barcodeCoordinates" def="98" use="114" covered="0"/><du var="barcodeCoordinates" def="98" use="140" covered="0"/><du var="row" def="99" use="102" target="140" covered="0"/><du var="row" def="99" use="102" target="103" covered="0"/><du var="row" def="99" use="103" covered="0"/><du var="row" def="99" use="119" covered="0"/><du var="row" def="99" use="116" covered="0"/><du var="row" def="99" use="122" covered="0"/><du var="column" def="100" use="103" covered="0"/><du var="foundBarcodeInRow" def="101" use="106" target="108" covered="0"/><du var="foundBarcodeInRow" def="101" use="106" target="112" covered="0"/><du var="vertices" def="103" use="105" target="105" covered="0"/><du var="vertices" def="103" use="105" target="125" covered="0"/><du var="vertices" def="103" use="126" covered="0"/><du var="vertices" def="103" use="132" target="133" covered="0"/><du var="vertices" def="103" use="132" target="136" covered="0"/><du var="vertices" def="103" use="136" covered="0"/><du var="vertices" def="103" use="137" covered="0"/><du var="vertices" def="103" use="133" covered="0"/><du var="vertices" def="103" use="134" covered="0"/><du var="vertices" def="103" use="105" target="106" covered="0"/><du var="vertices" def="103" use="105" target="125" covered="0"/><du var="foundBarcodeInRow" def="112" use="106" target="108" covered="0"/><du var="foundBarcodeInRow" def="112" use="106" target="112" covered="0"/><du var="column" def="113" use="103" covered="0"/><du var="barcodeCoordinate" def="114" use="115" target="116" covered="0"/><du var="barcodeCoordinate" def="114" use="115" target="118" covered="0"/><du var="barcodeCoordinate" def="114" use="118" target="119" covered="0"/><du var="barcodeCoordinate" def="114" use="118" target="114" covered="0"/><du var="barcodeCoordinate" def="114" use="119" covered="0"/><du var="barcodeCoordinate" def="114" use="116" covered="0"/><du var="row" def="116" use="116" covered="0"/><du var="row" def="116" use="122" covered="0"/><du var="row" def="116" use="119" covered="0"/><du var="row" def="119" use="119" covered="0"/><du var="row" def="119" use="116" covered="0"/><du var="row" def="119" use="122" covered="0"/><du var="row" def="122" use="102" target="140" covered="0"/><du var="row" def="122" use="102" target="103" covered="0"/><du var="row" def="122" use="103" covered="0"/><du var="row" def="122" use="119" covered="0"/><du var="row" def="122" use="116" covered="0"/><du var="row" def="122" use="122" covered="0"/><du var="foundBarcodeInRow" def="125" use="106" target="108" covered="0"/><du var="foundBarcodeInRow" def="125" use="106" target="112" covered="0"/><du var="column" def="133" use="103" covered="0"/><du var="row" def="134" use="102" target="140" covered="0"/><du var="row" def="134" use="102" target="103" covered="0"/><du var="row" def="134" use="103" covered="0"/><du var="row" def="134" use="119" covered="0"/><du var="row" def="134" use="116" covered="0"/><du var="row" def="134" use="122" covered="0"/><du var="column" def="136" use="103" covered="0"/><du var="row" def="137" use="102" target="140" covered="0"/><du var="row" def="137" use="102" target="103" covered="0"/><du var="row" def="137" use="103" covered="0"/><du var="row" def="137" use="119" covered="0"/><du var="row" def="137" use="116" covered="0"/><du var="row" def="137" use="122" covered="0"/><counter type="DU" missed="68" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findVertices" desc="(Lcom/google/zxing/common/BitMatrix;II)[Lcom/google/zxing/ResultPoint;"><du var="matrix" def="159" use="170" covered="0"/><du var="startRow" def="159" use="170" covered="0"/><du var="startColumn" def="159" use="170" covered="0"/><du var="STOP_PATTERN" def="159" use="170" covered="0"/><du var="INDEXES_STOP_PATTERN" def="159" use="170" covered="0"/><du var="height" def="159" use="170" covered="0"/><du var="width" def="160" use="170" covered="0"/><du var="result" def="162" use="166" target="167" covered="0"/><du var="result" def="162" use="166" target="170" covered="0"/><du var="result" def="162" use="170" covered="0"/><du var="result" def="162" use="172" covered="0"/><du var="result" def="162" use="167" covered="0"/><du var="result" def="162" use="168" covered="0"/><du var="startColumn" def="167" use="170" covered="0"/><du var="startRow" def="168" use="170" covered="0"/><counter type="DU" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyToResult" desc="([Lcom/google/zxing/ResultPoint;[Lcom/google/zxing/ResultPoint;[I)V"><du var="result" def="176" use="177" covered="0"/><du var="tmpResult" def="176" use="177" covered="0"/><du var="destinationIndexes" def="176" use="176" target="179" covered="0"/><du var="destinationIndexes" def="176" use="176" target="177" covered="0"/><du var="destinationIndexes" def="176" use="177" covered="0"/><du var="i" def="176" use="176" target="179" covered="0"/><du var="i" def="176" use="176" target="177" covered="0"/><du var="i" def="176" use="177" covered="0"/><du var="i" def="176" use="176" covered="0"/><du var="i" def="176" use="176" target="179" covered="0"/><du var="i" def="176" use="176" target="177" covered="0"/><du var="i" def="176" use="177" covered="0"/><du var="i" def="176" use="176" covered="0"/><counter type="DU" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findRowsWithPattern" desc="(Lcom/google/zxing/common/BitMatrix;IIII[I)[Lcom/google/zxing/ResultPoint;"><du var="matrix" def="187" use="191" covered="0"/><du var="matrix" def="187" use="194" covered="0"/><du var="matrix" def="187" use="214" covered="0"/><du var="height" def="187" use="190" target="208" covered="0"/><du var="height" def="187" use="190" target="191" covered="0"/><du var="height" def="187" use="213" target="232" covered="0"/><du var="height" def="187" use="213" target="214" covered="0"/><du var="width" def="187" use="191" covered="0"/><du var="width" def="187" use="194" covered="0"/><du var="width" def="187" use="214" covered="0"/><du var="startRow" def="187" use="190" target="208" covered="0"/><du var="startRow" def="187" use="190" target="191" covered="0"/><du var="startRow" def="187" use="191" covered="0"/><du var="startRow" def="187" use="190" covered="0"/><du var="startRow" def="187" use="193" target="202" covered="0"/><du var="startRow" def="187" use="193" target="194" covered="0"/><du var="startRow" def="187" use="194" covered="0"/><du var="startRow" def="187" use="202" covered="0"/><du var="startRow" def="187" use="203" covered="0"/><du var="startRow" def="187" use="208" covered="0"/><du var="startRow" def="187" use="236" target="237" covered="0"/><du var="startRow" def="187" use="236" target="239" covered="0"/><du var="startColumn" def="187" use="191" covered="0"/><du var="startColumn" def="187" use="194" covered="0"/><du var="pattern" def="187" use="191" covered="0"/><du var="pattern" def="187" use="194" covered="0"/><du var="pattern" def="187" use="214" covered="0"/><du var="result" def="187" use="202" covered="0"/><du var="result" def="187" use="203" covered="0"/><du var="result" def="187" use="239" covered="0"/><du var="result" def="187" use="237" covered="0"/><du var="result" def="187" use="212" covered="0"/><du var="result" def="187" use="212" covered="0"/><du var="result" def="187" use="233" covered="0"/><du var="result" def="187" use="234" covered="0"/><du var="found" def="188" use="210" target="211" covered="0"/><du var="found" def="188" use="210" target="236" covered="0"/><du var="counters" def="189" use="191" covered="0"/><du var="counters" def="189" use="194" covered="0"/><du var="counters" def="189" use="214" covered="0"/><du var="loc" def="191" use="192" target="193" covered="0"/><du var="loc" def="191" use="192" target="190" covered="0"/><du var="loc" def="191" use="202" covered="0"/><du var="loc" def="191" use="203" covered="0"/><du var="startRow" def="194" use="198" covered="0"/><du var="startRow" def="194" use="193" target="202" covered="0"/><du var="startRow" def="194" use="193" target="194" covered="0"/><du var="startRow" def="194" use="194" covered="0"/><du var="startRow" def="194" use="202" covered="0"/><du var="startRow" def="194" use="203" covered="0"/><du var="startRow" def="194" use="208" covered="0"/><du var="startRow" def="194" use="236" target="237" covered="0"/><du var="startRow" def="194" use="236" target="239" covered="0"/><du var="previousRowLoc" def="194" use="195" target="196" covered="0"/><du var="previousRowLoc" def="194" use="195" target="198" covered="0"/><du var="previousRowLoc" def="194" use="196" covered="0"/><du var="loc" def="196" use="202" covered="0"/><du var="loc" def="196" use="203" covered="0"/><du var="startRow" def="198" use="202" covered="0"/><du var="startRow" def="198" use="203" covered="0"/><du var="startRow" def="198" use="208" covered="0"/><du var="startRow" def="198" use="236" target="237" covered="0"/><du var="startRow" def="198" use="236" target="239" covered="0"/><du var="found" def="204" use="210" target="211" covered="0"/><du var="found" def="204" use="210" target="236" covered="0"/><du var="startRow" def="190" use="190" target="208" covered="0"/><du var="startRow" def="190" use="190" target="191" covered="0"/><du var="startRow" def="190" use="191" covered="0"/><du var="startRow" def="190" use="190" covered="0"/><du var="startRow" def="190" use="193" target="202" covered="0"/><du var="startRow" def="190" use="193" target="194" covered="0"/><du var="startRow" def="190" use="194" covered="0"/><du var="startRow" def="190" use="202" covered="0"/><du var="startRow" def="190" use="203" covered="0"/><du var="startRow" def="190" use="208" covered="0"/><du var="startRow" def="190" use="236" target="237" covered="0"/><du var="startRow" def="190" use="236" target="239" covered="0"/><du var="stopRow" def="208" use="236" target="237" covered="0"/><du var="stopRow" def="208" use="236" target="239" covered="0"/><du var="stopRow" def="208" use="213" target="232" covered="0"/><du var="stopRow" def="208" use="213" target="214" covered="0"/><du var="stopRow" def="208" use="214" covered="0"/><du var="stopRow" def="208" use="213" covered="0"/><du var="stopRow" def="208" use="232" covered="0"/><du var="skippedRowCount" def="211" use="225" target="226" covered="0"/><du var="skippedRowCount" def="211" use="225" target="228" covered="0"/><du var="skippedRowCount" def="211" use="228" covered="0"/><du var="skippedRowCount" def="211" use="232" covered="0"/><du var="previousRowLoc" def="212" use="214" covered="0"/><du var="previousRowLoc" def="212" use="220" target="221" covered="0"/><du var="previousRowLoc" def="212" use="220" target="225" covered="0"/><du var="previousRowLoc" def="212" use="221" target="222" covered="0"/><du var="previousRowLoc" def="212" use="221" target="225" covered="0"/><du var="previousRowLoc" def="212" use="233" covered="0"/><du var="previousRowLoc" def="212" use="234" covered="0"/><du var="loc" def="214" use="219" target="220" covered="0"/><du var="loc" def="214" use="219" target="225" covered="0"/><du var="loc" def="214" use="220" target="221" covered="0"/><du var="loc" def="214" use="220" target="225" covered="0"/><du var="loc" def="214" use="221" target="222" covered="0"/><du var="loc" def="214" use="221" target="225" covered="0"/><du var="loc" def="214" use="222" covered="0"/><du var="previousRowLoc" def="222" use="214" covered="0"/><du var="previousRowLoc" def="222" use="220" target="221" covered="0"/><du var="previousRowLoc" def="222" use="220" target="225" covered="0"/><du var="previousRowLoc" def="222" use="221" target="222" covered="0"/><du var="previousRowLoc" def="222" use="221" target="225" covered="0"/><du var="previousRowLoc" def="222" use="233" covered="0"/><du var="previousRowLoc" def="222" use="234" covered="0"/><du var="skippedRowCount" def="223" use="225" target="226" covered="0"/><du var="skippedRowCount" def="223" use="225" target="228" covered="0"/><du var="skippedRowCount" def="223" use="228" covered="0"/><du var="skippedRowCount" def="223" use="232" covered="0"/><du var="skippedRowCount" def="228" use="225" target="226" covered="0"/><du var="skippedRowCount" def="228" use="225" target="228" covered="0"/><du var="skippedRowCount" def="228" use="228" covered="0"/><du var="skippedRowCount" def="228" use="232" covered="0"/><du var="stopRow" def="213" use="213" target="232" covered="0"/><du var="stopRow" def="213" use="213" target="214" covered="0"/><du var="stopRow" def="213" use="214" covered="0"/><du var="stopRow" def="213" use="213" covered="0"/><du var="stopRow" def="213" use="232" covered="0"/><du var="stopRow" def="232" use="236" target="237" covered="0"/><du var="stopRow" def="232" use="236" target="239" covered="0"/><counter type="DU" missed="124" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findGuardPattern" desc="(Lcom/google/zxing/common/BitMatrix;IIIZ[I[I)[I"><du var="matrix" def="259" use="264" target="264" covered="0"/><du var="matrix" def="259" use="264" target="267" covered="0"/><du var="matrix" def="259" use="271" covered="0"/><du var="row" def="259" use="264" target="264" covered="0"/><du var="row" def="259" use="264" target="267" covered="0"/><du var="row" def="259" use="271" covered="0"/><du var="width" def="259" use="270" target="291" covered="0"/><du var="width" def="259" use="270" target="271" covered="0"/><du var="whiteFirst" def="259" use="270" covered="0"/><du var="pattern" def="259" use="269" covered="0"/><du var="pattern" def="259" use="276" target="277" covered="0"/><du var="pattern" def="259" use="276" target="279" covered="0"/><du var="pattern" def="259" use="292" target="293" covered="0"/><du var="pattern" def="259" use="292" target="295" covered="0"/><du var="counters" def="259" use="287" covered="0"/><du var="counters" def="259" use="276" target="277" covered="0"/><du var="counters" def="259" use="276" target="279" covered="0"/><du var="counters" def="259" use="279" covered="0"/><du var="counters" def="259" use="280" covered="0"/><du var="counters" def="259" use="281" covered="0"/><du var="counters" def="259" use="282" covered="0"/><du var="counters" def="259" use="273" covered="0"/><du var="counters" def="259" use="292" target="293" covered="0"/><du var="counters" def="259" use="292" target="295" covered="0"/><du var="patternStart" def="260" use="264" target="264" covered="0"/><du var="patternStart" def="260" use="264" target="267" covered="0"/><du var="patternStart" def="260" use="267" covered="0"/><du var="patternStart" def="260" use="279" covered="0"/><du var="patternStart" def="260" use="277" covered="0"/><du var="patternStart" def="260" use="293" covered="0"/><du var="patternStart" def="260" use="264" target="264" covered="0"/><du var="patternStart" def="260" use="264" target="267" covered="0"/><du var="patternStart" def="260" use="265" covered="0"/><du var="pixelDrift" def="261" use="264" covered="0"/><du var="patternStart" def="265" use="264" target="264" covered="0"/><du var="patternStart" def="265" use="264" target="267" covered="0"/><du var="patternStart" def="265" use="267" covered="0"/><du var="patternStart" def="265" use="279" covered="0"/><du var="patternStart" def="265" use="277" covered="0"/><du var="patternStart" def="265" use="293" covered="0"/><du var="patternStart" def="265" use="264" target="264" covered="0"/><du var="patternStart" def="265" use="264" target="267" covered="0"/><du var="patternStart" def="265" use="265" covered="0"/><du var="pixelDrift" def="264" use="264" target="267" covered="0"/><du var="pixelDrift" def="264" use="264" target="265" covered="0"/><du var="pixelDrift" def="264" use="264" covered="0"/><du var="x" def="267" use="270" target="291" covered="0"/><du var="x" def="267" use="270" target="271" covered="0"/><du var="x" def="267" use="271" covered="0"/><du var="x" def="267" use="270" covered="0"/><du var="x" def="267" use="277" covered="0"/><du var="x" def="267" use="293" covered="0"/><du var="counterPosition" def="268" use="275" target="276" covered="0"/><du var="counterPosition" def="268" use="275" target="285" covered="0"/><du var="counterPosition" def="268" use="285" covered="0"/><du var="counterPosition" def="268" use="280" covered="0"/><du var="counterPosition" def="268" use="281" covered="0"/><du var="counterPosition" def="268" use="282" covered="0"/><du var="counterPosition" def="268" use="283" covered="0"/><du var="counterPosition" def="268" use="273" covered="0"/><du var="counterPosition" def="268" use="291" target="292" covered="0"/><du var="counterPosition" def="268" use="291" target="295" covered="0"/><du var="patternLength" def="269" use="275" target="276" covered="0"/><du var="patternLength" def="269" use="275" target="285" covered="0"/><du var="patternLength" def="269" use="291" target="292" covered="0"/><du var="patternLength" def="269" use="291" target="295" covered="0"/><du var="isWhite" def="270" use="272" target="273" covered="0"/><du var="isWhite" def="270" use="272" target="275" covered="0"/><du var="isWhite" def="270" use="288" target="288" covered="0"/><du var="isWhite" def="270" use="288" target="288" covered="0"/><du var="pixel" def="271" use="272" target="273" covered="0"/><du var="pixel" def="271" use="272" target="275" covered="0"/><du var="patternStart" def="279" use="279" covered="0"/><du var="patternStart" def="279" use="277" covered="0"/><du var="patternStart" def="279" use="293" covered="0"/><du var="counterPosition" def="283" use="287" covered="0"/><du var="counterPosition" def="283" use="275" target="276" covered="0"/><du var="counterPosition" def="283" use="275" target="285" covered="0"/><du var="counterPosition" def="283" use="285" covered="0"/><du var="counterPosition" def="283" use="280" covered="0"/><du var="counterPosition" def="283" use="281" covered="0"/><du var="counterPosition" def="283" use="282" covered="0"/><du var="counterPosition" def="283" use="283" covered="0"/><du var="counterPosition" def="283" use="273" covered="0"/><du var="counterPosition" def="283" use="291" target="292" covered="0"/><du var="counterPosition" def="283" use="291" target="295" covered="0"/><du var="counterPosition" def="285" use="287" covered="0"/><du var="counterPosition" def="285" use="275" target="276" covered="0"/><du var="counterPosition" def="285" use="275" target="285" covered="0"/><du var="counterPosition" def="285" use="285" covered="0"/><du var="counterPosition" def="285" use="280" covered="0"/><du var="counterPosition" def="285" use="281" covered="0"/><du var="counterPosition" def="285" use="282" covered="0"/><du var="counterPosition" def="285" use="283" covered="0"/><du var="counterPosition" def="285" use="273" covered="0"/><du var="counterPosition" def="285" use="291" target="292" covered="0"/><du var="counterPosition" def="285" use="291" target="295" covered="0"/><du var="isWhite" def="288" use="272" target="273" covered="0"/><du var="isWhite" def="288" use="272" target="275" covered="0"/><du var="isWhite" def="288" use="288" target="288" covered="0"/><du var="isWhite" def="288" use="288" target="288" covered="0"/><du var="x" def="270" use="270" target="291" covered="0"/><du var="x" def="270" use="270" target="271" covered="0"/><du var="x" def="270" use="271" covered="0"/><du var="x" def="270" use="270" covered="0"/><du var="x" def="270" use="277" covered="0"/><du var="x" def="270" use="293" covered="0"/><counter type="DU" missed="107" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="patternMatchVariance" desc="([I[IF)F"><du var="counters" def="310" use="314" covered="0"/><du var="counters" def="310" use="330" covered="0"/><du var="pattern" def="310" use="315" covered="0"/><du var="pattern" def="310" use="331" covered="0"/><du var="maxIndividualVariance" def="310" use="326" covered="0"/><du var="numCounters" def="310" use="313" target="317" covered="0"/><du var="numCounters" def="310" use="313" target="314" covered="0"/><du var="numCounters" def="310" use="329" target="338" covered="0"/><du var="numCounters" def="310" use="329" target="330" covered="0"/><du var="total" def="311" use="314" covered="0"/><du var="total" def="311" use="317" target="320" covered="0"/><du var="total" def="311" use="317" target="325" covered="0"/><du var="total" def="311" use="325" covered="0"/><du var="total" def="311" use="338" covered="0"/><du var="patternLength" def="312" use="315" covered="0"/><du var="patternLength" def="312" use="317" target="320" covered="0"/><du var="patternLength" def="312" use="317" target="325" covered="0"/><du var="patternLength" def="312" use="325" covered="0"/><du var="i" def="313" use="313" target="317" covered="0"/><du var="i" def="313" use="313" target="314" covered="0"/><du var="i" def="313" use="314" covered="0"/><du var="i" def="313" use="315" covered="0"/><du var="i" def="313" use="313" covered="0"/><du var="total" def="314" use="314" covered="0"/><du var="total" def="314" use="317" target="320" covered="0"/><du var="total" def="314" use="317" target="325" covered="0"/><du var="total" def="314" use="325" covered="0"/><du var="total" def="314" use="338" covered="0"/><du var="patternLength" def="315" use="315" covered="0"/><du var="patternLength" def="315" use="317" target="320" covered="0"/><du var="patternLength" def="315" use="317" target="325" covered="0"/><du var="patternLength" def="315" use="325" covered="0"/><du var="i" def="313" use="313" target="317" covered="0"/><du var="i" def="313" use="313" target="314" covered="0"/><du var="i" def="313" use="314" covered="0"/><du var="i" def="313" use="315" covered="0"/><du var="i" def="313" use="313" covered="0"/><du var="unitBarWidth" def="325" use="331" covered="0"/><du var="maxIndividualVariance" def="326" use="333" target="334" covered="0"/><du var="maxIndividualVariance" def="326" use="333" target="336" covered="0"/><du var="totalVariance" def="328" use="336" covered="0"/><du var="totalVariance" def="328" use="338" covered="0"/><du var="x" def="329" use="329" target="338" covered="0"/><du var="x" def="329" use="329" target="330" covered="0"/><du var="x" def="329" use="330" covered="0"/><du var="x" def="329" use="331" covered="0"/><du var="x" def="329" use="329" covered="0"/><du var="counter" def="330" use="332" target="332" covered="0"/><du var="counter" def="330" use="332" target="332" covered="0"/><du var="counter" def="330" use="332" covered="0"/><du var="scaledPattern" def="331" use="332" target="332" covered="0"/><du var="scaledPattern" def="331" use="332" target="332" covered="0"/><du var="scaledPattern" def="331" use="332" covered="0"/><du var="variance" def="332" use="333" target="334" covered="0"/><du var="variance" def="332" use="333" target="336" covered="0"/><du var="variance" def="332" use="336" covered="0"/><du var="totalVariance" def="336" use="336" covered="0"/><du var="totalVariance" def="336" use="338" covered="0"/><du var="x" def="329" use="329" target="338" covered="0"/><du var="x" def="329" use="329" target="330" covered="0"/><du var="x" def="329" use="330" covered="0"/><du var="x" def="329" use="331" covered="0"/><du var="x" def="329" use="329" covered="0"/><counter type="DU" missed="63" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="398" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/pdf417/encoder/PDF417HighLevelEncoder"><method name="encodeHighLevel" desc="(Ljava/lang/String;Lcom/google/zxing/pdf417/encoder/Compaction;Ljava/nio/charset/Charset;)Ljava/lang/String;"><du var="msg" def="166" use="177" covered="0"/><du var="msg" def="166" use="192" covered="0"/><du var="msg" def="166" use="187" covered="0"/><du var="msg" def="166" use="184" covered="0"/><du var="msg" def="166" use="197" covered="0"/><du var="msg" def="166" use="205" covered="0"/><du var="msg" def="166" use="212" covered="0"/><du var="msg" def="166" use="215" covered="0"/><du var="msg" def="166" use="219" covered="0"/><du var="msg" def="166" use="202" covered="0"/><du var="compaction" def="166" use="182" target="195" covered="0"/><du var="compaction" def="166" use="182" target="184" covered="0"/><du var="compaction" def="166" use="182" target="187" covered="0"/><du var="compaction" def="166" use="182" target="191" covered="0"/><du var="encoding" def="166" use="168" target="169" covered="0"/><du var="encoding" def="166" use="168" target="170" covered="0"/><du var="encoding" def="166" use="170" target="171" covered="0"/><du var="encoding" def="166" use="170" target="177" covered="0"/><du var="encoding" def="166" use="187" covered="0"/><du var="encoding" def="166" use="215" covered="0"/><du var="encoding" def="166" use="219" covered="0"/><du var="encoding" def="166" use="171" covered="0"/><du var="DEFAULT_ENCODING" def="166" use="170" target="171" covered="0"/><du var="DEFAULT_ENCODING" def="166" use="170" target="177" covered="0"/><du var="DEFAULT_ENCODING" def="166" use="169" covered="0"/><du var="sb" def="166" use="191" covered="0"/><du var="sb" def="166" use="192" covered="0"/><du var="sb" def="166" use="236" covered="0"/><du var="sb" def="166" use="188" covered="0"/><du var="sb" def="166" use="184" covered="0"/><du var="sb" def="166" use="212" covered="0"/><du var="sb" def="166" use="208" covered="0"/><du var="sb" def="166" use="225" covered="0"/><du var="sb" def="166" use="222" covered="0"/><du var="sb" def="166" use="199" covered="0"/><du var="sb" def="166" use="202" covered="0"/><du var="sb" def="166" use="173" covered="0"/><du var="encoding" def="169" use="187" covered="0"/><du var="encoding" def="169" use="215" covered="0"/><du var="encoding" def="169" use="219" covered="0"/><du var="eci" def="171" use="172" target="173" covered="0"/><du var="eci" def="171" use="172" target="177" covered="0"/><du var="eci" def="171" use="173" covered="0"/><du var="len" def="177" use="192" covered="0"/><du var="len" def="177" use="184" covered="0"/><du var="len" def="177" use="196" target="236" covered="0"/><du var="len" def="177" use="196" target="197" covered="0"/><du var="len" def="177" use="206" target="207" covered="0"/><du var="len" def="177" use="206" target="215" covered="0"/><du var="p" def="178" use="192" covered="0"/><du var="p" def="178" use="188" covered="0"/><du var="p" def="178" use="184" covered="0"/><du var="p" def="178" use="196" target="236" covered="0"/><du var="p" def="178" use="196" target="197" covered="0"/><du var="p" def="178" use="197" covered="0"/><du var="p" def="178" use="205" covered="0"/><du var="p" def="178" use="212" covered="0"/><du var="p" def="178" use="213" covered="0"/><du var="p" def="178" use="215" covered="0"/><du var="p" def="178" use="219" covered="0"/><du var="p" def="178" use="229" covered="0"/><du var="p" def="178" use="202" covered="0"/><du var="p" def="178" use="203" covered="0"/><du var="textSubMode" def="179" use="184" covered="0"/><du var="textSubMode" def="179" use="212" covered="0"/><du var="encodingMode" def="195" use="207" target="208" covered="0"/><du var="encodingMode" def="195" use="207" target="212" covered="0"/><du var="encodingMode" def="195" use="225" covered="0"/><du var="encodingMode" def="195" use="220" target="222" covered="0"/><du var="encodingMode" def="195" use="220" target="225" covered="0"/><du var="n" def="197" use="198" target="199" covered="0"/><du var="n" def="197" use="198" target="205" covered="0"/><du var="n" def="197" use="206" target="207" covered="0"/><du var="n" def="197" use="206" target="215" covered="0"/><du var="n" def="197" use="202" covered="0"/><du var="n" def="197" use="203" covered="0"/><du var="encodingMode" def="200" use="207" target="208" covered="0"/><du var="encodingMode" def="200" use="207" target="212" covered="0"/><du var="encodingMode" def="200" use="225" covered="0"/><du var="encodingMode" def="200" use="220" target="222" covered="0"/><du var="encodingMode" def="200" use="220" target="225" covered="0"/><du var="textSubMode" def="201" use="212" covered="0"/><du var="p" def="203" use="196" target="236" covered="0"/><du var="p" def="203" use="196" target="197" covered="0"/><du var="p" def="203" use="197" covered="0"/><du var="p" def="203" use="205" covered="0"/><du var="p" def="203" use="212" covered="0"/><du var="p" def="203" use="213" covered="0"/><du var="p" def="203" use="215" covered="0"/><du var="p" def="203" use="219" covered="0"/><du var="p" def="203" use="229" covered="0"/><du var="p" def="203" use="202" covered="0"/><du var="p" def="203" use="203" covered="0"/><du var="t" def="205" use="206" target="206" covered="0"/><du var="t" def="205" use="206" target="207" covered="0"/><du var="t" def="205" use="212" covered="0"/><du var="t" def="205" use="213" covered="0"/><du var="encodingMode" def="209" use="207" target="208" covered="0"/><du var="encodingMode" def="209" use="207" target="212" covered="0"/><du var="encodingMode" def="209" use="225" covered="0"/><du var="encodingMode" def="209" use="220" target="222" covered="0"/><du var="encodingMode" def="209" use="220" target="225" covered="0"/><du var="textSubMode" def="210" use="212" covered="0"/><du var="textSubMode" def="212" use="212" covered="0"/><du var="p" def="213" use="196" target="236" covered="0"/><du var="p" def="213" use="196" target="197" covered="0"/><du var="p" def="213" use="197" covered="0"/><du var="p" def="213" use="205" covered="0"/><du var="p" def="213" use="212" covered="0"/><du var="p" def="213" use="213" covered="0"/><du var="p" def="213" use="215" covered="0"/><du var="p" def="213" use="219" covered="0"/><du var="p" def="213" use="229" covered="0"/><du var="p" def="213" use="202" covered="0"/><du var="p" def="213" use="203" covered="0"/><du var="b" def="215" use="216" target="217" covered="0"/><du var="b" def="215" use="216" target="219" covered="0"/><du var="b" def="215" use="219" covered="0"/><du var="b" def="215" use="229" covered="0"/><du var="b" def="217" use="219" covered="0"/><du var="b" def="217" use="229" covered="0"/><du var="bytes" def="219" use="220" target="220" covered="0"/><du var="bytes" def="219" use="220" target="225" covered="0"/><du var="bytes" def="219" use="225" covered="0"/><du var="bytes" def="219" use="222" covered="0"/><du var="encodingMode" def="226" use="207" target="208" covered="0"/><du var="encodingMode" def="226" use="207" target="212" covered="0"/><du var="encodingMode" def="226" use="225" covered="0"/><du var="encodingMode" def="226" use="220" target="222" covered="0"/><du var="encodingMode" def="226" use="220" target="225" covered="0"/><du var="textSubMode" def="227" use="212" covered="0"/><du var="p" def="229" use="196" target="236" covered="0"/><du var="p" def="229" use="196" target="197" covered="0"/><du var="p" def="229" use="197" covered="0"/><du var="p" def="229" use="205" covered="0"/><du var="p" def="229" use="212" covered="0"/><du var="p" def="229" use="213" covered="0"/><du var="p" def="229" use="215" covered="0"/><du var="p" def="229" use="219" covered="0"/><du var="p" def="229" use="229" covered="0"/><du var="p" def="229" use="202" covered="0"/><du var="p" def="229" use="203" covered="0"/><counter type="DU" missed="142" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeText" desc="(Ljava/lang/CharSequence;IILjava/lang/StringBuilder;I)I"><du var="msg" def="255" use="259" covered="0"/><du var="msg" def="255" use="322" covered="0"/><du var="startpos" def="255" use="259" covered="0"/><du var="startpos" def="255" use="321" target="322" covered="0"/><du var="startpos" def="255" use="321" target="329" covered="0"/><du var="startpos" def="255" use="322" covered="0"/><du var="count" def="255" use="321" target="322" covered="0"/><du var="count" def="255" use="321" target="329" covered="0"/><du var="count" def="255" use="344" target="348" covered="0"/><du var="count" def="255" use="344" target="259" covered="0"/><du var="sb" def="255" use="354" covered="0"/><du var="sb" def="255" use="360" covered="0"/><du var="PUNCTUATION" def="255" use="330" covered="0"/><du var="PUNCTUATION" def="255" use="303" covered="0"/><du var="PUNCTUATION" def="255" use="279" covered="0"/><du var="PUNCTUATION" def="255" use="336" covered="0"/><du var="MIXED" def="255" use="310" covered="0"/><du var="tmp" def="255" use="329" covered="0"/><du var="tmp" def="255" use="330" covered="0"/><du var="tmp" def="255" use="349" covered="0"/><du var="tmp" def="255" use="356" covered="0"/><du var="tmp" def="255" use="353" covered="0"/><du var="tmp" def="255" use="325" covered="0"/><du var="tmp" def="255" use="318" covered="0"/><du var="tmp" def="255" use="314" covered="0"/><du var="tmp" def="255" use="310" covered="0"/><du var="tmp" def="255" use="302" covered="0"/><du var="tmp" def="255" use="303" covered="0"/><du var="tmp" def="255" use="299" covered="0"/><du var="tmp" def="255" use="293" covered="0"/><du var="tmp" def="255" use="294" covered="0"/><du var="tmp" def="255" use="289" covered="0"/><du var="tmp" def="255" use="287" covered="0"/><du var="tmp" def="255" use="278" covered="0"/><du var="tmp" def="255" use="279" covered="0"/><du var="tmp" def="255" use="275" covered="0"/><du var="tmp" def="255" use="271" covered="0"/><du var="tmp" def="255" use="266" covered="0"/><du var="tmp" def="255" use="264" covered="0"/><du var="tmp" def="255" use="339" covered="0"/><du var="tmp" def="255" use="336" covered="0"/><du var="submode" def="256" use="260" target="335" covered="0"/><du var="submode" def="256" use="260" target="262" covered="0"/><du var="submode" def="256" use="260" target="285" covered="0"/><du var="submode" def="256" use="260" target="309" covered="0"/><du var="submode" def="256" use="362" covered="0"/><du var="idx" def="257" use="259" covered="0"/><du var="idx" def="257" use="321" target="322" covered="0"/><du var="idx" def="257" use="321" target="329" covered="0"/><du var="idx" def="257" use="343" covered="0"/><du var="idx" def="257" use="322" covered="0"/><du var="ch" def="259" use="309" target="310" covered="0"/><du var="ch" def="259" use="309" target="312" covered="0"/><du var="ch" def="259" use="312" target="313" covered="0"/><du var="ch" def="259" use="312" target="316" covered="0"/><du var="ch" def="259" use="316" target="317" covered="0"/><du var="ch" def="259" use="316" target="321" covered="0"/><du var="ch" def="259" use="330" covered="0"/><du var="ch" def="259" use="310" covered="0"/><du var="ch" def="259" use="285" target="286" covered="0"/><du var="ch" def="259" use="285" target="292" covered="0"/><du var="ch" def="259" use="292" target="293" covered="0"/><du var="ch" def="259" use="292" target="297" covered="0"/><du var="ch" def="259" use="297" target="298" covered="0"/><du var="ch" def="259" use="297" target="302" covered="0"/><du var="ch" def="259" use="303" covered="0"/><du var="ch" def="259" use="294" covered="0"/><du var="ch" def="259" use="286" target="287" covered="0"/><du var="ch" def="259" use="286" target="289" covered="0"/><du var="ch" def="259" use="289" covered="0"/><du var="ch" def="259" use="262" target="263" covered="0"/><du var="ch" def="259" use="262" target="269" covered="0"/><du var="ch" def="259" use="269" target="270" covered="0"/><du var="ch" def="259" use="269" target="273" covered="0"/><du var="ch" def="259" use="273" target="274" covered="0"/><du var="ch" def="259" use="273" target="278" covered="0"/><du var="ch" def="259" use="279" covered="0"/><du var="ch" def="259" use="263" target="264" covered="0"/><du var="ch" def="259" use="263" target="266" covered="0"/><du var="ch" def="259" use="266" covered="0"/><du var="ch" def="259" use="335" target="336" covered="0"/><du var="ch" def="259" use="335" target="338" covered="0"/><du var="ch" def="259" use="336" covered="0"/><du var="submode" def="270" use="260" target="335" covered="0"/><du var="submode" def="270" use="260" target="262" covered="0"/><du var="submode" def="270" use="260" target="285" covered="0"/><du var="submode" def="270" use="260" target="309" covered="0"/><du var="submode" def="270" use="362" covered="0"/><du var="submode" def="274" use="260" target="335" covered="0"/><du var="submode" def="274" use="260" target="262" covered="0"/><du var="submode" def="274" use="260" target="285" covered="0"/><du var="submode" def="274" use="260" target="309" covered="0"/><du var="submode" def="274" use="362" covered="0"/><du var="submode" def="298" use="260" target="335" covered="0"/><du var="submode" def="298" use="260" target="262" covered="0"/><du var="submode" def="298" use="260" target="285" covered="0"/><du var="submode" def="298" use="260" target="309" covered="0"/><du var="submode" def="298" use="362" covered="0"/><du var="submode" def="313" use="260" target="335" covered="0"/><du var="submode" def="313" use="260" target="262" covered="0"/><du var="submode" def="313" use="260" target="285" covered="0"/><du var="submode" def="313" use="260" target="309" covered="0"/><du var="submode" def="313" use="362" covered="0"/><du var="submode" def="317" use="260" target="335" covered="0"/><du var="submode" def="317" use="260" target="262" covered="0"/><du var="submode" def="317" use="260" target="285" covered="0"/><du var="submode" def="317" use="260" target="309" covered="0"/><du var="submode" def="317" use="362" covered="0"/><du var="next" def="322" use="323" target="324" covered="0"/><du var="next" def="322" use="323" target="329" covered="0"/><du var="submode" def="324" use="260" target="335" covered="0"/><du var="submode" def="324" use="260" target="262" covered="0"/><du var="submode" def="324" use="260" target="285" covered="0"/><du var="submode" def="324" use="260" target="309" covered="0"/><du var="submode" def="324" use="362" covered="0"/><du var="submode" def="338" use="260" target="335" covered="0"/><du var="submode" def="338" use="260" target="262" covered="0"/><du var="submode" def="338" use="260" target="285" covered="0"/><du var="submode" def="338" use="260" target="309" covered="0"/><du var="submode" def="338" use="362" covered="0"/><du var="idx" def="343" use="344" target="348" covered="0"/><du var="idx" def="343" use="344" target="259" covered="0"/><du var="idx" def="343" use="259" covered="0"/><du var="idx" def="343" use="321" target="322" covered="0"/><du var="idx" def="343" use="321" target="329" covered="0"/><du var="idx" def="343" use="343" covered="0"/><du var="idx" def="343" use="322" covered="0"/><du var="h" def="348" use="353" covered="0"/><du var="h" def="348" use="360" covered="0"/><du var="len" def="349" use="350" target="359" covered="0"/><du var="len" def="349" use="350" target="351" covered="0"/><du var="len" def="349" use="359" target="360" covered="0"/><du var="len" def="349" use="359" target="362" covered="0"/><du var="i" def="350" use="350" target="359" covered="0"/><du var="i" def="350" use="350" target="351" covered="0"/><du var="i" def="350" use="351" target="351" covered="0"/><du var="i" def="350" use="351" target="351" covered="0"/><du var="i" def="350" use="356" covered="0"/><du var="i" def="350" use="350" covered="0"/><du var="i" def="350" use="353" covered="0"/><du var="odd" def="351" use="352" target="353" covered="0"/><du var="odd" def="351" use="352" target="356" covered="0"/><du var="h" def="353" use="353" covered="0"/><du var="h" def="353" use="360" covered="0"/><du var="h" def="356" use="353" covered="0"/><du var="h" def="356" use="360" covered="0"/><du var="i" def="350" use="350" target="359" covered="0"/><du var="i" def="350" use="350" target="351" covered="0"/><du var="i" def="350" use="351" target="351" covered="0"/><du var="i" def="350" use="351" target="351" covered="0"/><du var="i" def="350" use="356" covered="0"/><du var="i" def="350" use="350" covered="0"/><du var="i" def="350" use="353" covered="0"/><counter type="DU" missed="153" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeBinary" desc="([BIIILjava/lang/StringBuilder;)V"><du var="bytes" def="381" use="413" covered="0"/><du var="bytes" def="381" use="399" covered="0"/><du var="startpos" def="381" use="391" covered="0"/><du var="startpos" def="381" use="412" target="416" covered="0"/><du var="startpos" def="381" use="412" target="413" covered="0"/><du var="startpos" def="381" use="395" target="412" covered="0"/><du var="startpos" def="381" use="395" target="396" covered="0"/><du var="count" def="381" use="381" target="381" covered="0"/><du var="count" def="381" use="381" target="384" covered="0"/><du var="count" def="381" use="384" target="385" covered="0"/><du var="count" def="381" use="384" target="387" covered="0"/><du var="count" def="381" use="393" target="394" covered="0"/><du var="count" def="381" use="393" target="412" covered="0"/><du var="count" def="381" use="412" target="416" covered="0"/><du var="count" def="381" use="412" target="413" covered="0"/><du var="count" def="381" use="395" target="412" covered="0"/><du var="count" def="381" use="395" target="396" covered="0"/><du var="startmode" def="381" use="381" target="382" covered="0"/><du var="startmode" def="381" use="381" target="384" covered="0"/><du var="sb" def="381" use="387" covered="0"/><du var="sb" def="381" use="414" covered="0"/><du var="sb" def="381" use="406" covered="0"/><du var="sb" def="381" use="385" covered="0"/><du var="sb" def="381" use="382" covered="0"/><du var="idx" def="391" use="412" covered="0"/><du var="idx" def="391" use="395" target="412" covered="0"/><du var="idx" def="391" use="395" target="396" covered="0"/><du var="idx" def="391" use="399" covered="0"/><du var="idx" def="391" use="408" covered="0"/><du var="chars" def="394" use="402" covered="0"/><du var="chars" def="394" use="405" covered="0"/><du var="chars" def="394" use="406" covered="0"/><du var="t" def="396" use="398" covered="0"/><du var="t" def="396" use="402" covered="0"/><du var="t" def="396" use="403" covered="0"/><du var="i" def="397" use="397" target="401" covered="0"/><du var="i" def="397" use="397" target="398" covered="0"/><du var="i" def="397" use="399" covered="0"/><du var="i" def="397" use="397" covered="0"/><du var="t" def="399" use="398" covered="0"/><du var="t" def="399" use="402" covered="0"/><du var="t" def="399" use="403" covered="0"/><du var="i" def="397" use="397" target="401" covered="0"/><du var="i" def="397" use="397" target="398" covered="0"/><du var="i" def="397" use="399" covered="0"/><du var="i" def="397" use="397" covered="0"/><du var="i" def="401" use="401" target="405" covered="0"/><du var="i" def="401" use="401" target="402" covered="0"/><du var="i" def="401" use="402" covered="0"/><du var="i" def="401" use="401" covered="0"/><du var="t" def="403" use="402" covered="0"/><du var="t" def="403" use="403" covered="0"/><du var="i" def="401" use="401" target="405" covered="0"/><du var="i" def="401" use="401" target="402" covered="0"/><du var="i" def="401" use="402" covered="0"/><du var="i" def="401" use="401" covered="0"/><du var="i" def="405" use="405" target="408" covered="0"/><du var="i" def="405" use="405" target="406" covered="0"/><du var="i" def="405" use="406" covered="0"/><du var="i" def="405" use="405" covered="0"/><du var="i" def="405" use="405" target="408" covered="0"/><du var="i" def="405" use="405" target="406" covered="0"/><du var="i" def="405" use="406" covered="0"/><du var="i" def="405" use="405" covered="0"/><du var="idx" def="408" use="395" target="412" covered="0"/><du var="idx" def="408" use="395" target="396" covered="0"/><du var="idx" def="408" use="399" covered="0"/><du var="idx" def="408" use="408" covered="0"/><du var="idx" def="408" use="412" covered="0"/><du var="i" def="412" use="412" target="416" covered="0"/><du var="i" def="412" use="412" target="413" covered="0"/><du var="i" def="412" use="413" covered="0"/><du var="i" def="412" use="412" covered="0"/><du var="i" def="412" use="412" target="416" covered="0"/><du var="i" def="412" use="412" target="413" covered="0"/><du var="i" def="412" use="413" covered="0"/><du var="i" def="412" use="412" covered="0"/><counter type="DU" missed="77" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeNumeric" desc="(Ljava/lang/String;IILjava/lang/StringBuilder;)V"><du var="msg" def="419" use="426" covered="0"/><du var="startpos" def="419" use="426" covered="0"/><du var="count" def="419" use="423" target="439" covered="0"/><du var="count" def="419" use="423" target="424" covered="0"/><du var="count" def="419" use="425" covered="0"/><du var="sb" def="419" use="435" covered="0"/><du var="idx" def="419" use="423" target="439" covered="0"/><du var="idx" def="419" use="423" target="424" covered="0"/><du var="idx" def="419" use="425" covered="0"/><du var="idx" def="419" use="426" covered="0"/><du var="idx" def="419" use="437" covered="0"/><du var="tmp" def="420" use="424" covered="0"/><du var="tmp" def="420" use="429" covered="0"/><du var="tmp" def="420" use="434" covered="0"/><du var="tmp" def="420" use="435" covered="0"/><du var="num900" def="421" use="429" covered="0"/><du var="num900" def="421" use="430" covered="0"/><du var="num0" def="422" use="431" target="434" covered="0"/><du var="num0" def="422" use="431" target="429" covered="0"/><du var="len" def="425" use="437" covered="0"/><du var="bigint" def="427" use="429" covered="0"/><du var="bigint" def="427" use="430" covered="0"/><du var="bigint" def="430" use="431" target="434" covered="0"/><du var="bigint" def="430" use="431" target="429" covered="0"/><du var="bigint" def="430" use="429" covered="0"/><du var="bigint" def="430" use="430" covered="0"/><du var="i" def="434" use="434" target="437" covered="0"/><du var="i" def="434" use="434" target="435" covered="0"/><du var="i" def="434" use="435" covered="0"/><du var="i" def="434" use="434" covered="0"/><du var="i" def="434" use="434" target="437" covered="0"/><du var="i" def="434" use="434" target="435" covered="0"/><du var="i" def="434" use="435" covered="0"/><du var="i" def="434" use="434" covered="0"/><du var="idx" def="437" use="423" target="439" covered="0"/><du var="idx" def="437" use="423" target="424" covered="0"/><du var="idx" def="437" use="425" covered="0"/><du var="idx" def="437" use="426" covered="0"/><du var="idx" def="437" use="437" covered="0"/><counter type="DU" missed="39" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDigit" desc="(C)Z"><du var="ch" def="443" use="443" target="443" covered="0"/><du var="ch" def="443" use="443" target="443" covered="0"/><du var="ch" def="443" use="443" target="443" covered="0"/><du var="ch" def="443" use="443" target="443" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAlphaUpper" desc="(C)Z"><du var="ch" def="447" use="447" target="447" covered="0"/><du var="ch" def="447" use="447" target="447" covered="0"/><du var="ch" def="447" use="447" target="447" covered="0"/><du var="ch" def="447" use="447" target="447" covered="0"/><du var="ch" def="447" use="447" target="447" covered="0"/><du var="ch" def="447" use="447" target="447" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAlphaLower" desc="(C)Z"><du var="ch" def="451" use="451" target="451" covered="0"/><du var="ch" def="451" use="451" target="451" covered="0"/><du var="ch" def="451" use="451" target="451" covered="0"/><du var="ch" def="451" use="451" target="451" covered="0"/><du var="ch" def="451" use="451" target="451" covered="0"/><du var="ch" def="451" use="451" target="451" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMixed" desc="(C)Z"><du var="ch" def="455" use="455" target="455" covered="0"/><du var="ch" def="455" use="455" target="455" covered="0"/><du var="MIXED" def="455" use="455" target="455" covered="0"/><du var="MIXED" def="455" use="455" target="455" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPunctuation" desc="(C)Z"><du var="ch" def="459" use="459" target="459" covered="0"/><du var="ch" def="459" use="459" target="459" covered="0"/><du var="PUNCTUATION" def="459" use="459" target="459" covered="0"/><du var="PUNCTUATION" def="459" use="459" target="459" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isText" desc="(C)Z"><du var="ch" def="463" use="463" target="463" covered="0"/><du var="ch" def="463" use="463" target="463" covered="0"/><du var="ch" def="463" use="463" target="463" covered="0"/><du var="ch" def="463" use="463" target="463" covered="0"/><du var="ch" def="463" use="463" target="463" covered="0"/><du var="ch" def="463" use="463" target="463" covered="0"/><du var="ch" def="463" use="463" target="463" covered="0"/><du var="ch" def="463" use="463" target="463" covered="0"/><du var="ch" def="463" use="463" target="463" covered="0"/><du var="ch" def="463" use="463" target="463" covered="0"/><counter type="DU" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="determineConsecutiveDigitCount" desc="(Ljava/lang/CharSequence;I)I"><du var="msg" def="474" use="478" covered="0"/><du var="msg" def="474" use="483" covered="0"/><du var="count" def="474" use="487" covered="0"/><du var="count" def="474" use="480" covered="0"/><du var="len" def="475" use="477" target="478" covered="0"/><du var="len" def="475" use="477" target="487" covered="0"/><du var="len" def="475" use="479" target="487" covered="0"/><du var="len" def="475" use="479" target="480" covered="0"/><du var="len" def="475" use="482" target="483" covered="0"/><du var="len" def="475" use="482" target="479" covered="0"/><du var="idx" def="476" use="477" target="478" covered="0"/><du var="idx" def="476" use="477" target="487" covered="0"/><du var="idx" def="476" use="478" covered="0"/><du var="idx" def="476" use="479" target="487" covered="0"/><du var="idx" def="476" use="479" target="480" covered="0"/><du var="idx" def="476" use="481" covered="0"/><du var="ch" def="478" use="479" target="479" covered="0"/><du var="ch" def="478" use="479" target="487" covered="0"/><du var="count" def="480" use="487" covered="0"/><du var="count" def="480" use="480" covered="0"/><du var="idx" def="481" use="482" target="483" covered="0"/><du var="idx" def="481" use="482" target="479" covered="0"/><du var="idx" def="481" use="479" target="487" covered="0"/><du var="idx" def="481" use="479" target="480" covered="0"/><du var="idx" def="481" use="481" covered="0"/><du var="idx" def="481" use="483" covered="0"/><du var="ch" def="483" use="479" target="479" covered="0"/><du var="ch" def="483" use="479" target="487" covered="0"/><counter type="DU" missed="28" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="determineConsecutiveTextCount" desc="(Ljava/lang/CharSequence;I)I"><du var="msg" def="498" use="501" covered="0"/><du var="msg" def="498" use="517" covered="0"/><du var="msg" def="498" use="507" covered="0"/><du var="startpos" def="498" use="511" covered="0"/><du var="startpos" def="498" use="525" covered="0"/><du var="len" def="498" use="500" target="525" covered="0"/><du var="len" def="498" use="500" target="501" covered="0"/><du var="len" def="498" use="503" target="510" covered="0"/><du var="len" def="498" use="503" target="504" covered="0"/><du var="len" def="498" use="506" target="507" covered="0"/><du var="len" def="498" use="506" target="503" covered="0"/><du var="idx" def="499" use="500" target="525" covered="0"/><du var="idx" def="499" use="500" target="501" covered="0"/><du var="idx" def="499" use="501" covered="0"/><du var="idx" def="499" use="517" covered="0"/><du var="idx" def="499" use="523" covered="0"/><du var="idx" def="499" use="511" covered="0"/><du var="idx" def="499" use="503" target="510" covered="0"/><du var="idx" def="499" use="503" target="504" covered="0"/><du var="idx" def="499" use="505" covered="0"/><du var="idx" def="499" use="525" covered="0"/><du var="ch" def="501" use="503" target="503" covered="0"/><du var="ch" def="501" use="503" target="510" covered="0"/><du var="numericCount" def="502" use="503" target="503" covered="0"/><du var="numericCount" def="502" use="503" target="510" covered="0"/><du var="numericCount" def="502" use="510" target="511" covered="0"/><du var="numericCount" def="502" use="510" target="513" covered="0"/><du var="numericCount" def="502" use="513" target="515" covered="0"/><du var="numericCount" def="502" use="513" target="517" covered="0"/><du var="numericCount" def="502" use="511" covered="0"/><du var="numericCount" def="502" use="504" covered="0"/><du var="numericCount" def="504" use="503" target="503" covered="0"/><du var="numericCount" def="504" use="503" target="510" covered="0"/><du var="numericCount" def="504" use="510" target="511" covered="0"/><du var="numericCount" def="504" use="510" target="513" covered="0"/><du var="numericCount" def="504" use="513" target="515" covered="0"/><du var="numericCount" def="504" use="513" target="517" covered="0"/><du var="numericCount" def="504" use="511" covered="0"/><du var="numericCount" def="504" use="504" covered="0"/><du var="idx" def="505" use="506" target="507" covered="0"/><du var="idx" def="505" use="506" target="503" covered="0"/><du var="idx" def="505" use="517" covered="0"/><du var="idx" def="505" use="523" covered="0"/><du var="idx" def="505" use="525" covered="0"/><du var="idx" def="505" use="500" target="525" covered="0"/><du var="idx" def="505" use="500" target="501" covered="0"/><du var="idx" def="505" use="501" covered="0"/><du var="idx" def="505" use="511" covered="0"/><du var="idx" def="505" use="503" target="510" covered="0"/><du var="idx" def="505" use="503" target="504" covered="0"/><du var="idx" def="505" use="505" covered="0"/><du var="idx" def="505" use="507" covered="0"/><du var="ch" def="507" use="503" target="503" covered="0"/><du var="ch" def="507" use="503" target="510" covered="0"/><du var="ch" def="517" use="520" target="521" covered="0"/><du var="ch" def="517" use="520" target="523" covered="0"/><du var="idx" def="523" use="500" target="525" covered="0"/><du var="idx" def="523" use="500" target="501" covered="0"/><du var="idx" def="523" use="501" covered="0"/><du var="idx" def="523" use="517" covered="0"/><du var="idx" def="523" use="523" covered="0"/><du var="idx" def="523" use="511" covered="0"/><du var="idx" def="523" use="503" target="510" covered="0"/><du var="idx" def="523" use="503" target="504" covered="0"/><du var="idx" def="523" use="505" covered="0"/><du var="idx" def="523" use="525" covered="0"/><counter type="DU" missed="66" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="determineConsecutiveBinaryCount" desc="(Ljava/lang/String;ILjava/nio/charset/Charset;)I"><du var="msg" def="538" use="542" covered="0"/><du var="msg" def="538" use="557" covered="0"/><du var="msg" def="538" use="552" covered="0"/><du var="startpos" def="538" use="555" covered="0"/><du var="startpos" def="538" use="564" covered="0"/><du var="encoder" def="538" use="559" target="560" covered="0"/><du var="encoder" def="538" use="559" target="562" covered="0"/><du var="len" def="539" use="541" target="564" covered="0"/><du var="len" def="539" use="541" target="542" covered="0"/><du var="len" def="539" use="549" target="550" covered="0"/><du var="len" def="539" use="549" target="552" covered="0"/><du var="idx" def="540" use="541" target="564" covered="0"/><du var="idx" def="540" use="541" target="542" covered="0"/><du var="idx" def="540" use="542" covered="0"/><du var="idx" def="540" use="557" covered="0"/><du var="idx" def="540" use="562" covered="0"/><du var="idx" def="540" use="555" covered="0"/><du var="idx" def="540" use="548" covered="0"/><du var="idx" def="540" use="564" covered="0"/><du var="ch" def="542" use="545" target="554" covered="0"/><du var="ch" def="542" use="545" target="546" covered="0"/><du var="numericCount" def="543" use="545" target="545" covered="0"/><du var="numericCount" def="543" use="545" target="554" covered="0"/><du var="numericCount" def="543" use="554" target="555" covered="0"/><du var="numericCount" def="543" use="554" target="557" covered="0"/><du var="numericCount" def="543" use="546" covered="0"/><du var="numericCount" def="546" use="545" target="545" covered="0"/><du var="numericCount" def="546" use="545" target="554" covered="0"/><du var="numericCount" def="546" use="554" target="555" covered="0"/><du var="numericCount" def="546" use="554" target="557" covered="0"/><du var="numericCount" def="546" use="546" covered="0"/><du var="i" def="548" use="549" target="550" covered="0"/><du var="i" def="548" use="549" target="552" covered="0"/><du var="i" def="548" use="552" covered="0"/><du var="ch" def="552" use="545" target="554" covered="0"/><du var="ch" def="552" use="545" target="546" covered="0"/><du var="ch" def="557" use="559" target="560" covered="0"/><du var="ch" def="557" use="559" target="562" covered="0"/><du var="ch" def="557" use="560" covered="0"/><du var="idx" def="562" use="541" target="564" covered="0"/><du var="idx" def="562" use="541" target="542" covered="0"/><du var="idx" def="562" use="542" covered="0"/><du var="idx" def="562" use="557" covered="0"/><du var="idx" def="562" use="562" covered="0"/><du var="idx" def="562" use="555" covered="0"/><du var="idx" def="562" use="548" covered="0"/><du var="idx" def="562" use="564" covered="0"/><counter type="DU" missed="47" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodingECI" desc="(ILjava/lang/StringBuilder;)V"><du var="eci" def="568" use="568" target="568" covered="0"/><du var="eci" def="568" use="568" target="571" covered="0"/><du var="eci" def="568" use="571" target="572" covered="0"/><du var="eci" def="568" use="571" target="575" covered="0"/><du var="eci" def="568" use="575" target="576" covered="0"/><du var="eci" def="568" use="575" target="579" covered="0"/><du var="eci" def="568" use="579" covered="0"/><du var="eci" def="568" use="577" covered="0"/><du var="eci" def="568" use="573" covered="0"/><du var="eci" def="568" use="574" covered="0"/><du var="eci" def="568" use="568" target="569" covered="0"/><du var="eci" def="568" use="568" target="571" covered="0"/><du var="eci" def="568" use="570" covered="0"/><du var="sb" def="568" use="576" covered="0"/><du var="sb" def="568" use="577" covered="0"/><du var="sb" def="568" use="572" covered="0"/><du var="sb" def="568" use="573" covered="0"/><du var="sb" def="568" use="574" covered="0"/><du var="sb" def="568" use="569" covered="0"/><du var="sb" def="568" use="570" covered="0"/><counter type="DU" missed="20" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="$SWITCH_TABLE$com$google$zxing$pdf417$encoder$Compaction" desc="()[I"><du var="$SWITCH_TABLE$com$google$zxing$pdf417$encoder$Compaction" def="35" use="35" target="35" covered="0"/><du var="$SWITCH_TABLE$com$google$zxing$pdf417$encoder$Compaction" def="35" use="35" target="35" covered="0"/><du var="$SWITCH_TABLE$com$google$zxing$pdf417$encoder$Compaction" def="35" use="35" covered="0"/><du var="AUTO" def="35" use="35" covered="0"/><du var="BYTE" def="35" use="35" covered="0"/><du var="NUMERIC" def="35" use="35" covered="0"/><du var="TEXT" def="35" use="35" covered="0"/><counter type="DU" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="613" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/pdf417/encoder/BarcodeMatrix"><method name="&lt;init&gt;" desc="(II)V"><du var="this" def="35" use="39" covered="0"/><du var="this" def="35" use="41" covered="0"/><du var="this" def="35" use="42" covered="0"/><du var="this" def="35" use="43" covered="0"/><du var="height" def="35" use="42" covered="0"/><du var="width" def="35" use="39" covered="0"/><du var="width" def="35" use="41" covered="0"/><du var="this.matrix" def="36" use="39" covered="0"/><du var="i" def="38" use="38" target="41" covered="0"/><du var="i" def="38" use="38" target="39" covered="0"/><du var="i" def="38" use="39" covered="0"/><du var="i" def="38" use="38" covered="0"/><du var="matrixLength" def="38" use="38" target="41" covered="0"/><du var="matrixLength" def="38" use="38" target="39" covered="0"/><du var="i" def="38" use="38" target="41" covered="0"/><du var="i" def="38" use="38" target="39" covered="0"/><du var="i" def="38" use="39" covered="0"/><du var="i" def="38" use="38" covered="0"/><counter type="DU" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getScaledMatrix" desc="(II)[[B"><du var="this" def="75" use="78" covered="0"/><du var="xScale" def="75" use="78" covered="0"/><du var="yScale" def="75" use="78" covered="0"/><du var="this.matrix" def="75" use="78" covered="0"/><du var="matrixOut" def="75" use="78" covered="0"/><du var="matrixOut" def="75" use="80" covered="0"/><du var="yMax" def="76" use="77" target="80" covered="0"/><du var="yMax" def="76" use="77" target="78" covered="0"/><du var="yMax" def="76" use="78" covered="0"/><du var="i" def="77" use="77" target="80" covered="0"/><du var="i" def="77" use="77" target="78" covered="0"/><du var="i" def="77" use="78" covered="0"/><du var="i" def="77" use="77" covered="0"/><du var="i" def="77" use="77" target="80" covered="0"/><du var="i" def="77" use="77" target="78" covered="0"/><du var="i" def="77" use="78" covered="0"/><du var="i" def="77" use="77" covered="0"/><counter type="DU" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="35" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/pdf417/encoder/PDF417ErrorCorrection"><method name="getErrorCorrectionCodewordCount" desc="(I)I"><du var="errorCorrectionLevel" def="138" use="138" target="138" covered="0"/><du var="errorCorrectionLevel" def="138" use="138" target="139" covered="0"/><du var="errorCorrectionLevel" def="138" use="138" target="139" covered="0"/><du var="errorCorrectionLevel" def="138" use="138" target="141" covered="0"/><du var="errorCorrectionLevel" def="138" use="141" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRecommendedMinimumErrorCorrectionLevel" desc="(I)I"><du var="n" def="152" use="152" target="153" covered="0"/><du var="n" def="152" use="152" target="155" covered="0"/><du var="n" def="152" use="155" target="156" covered="0"/><du var="n" def="152" use="155" target="158" covered="0"/><du var="n" def="152" use="158" target="159" covered="0"/><du var="n" def="152" use="158" target="161" covered="0"/><du var="n" def="152" use="161" target="162" covered="0"/><du var="n" def="152" use="161" target="164" covered="0"/><du var="n" def="152" use="164" target="165" covered="0"/><du var="n" def="152" use="164" target="167" covered="0"/><counter type="DU" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateErrorCorrection" desc="(Ljava/lang/CharSequence;I)Ljava/lang/String;"><du var="dataCodewords" def="178" use="182" covered="0"/><du var="errorCorrectionLevel" def="178" use="186" covered="0"/><du var="errorCorrectionLevel" def="178" use="190" covered="0"/><du var="EC_COEFFICIENTS" def="178" use="186" covered="0"/><du var="EC_COEFFICIENTS" def="178" use="190" covered="0"/><du var="k" def="178" use="185" covered="0"/><du var="k" def="178" use="194" covered="0"/><du var="k" def="178" use="195" covered="0"/><du var="e" def="179" use="182" covered="0"/><du var="e" def="179" use="188" covered="0"/><du var="e" def="179" use="192" covered="0"/><du var="e" def="179" use="196" target="197" covered="0"/><du var="e" def="179" use="196" target="199" covered="0"/><du var="e" def="179" use="199" covered="0"/><du var="e" def="179" use="197" covered="0"/><du var="sld" def="180" use="181" target="194" covered="0"/><du var="sld" def="180" use="181" target="182" covered="0"/><du var="i" def="181" use="181" target="194" covered="0"/><du var="i" def="181" use="181" target="182" covered="0"/><du var="i" def="181" use="182" covered="0"/><du var="i" def="181" use="181" covered="0"/><du var="t1" def="182" use="186" covered="0"/><du var="t1" def="182" use="190" covered="0"/><du var="j" def="185" use="185" target="190" covered="0"/><du var="j" def="185" use="185" target="186" covered="0"/><du var="j" def="185" use="186" covered="0"/><du var="j" def="185" use="188" covered="0"/><du var="j" def="185" use="185" covered="0"/><du var="j" def="185" use="185" target="190" covered="0"/><du var="j" def="185" use="185" target="186" covered="0"/><du var="j" def="185" use="186" covered="0"/><du var="j" def="185" use="188" covered="0"/><du var="j" def="185" use="185" covered="0"/><du var="i" def="181" use="181" target="194" covered="0"/><du var="i" def="181" use="181" target="182" covered="0"/><du var="i" def="181" use="182" covered="0"/><du var="i" def="181" use="181" covered="0"/><du var="sb" def="194" use="199" covered="0"/><du var="sb" def="194" use="201" covered="0"/><du var="j" def="195" use="195" target="201" covered="0"/><du var="j" def="195" use="195" target="196" covered="0"/><du var="j" def="195" use="196" target="197" covered="0"/><du var="j" def="195" use="196" target="199" covered="0"/><du var="j" def="195" use="199" covered="0"/><du var="j" def="195" use="195" covered="0"/><du var="j" def="195" use="197" covered="0"/><du var="j" def="195" use="195" target="201" covered="0"/><du var="j" def="195" use="195" target="196" covered="0"/><du var="j" def="195" use="196" target="197" covered="0"/><du var="j" def="195" use="196" target="199" covered="0"/><du var="j" def="195" use="199" covered="0"/><du var="j" def="195" use="195" covered="0"/><du var="j" def="195" use="197" covered="0"/><counter type="DU" missed="53" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="68" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/pdf417/encoder/BarcodeRow"><method name="set" desc="(IZ)V"><du var="this" def="53" use="53" covered="0"/><du var="x" def="53" use="53" covered="0"/><du var="black" def="53" use="53" target="53" covered="0"/><du var="black" def="53" use="53" target="53" covered="0"/><du var="this.row" def="53" use="53" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addBar" desc="(ZI)V"><du var="this" def="61" use="62" covered="0"/><du var="this" def="61" use="62" covered="0"/><du var="black" def="61" use="62" covered="0"/><du var="width" def="61" use="61" target="64" covered="0"/><du var="width" def="61" use="61" target="62" covered="0"/><du var="this.currentLocation" def="61" use="62" covered="0"/><du var="ii" def="61" use="61" target="64" covered="0"/><du var="ii" def="61" use="61" target="62" covered="0"/><du var="ii" def="61" use="61" covered="0"/><du var="this.currentLocation" def="62" use="62" covered="0"/><du var="ii" def="61" use="61" target="64" covered="0"/><du var="ii" def="61" use="61" target="62" covered="0"/><du var="ii" def="61" use="61" covered="0"/><counter type="DU" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getScaledRow" desc="(I)[B"><du var="this" def="79" use="81" covered="0"/><du var="scale" def="79" use="81" covered="0"/><du var="this.row" def="79" use="81" covered="0"/><du var="output" def="79" use="80" target="83" covered="0"/><du var="output" def="79" use="80" target="81" covered="0"/><du var="output" def="79" use="81" covered="0"/><du var="output" def="79" use="83" covered="0"/><du var="i" def="80" use="80" target="83" covered="0"/><du var="i" def="80" use="80" target="81" covered="0"/><du var="i" def="80" use="81" covered="0"/><du var="i" def="80" use="80" covered="0"/><du var="i" def="80" use="80" target="83" covered="0"/><du var="i" def="80" use="80" target="81" covered="0"/><du var="i" def="80" use="81" covered="0"/><du var="i" def="80" use="80" covered="0"/><counter type="DU" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="33" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/pdf417/encoder/PDF417"><method name="calculateNumberOfRows" desc="(III)I"><du var="m" def="553" use="554" target="555" covered="0"/><du var="m" def="553" use="554" target="557" covered="0"/><du var="k" def="553" use="554" target="555" covered="0"/><du var="k" def="553" use="554" target="557" covered="0"/><du var="c" def="553" use="554" target="555" covered="0"/><du var="c" def="553" use="554" target="557" covered="0"/><du var="r" def="553" use="554" target="555" covered="0"/><du var="r" def="553" use="554" target="557" covered="0"/><du var="r" def="553" use="557" covered="0"/><du var="r" def="553" use="555" covered="0"/><du var="r" def="555" use="557" covered="0"/><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOfPadCodewords" desc="(IIII)I"><du var="m" def="572" use="573" target="573" covered="0"/><du var="m" def="572" use="573" target="573" covered="0"/><du var="m" def="572" use="573" covered="0"/><du var="n" def="572" use="573" target="573" covered="0"/><du var="n" def="572" use="573" target="573" covered="0"/><du var="n" def="572" use="573" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeChar" desc="(IILcom/google/zxing/pdf417/encoder/BarcodeRow;)V"><du var="pattern" def="577" use="578" target="578" covered="0"/><du var="pattern" def="577" use="578" target="578" covered="0"/><du var="pattern" def="577" use="581" target="581" covered="0"/><du var="pattern" def="577" use="581" target="581" covered="0"/><du var="len" def="577" use="580" target="592" covered="0"/><du var="len" def="577" use="580" target="581" covered="0"/><du var="logic" def="577" use="585" covered="0"/><du var="logic" def="577" use="592" covered="0"/><du var="map" def="577" use="578" target="578" covered="0"/><du var="map" def="577" use="578" target="578" covered="0"/><du var="map" def="577" use="581" target="581" covered="0"/><du var="map" def="577" use="581" target="581" covered="0"/><du var="map" def="577" use="590" covered="0"/><du var="last" def="578" use="582" target="583" covered="0"/><du var="last" def="578" use="582" target="585" covered="0"/><du var="last" def="578" use="585" covered="0"/><du var="last" def="578" use="592" covered="0"/><du var="width" def="579" use="585" covered="0"/><du var="width" def="579" use="583" covered="0"/><du var="width" def="579" use="592" covered="0"/><du var="i" def="580" use="580" target="592" covered="0"/><du var="i" def="580" use="580" target="581" covered="0"/><du var="i" def="580" use="580" covered="0"/><du var="black" def="581" use="582" target="583" covered="0"/><du var="black" def="581" use="582" target="585" covered="0"/><du var="black" def="581" use="587" covered="0"/><du var="width" def="583" use="585" covered="0"/><du var="width" def="583" use="583" covered="0"/><du var="width" def="583" use="592" covered="0"/><du var="last" def="587" use="582" target="583" covered="0"/><du var="last" def="587" use="582" target="585" covered="0"/><du var="last" def="587" use="585" covered="0"/><du var="last" def="587" use="592" covered="0"/><du var="width" def="588" use="585" covered="0"/><du var="width" def="588" use="583" covered="0"/><du var="width" def="588" use="592" covered="0"/><du var="map" def="590" use="581" target="581" covered="0"/><du var="map" def="590" use="581" target="581" covered="0"/><du var="map" def="590" use="590" covered="0"/><du var="i" def="580" use="580" target="592" covered="0"/><du var="i" def="580" use="580" target="581" covered="0"/><du var="i" def="580" use="580" covered="0"/><counter type="DU" missed="42" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeLowLevel" desc="(Ljava/lang/CharSequence;IIILcom/google/zxing/pdf417/encoder/BarcodeMatrix;)V"><du var="this" def="601" use="629" target="630" covered="0"/><du var="this" def="601" use="629" target="632" covered="0"/><du var="fullCodewords" def="601" use="624" covered="0"/><du var="c" def="601" use="616" covered="0"/><du var="c" def="601" use="623" target="629" covered="0"/><du var="c" def="601" use="623" target="624" covered="0"/><du var="c" def="601" use="611" covered="0"/><du var="r" def="601" use="602" target="638" covered="0"/><du var="r" def="601" use="602" target="603" covered="0"/><du var="r" def="601" use="617" covered="0"/><du var="r" def="601" use="613" covered="0"/><du var="r" def="601" use="614" covered="0"/><du var="r" def="601" use="610" covered="0"/><du var="errorCorrectionLevel" def="601" use="617" covered="0"/><du var="errorCorrectionLevel" def="601" use="613" covered="0"/><du var="logic" def="601" use="604" covered="0"/><du var="logic" def="601" use="605" covered="0"/><du var="logic" def="601" use="621" covered="0"/><du var="logic" def="601" use="625" covered="0"/><du var="logic" def="601" use="633" covered="0"/><du var="logic" def="601" use="635" covered="0"/><du var="logic" def="601" use="630" covered="0"/><du var="CODEWORD_TABLE" def="601" use="620" covered="0"/><du var="CODEWORD_TABLE" def="601" use="624" covered="0"/><du var="CODEWORD_TABLE" def="601" use="632" covered="0"/><du var="this.compact" def="601" use="629" target="630" covered="0"/><du var="this.compact" def="601" use="629" target="632" covered="0"/><du var="idx" def="601" use="624" covered="0"/><du var="idx" def="601" use="626" covered="0"/><du var="y" def="602" use="602" target="638" covered="0"/><du var="y" def="602" use="602" target="603" covered="0"/><du var="y" def="602" use="603" covered="0"/><du var="y" def="602" use="616" covered="0"/><du var="y" def="602" use="617" covered="0"/><du var="y" def="602" use="602" covered="0"/><du var="y" def="602" use="613" covered="0"/><du var="y" def="602" use="614" covered="0"/><du var="y" def="602" use="610" covered="0"/><du var="y" def="602" use="611" covered="0"/><du var="cluster" def="603" use="609" target="610" covered="0"/><du var="cluster" def="603" use="609" target="612" covered="0"/><du var="cluster" def="603" use="612" target="613" covered="0"/><du var="cluster" def="603" use="612" target="616" covered="0"/><du var="cluster" def="603" use="620" covered="0"/><du var="cluster" def="603" use="624" covered="0"/><du var="cluster" def="603" use="632" covered="0"/><du var="left" def="610" use="620" covered="0"/><du var="right" def="611" use="632" covered="0"/><du var="left" def="613" use="620" covered="0"/><du var="right" def="614" use="632" covered="0"/><du var="left" def="616" use="620" covered="0"/><du var="right" def="617" use="632" covered="0"/><du var="x" def="623" use="623" target="629" covered="0"/><du var="x" def="623" use="623" target="624" covered="0"/><du var="x" def="623" use="623" covered="0"/><du var="idx" def="626" use="624" covered="0"/><du var="idx" def="626" use="626" covered="0"/><du var="x" def="623" use="623" target="629" covered="0"/><du var="x" def="623" use="623" target="624" covered="0"/><du var="x" def="623" use="623" covered="0"/><du var="y" def="602" use="602" target="638" covered="0"/><du var="y" def="602" use="602" target="603" covered="0"/><du var="y" def="602" use="603" covered="0"/><du var="y" def="602" use="616" covered="0"/><du var="y" def="602" use="617" covered="0"/><du var="y" def="602" use="602" covered="0"/><du var="y" def="602" use="613" covered="0"/><du var="y" def="602" use="614" covered="0"/><du var="y" def="602" use="610" covered="0"/><du var="y" def="602" use="611" covered="0"/><counter type="DU" missed="70" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateBarcodeLogic" desc="(Ljava/lang/String;I)V"><du var="this" def="648" use="677" covered="0"/><du var="this" def="648" use="678" covered="0"/><du var="msg" def="648" use="661" covered="0"/><du var="errorCorrectionLevel" def="648" use="674" covered="0"/><du var="errorCorrectionLevel" def="648" use="678" covered="0"/><du var="errorCorrectionCodeWords" def="648" use="660" target="661" covered="0"/><du var="errorCorrectionCodeWords" def="648" use="660" target="664" covered="0"/><du var="highLevel" def="649" use="667" covered="0"/><du var="sourceCodeWords" def="650" use="660" target="661" covered="0"/><du var="sourceCodeWords" def="650" use="660" target="664" covered="0"/><du var="sourceCodeWords" def="650" use="664" covered="0"/><du var="cols" def="654" use="677" covered="0"/><du var="cols" def="654" use="678" covered="0"/><du var="rows" def="655" use="677" covered="0"/><du var="rows" def="655" use="678" covered="0"/><du var="pad" def="657" use="664" covered="0"/><du var="pad" def="657" use="668" target="671" covered="0"/><du var="pad" def="657" use="668" target="669" covered="0"/><du var="sb" def="665" use="669" covered="0"/><du var="sb" def="665" use="671" covered="0"/><du var="i" def="668" use="668" target="671" covered="0"/><du var="i" def="668" use="668" target="669" covered="0"/><du var="i" def="668" use="668" covered="0"/><du var="i" def="668" use="668" target="671" covered="0"/><du var="i" def="668" use="668" target="669" covered="0"/><du var="i" def="668" use="668" covered="0"/><counter type="DU" missed="26" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="determineDimensions" desc="(II)[I"><du var="this" def="690" use="693" target="717" covered="0"/><du var="this" def="690" use="693" target="695" covered="0"/><du var="this" def="690" use="697" target="698" covered="0"/><du var="this" def="690" use="697" target="701" covered="0"/><du var="this" def="690" use="701" target="702" covered="0"/><du var="this" def="690" use="701" target="705" covered="0"/><du var="this" def="690" use="718" covered="0"/><du var="this" def="690" use="719" target="720" covered="0"/><du var="this" def="690" use="719" target="724" covered="0"/><du var="this" def="690" use="720" covered="0"/><du var="this" def="690" use="720" covered="0"/><du var="sourceCodeWords" def="690" use="695" covered="0"/><du var="sourceCodeWords" def="690" use="718" covered="0"/><du var="errorCorrectionCodeWords" def="690" use="695" covered="0"/><du var="errorCorrectionCodeWords" def="690" use="718" covered="0"/><du var="this.minCols" def="690" use="718" covered="0"/><du var="this.minCols" def="690" use="720" covered="0"/><du var="this.minRows" def="690" use="697" target="698" covered="0"/><du var="this.minRows" def="690" use="697" target="701" covered="0"/><du var="this.minRows" def="690" use="719" target="720" covered="0"/><du var="this.minRows" def="690" use="719" target="724" covered="0"/><du var="this.minRows" def="690" use="720" covered="0"/><du var="this.maxRows" def="690" use="701" target="702" covered="0"/><du var="this.maxRows" def="690" use="701" target="705" covered="0"/><du var="this.maxCols" def="690" use="693" target="717" covered="0"/><du var="this.maxCols" def="690" use="693" target="695" covered="0"/><du var="ratio" def="690" use="708" target="709" covered="0"/><du var="ratio" def="690" use="708" target="712" covered="0"/><du var="dimension" def="691" use="708" target="708" covered="0"/><du var="dimension" def="691" use="708" target="712" covered="0"/><du var="dimension" def="691" use="717" target="718" covered="0"/><du var="dimension" def="691" use="717" target="724" covered="0"/><du var="dimension" def="691" use="724" target="725" covered="0"/><du var="dimension" def="691" use="724" target="728" covered="0"/><du var="dimension" def="691" use="728" covered="0"/><du var="cols" def="693" use="693" target="717" covered="0"/><du var="cols" def="693" use="693" target="695" covered="0"/><du var="cols" def="693" use="695" covered="0"/><du var="cols" def="693" use="705" covered="0"/><du var="cols" def="693" use="713" covered="0"/><du var="cols" def="693" use="693" covered="0"/><du var="rows" def="695" use="697" target="698" covered="0"/><du var="rows" def="695" use="697" target="701" covered="0"/><du var="rows" def="695" use="701" target="702" covered="0"/><du var="rows" def="695" use="701" target="705" covered="0"/><du var="rows" def="695" use="705" covered="0"/><du var="rows" def="695" use="713" covered="0"/><du var="newRatio" def="705" use="712" covered="0"/><du var="newRatio" def="705" use="708" target="709" covered="0"/><du var="newRatio" def="705" use="708" target="712" covered="0"/><du var="ratio" def="712" use="708" target="709" covered="0"/><du var="ratio" def="712" use="708" target="712" covered="0"/><du var="dimension" def="713" use="708" target="708" covered="0"/><du var="dimension" def="713" use="708" target="712" covered="0"/><du var="dimension" def="713" use="717" target="718" covered="0"/><du var="dimension" def="713" use="717" target="724" covered="0"/><du var="dimension" def="713" use="724" target="725" covered="0"/><du var="dimension" def="713" use="724" target="728" covered="0"/><du var="dimension" def="713" use="728" covered="0"/><du var="cols" def="693" use="693" target="717" covered="0"/><du var="cols" def="693" use="693" target="695" covered="0"/><du var="cols" def="693" use="695" covered="0"/><du var="cols" def="693" use="705" covered="0"/><du var="cols" def="693" use="713" covered="0"/><du var="cols" def="693" use="693" covered="0"/><du var="rows" def="718" use="719" target="720" covered="0"/><du var="rows" def="718" use="719" target="724" covered="0"/><du var="dimension" def="720" use="724" target="725" covered="0"/><du var="dimension" def="720" use="724" target="728" covered="0"/><du var="dimension" def="720" use="728" covered="0"/><counter type="DU" missed="70" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="225" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/PlanarYUVLuminanceSource"><method name="&lt;init&gt;" desc="([BIIIIIIZ)V"><du var="this" def="47" use="53" covered="0"/><du var="this" def="47" use="54" covered="0"/><du var="this" def="47" use="55" covered="0"/><du var="this" def="47" use="56" covered="0"/><du var="this" def="47" use="57" covered="0"/><du var="this" def="47" use="59" covered="0"/><du var="yuvData" def="47" use="53" covered="0"/><du var="dataWidth" def="47" use="49" target="49" covered="0"/><du var="dataWidth" def="47" use="49" target="50" covered="0"/><du var="dataWidth" def="47" use="54" covered="0"/><du var="dataHeight" def="47" use="49" target="50" covered="0"/><du var="dataHeight" def="47" use="49" target="53" covered="0"/><du var="dataHeight" def="47" use="55" covered="0"/><du var="left" def="47" use="49" target="49" covered="0"/><du var="left" def="47" use="49" target="50" covered="0"/><du var="left" def="47" use="56" covered="0"/><du var="top" def="47" use="49" target="50" covered="0"/><du var="top" def="47" use="49" target="53" covered="0"/><du var="top" def="47" use="57" covered="0"/><du var="width" def="47" use="49" target="49" covered="0"/><du var="width" def="47" use="49" target="50" covered="0"/><du var="width" def="47" use="59" covered="0"/><du var="height" def="47" use="49" target="50" covered="0"/><du var="height" def="47" use="49" target="53" covered="0"/><du var="height" def="47" use="59" covered="0"/><du var="reverseHorizontal" def="47" use="58" target="59" covered="0"/><du var="reverseHorizontal" def="47" use="58" target="61" covered="0"/><counter type="DU" missed="27" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRow" desc="(I[B)[B"><du var="this" def="65" use="65" target="66" covered="0"/><du var="this" def="65" use="65" target="68" covered="0"/><du var="this" def="65" use="68" covered="0"/><du var="this" def="65" use="72" covered="0"/><du var="this" def="65" use="73" covered="0"/><du var="y" def="65" use="65" target="65" covered="0"/><du var="y" def="65" use="65" target="66" covered="0"/><du var="y" def="65" use="66" covered="0"/><du var="y" def="65" use="65" target="66" covered="0"/><du var="y" def="65" use="65" target="68" covered="0"/><du var="y" def="65" use="72" covered="0"/><du var="row" def="65" use="69" target="69" covered="0"/><du var="row" def="65" use="69" target="70" covered="0"/><du var="row" def="65" use="69" target="70" covered="0"/><du var="row" def="65" use="69" target="72" covered="0"/><du var="row" def="65" use="73" covered="0"/><du var="row" def="65" use="74" covered="0"/><du var="this.top" def="65" use="72" covered="0"/><du var="this.dataWidth" def="65" use="72" covered="0"/><du var="this.left" def="65" use="72" covered="0"/><du var="this.yuvData" def="65" use="73" covered="0"/><du var="width" def="68" use="70" covered="0"/><du var="width" def="68" use="73" covered="0"/><du var="width" def="68" use="69" target="70" covered="0"/><du var="width" def="68" use="69" target="72" covered="0"/><du var="row" def="70" use="73" covered="0"/><du var="row" def="70" use="74" covered="0"/><counter type="DU" missed="27" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMatrix" desc="()[B"><du var="this" def="79" use="84" target="84" covered="0"/><du var="this" def="79" use="84" target="88" covered="0"/><du var="this" def="79" use="90" covered="0"/><du var="this" def="79" use="93" target="94" covered="0"/><du var="this" def="79" use="93" target="99" covered="0"/><du var="this" def="79" use="101" covered="0"/><du var="this" def="79" use="102" covered="0"/><du var="this" def="79" use="94" covered="0"/><du var="this" def="79" use="84" target="85" covered="0"/><du var="this" def="79" use="84" target="88" covered="0"/><du var="this" def="79" use="85" covered="0"/><du var="this.dataWidth" def="79" use="84" target="84" covered="0"/><du var="this.dataWidth" def="79" use="84" target="88" covered="0"/><du var="this.dataWidth" def="79" use="90" covered="0"/><du var="this.dataWidth" def="79" use="93" target="94" covered="0"/><du var="this.dataWidth" def="79" use="93" target="99" covered="0"/><du var="this.dataWidth" def="79" use="102" covered="0"/><du var="this.dataHeight" def="79" use="84" target="85" covered="0"/><du var="this.dataHeight" def="79" use="84" target="88" covered="0"/><du var="this.yuvData" def="79" use="101" covered="0"/><du var="this.yuvData" def="79" use="94" covered="0"/><du var="this.yuvData" def="79" use="85" covered="0"/><du var="this.top" def="79" use="90" covered="0"/><du var="this.left" def="79" use="90" covered="0"/><du var="width" def="79" use="84" target="84" covered="0"/><du var="width" def="79" use="84" target="88" covered="0"/><du var="width" def="79" use="88" covered="0"/><du var="width" def="79" use="93" target="94" covered="0"/><du var="width" def="79" use="93" target="99" covered="0"/><du var="width" def="79" use="100" covered="0"/><du var="width" def="79" use="101" covered="0"/><du var="height" def="80" use="88" covered="0"/><du var="height" def="80" use="99" target="104" covered="0"/><du var="height" def="80" use="99" target="100" covered="0"/><du var="height" def="80" use="84" target="85" covered="0"/><du var="height" def="80" use="84" target="88" covered="0"/><du var="area" def="88" use="94" covered="0"/><du var="matrix" def="89" use="101" covered="0"/><du var="matrix" def="89" use="104" covered="0"/><du var="matrix" def="89" use="94" covered="0"/><du var="matrix" def="89" use="95" covered="0"/><du var="inputOffset" def="90" use="101" covered="0"/><du var="inputOffset" def="90" use="102" covered="0"/><du var="inputOffset" def="90" use="94" covered="0"/><du var="y" def="99" use="99" target="104" covered="0"/><du var="y" def="99" use="99" target="100" covered="0"/><du var="y" def="99" use="100" covered="0"/><du var="y" def="99" use="99" covered="0"/><du var="inputOffset" def="102" use="101" covered="0"/><du var="inputOffset" def="102" use="102" covered="0"/><du var="y" def="99" use="99" target="104" covered="0"/><du var="y" def="99" use="99" target="100" covered="0"/><du var="y" def="99" use="100" covered="0"/><du var="y" def="99" use="99" covered="0"/><counter type="DU" missed="54" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="renderThumbnail" desc="()[I"><du var="this" def="125" use="137" covered="0"/><du var="this.dataWidth" def="125" use="137" covered="0"/><du var="width" def="125" use="132" covered="0"/><du var="width" def="125" use="133" target="137" covered="0"/><du var="width" def="125" use="133" target="134" covered="0"/><du var="height" def="126" use="131" target="139" covered="0"/><du var="height" def="126" use="131" target="132" covered="0"/><du var="pixels" def="127" use="135" covered="0"/><du var="pixels" def="127" use="139" covered="0"/><du var="yuv" def="128" use="134" covered="0"/><du var="inputOffset" def="129" use="134" covered="0"/><du var="inputOffset" def="129" use="137" covered="0"/><du var="y" def="131" use="131" target="139" covered="0"/><du var="y" def="131" use="131" target="132" covered="0"/><du var="y" def="131" use="132" covered="0"/><du var="y" def="131" use="131" covered="0"/><du var="outputOffset" def="132" use="135" covered="0"/><du var="x" def="133" use="133" target="137" covered="0"/><du var="x" def="133" use="133" target="134" covered="0"/><du var="x" def="133" use="134" covered="0"/><du var="x" def="133" use="135" covered="0"/><du var="x" def="133" use="133" covered="0"/><du var="x" def="133" use="133" target="137" covered="0"/><du var="x" def="133" use="133" target="134" covered="0"/><du var="x" def="133" use="134" covered="0"/><du var="x" def="133" use="135" covered="0"/><du var="x" def="133" use="133" covered="0"/><du var="inputOffset" def="137" use="134" covered="0"/><du var="inputOffset" def="137" use="137" covered="0"/><du var="y" def="131" use="131" target="139" covered="0"/><du var="y" def="131" use="131" target="132" covered="0"/><du var="y" def="131" use="132" covered="0"/><du var="y" def="131" use="131" covered="0"/><counter type="DU" missed="33" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverseHorizontal" desc="(II)V"><du var="this" def="157" use="158" covered="0"/><du var="width" def="157" use="159" covered="0"/><du var="width" def="157" use="160" covered="0"/><du var="height" def="157" use="158" target="166" covered="0"/><du var="height" def="157" use="158" target="159" covered="0"/><du var="this.dataWidth" def="157" use="158" covered="0"/><du var="yuvData" def="157" use="161" covered="0"/><du var="yuvData" def="157" use="162" covered="0"/><du var="yuvData" def="157" use="163" covered="0"/><du var="y" def="158" use="158" target="166" covered="0"/><du var="y" def="158" use="158" target="159" covered="0"/><du var="y" def="158" use="158" covered="0"/><du var="rowStart" def="158" use="159" covered="0"/><du var="rowStart" def="158" use="160" covered="0"/><du var="rowStart" def="158" use="160" covered="0"/><du var="rowStart" def="158" use="158" covered="0"/><du var="middle" def="159" use="160" target="158" covered="0"/><du var="middle" def="159" use="160" target="161" covered="0"/><du var="x1" def="160" use="160" target="158" covered="0"/><du var="x1" def="160" use="160" target="161" covered="0"/><du var="x1" def="160" use="161" covered="0"/><du var="x1" def="160" use="162" covered="0"/><du var="x1" def="160" use="160" covered="0"/><du var="x2" def="160" use="162" covered="0"/><du var="x2" def="160" use="163" covered="0"/><du var="x2" def="160" use="160" covered="0"/><du var="x1" def="160" use="160" target="158" covered="0"/><du var="x1" def="160" use="160" target="161" covered="0"/><du var="x1" def="160" use="161" covered="0"/><du var="x1" def="160" use="162" covered="0"/><du var="x1" def="160" use="160" covered="0"/><du var="x2" def="160" use="162" covered="0"/><du var="x2" def="160" use="163" covered="0"/><du var="x2" def="160" use="160" covered="0"/><du var="y" def="158" use="158" target="166" covered="0"/><du var="y" def="158" use="158" target="159" covered="0"/><du var="y" def="158" use="158" covered="0"/><du var="rowStart" def="158" use="159" covered="0"/><du var="rowStart" def="158" use="160" covered="0"/><du var="rowStart" def="158" use="160" covered="0"/><du var="rowStart" def="158" use="158" covered="0"/><counter type="DU" missed="41" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="182" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/Result"><method name="&lt;init&gt;" desc="(Ljava/lang/String;[B[Lcom/google/zxing/ResultPoint;Lcom/google/zxing/BarcodeFormat;J)V"><du var="this" def="49" use="50" covered="0"/><du var="text" def="49" use="50" covered="0"/><du var="rawBytes" def="49" use="49" target="49" covered="0"/><du var="rawBytes" def="49" use="49" target="49" covered="0"/><du var="rawBytes" def="49" use="50" covered="0"/><du var="resultPoints" def="49" use="50" covered="0"/><du var="format" def="49" use="50" covered="0"/><du var="timestamp" def="49" use="50" covered="0"/><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putMetadata" desc="(Lcom/google/zxing/ResultMetadataType;Ljava/lang/Object;)V"><du var="this" def="116" use="116" target="117" covered="0"/><du var="this" def="116" use="116" target="119" covered="0"/><du var="this" def="116" use="119" covered="0"/><du var="this" def="116" use="117" covered="0"/><du var="type" def="116" use="119" covered="0"/><du var="value" def="116" use="119" covered="0"/><du var="this.resultMetadata" def="116" use="116" target="117" covered="0"/><du var="this.resultMetadata" def="116" use="116" target="119" covered="0"/><du var="this.resultMetadata" def="116" use="119" covered="0"/><du var="this.resultMetadata" def="117" use="119" covered="0"/><counter type="DU" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAllMetadata" desc="(Ljava/util/Map;)V"><du var="this" def="123" use="124" target="125" covered="0"/><du var="this" def="123" use="124" target="127" covered="0"/><du var="this" def="123" use="127" covered="0"/><du var="this" def="123" use="125" covered="0"/><du var="metadata" def="123" use="123" target="124" covered="0"/><du var="metadata" def="123" use="123" target="130" covered="0"/><du var="metadata" def="123" use="127" covered="0"/><du var="metadata" def="123" use="125" covered="0"/><du var="this.resultMetadata" def="123" use="124" target="125" covered="0"/><du var="this.resultMetadata" def="123" use="124" target="127" covered="0"/><du var="this.resultMetadata" def="123" use="127" covered="0"/><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addResultPoints" desc="([Lcom/google/zxing/ResultPoint;)V"><du var="this" def="133" use="140" covered="0"/><du var="this" def="133" use="135" covered="0"/><du var="newPoints" def="133" use="136" target="136" covered="0"/><du var="newPoints" def="133" use="136" target="142" covered="0"/><du var="newPoints" def="133" use="136" target="137" covered="0"/><du var="newPoints" def="133" use="136" target="142" covered="0"/><du var="newPoints" def="133" use="137" covered="0"/><du var="newPoints" def="133" use="139" covered="0"/><du var="newPoints" def="133" use="135" covered="0"/><du var="oldPoints" def="133" use="134" target="135" covered="0"/><du var="oldPoints" def="133" use="134" target="136" covered="0"/><du var="oldPoints" def="133" use="137" covered="0"/><du var="oldPoints" def="133" use="138" covered="0"/><du var="oldPoints" def="133" use="139" covered="0"/><counter type="DU" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="43" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/MultiFormatReader"><method name="decodeWithState" desc="(Lcom/google/zxing/BinaryBitmap;)Lcom/google/zxing/Result;"><du var="this" def="82" use="82" target="83" covered="0"/><du var="this" def="82" use="82" target="85" covered="0"/><du var="this" def="82" use="85" covered="0"/><du var="this" def="82" use="83" covered="0"/><du var="image" def="82" use="85" covered="0"/><du var="this.readers" def="82" use="82" target="83" covered="0"/><du var="this.readers" def="82" use="82" target="85" covered="0"/><counter type="DU" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setHints" desc="(Ljava/util/Map;)V"><du var="this" def="96" use="155" covered="0"/><du var="hints" def="96" use="98" target="98" covered="0"/><du var="hints" def="96" use="98" target="98" covered="0"/><du var="hints" def="96" use="101" target="101" covered="0"/><du var="hints" def="96" use="101" target="101" covered="0"/><du var="hints" def="96" use="100" covered="0"/><du var="hints" def="96" use="152" covered="0"/><du var="hints" def="96" use="142" covered="0"/><du var="hints" def="96" use="137" covered="0"/><du var="hints" def="96" use="118" covered="0"/><du var="hints" def="96" use="98" target="98" covered="0"/><du var="hints" def="96" use="98" target="98" covered="0"/><du var="TRY_HARDER" def="96" use="98" target="98" covered="0"/><du var="TRY_HARDER" def="96" use="98" target="98" covered="0"/><du var="POSSIBLE_FORMATS" def="96" use="100" covered="0"/><du var="UPC_A" def="96" use="105" target="106" covered="0"/><du var="UPC_A" def="96" use="105" target="104" covered="0"/><du var="UPC_E" def="96" use="106" target="107" covered="0"/><du var="UPC_E" def="96" use="106" target="104" covered="0"/><du var="EAN_13" def="96" use="107" target="108" covered="0"/><du var="EAN_13" def="96" use="107" target="104" covered="0"/><du var="EAN_8" def="96" use="108" target="109" covered="0"/><du var="EAN_8" def="96" use="108" target="104" covered="0"/><du var="CODABAR" def="96" use="109" target="110" covered="0"/><du var="CODABAR" def="96" use="109" target="104" covered="0"/><du var="CODE_39" def="96" use="110" target="111" covered="0"/><du var="CODE_39" def="96" use="110" target="104" covered="0"/><du var="CODE_93" def="96" use="111" target="112" covered="0"/><du var="CODE_93" def="96" use="111" target="104" covered="0"/><du var="CODE_128" def="96" use="112" target="113" covered="0"/><du var="CODE_128" def="96" use="112" target="104" covered="0"/><du var="ITF" def="96" use="113" target="114" covered="0"/><du var="ITF" def="96" use="113" target="104" covered="0"/><du var="RSS_14" def="96" use="114" target="115" covered="0"/><du var="RSS_14" def="96" use="114" target="104" covered="0"/><du var="RSS_EXPANDED" def="96" use="115" target="104" covered="0"/><du var="RSS_EXPANDED" def="96" use="115" target="104" covered="0"/><du var="QR_CODE" def="96" use="120" target="121" covered="0"/><du var="QR_CODE" def="96" use="120" target="123" covered="0"/><du var="DATA_MATRIX" def="96" use="123" target="124" covered="0"/><du var="DATA_MATRIX" def="96" use="123" target="126" covered="0"/><du var="AZTEC" def="96" use="126" target="127" covered="0"/><du var="AZTEC" def="96" use="126" target="129" covered="0"/><du var="PDF_417" def="96" use="129" target="130" covered="0"/><du var="PDF_417" def="96" use="129" target="132" covered="0"/><du var="MAXICODE" def="96" use="132" target="133" covered="0"/><du var="MAXICODE" def="96" use="132" target="136" covered="0"/><du var="tryHarder" def="98" use="141" target="142" covered="0"/><du var="tryHarder" def="98" use="141" target="145" covered="0"/><du var="tryHarder" def="98" use="151" target="152" covered="0"/><du var="tryHarder" def="98" use="151" target="155" covered="0"/><du var="tryHarder" def="98" use="136" target="137" covered="0"/><du var="tryHarder" def="98" use="136" target="140" covered="0"/><du var="tryHarder" def="98" use="117" target="118" covered="0"/><du var="tryHarder" def="98" use="117" target="120" covered="0"/><du var="formats" def="100" use="103" target="105" covered="0"/><du var="formats" def="100" use="103" target="140" covered="0"/><du var="formats" def="100" use="105" target="106" covered="0"/><du var="formats" def="100" use="105" target="104" covered="0"/><du var="formats" def="100" use="120" target="121" covered="0"/><du var="formats" def="100" use="120" target="123" covered="0"/><du var="formats" def="100" use="123" target="124" covered="0"/><du var="formats" def="100" use="123" target="126" covered="0"/><du var="formats" def="100" use="126" target="127" covered="0"/><du var="formats" def="100" use="126" target="129" covered="0"/><du var="formats" def="100" use="129" target="130" covered="0"/><du var="formats" def="100" use="129" target="132" covered="0"/><du var="formats" def="100" use="132" target="133" covered="0"/><du var="formats" def="100" use="132" target="136" covered="0"/><du var="formats" def="100" use="106" target="107" covered="0"/><du var="formats" def="100" use="106" target="104" covered="0"/><du var="formats" def="100" use="107" target="108" covered="0"/><du var="formats" def="100" use="107" target="104" covered="0"/><du var="formats" def="100" use="108" target="109" covered="0"/><du var="formats" def="100" use="108" target="104" covered="0"/><du var="formats" def="100" use="109" target="110" covered="0"/><du var="formats" def="100" use="109" target="104" covered="0"/><du var="formats" def="100" use="110" target="111" covered="0"/><du var="formats" def="100" use="110" target="104" covered="0"/><du var="formats" def="100" use="111" target="112" covered="0"/><du var="formats" def="100" use="111" target="104" covered="0"/><du var="formats" def="100" use="112" target="113" covered="0"/><du var="formats" def="100" use="112" target="104" covered="0"/><du var="formats" def="100" use="113" target="114" covered="0"/><du var="formats" def="100" use="113" target="104" covered="0"/><du var="formats" def="100" use="114" target="115" covered="0"/><du var="formats" def="100" use="114" target="104" covered="0"/><du var="formats" def="100" use="115" target="104" covered="0"/><du var="formats" def="100" use="115" target="104" covered="0"/><du var="readers" def="102" use="140" target="141" covered="0"/><du var="readers" def="102" use="140" target="155" covered="0"/><du var="readers" def="102" use="155" covered="0"/><du var="readers" def="102" use="145" covered="0"/><du var="readers" def="102" use="146" covered="0"/><du var="readers" def="102" use="147" covered="0"/><du var="readers" def="102" use="148" covered="0"/><du var="readers" def="102" use="149" covered="0"/><du var="readers" def="102" use="152" covered="0"/><du var="readers" def="102" use="142" covered="0"/><du var="readers" def="102" use="137" covered="0"/><du var="readers" def="102" use="133" covered="0"/><du var="readers" def="102" use="130" covered="0"/><du var="readers" def="102" use="127" covered="0"/><du var="readers" def="102" use="124" covered="0"/><du var="readers" def="102" use="121" covered="0"/><du var="readers" def="102" use="118" covered="0"/><du var="addOneDReader" def="104" use="117" target="117" covered="0"/><du var="addOneDReader" def="104" use="117" target="120" covered="0"/><du var="addOneDReader" def="104" use="136" target="136" covered="0"/><du var="addOneDReader" def="104" use="136" target="140" covered="0"/><counter type="DU" missed="110" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V"><du var="this" def="160" use="160" target="161" covered="0"/><du var="this" def="160" use="160" target="165" covered="0"/><du var="this" def="160" use="161" covered="0"/><du var="this" def="160" use="161" covered="0"/><du var="this.readers" def="160" use="160" target="161" covered="0"/><du var="this.readers" def="160" use="160" target="165" covered="0"/><du var="this.readers" def="160" use="161" covered="0"/><du var="this.readers" def="160" use="161" covered="0"/><counter type="DU" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeInternal" desc="(Lcom/google/zxing/BinaryBitmap;)Lcom/google/zxing/Result;"><du var="this" def="168" use="168" target="169" covered="0"/><du var="this" def="168" use="168" target="177" covered="0"/><du var="this" def="168" use="169" covered="0"/><du var="this" def="168" use="169" covered="0"/><du var="this" def="168" use="171" covered="0"/><du var="image" def="168" use="171" covered="0"/><du var="this.readers" def="168" use="168" target="169" covered="0"/><du var="this.readers" def="168" use="168" target="177" covered="0"/><du var="this.readers" def="168" use="169" covered="0"/><du var="this.readers" def="168" use="169" covered="0"/><du var="this.hints" def="168" use="171" covered="0"/><counter type="DU" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="153" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/Dimension"><method name="&lt;init&gt;" desc="(II)V"><du var="this" def="27" use="31" covered="0"/><du var="this" def="27" use="32" covered="0"/><du var="width" def="27" use="28" target="28" covered="0"/><du var="width" def="27" use="28" target="29" covered="0"/><du var="width" def="27" use="31" covered="0"/><du var="height" def="27" use="28" target="29" covered="0"/><du var="height" def="27" use="28" target="31" covered="0"/><du var="height" def="27" use="32" covered="0"/><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><du var="this" def="45" use="47" target="47" covered="0"/><du var="this" def="45" use="47" target="47" covered="0"/><du var="this" def="45" use="47" target="47" covered="0"/><du var="this" def="45" use="47" target="47" covered="0"/><du var="other" def="45" use="45" target="46" covered="0"/><du var="other" def="45" use="45" target="49" covered="0"/><du var="other" def="45" use="46" covered="0"/><du var="this.width" def="45" use="47" target="47" covered="0"/><du var="this.width" def="45" use="47" target="47" covered="0"/><du var="this.height" def="45" use="47" target="47" covered="0"/><du var="this.height" def="45" use="47" target="47" covered="0"/><du var="d" def="46" use="47" target="47" covered="0"/><du var="d" def="46" use="47" target="47" covered="0"/><du var="d" def="46" use="47" target="47" covered="0"/><du var="d" def="46" use="47" target="47" covered="0"/><du var="d.width" def="46" use="47" target="47" covered="0"/><du var="d.width" def="46" use="47" target="47" covered="0"/><du var="d.height" def="46" use="47" target="47" covered="0"/><du var="d.height" def="46" use="47" target="47" covered="0"/><counter type="DU" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="27" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/maxicode/MaxiCodeReader"><method name="decode" desc="(Lcom/google/zxing/BinaryBitmap;Ljava/util/Map;)Lcom/google/zxing/Result;"><du var="this" def="69" use="71" covered="0"/><du var="image" def="69" use="70" covered="0"/><du var="hints" def="69" use="69" target="69" covered="0"/><du var="hints" def="69" use="69" target="73" covered="0"/><du var="hints" def="69" use="69" target="70" covered="0"/><du var="hints" def="69" use="69" target="73" covered="0"/><du var="hints" def="69" use="71" covered="0"/><du var="PURE_BARCODE" def="69" use="69" target="70" covered="0"/><du var="PURE_BARCODE" def="69" use="69" target="73" covered="0"/><du var="this.decoder" def="69" use="71" covered="0"/><du var="NO_POINTS" def="69" use="76" covered="0"/><du var="MAXICODE" def="69" use="76" covered="0"/><du var="ERROR_CORRECTION_LEVEL" def="69" use="80" covered="0"/><du var="result" def="76" use="82" covered="0"/><du var="result" def="76" use="80" covered="0"/><du var="ecLevel" def="78" use="79" target="80" covered="0"/><du var="ecLevel" def="78" use="79" target="82" covered="0"/><du var="ecLevel" def="78" use="80" covered="0"/><counter type="DU" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractPureBits" desc="(Lcom/google/zxing/common/BitMatrix;)Lcom/google/zxing/common/BitMatrix;"><du var="image" def="101" use="117" target="118" covered="0"/><du var="image" def="101" use="117" target="115" covered="0"/><du var="enclosingRectangle" def="101" use="102" target="103" covered="0"/><du var="enclosingRectangle" def="101" use="102" target="106" covered="0"/><du var="enclosingRectangle" def="101" use="106" covered="0"/><du var="enclosingRectangle" def="101" use="107" covered="0"/><du var="enclosingRectangle" def="101" use="108" covered="0"/><du var="enclosingRectangle" def="101" use="109" covered="0"/><du var="left" def="106" use="116" covered="0"/><du var="top" def="107" use="114" covered="0"/><du var="width" def="108" use="116" covered="0"/><du var="height" def="109" use="114" covered="0"/><du var="bits" def="112" use="118" covered="0"/><du var="bits" def="112" use="122" covered="0"/><du var="y" def="113" use="113" target="122" covered="0"/><du var="y" def="113" use="113" target="114" covered="0"/><du var="y" def="113" use="114" covered="0"/><du var="y" def="113" use="116" covered="0"/><du var="y" def="113" use="118" covered="0"/><du var="y" def="113" use="113" covered="0"/><du var="iy" def="114" use="117" target="118" covered="0"/><du var="iy" def="114" use="117" target="115" covered="0"/><du var="x" def="115" use="115" target="113" covered="0"/><du var="x" def="115" use="115" target="116" covered="0"/><du var="x" def="115" use="116" covered="0"/><du var="x" def="115" use="115" covered="0"/><du var="x" def="115" use="118" covered="0"/><du var="ix" def="116" use="117" target="118" covered="0"/><du var="ix" def="116" use="117" target="115" covered="0"/><du var="x" def="115" use="115" target="113" covered="0"/><du var="x" def="115" use="115" target="116" covered="0"/><du var="x" def="115" use="116" covered="0"/><du var="x" def="115" use="115" covered="0"/><du var="x" def="115" use="118" covered="0"/><du var="y" def="113" use="113" target="122" covered="0"/><du var="y" def="113" use="113" target="114" covered="0"/><du var="y" def="113" use="114" covered="0"/><du var="y" def="113" use="116" covered="0"/><du var="y" def="113" use="118" covered="0"/><du var="y" def="113" use="113" covered="0"/><counter type="DU" missed="40" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="58" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/maxicode/decoder/Decoder"><method name="decode" desc="(Lcom/google/zxing/common/BitMatrix;Ljava/util/Map;)Lcom/google/zxing/common/DecoderResult;"><du var="this" def="54" use="69" covered="0"/><du var="this" def="54" use="70" covered="0"/><du var="this" def="54" use="64" covered="0"/><du var="this" def="54" use="65" covered="0"/><du var="codewords" def="55" use="69" covered="0"/><du var="codewords" def="55" use="70" covered="0"/><du var="codewords" def="55" use="77" covered="0"/><du var="codewords" def="55" use="78" covered="0"/><du var="codewords" def="55" use="64" covered="0"/><du var="codewords" def="55" use="65" covered="0"/><du var="mode" def="58" use="60" target="74" covered="0"/><du var="mode" def="58" use="60" target="64" covered="0"/><du var="mode" def="58" use="60" target="69" covered="0"/><du var="mode" def="58" use="80" covered="0"/><du var="datawords" def="66" use="77" covered="0"/><du var="datawords" def="66" use="78" covered="0"/><du var="datawords" def="66" use="80" covered="0"/><du var="datawords" def="71" use="77" covered="0"/><du var="datawords" def="71" use="78" covered="0"/><du var="datawords" def="71" use="80" covered="0"/><counter type="DU" missed="20" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="correctErrors" desc="([BIIII)V"><du var="this" def="88" use="101" covered="0"/><du var="codewordBytes" def="88" use="97" covered="0"/><du var="codewordBytes" def="88" use="109" covered="0"/><du var="start" def="88" use="97" covered="0"/><du var="start" def="88" use="109" covered="0"/><du var="dataCodewords" def="88" use="107" target="112" covered="0"/><du var="dataCodewords" def="88" use="107" target="108" covered="0"/><du var="ecCodewords" def="88" use="101" covered="0"/><du var="mode" def="88" use="91" target="91" covered="0"/><du var="mode" def="88" use="91" target="91" covered="0"/><du var="mode" def="88" use="96" target="96" covered="0"/><du var="mode" def="88" use="96" target="97" covered="0"/><du var="mode" def="88" use="96" target="97" covered="0"/><du var="mode" def="88" use="96" target="95" covered="0"/><du var="mode" def="88" use="108" target="108" covered="0"/><du var="mode" def="88" use="108" target="109" covered="0"/><du var="mode" def="88" use="108" target="109" covered="0"/><du var="mode" def="88" use="108" target="107" covered="0"/><du var="this.rsDecoder" def="88" use="101" covered="0"/><du var="codewords" def="88" use="94" covered="0"/><du var="codewords" def="88" use="95" target="101" covered="0"/><du var="codewords" def="88" use="95" target="96" covered="0"/><du var="divisor" def="91" use="97" covered="0"/><du var="divisor" def="91" use="101" covered="0"/><du var="divisor" def="91" use="109" covered="0"/><du var="codewordsInts" def="94" use="97" covered="0"/><du var="codewordsInts" def="94" use="101" covered="0"/><du var="codewordsInts" def="94" use="109" covered="0"/><du var="i" def="95" use="95" target="101" covered="0"/><du var="i" def="95" use="95" target="96" covered="0"/><du var="i" def="95" use="97" covered="0"/><du var="i" def="95" use="95" covered="0"/><du var="i" def="95" use="96" target="97" covered="0"/><du var="i" def="95" use="96" target="95" covered="0"/><du var="i" def="95" use="95" target="101" covered="0"/><du var="i" def="95" use="95" target="96" covered="0"/><du var="i" def="95" use="97" covered="0"/><du var="i" def="95" use="95" covered="0"/><du var="i" def="95" use="96" target="97" covered="0"/><du var="i" def="95" use="96" target="95" covered="0"/><du var="i" def="107" use="107" target="112" covered="0"/><du var="i" def="107" use="107" target="108" covered="0"/><du var="i" def="107" use="109" covered="0"/><du var="i" def="107" use="107" covered="0"/><du var="i" def="107" use="108" target="109" covered="0"/><du var="i" def="107" use="108" target="107" covered="0"/><du var="i" def="107" use="107" target="112" covered="0"/><du var="i" def="107" use="107" target="108" covered="0"/><du var="i" def="107" use="109" covered="0"/><du var="i" def="107" use="107" covered="0"/><du var="i" def="107" use="108" target="109" covered="0"/><du var="i" def="107" use="108" target="107" covered="0"/><counter type="DU" missed="52" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="72" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/maxicode/decoder/BitMatrixParser"><method name="readCodewords" desc="()[B"><du var="this" def="73" use="80" target="81" covered="0"/><du var="this" def="73" use="80" target="78" covered="0"/><du var="this.bitMatrix" def="73" use="80" target="81" covered="0"/><du var="this.bitMatrix" def="73" use="80" target="78" covered="0"/><du var="BITNR" def="73" use="77" covered="0"/><du var="result" def="73" use="81" covered="0"/><du var="result" def="73" use="85" covered="0"/><du var="height" def="74" use="76" target="85" covered="0"/><du var="height" def="74" use="76" target="77" covered="0"/><du var="width" def="75" use="78" target="76" covered="0"/><du var="width" def="75" use="78" target="79" covered="0"/><du var="y" def="76" use="76" target="85" covered="0"/><du var="y" def="76" use="76" target="77" covered="0"/><du var="y" def="76" use="77" covered="0"/><du var="y" def="76" use="80" target="81" covered="0"/><du var="y" def="76" use="80" target="78" covered="0"/><du var="y" def="76" use="76" covered="0"/><du var="bitnrRow" def="77" use="79" covered="0"/><du var="x" def="78" use="78" target="76" covered="0"/><du var="x" def="78" use="78" target="79" covered="0"/><du var="x" def="78" use="79" covered="0"/><du var="x" def="78" use="78" covered="0"/><du var="x" def="78" use="80" target="81" covered="0"/><du var="x" def="78" use="80" target="78" covered="0"/><du var="bit" def="79" use="80" target="80" covered="0"/><du var="bit" def="79" use="80" target="78" covered="0"/><du var="bit" def="79" use="81" covered="0"/><du var="x" def="78" use="78" target="76" covered="0"/><du var="x" def="78" use="78" target="79" covered="0"/><du var="x" def="78" use="79" covered="0"/><du var="x" def="78" use="78" covered="0"/><du var="x" def="78" use="80" target="81" covered="0"/><du var="x" def="78" use="80" target="78" covered="0"/><du var="y" def="76" use="76" target="85" covered="0"/><du var="y" def="76" use="76" target="77" covered="0"/><du var="y" def="76" use="77" covered="0"/><du var="y" def="76" use="80" target="81" covered="0"/><du var="y" def="76" use="80" target="78" covered="0"/><du var="y" def="76" use="76" covered="0"/><counter type="DU" missed="39" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="39" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/maxicode/decoder/DecodedBitStreamParser"><method name="decode" desc="([BI)Lcom/google/zxing/common/DecoderResult;"><du var="bytes" def="74" use="100" covered="0"/><du var="bytes" def="74" use="97" covered="0"/><du var="bytes" def="74" use="84" covered="0"/><du var="bytes" def="74" use="87" covered="0"/><du var="bytes" def="74" use="88" covered="0"/><du var="bytes" def="74" use="89" covered="0"/><du var="bytes" def="74" use="80" covered="0"/><du var="bytes" def="74" use="81" covered="0"/><du var="bytes" def="74" use="103" covered="0"/><du var="mode" def="74" use="75" target="103" covered="0"/><du var="mode" def="74" use="75" target="79" covered="0"/><du var="mode" def="74" use="75" target="97" covered="0"/><du var="mode" def="74" use="75" target="100" covered="0"/><du var="mode" def="74" use="79" target="80" covered="0"/><du var="mode" def="74" use="79" target="84" covered="0"/><du var="mode" def="74" use="103" covered="0"/><du var="result" def="74" use="100" covered="0"/><du var="result" def="74" use="97" covered="0"/><du var="result" def="74" use="89" covered="0"/><du var="result" def="74" use="90" target="91" covered="0"/><du var="result" def="74" use="90" target="93" covered="0"/><du var="result" def="74" use="93" covered="0"/><du var="result" def="74" use="91" covered="0"/><du var="result" def="74" use="103" covered="0"/><du var="postcode" def="82" use="93" covered="0"/><du var="postcode" def="82" use="91" covered="0"/><du var="postcode" def="84" use="93" covered="0"/><du var="postcode" def="84" use="91" covered="0"/><du var="country" def="87" use="93" covered="0"/><du var="country" def="87" use="91" covered="0"/><du var="service" def="88" use="93" covered="0"/><du var="service" def="88" use="91" covered="0"/><counter type="DU" missed="32" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBit" desc="(I[B)I"><du var="bytes" def="107" use="108" target="108" covered="0"/><du var="bytes" def="107" use="108" target="108" covered="0"/><du var="bit" def="107" use="108" target="108" covered="0"/><du var="bit" def="107" use="108" target="108" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInt" desc="([B[B)I"><du var="bytes" def="112" use="117" covered="0"/><du var="x" def="112" use="112" target="113" covered="0"/><du var="x" def="112" use="112" target="115" covered="0"/><du var="x" def="112" use="116" target="119" covered="0"/><du var="x" def="112" use="116" target="117" covered="0"/><du var="x" def="112" use="117" covered="0"/><du var="val" def="115" use="117" covered="0"/><du var="val" def="115" use="119" covered="0"/><du var="i" def="116" use="116" target="119" covered="0"/><du var="i" def="116" use="116" target="117" covered="0"/><du var="i" def="116" use="117" covered="0"/><du var="i" def="116" use="116" covered="0"/><du var="val" def="117" use="117" covered="0"/><du var="val" def="117" use="119" covered="0"/><du var="i" def="116" use="116" target="119" covered="0"/><du var="i" def="116" use="116" target="117" covered="0"/><du var="i" def="116" use="117" covered="0"/><du var="i" def="116" use="116" covered="0"/><counter type="DU" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="([BII)Ljava/lang/String;"><du var="bytes" def="153" use="158" covered="0"/><du var="bytes" def="153" use="188" covered="0"/><du var="start" def="153" use="157" target="201" covered="0"/><du var="start" def="153" use="157" target="158" covered="0"/><du var="len" def="153" use="157" target="201" covered="0"/><du var="len" def="153" use="157" target="158" covered="0"/><du var="SETS" def="153" use="158" covered="0"/><du var="sb" def="153" use="189" covered="0"/><du var="sb" def="153" use="195" covered="0"/><du var="sb" def="153" use="201" target="201" covered="0"/><du var="sb" def="153" use="201" target="204" covered="0"/><du var="sb" def="153" use="204" covered="0"/><du var="sb" def="153" use="201" target="204" covered="0"/><du var="sb" def="153" use="201" target="202" covered="0"/><du var="sb" def="153" use="202" covered="0"/><du var="shift" def="154" use="197" covered="0"/><du var="set" def="155" use="158" covered="0"/><du var="set" def="155" use="183" covered="0"/><du var="set" def="155" use="178" covered="0"/><du var="set" def="155" use="173" covered="0"/><du var="lastset" def="156" use="198" covered="0"/><du var="i" def="157" use="157" target="201" covered="0"/><du var="i" def="157" use="157" target="158" covered="0"/><du var="i" def="157" use="158" covered="0"/><du var="i" def="157" use="188" covered="0"/><du var="i" def="157" use="157" covered="0"/><du var="c" def="158" use="159" target="195" covered="0"/><du var="c" def="158" use="159" target="173" covered="0"/><du var="c" def="158" use="159" target="178" covered="0"/><du var="c" def="158" use="159" target="183" covered="0"/><du var="c" def="158" use="159" target="161" covered="0"/><du var="c" def="158" use="159" target="165" covered="0"/><du var="c" def="158" use="159" target="192" covered="0"/><du var="c" def="158" use="159" target="188" covered="0"/><du var="c" def="158" use="174" covered="0"/><du var="c" def="158" use="195" covered="0"/><du var="set" def="161" use="158" covered="0"/><du var="set" def="161" use="183" covered="0"/><du var="set" def="161" use="178" covered="0"/><du var="set" def="161" use="173" covered="0"/><du var="shift" def="162" use="197" covered="0"/><du var="set" def="165" use="158" covered="0"/><du var="set" def="165" use="183" covered="0"/><du var="set" def="165" use="178" covered="0"/><du var="set" def="165" use="173" covered="0"/><du var="shift" def="166" use="197" covered="0"/><du var="lastset" def="173" use="198" covered="0"/><du var="set" def="174" use="158" covered="0"/><du var="set" def="174" use="183" covered="0"/><du var="set" def="174" use="178" covered="0"/><du var="set" def="174" use="173" covered="0"/><du var="shift" def="175" use="197" covered="0"/><du var="lastset" def="178" use="198" covered="0"/><du var="set" def="179" use="158" covered="0"/><du var="set" def="179" use="183" covered="0"/><du var="set" def="179" use="178" covered="0"/><du var="set" def="179" use="173" covered="0"/><du var="shift" def="180" use="197" covered="0"/><du var="lastset" def="183" use="198" covered="0"/><du var="set" def="184" use="158" covered="0"/><du var="set" def="184" use="183" covered="0"/><du var="set" def="184" use="178" covered="0"/><du var="set" def="184" use="173" covered="0"/><du var="shift" def="185" use="197" covered="0"/><du var="i" def="188" use="157" covered="0"/><du var="shift" def="192" use="197" covered="0"/><du var="shift" def="197" use="197" target="198" covered="0"/><du var="shift" def="197" use="197" target="157" covered="0"/><du var="shift" def="197" use="197" covered="0"/><du var="set" def="198" use="158" covered="0"/><du var="set" def="198" use="183" covered="0"/><du var="set" def="198" use="178" covered="0"/><du var="set" def="198" use="173" covered="0"/><du var="i" def="157" use="157" target="201" covered="0"/><du var="i" def="157" use="157" target="158" covered="0"/><du var="i" def="157" use="158" covered="0"/><du var="i" def="157" use="188" covered="0"/><du var="i" def="157" use="157" covered="0"/><counter type="DU" missed="78" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="132" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/LuminanceSource"><method name="toString" desc="()Ljava/lang/String;"><du var="this" def="134" use="136" target="154" covered="0"/><du var="this" def="134" use="136" target="137" covered="0"/><du var="this" def="134" use="137" covered="0"/><du var="this" def="134" use="138" target="152" covered="0"/><du var="this" def="134" use="138" target="139" covered="0"/><du var="this.width" def="134" use="138" target="152" covered="0"/><du var="this.width" def="134" use="138" target="139" covered="0"/><du var="this.height" def="134" use="136" target="154" covered="0"/><du var="this.height" def="134" use="136" target="137" covered="0"/><du var="row" def="134" use="137" covered="0"/><du var="result" def="135" use="150" covered="0"/><du var="result" def="135" use="152" covered="0"/><du var="result" def="135" use="154" covered="0"/><du var="y" def="136" use="136" target="154" covered="0"/><du var="y" def="136" use="136" target="137" covered="0"/><du var="y" def="136" use="137" covered="0"/><du var="y" def="136" use="136" covered="0"/><du var="row" def="137" use="139" covered="0"/><du var="row" def="137" use="137" covered="0"/><du var="x" def="138" use="138" target="152" covered="0"/><du var="x" def="138" use="138" target="139" covered="0"/><du var="x" def="138" use="139" covered="0"/><du var="x" def="138" use="138" covered="0"/><du var="luminance" def="139" use="141" target="142" covered="0"/><du var="luminance" def="139" use="141" target="143" covered="0"/><du var="luminance" def="139" use="143" target="144" covered="0"/><du var="luminance" def="139" use="143" target="145" covered="0"/><du var="luminance" def="139" use="145" target="146" covered="0"/><du var="luminance" def="139" use="145" target="148" covered="0"/><du var="c" def="142" use="150" covered="0"/><du var="c" def="144" use="150" covered="0"/><du var="c" def="146" use="150" covered="0"/><du var="c" def="148" use="150" covered="0"/><du var="x" def="138" use="138" target="152" covered="0"/><du var="x" def="138" use="138" target="139" covered="0"/><du var="x" def="138" use="139" covered="0"/><du var="x" def="138" use="138" covered="0"/><du var="y" def="136" use="136" target="154" covered="0"/><du var="y" def="136" use="136" target="137" covered="0"/><du var="y" def="136" use="137" covered="0"/><du var="y" def="136" use="136" covered="0"/><counter type="DU" missed="41" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="41" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/InvertedLuminanceSource"><method name="getRow" desc="(I[B)[B"><du var="row" def="36" use="39" covered="0"/><du var="row" def="36" use="41" covered="0"/><du var="width" def="37" use="38" target="41" covered="0"/><du var="width" def="37" use="38" target="39" covered="0"/><du var="i" def="38" use="38" target="41" covered="0"/><du var="i" def="38" use="38" target="39" covered="0"/><du var="i" def="38" use="39" covered="0"/><du var="i" def="38" use="38" covered="0"/><du var="i" def="38" use="38" target="41" covered="0"/><du var="i" def="38" use="38" target="39" covered="0"/><du var="i" def="38" use="39" covered="0"/><du var="i" def="38" use="38" covered="0"/><counter type="DU" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMatrix" desc="()[B"><du var="matrix" def="46" use="50" covered="0"/><du var="length" def="47" use="49" target="52" covered="0"/><du var="length" def="47" use="49" target="50" covered="0"/><du var="invertedMatrix" def="48" use="50" covered="0"/><du var="invertedMatrix" def="48" use="52" covered="0"/><du var="i" def="49" use="49" target="52" covered="0"/><du var="i" def="49" use="49" target="50" covered="0"/><du var="i" def="49" use="50" covered="0"/><du var="i" def="49" use="49" covered="0"/><du var="i" def="49" use="49" target="52" covered="0"/><du var="i" def="49" use="49" target="50" covered="0"/><du var="i" def="49" use="50" covered="0"/><du var="i" def="49" use="49" covered="0"/><counter type="DU" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="25" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/aztec/AztecReader"><method name="decode" desc="(Lcom/google/zxing/BinaryBitmap;Ljava/util/Map;)Lcom/google/zxing/Result;"><du var="hints" def="59" use="89" target="90" covered="0"/><du var="hints" def="59" use="89" target="98" covered="0"/><du var="hints" def="59" use="90" covered="0"/><du var="NEED_RESULT_POINT_CALLBACK" def="59" use="90" covered="0"/><du var="AZTEC" def="59" use="98" covered="0"/><du var="BYTE_SEGMENTS" def="59" use="107" covered="0"/><du var="ERROR_CORRECTION_LEVEL" def="59" use="111" covered="0"/><du var="detector" def="61" use="75" covered="0"/><du var="points" def="66" use="98" covered="0"/><du var="points" def="66" use="92" covered="0"/><du var="points" def="66" use="92" covered="0"/><du var="decoderResult" def="67" use="73" target="75" covered="0"/><du var="decoderResult" def="67" use="73" target="89" covered="0"/><du var="decoderResult" def="67" use="98" covered="0"/><du var="decoderResult" def="67" use="105" covered="0"/><du var="decoderResult" def="67" use="109" covered="0"/><du var="points" def="76" use="98" covered="0"/><du var="points" def="76" use="92" covered="0"/><du var="points" def="76" use="92" covered="0"/><du var="decoderResult" def="77" use="98" covered="0"/><du var="decoderResult" def="77" use="105" covered="0"/><du var="decoderResult" def="77" use="109" covered="0"/><du var="rpcb" def="90" use="91" target="92" covered="0"/><du var="rpcb" def="90" use="91" target="98" covered="0"/><du var="rpcb" def="90" use="93" covered="0"/><du var="result" def="98" use="114" covered="0"/><du var="result" def="98" use="111" covered="0"/><du var="result" def="98" use="107" covered="0"/><du var="byteSegments" def="105" use="106" target="107" covered="0"/><du var="byteSegments" def="105" use="106" target="109" covered="0"/><du var="byteSegments" def="105" use="107" covered="0"/><du var="ecLevel" def="109" use="110" target="111" covered="0"/><du var="ecLevel" def="109" use="110" target="114" covered="0"/><du var="ecLevel" def="109" use="111" covered="0"/><counter type="DU" missed="45" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="45" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/aztec/decoder/Decoder"><method name="getEncodedData" desc="([Z)Ljava/lang/String;"><du var="correctedBits" def="96" use="131" covered="1"/><du var="correctedBits" def="96" use="106" covered="1"/><du var="correctedBits" def="96" use="120" covered="1"/><du var="correctedBits" def="96" use="112" covered="1"/><du var="BINARY" def="96" use="102" target="103" covered="1"/><du var="BINARY" def="96" use="102" target="127" covered="1"/><du var="DIGIT" def="96" use="127" target="127" covered="1"/><du var="DIGIT" def="96" use="127" target="127" covered="1"/><du var="endIndex" def="96" use="101" target="151" covered="1"/><du var="endIndex" def="96" use="101" target="102" covered="1"/><du var="endIndex" def="96" use="128" target="129" covered="1"/><du var="endIndex" def="96" use="128" target="131" covered="1"/><du var="endIndex" def="96" use="103" target="104" covered="0"/><du var="endIndex" def="96" use="103" target="106" covered="1"/><du var="endIndex" def="96" use="116" target="117" covered="0"/><du var="endIndex" def="96" use="116" target="120" covered="1"/><du var="endIndex" def="96" use="117" covered="0"/><du var="endIndex" def="96" use="109" target="110" covered="0"/><du var="endIndex" def="96" use="109" target="112" covered="1"/><du var="latchTable" def="97" use="147" covered="1"/><du var="latchTable" def="97" use="125" covered="0"/><du var="shiftTable" def="98" use="102" target="103" covered="0"/><du var="shiftTable" def="98" use="102" target="127" covered="1"/><du var="shiftTable" def="98" use="127" target="127" covered="0"/><du var="shiftTable" def="98" use="127" target="127" covered="1"/><du var="shiftTable" def="98" use="133" covered="1"/><du var="shiftTable" def="98" use="139" covered="1"/><du var="result" def="99" use="145" covered="1"/><du var="result" def="99" use="121" covered="1"/><du var="result" def="99" use="151" covered="1"/><du var="index" def="100" use="101" target="151" covered="0"/><du var="index" def="100" use="101" target="102" covered="1"/><du var="index" def="100" use="128" target="129" covered="0"/><du var="index" def="100" use="128" target="131" covered="1"/><du var="index" def="100" use="131" covered="1"/><du var="index" def="100" use="132" covered="1"/><du var="index" def="100" use="103" target="104" covered="0"/><du var="index" def="100" use="103" target="106" covered="0"/><du var="index" def="100" use="106" covered="0"/><du var="index" def="100" use="107" covered="0"/><du var="length" def="106" use="108" target="109" covered="1"/><du var="length" def="106" use="108" target="115" covered="1"/><du var="length" def="106" use="115" target="125" covered="1"/><du var="length" def="106" use="115" target="116" covered="1"/><du var="index" def="107" use="116" target="117" covered="0"/><du var="index" def="107" use="116" target="120" covered="1"/><du var="index" def="107" use="120" covered="1"/><du var="index" def="107" use="122" covered="1"/><du var="index" def="107" use="101" target="151" covered="0"/><du var="index" def="107" use="101" target="102" covered="0"/><du var="index" def="107" use="128" target="129" covered="0"/><du var="index" def="107" use="128" target="131" covered="0"/><du var="index" def="107" use="131" covered="0"/><du var="index" def="107" use="132" covered="0"/><du var="index" def="107" use="103" target="104" covered="0"/><du var="index" def="107" use="103" target="106" covered="0"/><du var="index" def="107" use="106" covered="0"/><du var="index" def="107" use="107" covered="0"/><du var="index" def="107" use="109" target="110" covered="0"/><du var="index" def="107" use="109" target="112" covered="1"/><du var="index" def="107" use="112" covered="1"/><du var="index" def="107" use="113" covered="1"/><du var="length" def="112" use="115" target="125" covered="1"/><du var="length" def="112" use="115" target="116" covered="1"/><du var="index" def="113" use="116" target="117" covered="0"/><du var="index" def="113" use="116" target="120" covered="1"/><du var="index" def="113" use="120" covered="1"/><du var="index" def="113" use="122" covered="1"/><du var="index" def="113" use="101" target="151" covered="0"/><du var="index" def="113" use="101" target="102" covered="0"/><du var="index" def="113" use="128" target="129" covered="0"/><du var="index" def="113" use="128" target="131" covered="0"/><du var="index" def="113" use="131" covered="0"/><du var="index" def="113" use="132" covered="0"/><du var="index" def="113" use="103" target="104" covered="0"/><du var="index" def="113" use="103" target="106" covered="0"/><du var="index" def="113" use="106" covered="0"/><du var="index" def="113" use="107" covered="0"/><du var="charCount" def="115" use="115" target="125" covered="0"/><du var="charCount" def="115" use="115" target="116" covered="1"/><du var="charCount" def="115" use="115" covered="1"/><du var="index" def="117" use="101" target="151" covered="0"/><du var="index" def="117" use="101" target="102" covered="0"/><du var="index" def="117" use="128" target="129" covered="0"/><du var="index" def="117" use="128" target="131" covered="0"/><du var="index" def="117" use="131" covered="0"/><du var="index" def="117" use="132" covered="0"/><du var="index" def="117" use="103" target="104" covered="0"/><du var="index" def="117" use="103" target="106" covered="0"/><du var="index" def="117" use="106" covered="0"/><du var="index" def="117" use="107" covered="0"/><du var="index" def="122" use="116" target="117" covered="0"/><du var="index" def="122" use="116" target="120" covered="1"/><du var="index" def="122" use="120" covered="1"/><du var="index" def="122" use="122" covered="1"/><du var="index" def="122" use="101" target="151" covered="1"/><du var="index" def="122" use="101" target="102" covered="1"/><du var="index" def="122" use="128" target="129" covered="0"/><du var="index" def="122" use="128" target="131" covered="1"/><du var="index" def="122" use="131" covered="1"/><du var="index" def="122" use="132" covered="1"/><du var="index" def="122" use="103" target="104" covered="0"/><du var="index" def="122" use="103" target="106" covered="0"/><du var="index" def="122" use="106" covered="0"/><du var="index" def="122" use="107" covered="0"/><du var="charCount" def="115" use="115" target="125" covered="1"/><du var="charCount" def="115" use="115" target="116" covered="1"/><du var="charCount" def="115" use="115" covered="1"/><du var="shiftTable" def="125" use="102" target="103" covered="0"/><du var="shiftTable" def="125" use="102" target="127" covered="1"/><du var="shiftTable" def="125" use="127" target="127" covered="0"/><du var="shiftTable" def="125" use="127" target="127" covered="1"/><du var="shiftTable" def="125" use="133" covered="1"/><du var="shiftTable" def="125" use="139" covered="1"/><du var="size" def="127" use="128" target="129" covered="1"/><du var="size" def="127" use="128" target="131" covered="1"/><du var="size" def="127" use="131" covered="1"/><du var="size" def="127" use="132" covered="1"/><du var="index" def="132" use="101" target="151" covered="1"/><du var="index" def="132" use="101" target="102" covered="1"/><du var="index" def="132" use="128" target="129" covered="1"/><du var="index" def="132" use="128" target="131" covered="1"/><du var="index" def="132" use="131" covered="1"/><du var="index" def="132" use="132" covered="1"/><du var="index" def="132" use="103" target="104" covered="0"/><du var="index" def="132" use="103" target="106" covered="1"/><du var="index" def="132" use="106" covered="1"/><du var="index" def="132" use="107" covered="1"/><du var="str" def="133" use="134" target="139" covered="1"/><du var="str" def="133" use="134" target="145" covered="1"/><du var="str" def="133" use="145" covered="1"/><du var="str" def="133" use="140" covered="1"/><du var="str" def="133" use="141" target="142" covered="1"/><du var="str" def="133" use="141" target="101" covered="1"/><du var="latchTable" def="139" use="147" covered="1"/><du var="latchTable" def="139" use="125" covered="1"/><du var="shiftTable" def="140" use="102" target="103" covered="1"/><du var="shiftTable" def="140" use="102" target="127" covered="1"/><du var="shiftTable" def="140" use="127" target="127" covered="1"/><du var="shiftTable" def="140" use="127" target="127" covered="1"/><du var="shiftTable" def="140" use="133" covered="1"/><du var="shiftTable" def="140" use="139" covered="1"/><du var="shiftTable" def="140" use="142" covered="1"/><du var="latchTable" def="142" use="147" covered="1"/><du var="latchTable" def="142" use="125" covered="0"/><du var="shiftTable" def="147" use="102" target="103" covered="0"/><du var="shiftTable" def="147" use="102" target="127" covered="1"/><du var="shiftTable" def="147" use="127" target="127" covered="1"/><du var="shiftTable" def="147" use="127" target="127" covered="1"/><du var="shiftTable" def="147" use="133" covered="1"/><du var="shiftTable" def="147" use="139" covered="1"/><counter type="DU" missed="58" covered="93"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTable" desc="(C)Lcom/google/zxing/aztec/decoder/Decoder$Table;"><du var="t" def="158" use="158" target="171" covered="1"/><du var="t" def="158" use="158" target="168" covered="1"/><du var="t" def="158" use="158" target="166" covered="1"/><du var="t" def="158" use="158" target="160" covered="1"/><du var="t" def="158" use="158" target="164" covered="1"/><du var="t" def="158" use="158" target="162" covered="1"/><du var="LOWER" def="158" use="160" covered="1"/><du var="PUNCT" def="158" use="162" covered="1"/><du var="MIXED" def="158" use="164" covered="1"/><du var="DIGIT" def="158" use="166" covered="1"/><du var="BINARY" def="158" use="168" covered="1"/><du var="UPPER" def="158" use="171" covered="1"/><counter type="DU" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCharacter" desc="(Lcom/google/zxing/aztec/decoder/Decoder$Table;I)Ljava/lang/String;"><du var="table" def="182" use="182" target="195" covered="0"/><du var="table" def="182" use="182" target="184" covered="1"/><du var="table" def="182" use="182" target="186" covered="1"/><du var="table" def="182" use="182" target="188" covered="1"/><du var="table" def="182" use="182" target="192" covered="1"/><du var="table" def="182" use="182" target="190" covered="1"/><du var="code" def="182" use="190" covered="1"/><du var="code" def="182" use="192" covered="1"/><du var="code" def="182" use="188" covered="1"/><du var="code" def="182" use="186" covered="1"/><du var="code" def="182" use="184" covered="1"/><du var="UPPER_TABLE" def="182" use="184" covered="1"/><du var="LOWER_TABLE" def="182" use="186" covered="1"/><du var="MIXED_TABLE" def="182" use="188" covered="1"/><du var="PUNCT_TABLE" def="182" use="190" covered="1"/><du var="DIGIT_TABLE" def="182" use="192" covered="1"/><counter type="DU" missed="1" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="correctBits" desc="([Z)[Z"><du var="this" def="209" use="209" target="210" covered="1"/><du var="this" def="209" use="209" target="212" covered="1"/><du var="this" def="209" use="212" target="213" covered="1"/><du var="this" def="209" use="212" target="215" covered="1"/><du var="this" def="209" use="215" target="216" covered="1"/><du var="this" def="209" use="215" target="219" covered="1"/><du var="this" def="209" use="223" covered="1"/><du var="rawbits" def="209" use="224" covered="1"/><du var="rawbits" def="209" use="228" covered="1"/><du var="rawbits" def="209" use="232" covered="1"/><du var="this.ddata" def="209" use="209" target="210" covered="1"/><du var="this.ddata" def="209" use="209" target="212" covered="1"/><du var="this.ddata" def="209" use="212" target="213" covered="1"/><du var="this.ddata" def="209" use="212" target="215" covered="1"/><du var="this.ddata" def="209" use="215" target="216" covered="1"/><du var="this.ddata" def="209" use="215" target="219" covered="1"/><du var="this.ddata" def="209" use="223" covered="1"/><du var="AZTEC_DATA_6" def="209" use="211" covered="1"/><du var="AZTEC_DATA_8" def="209" use="214" covered="1"/><du var="AZTEC_DATA_10" def="209" use="217" covered="1"/><du var="AZTEC_DATA_12" def="209" use="220" covered="1"/><du var="codewordSize" def="210" use="224" covered="1"/><du var="codewordSize" def="210" use="228" covered="1"/><du var="codewordSize" def="210" use="232" covered="1"/><du var="codewordSize" def="210" use="231" covered="1"/><du var="codewordSize" def="210" use="244" covered="1"/><du var="codewordSize" def="210" use="255" covered="1"/><du var="codewordSize" def="210" use="261" covered="1"/><du var="codewordSize" def="210" use="262" covered="1"/><du var="codewordSize" def="210" use="264" covered="1"/><du var="gf" def="211" use="236" covered="1"/><du var="codewordSize" def="213" use="224" covered="1"/><du var="codewordSize" def="213" use="228" covered="1"/><du var="codewordSize" def="213" use="232" covered="1"/><du var="codewordSize" def="213" use="231" covered="1"/><du var="codewordSize" def="213" use="244" covered="1"/><du var="codewordSize" def="213" use="255" covered="1"/><du var="codewordSize" def="213" use="261" covered="1"/><du var="codewordSize" def="213" use="262" covered="1"/><du var="codewordSize" def="213" use="264" covered="1"/><du var="gf" def="214" use="236" covered="1"/><du var="codewordSize" def="216" use="224" covered="1"/><du var="codewordSize" def="216" use="228" covered="1"/><du var="codewordSize" def="216" use="232" covered="1"/><du var="codewordSize" def="216" use="231" covered="1"/><du var="codewordSize" def="216" use="244" covered="1"/><du var="codewordSize" def="216" use="255" covered="1"/><du var="codewordSize" def="216" use="261" covered="0"/><du var="codewordSize" def="216" use="262" covered="0"/><du var="codewordSize" def="216" use="264" covered="1"/><du var="gf" def="217" use="236" covered="1"/><du var="codewordSize" def="219" use="224" covered="1"/><du var="codewordSize" def="219" use="228" covered="1"/><du var="codewordSize" def="219" use="232" covered="1"/><du var="codewordSize" def="219" use="231" covered="1"/><du var="codewordSize" def="219" use="244" covered="1"/><du var="codewordSize" def="219" use="255" covered="1"/><du var="codewordSize" def="219" use="261" covered="0"/><du var="codewordSize" def="219" use="262" covered="0"/><du var="codewordSize" def="219" use="264" covered="1"/><du var="gf" def="220" use="236" covered="1"/><du var="numDataCodewords" def="223" use="225" target="226" covered="0"/><du var="numDataCodewords" def="223" use="225" target="228" covered="1"/><du var="numDataCodewords" def="223" use="237" covered="1"/><du var="numDataCodewords" def="223" use="246" target="255" covered="1"/><du var="numDataCodewords" def="223" use="246" target="247" covered="1"/><du var="numDataCodewords" def="223" use="255" covered="1"/><du var="numDataCodewords" def="223" use="257" target="269" covered="1"/><du var="numDataCodewords" def="223" use="257" target="258" covered="1"/><du var="numCodewords" def="224" use="225" target="226" covered="0"/><du var="numCodewords" def="224" use="225" target="228" covered="1"/><du var="numCodewords" def="224" use="230" covered="1"/><du var="numCodewords" def="224" use="231" target="236" covered="1"/><du var="numCodewords" def="224" use="231" target="232" covered="1"/><du var="numCodewords" def="224" use="237" covered="1"/><du var="offset" def="228" use="232" covered="1"/><du var="offset" def="228" use="231" covered="1"/><du var="dataWords" def="230" use="232" covered="1"/><du var="dataWords" def="230" use="237" covered="1"/><du var="dataWords" def="230" use="247" covered="1"/><du var="dataWords" def="230" use="258" covered="1"/><du var="i" def="231" use="231" target="236" covered="0"/><du var="i" def="231" use="231" target="232" covered="1"/><du var="i" def="231" use="232" covered="1"/><du var="i" def="231" use="231" covered="1"/><du var="i" def="231" use="231" target="236" covered="1"/><du var="i" def="231" use="231" target="232" covered="1"/><du var="i" def="231" use="232" covered="1"/><du var="i" def="231" use="231" covered="1"/><du var="offset" def="231" use="232" covered="1"/><du var="offset" def="231" use="231" covered="1"/><du var="mask" def="244" use="248" target="249" covered="0"/><du var="mask" def="244" use="248" target="250" covered="1"/><du var="mask" def="244" use="250" target="251" covered="1"/><du var="mask" def="244" use="250" target="246" covered="1"/><du var="mask" def="244" use="259" target="261" covered="1"/><du var="mask" def="244" use="259" target="264" covered="1"/><du var="stuffedBits" def="245" use="251" covered="1"/><du var="stuffedBits" def="245" use="255" covered="1"/><du var="i" def="246" use="246" target="255" covered="0"/><du var="i" def="246" use="246" target="247" covered="1"/><du var="i" def="246" use="247" covered="1"/><du var="i" def="246" use="246" covered="1"/><du var="dataWord" def="247" use="248" target="248" covered="1"/><du var="dataWord" def="247" use="248" target="249" covered="0"/><du var="dataWord" def="247" use="248" target="249" covered="0"/><du var="dataWord" def="247" use="248" target="250" covered="1"/><du var="dataWord" def="247" use="250" target="250" covered="1"/><du var="dataWord" def="247" use="250" target="251" covered="1"/><du var="dataWord" def="247" use="250" target="251" covered="1"/><du var="dataWord" def="247" use="250" target="246" covered="1"/><du var="stuffedBits" def="251" use="251" covered="1"/><du var="stuffedBits" def="251" use="255" covered="1"/><du var="i" def="246" use="246" target="255" covered="1"/><du var="i" def="246" use="246" target="247" covered="1"/><du var="i" def="246" use="247" covered="1"/><du var="i" def="246" use="246" covered="1"/><du var="correctedBits" def="255" use="261" covered="1"/><du var="correctedBits" def="255" use="265" covered="1"/><du var="correctedBits" def="255" use="269" covered="1"/><du var="index" def="256" use="261" covered="1"/><du var="index" def="256" use="262" covered="1"/><du var="index" def="256" use="265" covered="1"/><du var="i" def="257" use="257" target="269" covered="0"/><du var="i" def="257" use="257" target="258" covered="1"/><du var="i" def="257" use="258" covered="1"/><du var="i" def="257" use="257" covered="1"/><du var="dataWord" def="258" use="259" target="259" covered="1"/><du var="dataWord" def="258" use="259" target="261" covered="1"/><du var="dataWord" def="258" use="261" target="261" covered="1"/><du var="dataWord" def="258" use="261" target="261" covered="1"/><du var="dataWord" def="258" use="259" target="261" covered="1"/><du var="dataWord" def="258" use="259" target="264" covered="1"/><du var="dataWord" def="258" use="265" target="265" covered="1"/><du var="dataWord" def="258" use="265" target="265" covered="1"/><du var="index" def="262" use="261" covered="0"/><du var="index" def="262" use="262" covered="0"/><du var="index" def="262" use="265" covered="1"/><du var="bit" def="264" use="264" target="257" covered="0"/><du var="bit" def="264" use="264" target="265" covered="1"/><du var="bit" def="264" use="265" target="265" covered="1"/><du var="bit" def="264" use="265" target="265" covered="1"/><du var="bit" def="264" use="264" covered="1"/><du var="index" def="265" use="265" covered="1"/><du var="index" def="265" use="265" covered="1"/><du var="index" def="265" use="261" covered="1"/><du var="index" def="265" use="262" covered="1"/><du var="bit" def="264" use="264" target="257" covered="1"/><du var="bit" def="264" use="264" target="265" covered="1"/><du var="bit" def="264" use="265" target="265" covered="1"/><du var="bit" def="264" use="265" target="265" covered="1"/><du var="bit" def="264" use="264" covered="1"/><du var="i" def="257" use="257" target="269" covered="1"/><du var="i" def="257" use="257" target="258" covered="1"/><du var="i" def="257" use="258" covered="1"/><du var="i" def="257" use="257" covered="1"/><counter type="DU" missed="15" covered="141"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractBits" desc="(Lcom/google/zxing/common/BitMatrix;)[Z"><du var="matrix" def="278" use="309" covered="1"/><du var="matrix" def="278" use="312" covered="1"/><du var="matrix" def="278" use="315" covered="1"/><du var="matrix" def="278" use="318" covered="1"/><du var="compact" def="278" use="280" target="280" covered="1"/><du var="compact" def="278" use="280" target="280" covered="1"/><du var="compact" def="278" use="282" covered="1"/><du var="compact" def="278" use="284" target="285" covered="1"/><du var="compact" def="278" use="284" target="289" covered="1"/><du var="compact" def="278" use="299" target="299" covered="1"/><du var="compact" def="278" use="299" target="299" covered="1"/><du var="layers" def="279" use="280" covered="1"/><du var="layers" def="279" use="282" covered="1"/><du var="layers" def="279" use="298" target="324" covered="1"/><du var="layers" def="279" use="298" target="299" covered="1"/><du var="layers" def="279" use="299" covered="1"/><du var="baseMatrixSize" def="280" use="289" covered="1"/><du var="baseMatrixSize" def="280" use="290" covered="1"/><du var="baseMatrixSize" def="280" use="303" covered="1"/><du var="alignmentMap" def="281" use="294" covered="1"/><du var="alignmentMap" def="281" use="295" covered="1"/><du var="alignmentMap" def="281" use="309" covered="1"/><du var="alignmentMap" def="281" use="312" covered="1"/><du var="alignmentMap" def="281" use="315" covered="1"/><du var="alignmentMap" def="281" use="318" covered="1"/><du var="alignmentMap" def="281" use="285" target="288" covered="1"/><du var="alignmentMap" def="281" use="285" target="286" covered="1"/><du var="alignmentMap" def="281" use="286" covered="1"/><du var="rawbits" def="282" use="309" covered="1"/><du var="rawbits" def="282" use="312" covered="1"/><du var="rawbits" def="282" use="315" covered="1"/><du var="rawbits" def="282" use="318" covered="1"/><du var="rawbits" def="282" use="324" covered="1"/><du var="i" def="285" use="285" target="288" covered="0"/><du var="i" def="285" use="285" target="286" covered="1"/><du var="i" def="285" use="286" covered="1"/><du var="i" def="285" use="285" covered="1"/><du var="i" def="285" use="285" target="288" covered="1"/><du var="i" def="285" use="285" target="286" covered="1"/><du var="i" def="285" use="286" covered="1"/><du var="i" def="285" use="285" covered="1"/><du var="origCenter" def="290" use="292" target="298" covered="1"/><du var="origCenter" def="290" use="292" target="293" covered="1"/><du var="origCenter" def="290" use="294" covered="1"/><du var="origCenter" def="290" use="295" covered="1"/><du var="center" def="291" use="294" covered="1"/><du var="center" def="291" use="295" covered="1"/><du var="i" def="292" use="292" target="298" covered="0"/><du var="i" def="292" use="292" target="293" covered="1"/><du var="i" def="292" use="293" covered="1"/><du var="i" def="292" use="294" covered="1"/><du var="i" def="292" use="295" covered="1"/><du var="i" def="292" use="292" covered="1"/><du var="i" def="292" use="292" target="298" covered="1"/><du var="i" def="292" use="292" target="293" covered="1"/><du var="i" def="292" use="293" covered="1"/><du var="i" def="292" use="294" covered="1"/><du var="i" def="292" use="295" covered="1"/><du var="i" def="292" use="292" covered="1"/><du var="i" def="298" use="298" target="324" covered="0"/><du var="i" def="298" use="298" target="299" covered="1"/><du var="i" def="298" use="299" covered="1"/><du var="i" def="298" use="301" covered="1"/><du var="i" def="298" use="298" covered="1"/><du var="rowOffset" def="298" use="309" covered="1"/><du var="rowOffset" def="298" use="312" covered="1"/><du var="rowOffset" def="298" use="315" covered="1"/><du var="rowOffset" def="298" use="318" covered="1"/><du var="rowOffset" def="298" use="322" covered="1"/><du var="rowSize" def="299" use="305" target="322" covered="1"/><du var="rowSize" def="299" use="305" target="306" covered="1"/><du var="rowSize" def="299" use="312" covered="1"/><du var="rowSize" def="299" use="315" covered="1"/><du var="rowSize" def="299" use="318" covered="1"/><du var="rowSize" def="299" use="322" covered="1"/><du var="low" def="301" use="309" covered="1"/><du var="low" def="301" use="312" covered="1"/><du var="low" def="301" use="318" covered="1"/><du var="high" def="303" use="312" covered="1"/><du var="high" def="303" use="315" covered="1"/><du var="high" def="303" use="318" covered="1"/><du var="j" def="305" use="305" target="322" covered="0"/><du var="j" def="305" use="305" target="306" covered="1"/><du var="j" def="305" use="306" covered="1"/><du var="j" def="305" use="309" covered="1"/><du var="j" def="305" use="312" covered="1"/><du var="j" def="305" use="315" covered="1"/><du var="j" def="305" use="318" covered="1"/><du var="j" def="305" use="305" covered="1"/><du var="columnOffset" def="306" use="309" covered="1"/><du var="columnOffset" def="306" use="312" covered="1"/><du var="columnOffset" def="306" use="315" covered="1"/><du var="columnOffset" def="306" use="318" covered="1"/><du var="k" def="307" use="307" target="305" covered="0"/><du var="k" def="307" use="307" target="309" covered="1"/><du var="k" def="307" use="309" covered="1"/><du var="k" def="307" use="312" covered="1"/><du var="k" def="307" use="315" covered="1"/><du var="k" def="307" use="318" covered="1"/><du var="k" def="307" use="307" covered="1"/><du var="k" def="307" use="307" target="305" covered="1"/><du var="k" def="307" use="307" target="309" covered="1"/><du var="k" def="307" use="309" covered="1"/><du var="k" def="307" use="312" covered="1"/><du var="k" def="307" use="315" covered="1"/><du var="k" def="307" use="318" covered="1"/><du var="k" def="307" use="307" covered="1"/><du var="j" def="305" use="305" target="322" covered="1"/><du var="j" def="305" use="305" target="306" covered="1"/><du var="j" def="305" use="306" covered="1"/><du var="j" def="305" use="309" covered="1"/><du var="j" def="305" use="312" covered="1"/><du var="j" def="305" use="315" covered="1"/><du var="j" def="305" use="318" covered="1"/><du var="j" def="305" use="305" covered="1"/><du var="rowOffset" def="322" use="309" covered="1"/><du var="rowOffset" def="322" use="312" covered="1"/><du var="rowOffset" def="322" use="315" covered="1"/><du var="rowOffset" def="322" use="318" covered="1"/><du var="rowOffset" def="322" use="322" covered="1"/><du var="i" def="298" use="298" target="324" covered="1"/><du var="i" def="298" use="298" target="299" covered="1"/><du var="i" def="298" use="299" covered="1"/><du var="i" def="298" use="301" covered="1"/><du var="i" def="298" use="298" covered="1"/><counter type="DU" missed="5" covered="120"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readCode" desc="([ZII)I"><du var="rawbits" def="331" use="334" target="335" covered="1"/><du var="rawbits" def="331" use="334" target="332" covered="1"/><du var="startIndex" def="331" use="332" target="338" covered="1"/><du var="startIndex" def="331" use="332" target="333" covered="1"/><du var="length" def="331" use="332" target="338" covered="1"/><du var="length" def="331" use="332" target="333" covered="1"/><du var="res" def="331" use="333" covered="1"/><du var="res" def="331" use="338" covered="0"/><du var="i" def="332" use="332" target="338" covered="0"/><du var="i" def="332" use="332" target="333" covered="1"/><du var="i" def="332" use="334" target="335" covered="1"/><du var="i" def="332" use="334" target="332" covered="1"/><du var="i" def="332" use="332" covered="1"/><du var="res" def="333" use="333" covered="1"/><du var="res" def="333" use="338" covered="1"/><du var="res" def="333" use="335" covered="1"/><du var="res" def="335" use="333" covered="1"/><du var="res" def="335" use="338" covered="1"/><du var="i" def="332" use="332" target="338" covered="1"/><du var="i" def="332" use="332" target="333" covered="1"/><du var="i" def="332" use="334" target="335" covered="1"/><du var="i" def="332" use="334" target="332" covered="1"/><du var="i" def="332" use="332" covered="1"/><counter type="DU" missed="2" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readByte" desc="([ZI)B"><du var="rawbits" def="345" use="349" covered="1"/><du var="rawbits" def="345" use="347" covered="1"/><du var="startIndex" def="345" use="349" covered="1"/><du var="startIndex" def="345" use="347" covered="1"/><du var="n" def="345" use="346" target="347" covered="1"/><du var="n" def="345" use="346" target="349" covered="1"/><du var="n" def="345" use="349" covered="1"/><counter type="DU" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertBoolArrayToByteArray" desc="([Z)[B"><du var="boolArr" def="356" use="358" covered="1"/><du var="byteArr" def="356" use="357" target="360" covered="1"/><du var="byteArr" def="356" use="357" target="358" covered="1"/><du var="byteArr" def="356" use="358" covered="1"/><du var="byteArr" def="356" use="360" covered="1"/><du var="i" def="357" use="357" target="360" covered="1"/><du var="i" def="357" use="357" target="358" covered="1"/><du var="i" def="357" use="358" covered="1"/><du var="i" def="357" use="357" covered="1"/><du var="i" def="357" use="357" target="360" covered="1"/><du var="i" def="357" use="357" target="358" covered="1"/><du var="i" def="357" use="358" covered="1"/><du var="i" def="357" use="357" covered="1"/><counter type="DU" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="totalBitsInLayer" desc="(IZ)I"><du var="layers" def="364" use="364" covered="1"/><du var="compact" def="364" use="364" target="364" covered="1"/><du var="compact" def="364" use="364" target="364" covered="1"/><counter type="DU" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="$SWITCH_TABLE$com$google$zxing$aztec$decoder$Decoder$Table" desc="()[I"><du var="$SWITCH_TABLE$com$google$zxing$aztec$decoder$Decoder$Table" def="35" use="35" target="35" covered="1"/><du var="$SWITCH_TABLE$com$google$zxing$aztec$decoder$Decoder$Table" def="35" use="35" target="35" covered="1"/><du var="$SWITCH_TABLE$com$google$zxing$aztec$decoder$Decoder$Table" def="35" use="35" covered="1"/><du var="BINARY" def="35" use="35" covered="1"/><du var="DIGIT" def="35" use="35" covered="1"/><du var="LOWER" def="35" use="35" covered="1"/><du var="MIXED" def="35" use="35" covered="1"/><du var="PUNCT" def="35" use="35" covered="1"/><du var="UPPER" def="35" use="35" covered="1"/><counter type="DU" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="81" covered="434"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/aztec/AztecWriter"><method name="encode" desc="(Ljava/lang/String;Lcom/google/zxing/BarcodeFormat;IILjava/util/Map;)Lcom/google/zxing/common/BitMatrix;"><du var="contents" def="43" use="57" covered="1"/><du var="format" def="43" use="57" covered="1"/><du var="width" def="43" use="57" covered="1"/><du var="height" def="43" use="57" covered="1"/><du var="hints" def="43" use="46" target="47" covered="1"/><du var="hints" def="43" use="46" target="57" covered="1"/><du var="hints" def="43" use="47" target="48" covered="1"/><du var="hints" def="43" use="47" target="50" covered="0"/><du var="hints" def="43" use="50" target="51" covered="1"/><du var="hints" def="43" use="50" target="53" covered="0"/><du var="hints" def="43" use="53" target="54" covered="0"/><du var="hints" def="43" use="53" target="57" covered="1"/><du var="hints" def="43" use="54" covered="0"/><du var="hints" def="43" use="51" covered="1"/><du var="hints" def="43" use="48" covered="1"/><du var="CHARACTER_SET" def="43" use="47" target="48" covered="1"/><du var="CHARACTER_SET" def="43" use="47" target="50" covered="0"/><du var="CHARACTER_SET" def="43" use="48" covered="1"/><du var="ERROR_CORRECTION" def="43" use="50" target="51" covered="1"/><du var="ERROR_CORRECTION" def="43" use="50" target="53" covered="0"/><du var="ERROR_CORRECTION" def="43" use="51" covered="1"/><du var="AZTEC_LAYERS" def="43" use="53" target="54" covered="0"/><du var="AZTEC_LAYERS" def="43" use="53" target="57" covered="1"/><du var="AZTEC_LAYERS" def="43" use="54" covered="0"/><du var="charset" def="43" use="57" covered="1"/><du var="eccPercent" def="44" use="57" covered="1"/><du var="layers" def="45" use="57" covered="1"/><du var="charset" def="48" use="57" covered="1"/><du var="eccPercent" def="51" use="57" covered="1"/><du var="layers" def="54" use="57" covered="0"/><counter type="DU" missed="9" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/String;Lcom/google/zxing/BarcodeFormat;IILjava/nio/charset/Charset;II)Lcom/google/zxing/common/BitMatrix;"><du var="contents" def="63" use="66" covered="1"/><du var="format" def="63" use="63" target="64" covered="0"/><du var="format" def="63" use="63" target="66" covered="1"/><du var="format" def="63" use="64" covered="0"/><du var="width" def="63" use="67" covered="1"/><du var="height" def="63" use="67" covered="1"/><du var="charset" def="63" use="66" covered="1"/><du var="eccPercent" def="63" use="66" covered="1"/><du var="layers" def="63" use="66" covered="1"/><du var="AZTEC" def="63" use="63" target="64" covered="0"/><du var="AZTEC" def="63" use="63" target="66" covered="1"/><counter type="DU" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderResult" desc="(Lcom/google/zxing/aztec/encoder/AztecCode;II)Lcom/google/zxing/common/BitMatrix;"><du var="width" def="71" use="77" covered="1"/><du var="height" def="71" use="78" covered="1"/><du var="input" def="71" use="72" target="73" covered="0"/><du var="input" def="71" use="72" target="75" covered="1"/><du var="input" def="71" use="75" covered="1"/><du var="input" def="71" use="76" covered="1"/><du var="input" def="71" use="89" target="90" covered="1"/><du var="input" def="71" use="89" target="88" covered="1"/><du var="inputWidth" def="75" use="88" target="86" covered="1"/><du var="inputWidth" def="75" use="88" target="89" covered="1"/><du var="inputHeight" def="76" use="86" target="94" covered="1"/><du var="inputHeight" def="76" use="86" target="88" covered="1"/><du var="multiple" def="80" use="88" covered="1"/><du var="multiple" def="80" use="90" covered="1"/><du var="multiple" def="80" use="86" covered="1"/><du var="leftPadding" def="81" use="88" covered="1"/><du var="output" def="84" use="90" covered="1"/><du var="output" def="84" use="94" covered="1"/><du var="inputY" def="86" use="86" target="94" covered="0"/><du var="inputY" def="86" use="86" target="88" covered="1"/><du var="inputY" def="86" use="89" target="90" covered="1"/><du var="inputY" def="86" use="89" target="88" covered="1"/><du var="inputY" def="86" use="86" covered="1"/><du var="outputY" def="86" use="90" covered="1"/><du var="outputY" def="86" use="86" covered="1"/><du var="inputX" def="88" use="88" target="86" covered="0"/><du var="inputX" def="88" use="88" target="89" covered="1"/><du var="inputX" def="88" use="89" target="90" covered="1"/><du var="inputX" def="88" use="89" target="88" covered="1"/><du var="inputX" def="88" use="88" covered="1"/><du var="outputX" def="88" use="88" covered="1"/><du var="outputX" def="88" use="90" covered="1"/><du var="inputX" def="88" use="88" target="86" covered="1"/><du var="inputX" def="88" use="88" target="89" covered="1"/><du var="inputX" def="88" use="89" target="90" covered="1"/><du var="inputX" def="88" use="89" target="88" covered="1"/><du var="inputX" def="88" use="88" covered="1"/><du var="outputX" def="88" use="88" covered="1"/><du var="outputX" def="88" use="90" covered="1"/><du var="inputY" def="86" use="86" target="94" covered="1"/><du var="inputY" def="86" use="86" target="88" covered="1"/><du var="inputY" def="86" use="89" target="90" covered="1"/><du var="inputY" def="86" use="89" target="88" covered="1"/><du var="inputY" def="86" use="86" covered="1"/><du var="outputY" def="86" use="90" covered="1"/><du var="outputY" def="86" use="86" covered="1"/><counter type="DU" missed="3" covered="43"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="15" covered="72"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/aztec/detector/Detector"><method name="detect" desc="(Z)Lcom/google/zxing/aztec/AztecDetectorResult;"><du var="this" def="65" use="78" covered="1"/><du var="this" def="65" use="81" covered="1"/><du var="this" def="65" use="88" covered="1"/><du var="this" def="65" use="90" covered="1"/><du var="isMirror" def="65" use="71" target="72" covered="1"/><du var="isMirror" def="65" use="71" target="78" covered="1"/><du var="this.image" def="65" use="81" covered="1"/><du var="this.shift" def="65" use="81" covered="1"/><du var="this.compact" def="65" use="90" covered="1"/><du var="this.nbDataBlocks" def="65" use="90" covered="1"/><du var="this.nbLayers" def="65" use="90" covered="1"/><du var="bullsEyeCorners" def="69" use="78" covered="1"/><du var="bullsEyeCorners" def="69" use="81" covered="1"/><du var="bullsEyeCorners" def="69" use="88" covered="1"/><du var="bullsEyeCorners" def="69" use="72" covered="1"/><du var="bullsEyeCorners" def="69" use="73" covered="1"/><du var="bullsEyeCorners" def="69" use="74" covered="1"/><counter type="DU" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractParameters" desc="([Lcom/google/zxing/ResultPoint;)V"><du var="this" def="100" use="100" target="100" covered="1"/><du var="this" def="100" use="100" target="102" covered="0"/><du var="this" def="100" use="100" target="101" covered="1"/><du var="this" def="100" use="100" target="102" covered="0"/><du var="this" def="100" use="101" target="101" covered="1"/><du var="this" def="100" use="101" target="102" covered="0"/><du var="this" def="100" use="101" target="102" covered="0"/><du var="this" def="100" use="101" target="104" covered="1"/><du var="this" def="100" use="104" covered="1"/><du var="this" def="100" use="107" covered="1"/><du var="this" def="100" use="108" covered="1"/><du var="this" def="100" use="109" covered="1"/><du var="this" def="100" use="110" covered="1"/><du var="this" def="100" use="117" covered="1"/><du var="this" def="100" use="122" covered="1"/><du var="this" def="100" use="123" target="125" covered="1"/><du var="this" def="100" use="123" target="129" covered="1"/><du var="this" def="100" use="136" covered="1"/><du var="this" def="100" use="138" target="140" covered="1"/><du var="this" def="100" use="138" target="144" covered="1"/><du var="this" def="100" use="144" covered="1"/><du var="this" def="100" use="145" covered="1"/><du var="this" def="100" use="140" covered="1"/><du var="this" def="100" use="141" covered="1"/><du var="bullsEyeCorners" def="100" use="100" target="100" covered="1"/><du var="bullsEyeCorners" def="100" use="100" target="102" covered="0"/><du var="bullsEyeCorners" def="100" use="100" target="101" covered="1"/><du var="bullsEyeCorners" def="100" use="100" target="102" covered="0"/><du var="bullsEyeCorners" def="100" use="101" target="101" covered="1"/><du var="bullsEyeCorners" def="100" use="101" target="102" covered="0"/><du var="bullsEyeCorners" def="100" use="101" target="102" covered="0"/><du var="bullsEyeCorners" def="100" use="101" target="104" covered="1"/><du var="bullsEyeCorners" def="100" use="107" covered="1"/><du var="bullsEyeCorners" def="100" use="108" covered="1"/><du var="bullsEyeCorners" def="100" use="109" covered="1"/><du var="bullsEyeCorners" def="100" use="110" covered="1"/><du var="this.nbCenterLayers" def="100" use="104" covered="1"/><du var="this.compact" def="100" use="123" target="125" covered="1"/><du var="this.compact" def="100" use="123" target="129" covered="1"/><du var="this.compact" def="100" use="136" covered="1"/><du var="this.compact" def="100" use="138" target="140" covered="1"/><du var="this.compact" def="100" use="138" target="144" covered="1"/><du var="sides" def="106" use="122" covered="1"/><du var="this.shift" def="117" use="122" covered="1"/><du var="parameterData" def="120" use="129" covered="1"/><du var="parameterData" def="120" use="125" covered="1"/><du var="parameterData" def="120" use="136" covered="0"/><du var="i" def="121" use="121" target="136" covered="0"/><du var="i" def="121" use="121" target="122" covered="1"/><du var="i" def="121" use="122" covered="1"/><du var="i" def="121" use="121" covered="1"/><du var="side" def="122" use="130" covered="1"/><du var="side" def="122" use="126" covered="1"/><du var="parameterData" def="126" use="129" covered="0"/><du var="parameterData" def="126" use="125" covered="1"/><du var="parameterData" def="126" use="136" covered="1"/><du var="parameterData" def="130" use="129" covered="1"/><du var="parameterData" def="130" use="125" covered="0"/><du var="parameterData" def="130" use="136" covered="1"/><du var="i" def="121" use="121" target="136" covered="1"/><du var="i" def="121" use="121" target="122" covered="1"/><du var="i" def="121" use="122" covered="1"/><du var="i" def="121" use="121" covered="1"/><du var="correctedData" def="136" use="144" covered="1"/><du var="correctedData" def="136" use="145" covered="1"/><du var="correctedData" def="136" use="140" covered="1"/><du var="correctedData" def="136" use="141" covered="1"/><counter type="DU" missed="12" covered="55"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRotation" desc="([II)I"><du var="length" def="166" use="169" covered="1"/><du var="EXPECTED_CORNER_BITS" def="166" use="180" target="181" covered="1"/><du var="EXPECTED_CORNER_BITS" def="166" use="180" target="179" covered="1"/><du var="cornerBits" def="166" use="170" covered="1"/><du var="cornerBits" def="166" use="175" covered="0"/><du var="cornerBits" def="170" use="170" covered="1"/><du var="cornerBits" def="170" use="175" covered="1"/><du var="cornerBits" def="175" use="180" target="181" covered="1"/><du var="cornerBits" def="175" use="180" target="179" covered="1"/><du var="shift" def="179" use="179" target="184" covered="0"/><du var="shift" def="179" use="179" target="180" covered="1"/><du var="shift" def="179" use="180" target="181" covered="1"/><du var="shift" def="179" use="180" target="179" covered="1"/><du var="shift" def="179" use="179" covered="1"/><du var="shift" def="179" use="181" covered="1"/><du var="shift" def="179" use="179" target="184" covered="1"/><du var="shift" def="179" use="179" target="180" covered="1"/><du var="shift" def="179" use="180" target="181" covered="1"/><du var="shift" def="179" use="180" target="179" covered="1"/><du var="shift" def="179" use="179" covered="1"/><du var="shift" def="179" use="181" covered="1"/><counter type="DU" missed="3" covered="29"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCorrectedParameterData" desc="(JZ)I"><du var="parameterData" def="198" use="209" covered="1"/><du var="parameterData" def="198" use="210" covered="1"/><du var="compact" def="198" use="198" target="199" covered="1"/><du var="compact" def="198" use="198" target="202" covered="1"/><du var="AZTEC_PARAM" def="198" use="213" covered="1"/><du var="numCodewords" def="199" use="206" covered="1"/><du var="numCodewords" def="199" use="207" covered="1"/><du var="numCodewords" def="199" use="208" covered="1"/><du var="numDataCodewords" def="200" use="206" covered="1"/><du var="numDataCodewords" def="200" use="220" target="223" covered="1"/><du var="numDataCodewords" def="200" use="220" target="221" covered="1"/><du var="numCodewords" def="202" use="206" covered="1"/><du var="numCodewords" def="202" use="207" covered="1"/><du var="numCodewords" def="202" use="208" covered="1"/><du var="numDataCodewords" def="203" use="206" covered="1"/><du var="numDataCodewords" def="203" use="220" target="223" covered="1"/><du var="numDataCodewords" def="203" use="220" target="221" covered="1"/><du var="numECCodewords" def="206" use="214" covered="1"/><du var="parameterWords" def="207" use="209" covered="1"/><du var="parameterWords" def="207" use="214" covered="1"/><du var="parameterWords" def="207" use="221" covered="1"/><du var="i" def="208" use="208" target="213" covered="0"/><du var="i" def="208" use="208" target="209" covered="1"/><du var="i" def="208" use="209" covered="1"/><du var="i" def="208" use="208" covered="1"/><du var="parameterData" def="210" use="209" covered="1"/><du var="parameterData" def="210" use="210" covered="1"/><du var="i" def="208" use="208" target="213" covered="1"/><du var="i" def="208" use="208" target="209" covered="1"/><du var="i" def="208" use="209" covered="1"/><du var="i" def="208" use="208" covered="1"/><du var="result" def="219" use="221" covered="1"/><du var="result" def="219" use="223" covered="0"/><du var="i" def="220" use="220" target="223" covered="0"/><du var="i" def="220" use="220" target="221" covered="1"/><du var="i" def="220" use="221" covered="1"/><du var="i" def="220" use="220" covered="1"/><du var="result" def="221" use="221" covered="1"/><du var="result" def="221" use="223" covered="1"/><du var="i" def="220" use="220" target="223" covered="1"/><du var="i" def="220" use="220" target="221" covered="1"/><du var="i" def="220" use="221" covered="1"/><du var="i" def="220" use="220" covered="1"/><counter type="DU" missed="3" covered="40"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBullsEyeCorners" desc="(Lcom/google/zxing/aztec/detector/Detector$Point;)[Lcom/google/zxing/ResultPoint;"><du var="this" def="237" use="244" target="269" covered="0"/><du var="this" def="237" use="244" target="245" covered="1"/><du var="this" def="237" use="245" covered="1"/><du var="this" def="237" use="246" covered="1"/><du var="this" def="237" use="247" covered="1"/><du var="this" def="237" use="248" covered="1"/><du var="this" def="237" use="254" target="255" covered="1"/><du var="this" def="237" use="254" target="261" covered="1"/><du var="this" def="237" use="244" covered="1"/><du var="this" def="237" use="255" covered="1"/><du var="this" def="237" use="256" target="257" covered="1"/><du var="this" def="237" use="256" target="261" covered="1"/><du var="this" def="237" use="269" target="269" covered="1"/><du var="this" def="237" use="269" target="273" covered="1"/><du var="this" def="237" use="273" target="273" covered="1"/><du var="this" def="237" use="273" target="273" covered="1"/><du var="this" def="237" use="273" covered="1"/><du var="this" def="237" use="284" covered="1"/><du var="this" def="237" use="269" target="270" covered="0"/><du var="this" def="237" use="269" target="273" covered="1"/><du var="pina" def="237" use="245" covered="1"/><du var="pina" def="237" use="255" covered="0"/><du var="pina" def="237" use="277" covered="0"/><du var="pinb" def="238" use="246" covered="1"/><du var="pinb" def="238" use="278" covered="0"/><du var="pinc" def="239" use="247" covered="1"/><du var="pinc" def="239" use="279" covered="0"/><du var="pind" def="240" use="248" covered="1"/><du var="pind" def="240" use="255" covered="0"/><du var="pind" def="240" use="280" covered="0"/><du var="color" def="242" use="245" covered="1"/><du var="color" def="242" use="246" covered="1"/><du var="color" def="242" use="247" covered="1"/><du var="color" def="242" use="248" covered="1"/><du var="color" def="242" use="266" target="266" covered="1"/><du var="color" def="242" use="266" target="266" covered="0"/><du var="this.nbCenterLayers" def="244" use="244" target="269" covered="0"/><du var="this.nbCenterLayers" def="244" use="244" target="245" covered="1"/><du var="this.nbCenterLayers" def="244" use="254" target="255" covered="0"/><du var="this.nbCenterLayers" def="244" use="254" target="261" covered="1"/><du var="this.nbCenterLayers" def="244" use="244" covered="1"/><du var="this.nbCenterLayers" def="244" use="255" covered="0"/><du var="this.nbCenterLayers" def="244" use="269" target="269" covered="0"/><du var="this.nbCenterLayers" def="244" use="269" target="273" covered="0"/><du var="this.nbCenterLayers" def="244" use="273" target="273" covered="0"/><du var="this.nbCenterLayers" def="244" use="273" target="273" covered="0"/><du var="this.nbCenterLayers" def="244" use="284" covered="0"/><du var="this.nbCenterLayers" def="244" use="269" target="270" covered="0"/><du var="this.nbCenterLayers" def="244" use="269" target="273" covered="0"/><du var="pouta" def="245" use="261" covered="1"/><du var="pouta" def="245" use="255" covered="1"/><du var="pouta" def="245" use="256" target="257" covered="1"/><du var="pouta" def="245" use="256" target="261" covered="1"/><du var="poutb" def="246" use="262" covered="1"/><du var="poutb" def="246" use="256" target="257" covered="1"/><du var="poutb" def="246" use="256" target="261" covered="1"/><du var="poutc" def="247" use="263" covered="1"/><du var="poutc" def="247" use="256" target="257" covered="1"/><du var="poutc" def="247" use="256" target="261" covered="1"/><du var="poutd" def="248" use="264" covered="1"/><du var="poutd" def="248" use="255" covered="1"/><du var="poutd" def="248" use="256" target="257" covered="1"/><du var="poutd" def="248" use="256" target="261" covered="1"/><du var="q" def="255" use="256" target="256" covered="1"/><du var="q" def="255" use="256" target="269" covered="0"/><du var="q" def="255" use="256" target="256" covered="1"/><du var="q" def="255" use="256" target="269" covered="1"/><du var="pina" def="261" use="245" covered="1"/><du var="pina" def="261" use="255" covered="1"/><du var="pina" def="261" use="277" covered="1"/><du var="pinb" def="262" use="246" covered="1"/><du var="pinb" def="262" use="278" covered="1"/><du var="pinc" def="263" use="247" covered="1"/><du var="pinc" def="263" use="279" covered="1"/><du var="pind" def="264" use="248" covered="1"/><du var="pind" def="264" use="255" covered="1"/><du var="pind" def="264" use="280" covered="1"/><du var="color" def="266" use="245" covered="1"/><du var="color" def="266" use="246" covered="1"/><du var="color" def="266" use="247" covered="1"/><du var="color" def="266" use="248" covered="1"/><du var="color" def="266" use="266" target="266" covered="1"/><du var="color" def="266" use="266" target="266" covered="1"/><du var="this.nbCenterLayers" def="244" use="244" target="269" covered="0"/><du var="this.nbCenterLayers" def="244" use="244" target="245" covered="1"/><du var="this.nbCenterLayers" def="244" use="254" target="255" covered="1"/><du var="this.nbCenterLayers" def="244" use="254" target="261" covered="1"/><du var="this.nbCenterLayers" def="244" use="244" covered="1"/><du var="this.nbCenterLayers" def="244" use="255" covered="1"/><du var="this.nbCenterLayers" def="244" use="269" target="269" covered="1"/><du var="this.nbCenterLayers" def="244" use="269" target="273" covered="1"/><du var="this.nbCenterLayers" def="244" use="273" target="273" covered="1"/><du var="this.nbCenterLayers" def="244" use="273" target="273" covered="1"/><du var="this.nbCenterLayers" def="244" use="284" covered="1"/><du var="this.nbCenterLayers" def="244" use="269" target="270" covered="0"/><du var="this.nbCenterLayers" def="244" use="269" target="273" covered="1"/><counter type="DU" missed="22" covered="74"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sampleLine" desc="(Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;I)I"><du var="this" def="401" use="410" target="411" covered="1"/><du var="this" def="401" use="410" target="409" covered="1"/><du var="size" def="401" use="409" target="414" covered="1"/><du var="size" def="401" use="409" target="410" covered="1"/><du var="size" def="401" use="411" covered="1"/><du var="this.image" def="401" use="410" target="411" covered="1"/><du var="this.image" def="401" use="410" target="409" covered="1"/><du var="result" def="401" use="411" covered="1"/><du var="result" def="401" use="414" covered="1"/><du var="px" def="405" use="410" target="411" covered="1"/><du var="px" def="405" use="410" target="409" covered="1"/><du var="py" def="406" use="410" target="411" covered="1"/><du var="py" def="406" use="410" target="409" covered="1"/><du var="dx" def="407" use="410" target="411" covered="1"/><du var="dx" def="407" use="410" target="409" covered="1"/><du var="dy" def="408" use="410" target="411" covered="1"/><du var="dy" def="408" use="410" target="409" covered="1"/><du var="i" def="409" use="409" target="414" covered="0"/><du var="i" def="409" use="409" target="410" covered="1"/><du var="i" def="409" use="410" target="411" covered="1"/><du var="i" def="409" use="410" target="409" covered="1"/><du var="i" def="409" use="409" covered="1"/><du var="i" def="409" use="411" covered="1"/><du var="result" def="411" use="411" covered="1"/><du var="result" def="411" use="414" covered="1"/><du var="i" def="409" use="409" target="414" covered="1"/><du var="i" def="409" use="409" target="410" covered="1"/><du var="i" def="409" use="410" target="411" covered="1"/><du var="i" def="409" use="410" target="409" covered="1"/><du var="i" def="409" use="409" covered="1"/><du var="i" def="409" use="411" covered="1"/><counter type="DU" missed="1" covered="30"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWhiteOrBlackRectangle" desc="(Lcom/google/zxing/aztec/detector/Detector$Point;Lcom/google/zxing/aztec/detector/Detector$Point;Lcom/google/zxing/aztec/detector/Detector$Point;Lcom/google/zxing/aztec/detector/Detector$Point;)Z"><du var="this" def="426" use="439" covered="1"/><du var="this" def="426" use="445" covered="1"/><du var="this" def="426" use="451" covered="1"/><du var="p1" def="428" use="439" covered="1"/><du var="p2" def="429" use="439" covered="1"/><du var="p2" def="429" use="445" covered="1"/><du var="p3" def="430" use="445" covered="1"/><du var="p3" def="430" use="451" covered="1"/><du var="p4" def="431" use="451" covered="1"/><du var="cInit" def="433" use="435" target="436" covered="1"/><du var="cInit" def="433" use="435" target="439" covered="1"/><du var="cInit" def="433" use="441" target="442" covered="1"/><du var="cInit" def="433" use="441" target="445" covered="1"/><du var="cInit" def="433" use="447" target="448" covered="1"/><du var="cInit" def="433" use="447" target="451" covered="1"/><du var="cInit" def="433" use="453" target="453" covered="1"/><du var="cInit" def="433" use="453" target="453" covered="1"/><du var="c" def="439" use="441" target="442" covered="1"/><du var="c" def="439" use="441" target="445" covered="1"/><du var="c" def="445" use="447" target="448" covered="1"/><du var="c" def="445" use="447" target="451" covered="1"/><du var="c" def="451" use="453" target="453" covered="1"/><du var="c" def="451" use="453" target="453" covered="1"/><counter type="DU" missed="0" covered="23"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getColor" desc="(Lcom/google/zxing/aztec/detector/Detector$Point;Lcom/google/zxing/aztec/detector/Detector$Point;)I"><du var="this" def="463" use="477" target="478" covered="1"/><du var="this" def="463" use="477" target="474" covered="1"/><du var="this.image" def="463" use="477" target="478" covered="1"/><du var="this.image" def="463" use="477" target="474" covered="1"/><du var="d" def="463" use="482" covered="1"/><du var="dx" def="464" use="475" covered="1"/><du var="dy" def="465" use="476" covered="1"/><du var="error" def="466" use="478" covered="1"/><du var="error" def="466" use="482" covered="1"/><du var="px" def="468" use="475" covered="1"/><du var="py" def="469" use="476" covered="1"/><du var="colorModel" def="471" use="477" target="478" covered="1"/><du var="colorModel" def="471" use="477" target="474" covered="1"/><du var="colorModel" def="471" use="488" target="488" covered="1"/><du var="colorModel" def="471" use="488" target="488" covered="1"/><du var="iMax" def="473" use="474" target="482" covered="1"/><du var="iMax" def="473" use="474" target="475" covered="1"/><du var="i" def="474" use="474" target="482" covered="0"/><du var="i" def="474" use="474" target="475" covered="1"/><du var="i" def="474" use="474" covered="1"/><du var="px" def="475" use="477" target="478" covered="1"/><du var="px" def="475" use="477" target="474" covered="1"/><du var="px" def="475" use="475" covered="1"/><du var="py" def="476" use="477" target="478" covered="1"/><du var="py" def="476" use="477" target="474" covered="1"/><du var="py" def="476" use="476" covered="1"/><du var="error" def="478" use="478" covered="1"/><du var="error" def="478" use="482" covered="1"/><du var="i" def="474" use="474" target="482" covered="1"/><du var="i" def="474" use="474" target="475" covered="1"/><du var="i" def="474" use="474" covered="1"/><du var="errRatio" def="482" use="484" target="484" covered="1"/><du var="errRatio" def="482" use="484" target="488" covered="1"/><du var="errRatio" def="482" use="488" target="488" covered="1"/><du var="errRatio" def="482" use="488" target="488" covered="1"/><du var="errRatio" def="482" use="484" target="485" covered="1"/><du var="errRatio" def="482" use="484" target="488" covered="1"/><counter type="DU" missed="1" covered="36"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstDifferent" desc="(Lcom/google/zxing/aztec/detector/Detector$Point;ZII)Lcom/google/zxing/aztec/detector/Detector$Point;"><du var="this" def="495" use="498" target="498" covered="1"/><du var="this" def="495" use="498" target="503" covered="0"/><du var="this" def="495" use="506" target="506" covered="1"/><du var="this" def="495" use="506" target="509" covered="1"/><du var="this" def="495" use="511" target="511" covered="1"/><du var="this" def="495" use="511" target="514" covered="1"/><du var="this" def="495" use="511" target="514" covered="1"/><du var="this" def="495" use="511" target="512" covered="1"/><du var="this" def="495" use="506" target="509" covered="1"/><du var="this" def="495" use="506" target="507" covered="1"/><du var="this" def="495" use="498" target="503" covered="1"/><du var="this" def="495" use="498" target="499" covered="1"/><du var="color" def="495" use="511" target="514" covered="1"/><du var="color" def="495" use="511" target="512" covered="1"/><du var="color" def="495" use="506" target="509" covered="1"/><du var="color" def="495" use="506" target="507" covered="1"/><du var="color" def="495" use="498" target="503" covered="1"/><du var="color" def="495" use="498" target="499" covered="1"/><du var="dx" def="495" use="503" covered="1"/><du var="dx" def="495" use="509" covered="1"/><du var="dx" def="495" use="507" covered="1"/><du var="dx" def="495" use="499" covered="1"/><du var="dy" def="495" use="504" covered="1"/><du var="dy" def="495" use="514" covered="1"/><du var="dy" def="495" use="512" covered="1"/><du var="dy" def="495" use="500" covered="1"/><du var="this.image" def="495" use="511" target="514" covered="1"/><du var="this.image" def="495" use="511" target="512" covered="1"/><du var="this.image" def="495" use="506" target="509" covered="1"/><du var="this.image" def="495" use="506" target="507" covered="1"/><du var="this.image" def="495" use="498" target="503" covered="1"/><du var="this.image" def="495" use="498" target="499" covered="1"/><du var="x" def="495" use="498" target="498" covered="1"/><du var="x" def="495" use="498" target="503" covered="0"/><du var="x" def="495" use="503" covered="0"/><du var="x" def="495" use="498" target="503" covered="0"/><du var="x" def="495" use="498" target="499" covered="1"/><du var="x" def="495" use="499" covered="1"/><du var="y" def="496" use="498" target="498" covered="1"/><du var="y" def="496" use="498" target="503" covered="0"/><du var="y" def="496" use="504" covered="0"/><du var="y" def="496" use="498" target="503" covered="0"/><du var="y" def="496" use="498" target="499" covered="1"/><du var="y" def="496" use="500" covered="1"/><du var="x" def="499" use="498" target="498" covered="1"/><du var="x" def="499" use="498" target="503" covered="0"/><du var="x" def="499" use="503" covered="1"/><du var="x" def="499" use="498" target="503" covered="1"/><du var="x" def="499" use="498" target="499" covered="1"/><du var="x" def="499" use="499" covered="1"/><du var="y" def="500" use="498" target="498" covered="1"/><du var="y" def="500" use="498" target="503" covered="0"/><du var="y" def="500" use="504" covered="1"/><du var="y" def="500" use="498" target="503" covered="1"/><du var="y" def="500" use="498" target="499" covered="1"/><du var="y" def="500" use="500" covered="1"/><du var="x" def="503" use="506" target="506" covered="1"/><du var="x" def="503" use="506" target="509" covered="0"/><du var="x" def="503" use="509" covered="0"/><du var="x" def="503" use="506" target="509" covered="0"/><du var="x" def="503" use="506" target="507" covered="1"/><du var="x" def="503" use="507" covered="1"/><du var="y" def="504" use="506" target="506" covered="1"/><du var="y" def="504" use="506" target="509" covered="1"/><du var="y" def="504" use="511" target="511" covered="1"/><du var="y" def="504" use="511" target="514" covered="0"/><du var="y" def="504" use="514" covered="0"/><du var="y" def="504" use="511" target="514" covered="0"/><du var="y" def="504" use="511" target="512" covered="1"/><du var="y" def="504" use="512" covered="1"/><du var="y" def="504" use="506" target="509" covered="1"/><du var="y" def="504" use="506" target="507" covered="1"/><du var="x" def="507" use="506" target="506" covered="1"/><du var="x" def="507" use="506" target="509" covered="1"/><du var="x" def="507" use="509" covered="1"/><du var="x" def="507" use="506" target="509" covered="1"/><du var="x" def="507" use="506" target="507" covered="1"/><du var="x" def="507" use="507" covered="1"/><du var="x" def="509" use="511" target="511" covered="1"/><du var="x" def="509" use="511" target="514" covered="1"/><du var="x" def="509" use="516" covered="1"/><du var="x" def="509" use="511" target="514" covered="1"/><du var="x" def="509" use="511" target="512" covered="1"/><du var="y" def="512" use="511" target="511" covered="1"/><du var="y" def="512" use="511" target="514" covered="1"/><du var="y" def="512" use="514" covered="1"/><du var="y" def="512" use="511" target="514" covered="1"/><du var="y" def="512" use="511" target="512" covered="1"/><du var="y" def="512" use="512" covered="1"/><counter type="DU" missed="15" covered="74"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValid" desc="(II)Z"><du var="this" def="548" use="548" target="548" covered="1"/><du var="this" def="548" use="548" target="548" covered="1"/><du var="this" def="548" use="548" target="548" covered="1"/><du var="this" def="548" use="548" target="548" covered="1"/><du var="x" def="548" use="548" target="548" covered="1"/><du var="x" def="548" use="548" target="548" covered="1"/><du var="x" def="548" use="548" target="548" covered="1"/><du var="x" def="548" use="548" target="548" covered="1"/><du var="y" def="548" use="548" target="548" covered="1"/><du var="y" def="548" use="548" target="548" covered="1"/><du var="y" def="548" use="548" target="548" covered="1"/><du var="y" def="548" use="548" target="548" covered="1"/><du var="this.image" def="548" use="548" target="548" covered="1"/><du var="this.image" def="548" use="548" target="548" covered="1"/><du var="this.image" def="548" use="548" target="548" covered="1"/><du var="this.image" def="548" use="548" target="548" covered="1"/><counter type="DU" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDimension" desc="()I"><du var="this" def="566" use="566" target="567" covered="1"/><du var="this" def="566" use="566" target="569" covered="1"/><du var="this" def="566" use="569" target="570" covered="0"/><du var="this" def="566" use="569" target="572" covered="1"/><du var="this" def="566" use="572" covered="1"/><du var="this" def="566" use="570" covered="0"/><du var="this" def="566" use="567" covered="1"/><du var="this.compact" def="566" use="566" target="567" covered="1"/><du var="this.compact" def="566" use="566" target="569" covered="1"/><du var="this.nbLayers" def="566" use="569" target="570" covered="0"/><du var="this.nbLayers" def="566" use="569" target="572" covered="1"/><du var="this.nbLayers" def="566" use="572" covered="1"/><du var="this.nbLayers" def="566" use="570" covered="0"/><du var="this.nbLayers" def="566" use="567" covered="1"/><counter type="DU" missed="4" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="61" covered="404"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/aztec/encoder/State"><method name="latchAndAppend" desc="(II)Lcom/google/zxing/aztec/encoder/State;"><du var="this" def="77" use="79" target="80" covered="1"/><du var="this" def="77" use="79" target="84" covered="1"/><du var="this" def="77" use="80" covered="1"/><du var="mode" def="77" use="79" target="80" covered="1"/><du var="mode" def="77" use="79" target="84" covered="1"/><du var="mode" def="77" use="84" target="84" covered="1"/><du var="mode" def="77" use="84" target="84" covered="1"/><du var="mode" def="77" use="86" covered="1"/><du var="mode" def="77" use="80" covered="1"/><du var="value" def="77" use="85" covered="1"/><du var="this.mode" def="77" use="79" target="80" covered="1"/><du var="this.mode" def="77" use="79" target="84" covered="1"/><du var="this.mode" def="77" use="80" covered="1"/><du var="LATCH_TABLE" def="77" use="80" covered="1"/><du var="bitCount" def="77" use="86" covered="1"/><du var="bitCount" def="77" use="82" covered="1"/><du var="token" def="78" use="85" covered="1"/><du var="token" def="78" use="81" covered="1"/><du var="token" def="81" use="85" covered="1"/><du var="bitCount" def="82" use="86" covered="1"/><counter type="DU" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shiftAndAppend" desc="(II)Lcom/google/zxing/aztec/encoder/State;"><du var="this" def="93" use="94" target="94" covered="1"/><du var="this" def="93" use="94" target="94" covered="1"/><du var="this" def="93" use="96" covered="1"/><du var="this" def="93" use="98" covered="1"/><du var="mode" def="93" use="96" covered="1"/><du var="value" def="93" use="97" covered="1"/><du var="this.mode" def="93" use="94" target="94" covered="1"/><du var="this.mode" def="93" use="94" target="94" covered="1"/><du var="this.mode" def="93" use="96" covered="1"/><du var="this.mode" def="93" use="98" covered="1"/><du var="SHIFT_TABLE" def="93" use="96" covered="1"/><du var="this.bitCount" def="93" use="98" covered="1"/><du var="token" def="93" use="96" covered="1"/><counter type="DU" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addBinaryShiftChar" desc="(I)Lcom/google/zxing/aztec/encoder/State;"><du var="this" def="104" use="107" target="107" covered="1"/><du var="this" def="104" use="107" target="109" covered="1"/><du var="this" def="104" use="115" target="115" covered="1"/><du var="this" def="104" use="115" target="115" covered="1"/><du var="this" def="104" use="117" covered="1"/><du var="this" def="104" use="115" target="115" covered="1"/><du var="this" def="104" use="115" target="116" covered="1"/><du var="this" def="104" use="116" target="116" covered="1"/><du var="this" def="104" use="116" target="116" covered="1"/><du var="this" def="104" use="107" target="109" covered="1"/><du var="this" def="104" use="107" target="115" covered="1"/><du var="index" def="104" use="120" covered="1"/><du var="this.mode" def="104" use="107" target="107" covered="1"/><du var="this.mode" def="104" use="107" target="109" covered="1"/><du var="this.mode" def="104" use="107" target="109" covered="1"/><du var="this.mode" def="104" use="107" target="115" covered="1"/><du var="LATCH_TABLE" def="104" use="109" covered="1"/><du var="this.binaryShiftByteCount" def="104" use="115" target="115" covered="1"/><du var="this.binaryShiftByteCount" def="104" use="115" target="115" covered="1"/><du var="this.binaryShiftByteCount" def="104" use="117" covered="1"/><du var="this.binaryShiftByteCount" def="104" use="115" target="115" covered="1"/><du var="this.binaryShiftByteCount" def="104" use="115" target="116" covered="1"/><du var="this.binaryShiftByteCount" def="104" use="116" target="116" covered="1"/><du var="this.binaryShiftByteCount" def="104" use="116" target="116" covered="1"/><du var="token" def="104" use="110" covered="1"/><du var="token" def="104" use="117" covered="1"/><du var="mode" def="105" use="109" covered="1"/><du var="mode" def="105" use="117" covered="1"/><du var="bitCount" def="106" use="111" covered="1"/><du var="bitCount" def="106" use="117" covered="1"/><du var="token" def="110" use="117" covered="1"/><du var="bitCount" def="111" use="117" covered="1"/><du var="mode" def="112" use="117" covered="1"/><du var="result" def="117" use="118" target="120" covered="1"/><du var="result" def="117" use="118" target="122" covered="1"/><du var="result" def="117" use="122" covered="1"/><du var="result" def="117" use="120" covered="1"/><du var="result.binaryShiftByteCount" def="117" use="118" target="120" covered="1"/><du var="result.binaryShiftByteCount" def="117" use="118" target="122" covered="1"/><du var="result" def="120" use="122" covered="1"/><counter type="DU" missed="0" covered="40"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endBinaryShift" desc="(I)Lcom/google/zxing/aztec/encoder/State;"><du var="this" def="128" use="128" target="129" covered="1"/><du var="this" def="128" use="128" target="131" covered="1"/><du var="this" def="128" use="131" covered="1"/><du var="this" def="128" use="132" covered="1"/><du var="this" def="128" use="134" covered="1"/><du var="this" def="128" use="129" covered="1"/><du var="index" def="128" use="132" covered="1"/><du var="this.binaryShiftByteCount" def="128" use="128" target="129" covered="1"/><du var="this.binaryShiftByteCount" def="128" use="128" target="131" covered="1"/><du var="this.binaryShiftByteCount" def="128" use="132" covered="1"/><du var="this.token" def="128" use="131" covered="1"/><du var="this.mode" def="128" use="134" covered="1"/><du var="this.bitCount" def="128" use="134" covered="1"/><counter type="DU" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBetterThanOrEqualTo" desc="(Lcom/google/zxing/aztec/encoder/State;)Z"><du var="this" def="140" use="142" target="142" covered="1"/><du var="this" def="140" use="142" target="143" covered="1"/><du var="this" def="140" use="142" target="143" covered="1"/><du var="this" def="140" use="142" target="145" covered="1"/><du var="other" def="140" use="141" target="142" covered="1"/><du var="other" def="140" use="141" target="145" covered="1"/><du var="other" def="140" use="145" target="145" covered="1"/><du var="other" def="140" use="145" target="145" covered="1"/><du var="other" def="140" use="142" target="143" covered="1"/><du var="other" def="140" use="142" target="145" covered="1"/><du var="other.binaryShiftByteCount" def="140" use="141" target="142" covered="1"/><du var="other.binaryShiftByteCount" def="140" use="141" target="145" covered="1"/><du var="other.binaryShiftByteCount" def="140" use="142" target="143" covered="1"/><du var="other.binaryShiftByteCount" def="140" use="142" target="145" covered="1"/><du var="this.binaryShiftByteCount" def="140" use="142" target="142" covered="1"/><du var="this.binaryShiftByteCount" def="140" use="142" target="143" covered="1"/><du var="this.binaryShiftByteCount" def="140" use="142" target="143" covered="1"/><du var="this.binaryShiftByteCount" def="140" use="142" target="145" covered="1"/><du var="other.bitCount" def="140" use="145" target="145" covered="1"/><du var="other.bitCount" def="140" use="145" target="145" covered="1"/><du var="mySize" def="140" use="145" target="145" covered="1"/><du var="mySize" def="140" use="145" target="145" covered="1"/><du var="mySize" def="140" use="143" covered="1"/><du var="mySize" def="143" use="145" target="145" covered="1"/><du var="mySize" def="143" use="145" target="145" covered="1"/><counter type="DU" missed="0" covered="25"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBitArray" desc="([B)Lcom/google/zxing/common/BitArray;"><du var="text" def="151" use="158" covered="1"/><du var="symbols" def="151" use="153" covered="1"/><du var="symbols" def="151" use="157" covered="1"/><du var="token" def="152" use="152" target="155" covered="0"/><du var="token" def="152" use="152" target="153" covered="1"/><du var="token" def="152" use="153" covered="1"/><du var="token" def="152" use="152" covered="1"/><du var="token" def="152" use="152" target="155" covered="1"/><du var="token" def="152" use="152" target="153" covered="1"/><du var="token" def="152" use="153" covered="1"/><du var="token" def="152" use="152" covered="1"/><du var="bitArray" def="155" use="158" covered="1"/><du var="bitArray" def="155" use="161" covered="1"/><counter type="DU" missed="1" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="1" covered="126"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/aztec/encoder/Encoder"><method name="encode" desc="([BII)Lcom/google/zxing/aztec/encoder/AztecCode;"><du var="userSpecifiedLayers" def="65" use="75" target="76" covered="1"/><du var="userSpecifiedLayers" def="65" use="75" target="94" covered="1"/><du var="userSpecifiedLayers" def="65" use="76" target="76" covered="1"/><du var="userSpecifiedLayers" def="65" use="76" target="76" covered="1"/><du var="userSpecifiedLayers" def="65" use="77" covered="1"/><du var="userSpecifiedLayers" def="65" use="80" covered="1"/><du var="WORD_SIZE" def="65" use="111" target="112" covered="1"/><du var="WORD_SIZE" def="65" use="111" target="115" covered="1"/><du var="WORD_SIZE" def="65" use="112" covered="1"/><du var="WORD_SIZE" def="65" use="83" covered="1"/><du var="bits" def="65" use="113" covered="1"/><du var="bits" def="65" use="85" covered="1"/><du var="eccBits" def="68" use="120" target="121" covered="1"/><du var="eccBits" def="68" use="120" target="99" covered="0"/><du var="eccBits" def="68" use="86" target="87" covered="1"/><du var="eccBits" def="68" use="86" target="89" covered="1"/><du var="totalSizeBits" def="69" use="106" target="107" covered="1"/><du var="totalSizeBits" def="69" use="106" target="111" covered="1"/><du var="compact" def="76" use="78" target="78" covered="1"/><du var="compact" def="76" use="78" target="78" covered="1"/><du var="compact" def="76" use="82" covered="1"/><du var="compact" def="76" use="89" target="89" covered="1"/><du var="compact" def="76" use="89" target="125" covered="1"/><du var="compact" def="76" use="129" covered="1"/><du var="compact" def="76" use="132" target="132" covered="1"/><du var="compact" def="76" use="132" target="132" covered="1"/><du var="compact" def="76" use="135" target="137" covered="1"/><du var="compact" def="76" use="135" target="142" covered="1"/><du var="compact" def="76" use="155" target="155" covered="1"/><du var="compact" def="76" use="155" target="155" covered="1"/><du var="compact" def="76" use="177" covered="1"/><du var="compact" def="76" use="180" target="181" covered="1"/><du var="compact" def="76" use="180" target="183" covered="1"/><du var="compact" def="76" use="195" covered="1"/><du var="layers" def="77" use="78" target="79" covered="1"/><du var="layers" def="77" use="78" target="82" covered="1"/><du var="layers" def="77" use="82" covered="1"/><du var="layers" def="77" use="83" covered="1"/><du var="layers" def="77" use="129" covered="1"/><du var="layers" def="77" use="132" covered="1"/><du var="layers" def="77" use="154" target="177" covered="1"/><du var="layers" def="77" use="154" target="155" covered="1"/><du var="layers" def="77" use="155" covered="1"/><du var="layers" def="77" use="197" covered="1"/><du var="totalBitsInLayer" def="82" use="125" covered="1"/><du var="wordSize" def="83" use="125" covered="1"/><du var="wordSize" def="83" use="128" covered="1"/><du var="wordSize" def="83" use="89" target="91" covered="1"/><du var="wordSize" def="83" use="89" target="125" covered="1"/><du var="usableBitsInLayers" def="84" use="86" target="87" covered="1"/><du var="usableBitsInLayers" def="84" use="86" target="89" covered="1"/><du var="stuffedBits" def="85" use="86" target="87" covered="1"/><du var="stuffedBits" def="85" use="86" target="89" covered="1"/><du var="stuffedBits" def="85" use="125" covered="1"/><du var="stuffedBits" def="85" use="128" covered="1"/><du var="stuffedBits" def="85" use="89" target="91" covered="1"/><du var="stuffedBits" def="85" use="89" target="125" covered="1"/><du var="wordSize" def="94" use="111" target="112" covered="1"/><du var="wordSize" def="94" use="111" target="115" covered="0"/><du var="wordSize" def="94" use="115" covered="0"/><du var="wordSize" def="94" use="125" covered="0"/><du var="wordSize" def="94" use="128" covered="0"/><du var="wordSize" def="94" use="116" target="118" covered="0"/><du var="wordSize" def="94" use="116" target="120" covered="0"/><du var="stuffedBits" def="95" use="120" target="121" covered="0"/><du var="stuffedBits" def="95" use="120" target="99" covered="0"/><du var="stuffedBits" def="95" use="125" covered="0"/><du var="stuffedBits" def="95" use="128" covered="0"/><du var="stuffedBits" def="95" use="116" target="118" covered="0"/><du var="stuffedBits" def="95" use="116" target="120" covered="0"/><du var="i" def="99" use="100" target="101" covered="0"/><du var="i" def="99" use="100" target="103" covered="1"/><du var="i" def="99" use="103" target="103" covered="1"/><du var="i" def="99" use="103" target="103" covered="0"/><du var="i" def="99" use="104" covered="1"/><du var="i" def="99" use="99" covered="1"/><du var="compact" def="103" use="104" target="104" covered="1"/><du var="compact" def="103" use="104" target="104" covered="1"/><du var="compact" def="103" use="105" covered="1"/><du var="compact" def="103" use="116" target="116" covered="1"/><du var="compact" def="103" use="116" target="120" covered="1"/><du var="compact" def="103" use="129" covered="1"/><du var="compact" def="103" use="132" target="132" covered="1"/><du var="compact" def="103" use="132" target="132" covered="1"/><du var="compact" def="103" use="135" target="137" covered="1"/><du var="compact" def="103" use="135" target="142" covered="1"/><du var="compact" def="103" use="155" target="155" covered="1"/><du var="compact" def="103" use="155" target="155" covered="1"/><du var="compact" def="103" use="177" covered="1"/><du var="compact" def="103" use="180" target="181" covered="1"/><du var="compact" def="103" use="180" target="183" covered="1"/><du var="compact" def="103" use="195" covered="1"/><du var="layers" def="104" use="111" target="112" covered="1"/><du var="layers" def="104" use="111" target="115" covered="1"/><du var="layers" def="104" use="129" covered="1"/><du var="layers" def="104" use="132" covered="1"/><du var="layers" def="104" use="154" target="177" covered="1"/><du var="layers" def="104" use="154" target="155" covered="1"/><du var="layers" def="104" use="155" covered="1"/><du var="layers" def="104" use="197" covered="1"/><du var="layers" def="104" use="112" covered="1"/><du var="totalBitsInLayer" def="105" use="106" target="107" covered="1"/><du var="totalBitsInLayer" def="105" use="106" target="111" covered="1"/><du var="totalBitsInLayer" def="105" use="115" covered="1"/><du var="totalBitsInLayer" def="105" use="125" covered="1"/><du var="wordSize" def="112" use="115" covered="1"/><du var="wordSize" def="112" use="111" target="112" covered="0"/><du var="wordSize" def="112" use="111" target="115" covered="1"/><du var="wordSize" def="112" use="125" covered="1"/><du var="wordSize" def="112" use="128" covered="1"/><du var="wordSize" def="112" use="116" target="118" covered="1"/><du var="wordSize" def="112" use="116" target="120" covered="1"/><du var="stuffedBits" def="113" use="120" target="121" covered="1"/><du var="stuffedBits" def="113" use="120" target="99" covered="0"/><du var="stuffedBits" def="113" use="125" covered="1"/><du var="stuffedBits" def="113" use="128" covered="1"/><du var="stuffedBits" def="113" use="116" target="118" covered="1"/><du var="stuffedBits" def="113" use="116" target="120" covered="1"/><du var="usableBitsInLayers" def="115" use="120" target="121" covered="1"/><du var="usableBitsInLayers" def="115" use="120" target="99" covered="0"/><du var="i" def="99" use="100" target="101" covered="0"/><du var="i" def="99" use="100" target="103" covered="1"/><du var="i" def="99" use="103" target="103" covered="1"/><du var="i" def="99" use="103" target="103" covered="1"/><du var="i" def="99" use="104" covered="1"/><du var="i" def="99" use="99" covered="1"/><du var="messageBits" def="125" use="159" target="160" covered="1"/><du var="messageBits" def="125" use="159" target="162" covered="1"/><du var="messageBits" def="125" use="162" target="163" covered="1"/><du var="messageBits" def="125" use="162" target="165" covered="1"/><du var="messageBits" def="125" use="165" target="166" covered="1"/><du var="messageBits" def="125" use="165" target="168" covered="1"/><du var="messageBits" def="125" use="168" target="169" covered="1"/><du var="messageBits" def="125" use="168" target="158" covered="1"/><du var="messageSizeInWords" def="128" use="198" covered="1"/><du var="modeMessage" def="129" use="177" covered="1"/><du var="baseMatrixSize" def="132" use="142" covered="1"/><du var="baseMatrixSize" def="132" use="143" covered="1"/><du var="baseMatrixSize" def="132" use="169" covered="1"/><du var="baseMatrixSize" def="132" use="166" covered="1"/><du var="baseMatrixSize" def="132" use="163" covered="1"/><du var="baseMatrixSize" def="132" use="184" target="194" covered="1"/><du var="baseMatrixSize" def="132" use="184" target="185" covered="1"/><du var="baseMatrixSize" def="132" use="137" covered="1"/><du var="alignmentMap" def="133" use="147" covered="1"/><du var="alignmentMap" def="133" use="148" covered="1"/><du var="alignmentMap" def="133" use="169" covered="1"/><du var="alignmentMap" def="133" use="166" covered="1"/><du var="alignmentMap" def="133" use="163" covered="1"/><du var="alignmentMap" def="133" use="160" covered="1"/><du var="alignmentMap" def="133" use="138" target="141" covered="1"/><du var="alignmentMap" def="133" use="138" target="139" covered="1"/><du var="alignmentMap" def="133" use="139" covered="1"/><du var="matrixSize" def="137" use="151" covered="1"/><du var="matrixSize" def="137" use="177" covered="1"/><du var="matrixSize" def="137" use="183" covered="0"/><du var="matrixSize" def="137" use="185" covered="0"/><du var="matrixSize" def="137" use="185" target="184" covered="0"/><du var="matrixSize" def="137" use="185" target="186" covered="0"/><du var="matrixSize" def="137" use="186" covered="0"/><du var="matrixSize" def="137" use="187" covered="0"/><du var="matrixSize" def="137" use="188" covered="0"/><du var="matrixSize" def="137" use="189" covered="0"/><du var="matrixSize" def="137" use="196" covered="1"/><du var="matrixSize" def="137" use="181" covered="1"/><du var="i" def="138" use="138" target="141" covered="0"/><du var="i" def="138" use="138" target="139" covered="1"/><du var="i" def="138" use="139" covered="1"/><du var="i" def="138" use="138" covered="1"/><du var="i" def="138" use="138" target="141" covered="1"/><du var="i" def="138" use="138" target="139" covered="1"/><du var="i" def="138" use="139" covered="1"/><du var="i" def="138" use="138" covered="1"/><du var="matrixSize" def="142" use="151" covered="1"/><du var="matrixSize" def="142" use="177" covered="1"/><du var="matrixSize" def="142" use="183" covered="1"/><du var="matrixSize" def="142" use="185" covered="1"/><du var="matrixSize" def="142" use="185" target="184" covered="1"/><du var="matrixSize" def="142" use="185" target="186" covered="1"/><du var="matrixSize" def="142" use="186" covered="1"/><du var="matrixSize" def="142" use="187" covered="1"/><du var="matrixSize" def="142" use="188" covered="1"/><du var="matrixSize" def="142" use="189" covered="1"/><du var="matrixSize" def="142" use="196" covered="1"/><du var="matrixSize" def="142" use="181" covered="0"/><du var="origCenter" def="143" use="145" target="151" covered="1"/><du var="origCenter" def="143" use="145" target="146" covered="1"/><du var="origCenter" def="143" use="147" covered="1"/><du var="origCenter" def="143" use="148" covered="1"/><du var="center" def="144" use="147" covered="1"/><du var="center" def="144" use="148" covered="1"/><du var="i" def="145" use="145" target="151" covered="0"/><du var="i" def="145" use="145" target="146" covered="1"/><du var="i" def="145" use="146" covered="1"/><du var="i" def="145" use="147" covered="1"/><du var="i" def="145" use="148" covered="1"/><du var="i" def="145" use="145" covered="1"/><du var="i" def="145" use="145" target="151" covered="1"/><du var="i" def="145" use="145" target="146" covered="1"/><du var="i" def="145" use="146" covered="1"/><du var="i" def="145" use="147" covered="1"/><du var="i" def="145" use="148" covered="1"/><du var="i" def="145" use="145" covered="1"/><du var="matrix" def="151" use="169" covered="1"/><du var="matrix" def="151" use="166" covered="1"/><du var="matrix" def="151" use="163" covered="1"/><du var="matrix" def="151" use="160" covered="1"/><du var="matrix" def="151" use="177" covered="1"/><du var="matrix" def="151" use="183" covered="1"/><du var="matrix" def="151" use="186" covered="1"/><du var="matrix" def="151" use="187" covered="1"/><du var="matrix" def="151" use="188" covered="1"/><du var="matrix" def="151" use="189" covered="1"/><du var="matrix" def="151" use="199" covered="1"/><du var="matrix" def="151" use="181" covered="1"/><du var="i" def="154" use="154" target="177" covered="0"/><du var="i" def="154" use="154" target="155" covered="1"/><du var="i" def="154" use="155" covered="1"/><du var="i" def="154" use="169" covered="1"/><du var="i" def="154" use="166" covered="1"/><du var="i" def="154" use="163" covered="1"/><du var="i" def="154" use="160" covered="1"/><du var="i" def="154" use="154" covered="1"/><du var="rowOffset" def="154" use="159" target="160" covered="1"/><du var="rowOffset" def="154" use="159" target="162" covered="1"/><du var="rowOffset" def="154" use="162" target="163" covered="1"/><du var="rowOffset" def="154" use="162" target="165" covered="1"/><du var="rowOffset" def="154" use="165" target="166" covered="1"/><du var="rowOffset" def="154" use="165" target="168" covered="1"/><du var="rowOffset" def="154" use="168" target="169" covered="1"/><du var="rowOffset" def="154" use="168" target="158" covered="1"/><du var="rowOffset" def="154" use="173" covered="1"/><du var="rowSize" def="155" use="156" target="173" covered="1"/><du var="rowSize" def="155" use="156" target="157" covered="1"/><du var="rowSize" def="155" use="162" target="163" covered="1"/><du var="rowSize" def="155" use="162" target="165" covered="1"/><du var="rowSize" def="155" use="165" target="166" covered="1"/><du var="rowSize" def="155" use="165" target="168" covered="1"/><du var="rowSize" def="155" use="168" target="169" covered="1"/><du var="rowSize" def="155" use="168" target="158" covered="1"/><du var="rowSize" def="155" use="173" covered="1"/><du var="j" def="156" use="156" target="173" covered="0"/><du var="j" def="156" use="156" target="157" covered="1"/><du var="j" def="156" use="157" covered="1"/><du var="j" def="156" use="169" covered="1"/><du var="j" def="156" use="166" covered="1"/><du var="j" def="156" use="163" covered="1"/><du var="j" def="156" use="160" covered="1"/><du var="j" def="156" use="156" covered="1"/><du var="columnOffset" def="157" use="159" target="160" covered="1"/><du var="columnOffset" def="157" use="159" target="162" covered="1"/><du var="columnOffset" def="157" use="162" target="163" covered="1"/><du var="columnOffset" def="157" use="162" target="165" covered="1"/><du var="columnOffset" def="157" use="165" target="166" covered="1"/><du var="columnOffset" def="157" use="165" target="168" covered="1"/><du var="columnOffset" def="157" use="168" target="169" covered="1"/><du var="columnOffset" def="157" use="168" target="158" covered="1"/><du var="k" def="158" use="158" target="156" covered="0"/><du var="k" def="158" use="158" target="159" covered="1"/><du var="k" def="158" use="159" target="160" covered="1"/><du var="k" def="158" use="159" target="162" covered="1"/><du var="k" def="158" use="162" target="163" covered="1"/><du var="k" def="158" use="162" target="165" covered="1"/><du var="k" def="158" use="165" target="166" covered="1"/><du var="k" def="158" use="165" target="168" covered="1"/><du var="k" def="158" use="168" target="169" covered="1"/><du var="k" def="158" use="168" target="158" covered="1"/><du var="k" def="158" use="158" covered="1"/><du var="k" def="158" use="169" covered="1"/><du var="k" def="158" use="166" covered="1"/><du var="k" def="158" use="163" covered="1"/><du var="k" def="158" use="160" covered="1"/><du var="k" def="158" use="158" target="156" covered="1"/><du var="k" def="158" use="158" target="159" covered="1"/><du var="k" def="158" use="159" target="160" covered="1"/><du var="k" def="158" use="159" target="162" covered="1"/><du var="k" def="158" use="162" target="163" covered="1"/><du var="k" def="158" use="162" target="165" covered="1"/><du var="k" def="158" use="165" target="166" covered="1"/><du var="k" def="158" use="165" target="168" covered="1"/><du var="k" def="158" use="168" target="169" covered="1"/><du var="k" def="158" use="168" target="158" covered="1"/><du var="k" def="158" use="158" covered="1"/><du var="k" def="158" use="169" covered="1"/><du var="k" def="158" use="166" covered="1"/><du var="k" def="158" use="163" covered="1"/><du var="k" def="158" use="160" covered="1"/><du var="j" def="156" use="156" target="173" covered="1"/><du var="j" def="156" use="156" target="157" covered="1"/><du var="j" def="156" use="157" covered="1"/><du var="j" def="156" use="169" covered="1"/><du var="j" def="156" use="166" covered="1"/><du var="j" def="156" use="163" covered="1"/><du var="j" def="156" use="160" covered="1"/><du var="j" def="156" use="156" covered="1"/><du var="rowOffset" def="173" use="159" target="160" covered="1"/><du var="rowOffset" def="173" use="159" target="162" covered="1"/><du var="rowOffset" def="173" use="162" target="163" covered="1"/><du var="rowOffset" def="173" use="162" target="165" covered="1"/><du var="rowOffset" def="173" use="165" target="166" covered="1"/><du var="rowOffset" def="173" use="165" target="168" covered="1"/><du var="rowOffset" def="173" use="168" target="169" covered="1"/><du var="rowOffset" def="173" use="168" target="158" covered="1"/><du var="rowOffset" def="173" use="173" covered="1"/><du var="i" def="154" use="154" target="177" covered="1"/><du var="i" def="154" use="154" target="155" covered="1"/><du var="i" def="154" use="155" covered="1"/><du var="i" def="154" use="169" covered="1"/><du var="i" def="154" use="166" covered="1"/><du var="i" def="154" use="163" covered="1"/><du var="i" def="154" use="160" covered="1"/><du var="i" def="154" use="154" covered="1"/><du var="i" def="184" use="184" target="194" covered="0"/><du var="i" def="184" use="184" target="185" covered="1"/><du var="i" def="184" use="184" covered="1"/><du var="j" def="184" use="186" covered="1"/><du var="j" def="184" use="187" covered="1"/><du var="j" def="184" use="188" covered="1"/><du var="j" def="184" use="189" covered="1"/><du var="j" def="184" use="184" covered="1"/><du var="k" def="185" use="185" target="184" covered="0"/><du var="k" def="185" use="185" target="186" covered="1"/><du var="k" def="185" use="186" covered="1"/><du var="k" def="185" use="187" covered="1"/><du var="k" def="185" use="188" covered="1"/><du var="k" def="185" use="189" covered="1"/><du var="k" def="185" use="185" covered="1"/><du var="k" def="185" use="185" target="184" covered="1"/><du var="k" def="185" use="185" target="186" covered="1"/><du var="k" def="185" use="186" covered="1"/><du var="k" def="185" use="187" covered="1"/><du var="k" def="185" use="188" covered="1"/><du var="k" def="185" use="189" covered="1"/><du var="k" def="185" use="185" covered="1"/><du var="i" def="184" use="184" target="194" covered="1"/><du var="i" def="184" use="184" target="185" covered="1"/><du var="i" def="184" use="184" covered="1"/><du var="j" def="184" use="186" covered="1"/><du var="j" def="184" use="187" covered="1"/><du var="j" def="184" use="188" covered="1"/><du var="j" def="184" use="189" covered="1"/><du var="j" def="184" use="184" covered="1"/><counter type="DU" missed="35" covered="307"/><counter type="METHOD" missed="0" covered="1"/></method><method name="drawBullsEye" desc="(Lcom/google/zxing/common/BitMatrix;II)V"><du var="matrix" def="204" use="206" covered="1"/><du var="matrix" def="204" use="207" covered="1"/><du var="matrix" def="204" use="208" covered="1"/><du var="matrix" def="204" use="209" covered="1"/><du var="matrix" def="204" use="212" covered="1"/><du var="matrix" def="204" use="213" covered="1"/><du var="matrix" def="204" use="214" covered="1"/><du var="matrix" def="204" use="215" covered="1"/><du var="matrix" def="204" use="216" covered="1"/><du var="matrix" def="204" use="217" covered="1"/><du var="center" def="204" use="205" covered="1"/><du var="center" def="204" use="205" target="204" covered="1"/><du var="center" def="204" use="205" target="206" covered="1"/><du var="center" def="204" use="206" covered="1"/><du var="center" def="204" use="207" covered="1"/><du var="center" def="204" use="208" covered="1"/><du var="center" def="204" use="209" covered="1"/><du var="center" def="204" use="212" covered="1"/><du var="center" def="204" use="213" covered="1"/><du var="center" def="204" use="214" covered="1"/><du var="center" def="204" use="215" covered="1"/><du var="center" def="204" use="216" covered="1"/><du var="center" def="204" use="217" covered="1"/><du var="size" def="204" use="204" target="212" covered="1"/><du var="size" def="204" use="204" target="205" covered="1"/><du var="size" def="204" use="212" covered="1"/><du var="size" def="204" use="213" covered="1"/><du var="size" def="204" use="214" covered="1"/><du var="size" def="204" use="215" covered="1"/><du var="size" def="204" use="216" covered="1"/><du var="size" def="204" use="217" covered="1"/><du var="i" def="204" use="204" target="212" covered="0"/><du var="i" def="204" use="204" target="205" covered="1"/><du var="i" def="204" use="205" covered="1"/><du var="i" def="204" use="205" target="204" covered="1"/><du var="i" def="204" use="205" target="206" covered="1"/><du var="i" def="204" use="206" covered="1"/><du var="i" def="204" use="207" covered="1"/><du var="i" def="204" use="208" covered="1"/><du var="i" def="204" use="209" covered="1"/><du var="i" def="204" use="204" covered="1"/><du var="j" def="205" use="205" target="204" covered="0"/><du var="j" def="205" use="205" target="206" covered="1"/><du var="j" def="205" use="206" covered="1"/><du var="j" def="205" use="207" covered="1"/><du var="j" def="205" use="208" covered="1"/><du var="j" def="205" use="209" covered="1"/><du var="j" def="205" use="205" covered="1"/><du var="j" def="205" use="205" target="204" covered="1"/><du var="j" def="205" use="205" target="206" covered="1"/><du var="j" def="205" use="206" covered="1"/><du var="j" def="205" use="207" covered="1"/><du var="j" def="205" use="208" covered="1"/><du var="j" def="205" use="209" covered="1"/><du var="j" def="205" use="205" covered="1"/><du var="i" def="204" use="204" target="212" covered="1"/><du var="i" def="204" use="204" target="205" covered="1"/><du var="i" def="204" use="205" covered="1"/><du var="i" def="204" use="205" target="204" covered="1"/><du var="i" def="204" use="205" target="206" covered="1"/><du var="i" def="204" use="206" covered="1"/><du var="i" def="204" use="207" covered="1"/><du var="i" def="204" use="208" covered="1"/><du var="i" def="204" use="209" covered="1"/><du var="i" def="204" use="204" covered="1"/><counter type="DU" missed="2" covered="63"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateModeMessage" desc="(ZII)Lcom/google/zxing/common/BitArray;"><du var="compact" def="221" use="222" target="223" covered="1"/><du var="compact" def="221" use="222" target="227" covered="1"/><du var="layers" def="221" use="227" covered="1"/><du var="layers" def="221" use="223" covered="1"/><du var="messageSizeInWords" def="221" use="228" covered="1"/><du var="messageSizeInWords" def="221" use="224" covered="1"/><du var="modeMessage" def="221" use="227" covered="1"/><du var="modeMessage" def="221" use="228" covered="1"/><du var="modeMessage" def="221" use="229" covered="1"/><du var="modeMessage" def="221" use="223" covered="1"/><du var="modeMessage" def="221" use="224" covered="1"/><du var="modeMessage" def="221" use="225" covered="1"/><du var="modeMessage" def="225" use="231" covered="1"/><du var="modeMessage" def="229" use="231" covered="1"/><counter type="DU" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="drawModeMessage" desc="(Lcom/google/zxing/common/BitMatrix;ZILcom/google/zxing/common/BitArray;)V"><du var="matrix" def="235" use="265" covered="1"/><du var="matrix" def="235" use="262" covered="1"/><du var="matrix" def="235" use="259" covered="1"/><du var="matrix" def="235" use="256" covered="1"/><du var="matrix" def="235" use="249" covered="1"/><du var="matrix" def="235" use="246" covered="1"/><du var="matrix" def="235" use="243" covered="1"/><du var="matrix" def="235" use="240" covered="1"/><du var="compact" def="235" use="236" target="237" covered="1"/><du var="compact" def="235" use="236" target="253" covered="1"/><du var="modeMessage" def="235" use="255" target="256" covered="1"/><du var="modeMessage" def="235" use="255" target="258" covered="1"/><du var="modeMessage" def="235" use="258" target="259" covered="1"/><du var="modeMessage" def="235" use="258" target="261" covered="1"/><du var="modeMessage" def="235" use="261" target="262" covered="1"/><du var="modeMessage" def="235" use="261" target="264" covered="1"/><du var="modeMessage" def="235" use="264" target="265" covered="1"/><du var="modeMessage" def="235" use="264" target="253" covered="1"/><du var="modeMessage" def="235" use="239" target="240" covered="1"/><du var="modeMessage" def="235" use="239" target="242" covered="1"/><du var="modeMessage" def="235" use="242" target="243" covered="1"/><du var="modeMessage" def="235" use="242" target="245" covered="1"/><du var="modeMessage" def="235" use="245" target="246" covered="1"/><du var="modeMessage" def="235" use="245" target="248" covered="1"/><du var="modeMessage" def="235" use="248" target="249" covered="1"/><du var="modeMessage" def="235" use="248" target="237" covered="1"/><du var="center" def="235" use="254" covered="1"/><du var="center" def="235" use="265" covered="1"/><du var="center" def="235" use="262" covered="1"/><du var="center" def="235" use="259" covered="1"/><du var="center" def="235" use="256" covered="1"/><du var="center" def="235" use="238" covered="1"/><du var="center" def="235" use="249" covered="1"/><du var="center" def="235" use="246" covered="1"/><du var="center" def="235" use="243" covered="1"/><du var="center" def="235" use="240" covered="1"/><du var="i" def="237" use="237" target="252" covered="0"/><du var="i" def="237" use="237" target="238" covered="1"/><du var="i" def="237" use="238" covered="1"/><du var="i" def="237" use="239" target="240" covered="1"/><du var="i" def="237" use="239" target="242" covered="1"/><du var="i" def="237" use="242" target="243" covered="1"/><du var="i" def="237" use="242" target="245" covered="1"/><du var="i" def="237" use="245" target="246" covered="1"/><du var="i" def="237" use="245" target="248" covered="1"/><du var="i" def="237" use="248" target="249" covered="1"/><du var="i" def="237" use="248" target="237" covered="1"/><du var="i" def="237" use="237" covered="1"/><du var="offset" def="238" use="249" covered="1"/><du var="offset" def="238" use="246" covered="1"/><du var="offset" def="238" use="243" covered="1"/><du var="offset" def="238" use="240" covered="1"/><du var="i" def="237" use="237" target="252" covered="1"/><du var="i" def="237" use="237" target="238" covered="1"/><du var="i" def="237" use="238" covered="1"/><du var="i" def="237" use="239" target="240" covered="1"/><du var="i" def="237" use="239" target="242" covered="1"/><du var="i" def="237" use="242" target="243" covered="1"/><du var="i" def="237" use="242" target="245" covered="1"/><du var="i" def="237" use="245" target="246" covered="1"/><du var="i" def="237" use="245" target="248" covered="1"/><du var="i" def="237" use="248" target="249" covered="1"/><du var="i" def="237" use="248" target="237" covered="1"/><du var="i" def="237" use="237" covered="1"/><du var="i" def="253" use="253" target="269" covered="0"/><du var="i" def="253" use="253" target="254" covered="1"/><du var="i" def="253" use="254" covered="1"/><du var="i" def="253" use="255" target="256" covered="1"/><du var="i" def="253" use="255" target="258" covered="1"/><du var="i" def="253" use="258" target="259" covered="1"/><du var="i" def="253" use="258" target="261" covered="1"/><du var="i" def="253" use="261" target="262" covered="1"/><du var="i" def="253" use="261" target="264" covered="1"/><du var="i" def="253" use="264" target="265" covered="1"/><du var="i" def="253" use="264" target="253" covered="1"/><du var="i" def="253" use="253" covered="1"/><du var="offset" def="254" use="265" covered="1"/><du var="offset" def="254" use="262" covered="1"/><du var="offset" def="254" use="259" covered="1"/><du var="offset" def="254" use="256" covered="1"/><du var="i" def="253" use="253" target="269" covered="1"/><du var="i" def="253" use="253" target="254" covered="1"/><du var="i" def="253" use="254" covered="1"/><du var="i" def="253" use="255" target="256" covered="1"/><du var="i" def="253" use="255" target="258" covered="1"/><du var="i" def="253" use="258" target="259" covered="1"/><du var="i" def="253" use="258" target="261" covered="1"/><du var="i" def="253" use="261" target="262" covered="1"/><du var="i" def="253" use="261" target="264" covered="1"/><du var="i" def="253" use="264" target="265" covered="1"/><du var="i" def="253" use="264" target="253" covered="1"/><du var="i" def="253" use="253" covered="1"/><counter type="DU" missed="2" covered="90"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateCheckWords" desc="(Lcom/google/zxing/common/BitArray;II)Lcom/google/zxing/common/BitArray;"><du var="wordSize" def="273" use="282" covered="1"/><du var="messageBits" def="279" use="282" covered="1"/><du var="messageBits" def="279" use="284" covered="1"/><counter type="DU" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bitsToWords" desc="(Lcom/google/zxing/common/BitArray;II)[I"><du var="stuffedBits" def="288" use="294" target="294" covered="1"/><du var="stuffedBits" def="288" use="294" target="294" covered="1"/><du var="wordSize" def="288" use="293" target="296" covered="1"/><du var="wordSize" def="288" use="293" target="294" covered="1"/><du var="wordSize" def="288" use="294" target="294" covered="1"/><du var="wordSize" def="288" use="294" target="294" covered="1"/><du var="message" def="288" use="296" covered="1"/><du var="message" def="288" use="298" covered="1"/><du var="i" def="291" use="291" target="298" covered="0"/><du var="i" def="291" use="291" target="292" covered="1"/><du var="i" def="291" use="294" target="294" covered="1"/><du var="i" def="291" use="294" target="294" covered="1"/><du var="i" def="291" use="296" covered="1"/><du var="i" def="291" use="291" covered="1"/><du var="n" def="291" use="291" target="298" covered="1"/><du var="n" def="291" use="291" target="292" covered="1"/><du var="value" def="292" use="294" covered="1"/><du var="value" def="292" use="296" covered="0"/><du var="j" def="293" use="293" target="296" covered="0"/><du var="j" def="293" use="293" target="294" covered="1"/><du var="j" def="293" use="294" target="294" covered="1"/><du var="j" def="293" use="294" target="294" covered="1"/><du var="j" def="293" use="293" covered="1"/><du var="value" def="294" use="294" covered="1"/><du var="value" def="294" use="296" covered="1"/><du var="j" def="293" use="293" target="296" covered="1"/><du var="j" def="293" use="293" target="294" covered="1"/><du var="j" def="293" use="294" target="294" covered="1"/><du var="j" def="293" use="294" target="294" covered="1"/><du var="j" def="293" use="293" covered="1"/><du var="i" def="291" use="291" target="298" covered="1"/><du var="i" def="291" use="291" target="292" covered="1"/><du var="i" def="291" use="294" target="294" covered="1"/><du var="i" def="291" use="294" target="294" covered="1"/><du var="i" def="291" use="296" covered="1"/><du var="i" def="291" use="291" covered="1"/><counter type="DU" missed="3" covered="33"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGF" desc="(I)Lcom/google/zxing/common/reedsolomon/GenericGF;"><du var="wordSize" def="302" use="302" target="314" covered="0"/><du var="wordSize" def="302" use="302" target="304" covered="1"/><du var="wordSize" def="302" use="302" target="306" covered="1"/><du var="wordSize" def="302" use="302" target="308" covered="1"/><du var="wordSize" def="302" use="302" target="310" covered="1"/><du var="wordSize" def="302" use="302" target="312" covered="1"/><du var="wordSize" def="302" use="314" covered="0"/><du var="AZTEC_PARAM" def="302" use="304" covered="1"/><du var="AZTEC_DATA_6" def="302" use="306" covered="1"/><du var="AZTEC_DATA_8" def="302" use="308" covered="1"/><du var="AZTEC_DATA_10" def="302" use="310" covered="1"/><du var="AZTEC_DATA_12" def="302" use="312" covered="1"/><counter type="DU" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stuffBits" desc="(Lcom/google/zxing/common/BitArray;I)Lcom/google/zxing/common/BitArray;"><du var="bits" def="319" use="326" target="327" covered="1"/><du var="bits" def="319" use="326" target="325" covered="1"/><du var="wordSize" def="319" use="325" target="330" covered="1"/><du var="wordSize" def="319" use="325" target="326" covered="1"/><du var="wordSize" def="319" use="327" covered="1"/><du var="wordSize" def="319" use="337" covered="1"/><du var="wordSize" def="319" use="323" covered="1"/><du var="wordSize" def="319" use="334" covered="1"/><du var="wordSize" def="319" use="331" covered="1"/><du var="out" def="319" use="337" covered="1"/><du var="out" def="319" use="334" covered="1"/><du var="out" def="319" use="331" covered="1"/><du var="out" def="319" use="340" covered="1"/><du var="n" def="321" use="323" target="340" covered="1"/><du var="n" def="321" use="323" target="324" covered="1"/><du var="n" def="321" use="326" target="326" covered="1"/><du var="n" def="321" use="326" target="327" covered="1"/><du var="mask" def="322" use="330" target="331" covered="1"/><du var="mask" def="322" use="330" target="333" covered="1"/><du var="mask" def="322" use="333" target="334" covered="1"/><du var="mask" def="322" use="333" target="337" covered="1"/><du var="mask" def="322" use="331" covered="1"/><du var="i" def="323" use="323" target="340" covered="0"/><du var="i" def="323" use="323" target="324" covered="1"/><du var="i" def="323" use="326" target="326" covered="1"/><du var="i" def="323" use="326" target="327" covered="1"/><du var="i" def="323" use="326" target="327" covered="1"/><du var="i" def="323" use="326" target="325" covered="1"/><du var="i" def="323" use="323" covered="1"/><du var="i" def="323" use="335" covered="1"/><du var="i" def="323" use="332" covered="1"/><du var="word" def="324" use="327" covered="1"/><du var="word" def="324" use="330" target="331" covered="0"/><du var="word" def="324" use="330" target="333" covered="1"/><du var="word" def="324" use="333" target="334" covered="1"/><du var="word" def="324" use="333" target="337" covered="0"/><du var="word" def="324" use="337" covered="0"/><du var="word" def="324" use="334" covered="1"/><du var="word" def="324" use="331" covered="0"/><du var="j" def="325" use="325" target="330" covered="0"/><du var="j" def="325" use="325" target="326" covered="1"/><du var="j" def="325" use="326" target="326" covered="1"/><du var="j" def="325" use="326" target="327" covered="0"/><du var="j" def="325" use="327" covered="1"/><du var="j" def="325" use="325" covered="1"/><du var="j" def="325" use="326" target="327" covered="1"/><du var="j" def="325" use="326" target="325" covered="1"/><du var="word" def="327" use="327" covered="1"/><du var="word" def="327" use="330" target="331" covered="1"/><du var="word" def="327" use="330" target="333" covered="1"/><du var="word" def="327" use="333" target="334" covered="1"/><du var="word" def="327" use="333" target="337" covered="1"/><du var="word" def="327" use="337" covered="1"/><du var="word" def="327" use="334" covered="1"/><du var="word" def="327" use="331" covered="1"/><du var="j" def="325" use="325" target="330" covered="1"/><du var="j" def="325" use="325" target="326" covered="1"/><du var="j" def="325" use="326" target="326" covered="1"/><du var="j" def="325" use="326" target="327" covered="1"/><du var="j" def="325" use="327" covered="1"/><du var="j" def="325" use="325" covered="1"/><du var="j" def="325" use="326" target="327" covered="1"/><du var="j" def="325" use="326" target="325" covered="1"/><du var="i" def="332" use="323" covered="1"/><du var="i" def="335" use="323" covered="1"/><du var="i" def="323" use="323" target="340" covered="1"/><du var="i" def="323" use="323" target="324" covered="1"/><du var="i" def="323" use="326" target="326" covered="1"/><du var="i" def="323" use="326" target="327" covered="1"/><du var="i" def="323" use="326" target="327" covered="1"/><du var="i" def="323" use="326" target="325" covered="1"/><du var="i" def="323" use="323" covered="1"/><du var="i" def="323" use="335" covered="1"/><du var="i" def="323" use="332" covered="1"/><counter type="DU" missed="7" covered="67"/><counter type="METHOD" missed="0" covered="1"/></method><method name="totalBitsInLayer" desc="(IZ)I"><du var="layers" def="344" use="344" covered="1"/><du var="compact" def="344" use="344" target="344" covered="1"/><du var="compact" def="344" use="344" target="344" covered="1"/><counter type="DU" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="52" covered="600"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/aztec/encoder/HighLevelEncoder"><method name="encode" desc="()Lcom/google/zxing/common/BitArray;"><du var="this" def="161" use="162" target="192" covered="1"/><du var="this" def="161" use="162" target="164" covered="1"/><du var="this" def="161" use="164" target="164" covered="1"/><du var="this" def="161" use="164" target="164" covered="1"/><du var="this" def="161" use="164" covered="1"/><du var="this" def="161" use="165" target="179" covered="1"/><du var="this" def="161" use="165" target="167" covered="1"/><du var="this" def="161" use="165" target="173" covered="1"/><du var="this" def="161" use="165" target="170" covered="1"/><du var="this" def="161" use="165" target="176" covered="1"/><du var="this" def="161" use="188" covered="1"/><du var="this" def="161" use="192" covered="1"/><du var="this" def="161" use="199" covered="1"/><du var="this.text" def="161" use="162" target="192" covered="1"/><du var="this.text" def="161" use="162" target="164" covered="1"/><du var="this.text" def="161" use="164" target="164" covered="1"/><du var="this.text" def="161" use="164" target="164" covered="1"/><du var="this.text" def="161" use="164" covered="1"/><du var="this.text" def="161" use="165" target="179" covered="1"/><du var="this.text" def="161" use="165" target="167" covered="1"/><du var="this.text" def="161" use="165" target="173" covered="1"/><du var="this.text" def="161" use="165" target="170" covered="1"/><du var="this.text" def="161" use="165" target="176" covered="1"/><du var="this.text" def="161" use="199" covered="1"/><du var="states" def="161" use="188" covered="1"/><du var="states" def="161" use="184" covered="1"/><du var="states" def="161" use="192" covered="0"/><du var="index" def="162" use="162" target="192" covered="0"/><du var="index" def="162" use="162" target="164" covered="1"/><du var="index" def="162" use="164" target="164" covered="1"/><du var="index" def="162" use="164" target="164" covered="1"/><du var="index" def="162" use="164" covered="1"/><du var="index" def="162" use="165" target="179" covered="1"/><du var="index" def="162" use="165" target="167" covered="0"/><du var="index" def="162" use="165" target="173" covered="0"/><du var="index" def="162" use="165" target="170" covered="1"/><du var="index" def="162" use="165" target="176" covered="0"/><du var="index" def="162" use="188" covered="1"/><du var="index" def="162" use="162" covered="1"/><du var="index" def="162" use="184" covered="1"/><du var="index" def="162" use="185" covered="1"/><du var="nextChar" def="164" use="176" target="176" covered="1"/><du var="nextChar" def="164" use="176" target="176" covered="1"/><du var="nextChar" def="164" use="170" target="170" covered="1"/><du var="nextChar" def="164" use="170" target="170" covered="1"/><du var="nextChar" def="164" use="173" target="173" covered="1"/><du var="nextChar" def="164" use="173" target="173" covered="0"/><du var="nextChar" def="164" use="167" target="167" covered="1"/><du var="nextChar" def="164" use="167" target="167" covered="0"/><du var="pairCode" def="167" use="181" target="184" covered="1"/><du var="pairCode" def="167" use="181" target="188" covered="0"/><du var="pairCode" def="167" use="184" covered="1"/><du var="pairCode" def="170" use="181" target="184" covered="1"/><du var="pairCode" def="170" use="181" target="188" covered="1"/><du var="pairCode" def="170" use="184" covered="1"/><du var="pairCode" def="173" use="181" target="184" covered="1"/><du var="pairCode" def="173" use="181" target="188" covered="0"/><du var="pairCode" def="173" use="184" covered="1"/><du var="pairCode" def="176" use="181" target="184" covered="1"/><du var="pairCode" def="176" use="181" target="188" covered="1"/><du var="pairCode" def="176" use="184" covered="1"/><du var="pairCode" def="179" use="181" target="184" covered="0"/><du var="pairCode" def="179" use="181" target="188" covered="1"/><du var="pairCode" def="179" use="184" covered="0"/><du var="states" def="184" use="188" covered="1"/><du var="states" def="184" use="184" covered="1"/><du var="states" def="184" use="192" covered="1"/><du var="index" def="185" use="162" covered="1"/><du var="states" def="188" use="188" covered="1"/><du var="states" def="188" use="184" covered="1"/><du var="states" def="188" use="192" covered="1"/><du var="index" def="162" use="162" target="192" covered="1"/><du var="index" def="162" use="162" target="164" covered="1"/><du var="index" def="162" use="164" target="164" covered="1"/><du var="index" def="162" use="164" target="164" covered="1"/><du var="index" def="162" use="164" covered="1"/><du var="index" def="162" use="165" target="179" covered="1"/><du var="index" def="162" use="165" target="167" covered="1"/><du var="index" def="162" use="165" target="173" covered="1"/><du var="index" def="162" use="165" target="170" covered="1"/><du var="index" def="162" use="165" target="176" covered="1"/><du var="index" def="162" use="188" covered="1"/><du var="index" def="162" use="162" covered="1"/><du var="index" def="162" use="184" covered="1"/><du var="index" def="162" use="185" covered="1"/><counter type="DU" missed="11" covered="74"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateStateListForChar" desc="(Ljava/lang/Iterable;I)Ljava/util/Collection;"><du var="this" def="206" use="208" covered="1"/><du var="index" def="206" use="208" covered="1"/><du var="result" def="206" use="208" covered="1"/><du var="result" def="206" use="210" covered="1"/><counter type="DU" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateStateForChar" desc="(Lcom/google/zxing/aztec/encoder/State;ILjava/util/Collection;)V"><du var="state" def="217" use="218" target="218" covered="1"/><du var="state" def="217" use="218" target="218" covered="1"/><du var="state" def="217" use="237" target="240" covered="1"/><du var="state" def="217" use="237" target="220" covered="1"/><du var="state" def="217" use="228" target="228" covered="1"/><du var="state" def="217" use="228" target="233" covered="1"/><du var="state" def="217" use="225" covered="1"/><du var="state" def="217" use="245" target="245" covered="1"/><du var="state" def="217" use="245" target="249" covered="1"/><du var="state" def="217" use="249" covered="1"/><du var="state" def="217" use="245" target="249" covered="1"/><du var="state" def="217" use="245" target="252" covered="1"/><du var="index" def="217" use="225" covered="1"/><du var="index" def="217" use="249" covered="1"/><du var="result" def="217" use="234" covered="1"/><du var="result" def="217" use="241" covered="1"/><du var="result" def="217" use="250" covered="1"/><du var="CHAR_MAP" def="217" use="218" target="218" covered="1"/><du var="CHAR_MAP" def="217" use="218" target="218" covered="1"/><du var="CHAR_MAP" def="217" use="221" covered="1"/><du var="CHAR_MAP" def="217" use="245" target="249" covered="1"/><du var="CHAR_MAP" def="217" use="245" target="252" covered="1"/><du var="SHIFT_TABLE" def="217" use="237" target="240" covered="1"/><du var="SHIFT_TABLE" def="217" use="237" target="220" covered="1"/><du var="ch" def="217" use="218" target="218" covered="1"/><du var="ch" def="217" use="218" target="218" covered="1"/><du var="ch" def="217" use="221" covered="1"/><du var="ch" def="217" use="245" target="249" covered="1"/><du var="ch" def="217" use="245" target="252" covered="1"/><du var="charInCurrentTable" def="218" use="228" target="228" covered="1"/><du var="charInCurrentTable" def="218" use="228" target="233" covered="1"/><du var="charInCurrentTable" def="218" use="237" target="237" covered="1"/><du var="charInCurrentTable" def="218" use="237" target="220" covered="1"/><du var="stateNoBinary" def="219" use="223" target="225" covered="1"/><du var="stateNoBinary" def="219" use="223" target="228" covered="0"/><du var="stateNoBinary" def="219" use="233" covered="0"/><du var="stateNoBinary" def="219" use="240" covered="0"/><du var="mode" def="220" use="220" target="245" covered="0"/><du var="mode" def="220" use="220" target="221" covered="1"/><du var="mode" def="220" use="221" covered="1"/><du var="mode" def="220" use="220" covered="1"/><du var="mode" def="220" use="233" covered="1"/><du var="mode" def="220" use="237" target="240" covered="1"/><du var="mode" def="220" use="237" target="220" covered="1"/><du var="mode" def="220" use="240" covered="1"/><du var="mode" def="220" use="228" target="228" covered="1"/><du var="mode" def="220" use="228" target="233" covered="1"/><du var="mode" def="220" use="228" target="233" covered="0"/><du var="mode" def="220" use="228" target="237" covered="1"/><du var="charInMode" def="221" use="222" target="223" covered="1"/><du var="charInMode" def="221" use="222" target="220" covered="1"/><du var="charInMode" def="221" use="233" covered="1"/><du var="charInMode" def="221" use="240" covered="1"/><du var="stateNoBinary" def="225" use="233" covered="1"/><du var="stateNoBinary" def="225" use="223" target="225" covered="0"/><du var="stateNoBinary" def="225" use="223" target="228" covered="1"/><du var="stateNoBinary" def="225" use="240" covered="1"/><du var="mode" def="220" use="220" target="245" covered="1"/><du var="mode" def="220" use="220" target="221" covered="1"/><du var="mode" def="220" use="221" covered="1"/><du var="mode" def="220" use="220" covered="1"/><du var="mode" def="220" use="233" covered="1"/><du var="mode" def="220" use="237" target="240" covered="1"/><du var="mode" def="220" use="237" target="220" covered="1"/><du var="mode" def="220" use="240" covered="1"/><du var="mode" def="220" use="228" target="228" covered="1"/><du var="mode" def="220" use="228" target="233" covered="1"/><du var="mode" def="220" use="228" target="233" covered="1"/><du var="mode" def="220" use="228" target="237" covered="1"/><counter type="DU" missed="6" covered="63"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateStateListForPair" desc="(Ljava/lang/Iterable;II)Ljava/util/Collection;"><du var="index" def="255" use="257" covered="1"/><du var="pairCode" def="255" use="257" covered="1"/><du var="result" def="255" use="257" covered="1"/><du var="result" def="255" use="259" covered="1"/><counter type="DU" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateStateForPair" desc="(Lcom/google/zxing/aztec/encoder/State;IILjava/util/Collection;)V"><du var="state" def="263" use="266" target="269" covered="1"/><du var="state" def="263" use="266" target="271" covered="1"/><du var="state" def="263" use="278" target="281" covered="1"/><du var="state" def="263" use="278" target="284" covered="1"/><du var="state" def="263" use="281" covered="1"/><du var="index" def="263" use="281" covered="1"/><du var="pairCode" def="263" use="271" target="271" covered="1"/><du var="pairCode" def="263" use="271" target="273" covered="1"/><du var="pairCode" def="263" use="273" covered="1"/><du var="pairCode" def="263" use="271" target="273" covered="1"/><du var="pairCode" def="263" use="271" target="278" covered="1"/><du var="pairCode" def="263" use="269" covered="1"/><du var="result" def="263" use="276" covered="1"/><du var="result" def="263" use="282" covered="1"/><du var="result" def="263" use="269" covered="1"/><du var="stateNoBinary" def="263" use="273" covered="1"/><du var="stateNoBinary" def="263" use="269" covered="1"/><counter type="DU" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simplifyStates" desc="(Ljava/lang/Iterable;)Ljava/util/Collection;"><du var="result" def="287" use="290" covered="1"/><du var="result" def="287" use="301" covered="1"/><du var="result" def="287" use="304" covered="1"/><du var="newState" def="288" use="292" target="293" covered="1"/><du var="newState" def="288" use="292" target="296" covered="1"/><du var="newState" def="288" use="296" target="297" covered="1"/><du var="newState" def="288" use="296" target="290" covered="1"/><du var="newState" def="288" use="301" covered="1"/><du var="add" def="289" use="300" target="301" covered="1"/><du var="add" def="289" use="300" target="288" covered="0"/><du var="iterator" def="290" use="290" target="300" covered="1"/><du var="iterator" def="290" use="290" target="291" covered="1"/><du var="iterator" def="290" use="291" covered="1"/><du var="iterator" def="290" use="297" covered="1"/><du var="oldState" def="291" use="292" target="293" covered="1"/><du var="oldState" def="291" use="292" target="296" covered="1"/><du var="oldState" def="291" use="296" target="297" covered="1"/><du var="oldState" def="291" use="296" target="290" covered="1"/><du var="add" def="293" use="300" target="301" covered="0"/><du var="add" def="293" use="300" target="288" covered="1"/><counter type="DU" missed="2" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="19" covered="189"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/aztec/encoder/BinaryShiftToken"><method name="appendTo" desc="(Lcom/google/zxing/common/BitArray;[B)V"><du var="this" def="36" use="36" target="53" covered="1"/><du var="this" def="36" use="36" target="37" covered="1"/><du var="this" def="36" use="41" target="42" covered="1"/><du var="this" def="36" use="41" target="43" covered="1"/><du var="this" def="36" use="48" covered="1"/><du var="this" def="36" use="51" covered="1"/><du var="this" def="36" use="45" covered="1"/><du var="this" def="36" use="42" covered="1"/><du var="this" def="36" use="37" target="40" covered="1"/><du var="this" def="36" use="37" target="51" covered="1"/><du var="bitArray" def="36" use="40" covered="1"/><du var="bitArray" def="36" use="48" covered="1"/><du var="bitArray" def="36" use="51" covered="1"/><du var="bitArray" def="36" use="45" covered="1"/><du var="bitArray" def="36" use="42" covered="1"/><du var="text" def="36" use="51" covered="1"/><du var="this.binaryShiftByteCount" def="36" use="36" target="53" covered="1"/><du var="this.binaryShiftByteCount" def="36" use="36" target="37" covered="1"/><du var="this.binaryShiftByteCount" def="36" use="41" target="42" covered="1"/><du var="this.binaryShiftByteCount" def="36" use="41" target="43" covered="1"/><du var="this.binaryShiftByteCount" def="36" use="48" covered="1"/><du var="this.binaryShiftByteCount" def="36" use="45" covered="1"/><du var="this.binaryShiftByteCount" def="36" use="42" covered="1"/><du var="this.binaryShiftByteCount" def="36" use="37" target="40" covered="1"/><du var="this.binaryShiftByteCount" def="36" use="37" target="51" covered="1"/><du var="this.binaryShiftStart" def="36" use="51" covered="1"/><du var="i" def="36" use="36" target="53" covered="0"/><du var="i" def="36" use="36" target="37" covered="1"/><du var="i" def="36" use="37" target="37" covered="0"/><du var="i" def="36" use="37" target="40" covered="1"/><du var="i" def="36" use="43" target="45" covered="1"/><du var="i" def="36" use="43" target="48" covered="0"/><du var="i" def="36" use="51" covered="1"/><du var="i" def="36" use="36" covered="1"/><du var="i" def="36" use="37" target="37" covered="0"/><du var="i" def="36" use="37" target="51" covered="0"/><du var="i" def="36" use="36" target="53" covered="1"/><du var="i" def="36" use="36" target="37" covered="1"/><du var="i" def="36" use="37" target="37" covered="1"/><du var="i" def="36" use="37" target="40" covered="0"/><du var="i" def="36" use="43" target="45" covered="0"/><du var="i" def="36" use="43" target="48" covered="1"/><du var="i" def="36" use="51" covered="1"/><du var="i" def="36" use="36" covered="1"/><du var="i" def="36" use="37" target="37" covered="1"/><du var="i" def="36" use="37" target="51" covered="1"/><counter type="DU" missed="7" covered="39"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="7" covered="39"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/ChecksumException"><method name="getChecksumInstance" desc="()Lcom/google/zxing/ChecksumException;"><du var="isStackTrace" def="41" use="41" target="41" covered="0"/><du var="isStackTrace" def="41" use="41" target="41" covered="0"/><du var="INSTANCE" def="41" use="41" covered="0"/><counter type="DU" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChecksumInstance" desc="(Ljava/lang/Throwable;)Lcom/google/zxing/ChecksumException;"><du var="cause" def="45" use="45" covered="0"/><du var="isStackTrace" def="45" use="45" target="45" covered="0"/><du var="isStackTrace" def="45" use="45" target="45" covered="0"/><du var="INSTANCE" def="45" use="45" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/multi/GenericMultipleBarcodeReader"><method name="decodeMultiple" desc="(Lcom/google/zxing/BinaryBitmap;Ljava/util/Map;)[Lcom/google/zxing/Result;"><du var="results" def="64" use="66" target="67" covered="0"/><du var="results" def="64" use="66" target="69" covered="0"/><du var="results" def="64" use="69" covered="0"/><counter type="DU" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doDecodeMultiple" desc="(Lcom/google/zxing/BinaryBitmap;Ljava/util/Map;Ljava/util/List;III)V"><du var="this" def="78" use="84" covered="0"/><du var="this" def="78" use="151" covered="0"/><du var="this" def="78" use="144" covered="0"/><du var="this" def="78" use="137" covered="0"/><du var="this" def="78" use="130" covered="0"/><du var="image" def="78" use="84" covered="0"/><du var="image" def="78" use="102" covered="0"/><du var="image" def="78" use="103" covered="0"/><du var="image" def="78" use="151" covered="0"/><du var="image" def="78" use="144" covered="0"/><du var="image" def="78" use="137" covered="0"/><du var="image" def="78" use="130" covered="0"/><du var="hints" def="78" use="84" covered="0"/><du var="hints" def="78" use="151" covered="0"/><du var="hints" def="78" use="144" covered="0"/><du var="hints" def="78" use="137" covered="0"/><du var="hints" def="78" use="130" covered="0"/><du var="results" def="78" use="89" covered="0"/><du var="results" def="78" use="151" covered="0"/><du var="results" def="78" use="144" covered="0"/><du var="results" def="78" use="137" covered="0"/><du var="results" def="78" use="130" covered="0"/><du var="results" def="78" use="96" covered="0"/><du var="xOffset" def="78" use="151" covered="0"/><du var="xOffset" def="78" use="144" covered="0"/><du var="xOffset" def="78" use="137" covered="0"/><du var="xOffset" def="78" use="130" covered="0"/><du var="xOffset" def="78" use="96" covered="0"/><du var="yOffset" def="78" use="151" covered="0"/><du var="yOffset" def="78" use="144" covered="0"/><du var="yOffset" def="78" use="137" covered="0"/><du var="yOffset" def="78" use="130" covered="0"/><du var="yOffset" def="78" use="96" covered="0"/><du var="currentDepth" def="78" use="78" target="79" covered="0"/><du var="currentDepth" def="78" use="78" target="84" covered="0"/><du var="currentDepth" def="78" use="151" covered="0"/><du var="currentDepth" def="78" use="144" covered="0"/><du var="currentDepth" def="78" use="137" covered="0"/><du var="currentDepth" def="78" use="130" covered="0"/><du var="this.delegate" def="78" use="84" covered="0"/><du var="result" def="84" use="90" target="91" covered="0"/><du var="result" def="84" use="90" target="89" covered="0"/><du var="result" def="84" use="98" covered="0"/><du var="result" def="84" use="96" covered="0"/><du var="alreadyFound" def="88" use="95" target="96" covered="0"/><du var="alreadyFound" def="88" use="95" target="98" covered="0"/><du var="existingResult" def="89" use="90" target="91" covered="0"/><du var="existingResult" def="89" use="90" target="89" covered="0"/><du var="alreadyFound" def="91" use="95" target="96" covered="0"/><du var="alreadyFound" def="91" use="95" target="98" covered="0"/><du var="resultPoints" def="98" use="99" target="99" covered="0"/><du var="resultPoints" def="98" use="99" target="100" covered="0"/><du var="resultPoints" def="98" use="99" target="100" covered="0"/><du var="resultPoints" def="98" use="99" target="102" covered="0"/><du var="resultPoints" def="98" use="108" covered="0"/><du var="resultPoints" def="98" use="108" covered="0"/><du var="width" def="102" use="143" target="144" covered="0"/><du var="width" def="102" use="143" target="150" covered="0"/><du var="width" def="102" use="151" covered="0"/><du var="width" def="102" use="144" covered="0"/><du var="width" def="102" use="137" covered="0"/><du var="height" def="103" use="150" target="151" covered="0"/><du var="height" def="103" use="150" target="156" covered="0"/><du var="height" def="103" use="151" covered="0"/><du var="height" def="103" use="144" covered="0"/><du var="height" def="103" use="130" covered="0"/><du var="minX" def="104" use="114" target="115" covered="0"/><du var="minX" def="104" use="114" target="117" covered="0"/><du var="minX" def="104" use="129" target="130" covered="0"/><du var="minX" def="104" use="129" target="136" covered="0"/><du var="minX" def="104" use="130" covered="0"/><du var="minY" def="105" use="117" target="118" covered="0"/><du var="minY" def="105" use="117" target="120" covered="0"/><du var="minY" def="105" use="136" target="137" covered="0"/><du var="minY" def="105" use="136" target="143" covered="0"/><du var="minY" def="105" use="137" covered="0"/><du var="maxX" def="106" use="120" target="121" covered="0"/><du var="maxX" def="106" use="120" target="123" covered="0"/><du var="maxX" def="106" use="143" target="144" covered="0"/><du var="maxX" def="106" use="143" target="150" covered="0"/><du var="maxX" def="106" use="144" covered="0"/><du var="maxY" def="107" use="123" target="124" covered="0"/><du var="maxY" def="107" use="123" target="108" covered="0"/><du var="maxY" def="107" use="150" target="151" covered="0"/><du var="maxY" def="107" use="150" target="156" covered="0"/><du var="maxY" def="107" use="151" covered="0"/><du var="point" def="108" use="109" target="110" covered="0"/><du var="point" def="108" use="109" target="112" covered="0"/><du var="point" def="108" use="112" covered="0"/><du var="point" def="108" use="113" covered="0"/><du var="x" def="112" use="114" target="115" covered="0"/><du var="x" def="112" use="114" target="117" covered="0"/><du var="x" def="112" use="120" target="121" covered="0"/><du var="x" def="112" use="120" target="123" covered="0"/><du var="x" def="112" use="121" covered="0"/><du var="x" def="112" use="115" covered="0"/><du var="y" def="113" use="117" target="118" covered="0"/><du var="y" def="113" use="117" target="120" covered="0"/><du var="y" def="113" use="123" target="124" covered="0"/><du var="y" def="113" use="123" target="108" covered="0"/><du var="y" def="113" use="124" covered="0"/><du var="y" def="113" use="118" covered="0"/><du var="minX" def="115" use="114" target="115" covered="0"/><du var="minX" def="115" use="114" target="117" covered="0"/><du var="minX" def="115" use="129" target="130" covered="0"/><du var="minX" def="115" use="129" target="136" covered="0"/><du var="minX" def="115" use="130" covered="0"/><du var="minY" def="118" use="117" target="118" covered="0"/><du var="minY" def="118" use="117" target="120" covered="0"/><du var="minY" def="118" use="136" target="137" covered="0"/><du var="minY" def="118" use="136" target="143" covered="0"/><du var="minY" def="118" use="137" covered="0"/><du var="maxX" def="121" use="120" target="121" covered="0"/><du var="maxX" def="121" use="120" target="123" covered="0"/><du var="maxX" def="121" use="143" target="144" covered="0"/><du var="maxX" def="121" use="143" target="150" covered="0"/><du var="maxX" def="121" use="144" covered="0"/><du var="maxY" def="124" use="123" target="124" covered="0"/><du var="maxY" def="124" use="123" target="108" covered="0"/><du var="maxY" def="124" use="150" target="151" covered="0"/><du var="maxY" def="124" use="150" target="156" covered="0"/><du var="maxY" def="124" use="151" covered="0"/><counter type="DU" missed="136" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateResultPoints" desc="(Lcom/google/zxing/Result;II)Lcom/google/zxing/Result;"><du var="result" def="159" use="170" covered="0"/><du var="result" def="159" use="176" covered="0"/><du var="result" def="159" use="161" covered="0"/><du var="xOffset" def="159" use="167" covered="0"/><du var="yOffset" def="159" use="167" covered="0"/><du var="oldResultPoints" def="159" use="160" target="161" covered="0"/><du var="oldResultPoints" def="159" use="160" target="163" covered="0"/><du var="oldResultPoints" def="159" use="163" covered="0"/><du var="oldResultPoints" def="159" use="164" target="170" covered="0"/><du var="oldResultPoints" def="159" use="164" target="165" covered="0"/><du var="oldResultPoints" def="159" use="165" covered="0"/><du var="newResultPoints" def="163" use="167" covered="0"/><du var="newResultPoints" def="163" use="170" covered="0"/><du var="i" def="164" use="164" target="170" covered="0"/><du var="i" def="164" use="164" target="165" covered="0"/><du var="i" def="164" use="165" covered="0"/><du var="i" def="164" use="164" covered="0"/><du var="i" def="164" use="167" covered="0"/><du var="oldPoint" def="165" use="166" target="167" covered="0"/><du var="oldPoint" def="165" use="166" target="164" covered="0"/><du var="oldPoint" def="165" use="167" covered="0"/><du var="i" def="164" use="164" target="170" covered="0"/><du var="i" def="164" use="164" target="165" covered="0"/><du var="i" def="164" use="165" covered="0"/><du var="i" def="164" use="164" covered="0"/><du var="i" def="164" use="167" covered="0"/><counter type="DU" missed="26" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="165" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/multi/ByQuadrantReader"><method name="makeAbsolute" desc="([Lcom/google/zxing/ResultPoint;II)V"><du var="points" def="107" use="107" target="108" covered="0"/><du var="points" def="107" use="107" target="113" covered="0"/><du var="points" def="107" use="108" target="113" covered="0"/><du var="points" def="107" use="108" target="109" covered="0"/><du var="points" def="107" use="109" covered="0"/><du var="points" def="107" use="110" covered="0"/><du var="leftOffset" def="107" use="110" covered="0"/><du var="topOffset" def="107" use="110" covered="0"/><du var="i" def="108" use="108" target="113" covered="0"/><du var="i" def="108" use="108" target="109" covered="0"/><du var="i" def="108" use="109" covered="0"/><du var="i" def="108" use="110" covered="0"/><du var="i" def="108" use="108" covered="0"/><du var="i" def="108" use="108" target="113" covered="0"/><du var="i" def="108" use="108" target="109" covered="0"/><du var="i" def="108" use="109" covered="0"/><du var="i" def="108" use="110" covered="0"/><du var="i" def="108" use="108" covered="0"/><counter type="DU" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/multi/qrcode/QRCodeMultiReader$SAComparator"><method name="compare" desc="(Lcom/google/zxing/Result;Lcom/google/zxing/Result;)I"><du var="aNumber" def="169" use="171" target="172" covered="0"/><du var="aNumber" def="169" use="171" target="174" covered="0"/><du var="aNumber" def="169" use="174" target="175" covered="0"/><du var="aNumber" def="169" use="174" target="177" covered="0"/><du var="bNumber" def="170" use="171" target="172" covered="0"/><du var="bNumber" def="170" use="171" target="174" covered="0"/><du var="bNumber" def="170" use="174" target="175" covered="0"/><du var="bNumber" def="170" use="174" target="177" covered="0"/><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/multi/qrcode/QRCodeMultiReader"><method name="decodeMultiple" desc="(Lcom/google/zxing/BinaryBitmap;Ljava/util/Map;)[Lcom/google/zxing/Result;"><du var="this" def="60" use="64" covered="0"/><du var="hints" def="60" use="64" covered="0"/><du var="QR_CODE" def="60" use="70" covered="0"/><du var="BYTE_SEGMENTS" def="60" use="74" covered="0"/><du var="ERROR_CORRECTION_LEVEL" def="60" use="78" covered="0"/><du var="STRUCTURED_APPEND_SEQUENCE" def="60" use="81" covered="0"/><du var="STRUCTURED_APPEND_PARITY" def="60" use="83" covered="0"/><du var="EMPTY_RESULT_ARRAY" def="60" use="92" covered="0"/><du var="results" def="60" use="86" covered="0"/><du var="results" def="60" use="91" target="92" covered="0"/><du var="results" def="60" use="91" target="94" covered="0"/><du var="results" def="60" use="94" covered="0"/><du var="decoderResult" def="64" use="67" target="68" covered="0"/><du var="decoderResult" def="64" use="67" target="70" covered="0"/><du var="decoderResult" def="64" use="70" covered="0"/><du var="decoderResult" def="64" use="72" covered="0"/><du var="decoderResult" def="64" use="76" covered="0"/><du var="decoderResult" def="64" use="80" target="81" covered="0"/><du var="decoderResult" def="64" use="80" target="86" covered="0"/><du var="decoderResult" def="64" use="81" covered="0"/><du var="decoderResult" def="64" use="83" covered="0"/><du var="decoderResult" def="64" use="68" covered="0"/><du var="points" def="65" use="70" covered="0"/><du var="points" def="65" use="68" covered="0"/><du var="result" def="70" use="86" covered="0"/><du var="result" def="70" use="81" covered="0"/><du var="result" def="70" use="83" covered="0"/><du var="result" def="70" use="78" covered="0"/><du var="result" def="70" use="74" covered="0"/><du var="byteSegments" def="72" use="73" target="74" covered="0"/><du var="byteSegments" def="72" use="73" target="76" covered="0"/><du var="byteSegments" def="72" use="74" covered="0"/><du var="ecLevel" def="76" use="77" target="78" covered="0"/><du var="ecLevel" def="76" use="77" target="80" covered="0"/><du var="ecLevel" def="76" use="78" covered="0"/><counter type="DU" missed="46" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processStructuredAppend" desc="(Ljava/util/List;)Ljava/util/List;"><du var="results" def="100" use="116" covered="0"/><du var="results" def="100" use="110" covered="0"/><du var="STRUCTURED_APPEND_SEQUENCE" def="100" use="104" target="105" covered="0"/><du var="STRUCTURED_APPEND_SEQUENCE" def="100" use="104" target="103" covered="0"/><du var="STRUCTURED_APPEND_SEQUENCE" def="100" use="118" target="119" covered="0"/><du var="STRUCTURED_APPEND_SEQUENCE" def="100" use="118" target="116" covered="0"/><du var="BYTE_SEGMENTS" def="100" use="130" target="133" covered="0"/><du var="BYTE_SEGMENTS" def="100" use="130" target="127" covered="0"/><du var="BYTE_SEGMENTS" def="100" use="132" covered="0"/><du var="BYTE_SEGMENTS" def="100" use="146" target="149" covered="0"/><du var="BYTE_SEGMENTS" def="100" use="146" target="143" covered="0"/><du var="BYTE_SEGMENTS" def="100" use="148" covered="0"/><du var="BYTE_SEGMENTS" def="100" use="160" covered="0"/><du var="NO_POINTS" def="100" use="156" covered="0"/><du var="QR_CODE" def="100" use="156" covered="0"/><du var="hasSA" def="100" use="109" target="110" covered="0"/><du var="hasSA" def="100" use="109" target="114" covered="0"/><du var="result" def="103" use="104" target="105" covered="0"/><du var="result" def="103" use="104" target="103" covered="0"/><du var="hasSA" def="105" use="109" target="110" covered="0"/><du var="hasSA" def="105" use="109" target="114" covered="0"/><du var="newResults" def="114" use="117" covered="0"/><du var="newResults" def="114" use="162" covered="0"/><du var="newResults" def="114" use="163" covered="0"/><du var="saResults" def="115" use="119" covered="0"/><du var="saResults" def="115" use="123" covered="0"/><du var="saResults" def="115" use="127" covered="0"/><du var="saResults" def="115" use="143" covered="0"/><du var="result" def="116" use="118" target="119" covered="0"/><du var="result" def="116" use="118" target="116" covered="0"/><du var="result" def="116" use="119" covered="0"/><du var="concatedText" def="124" use="128" covered="0"/><du var="concatedText" def="124" use="156" covered="0"/><du var="rawBytesLen" def="125" use="129" covered="0"/><du var="rawBytesLen" def="125" use="139" covered="0"/><du var="byteSegmentLength" def="126" use="135" covered="0"/><du var="byteSegmentLength" def="126" use="140" covered="0"/><du var="byteSegmentLength" def="126" use="157" target="158" covered="0"/><du var="byteSegmentLength" def="126" use="157" target="162" covered="0"/><du var="saResult" def="127" use="130" target="133" covered="0"/><du var="saResult" def="127" use="130" target="127" covered="0"/><du var="saResult" def="127" use="132" covered="0"/><du var="rawBytesLen" def="129" use="129" covered="0"/><du var="rawBytesLen" def="129" use="139" covered="0"/><du var="byteSegmentLength" def="135" use="135" covered="0"/><du var="byteSegmentLength" def="135" use="140" covered="0"/><du var="byteSegmentLength" def="135" use="157" target="158" covered="0"/><du var="byteSegmentLength" def="135" use="157" target="162" covered="0"/><du var="newRawBytes" def="139" use="144" covered="0"/><du var="newRawBytes" def="139" use="156" covered="0"/><du var="newByteSegment" def="140" use="151" covered="0"/><du var="newByteSegment" def="140" use="159" covered="0"/><du var="newRawBytesIndex" def="141" use="144" covered="0"/><du var="newRawBytesIndex" def="141" use="145" covered="0"/><du var="byteSegmentIndex" def="142" use="151" covered="0"/><du var="byteSegmentIndex" def="142" use="152" covered="0"/><du var="saResult" def="143" use="146" target="149" covered="0"/><du var="saResult" def="143" use="146" target="143" covered="0"/><du var="saResult" def="143" use="148" covered="0"/><du var="newRawBytesIndex" def="145" use="144" covered="0"/><du var="newRawBytesIndex" def="145" use="145" covered="0"/><du var="byteSegmentIndex" def="152" use="151" covered="0"/><du var="byteSegmentIndex" def="152" use="152" covered="0"/><du var="newResult" def="156" use="162" covered="0"/><du var="newResult" def="156" use="160" covered="0"/><counter type="DU" missed="83" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="129" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/multi/qrcode/detector/MultiFinderPatternFinder$ModuleSizeComparator"><method name="compare" desc="(Lcom/google/zxing/qrcode/detector/FinderPattern;Lcom/google/zxing/qrcode/detector/FinderPattern;)I"><du var="value" def="82" use="83" target="83" covered="0"/><du var="value" def="82" use="83" target="83" covered="0"/><du var="value" def="82" use="83" target="83" covered="0"/><du var="value" def="82" use="83" target="83" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/multi/qrcode/detector/MultiDetector"><method name="detectMulti" desc="(Ljava/util/Map;)[Lcom/google/zxing/common/DetectorResult;"><du var="this" def="48" use="61" covered="0"/><du var="hints" def="48" use="50" target="50" covered="0"/><du var="hints" def="48" use="50" target="50" covered="0"/><du var="hints" def="48" use="49" covered="0"/><du var="hints" def="48" use="52" covered="0"/><du var="NEED_RESULT_POINT_CALLBACK" def="48" use="49" covered="0"/><du var="EMPTY_DETECTOR_RESULTS" def="48" use="67" covered="0"/><du var="image" def="48" use="51" covered="0"/><du var="infos" def="52" use="54" target="55" covered="0"/><du var="infos" def="52" use="54" target="58" covered="0"/><du var="infos" def="52" use="59" covered="0"/><du var="infos" def="52" use="59" covered="0"/><du var="result" def="58" use="61" covered="0"/><du var="result" def="58" use="66" target="67" covered="0"/><du var="result" def="58" use="66" target="69" covered="0"/><du var="result" def="58" use="69" covered="0"/><counter type="DU" missed="27" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="27" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/multi/qrcode/detector/MultiFinderPatternFinder"><method name="selectMutipleBestPatterns" desc="()[[Lcom/google/zxing/qrcode/detector/FinderPattern;"><du var="possibleCenters" def="107" use="129" covered="0"/><du var="possibleCenters" def="107" use="149" covered="0"/><du var="possibleCenters" def="107" use="155" covered="0"/><du var="possibleCenters" def="107" use="171" covered="0"/><du var="possibleCenters" def="107" use="121" covered="0"/><du var="possibleCenters" def="107" use="122" covered="0"/><du var="possibleCenters" def="107" use="123" covered="0"/><du var="size" def="108" use="110" target="112" covered="0"/><du var="size" def="108" use="110" target="118" covered="0"/><du var="size" def="108" use="118" target="119" covered="0"/><du var="size" def="108" use="118" target="129" covered="0"/><du var="size" def="108" use="148" target="223" covered="0"/><du var="size" def="108" use="148" target="149" covered="0"/><du var="size" def="108" use="154" target="148" covered="0"/><du var="size" def="108" use="154" target="155" covered="0"/><du var="size" def="108" use="170" target="154" covered="0"/><du var="size" def="108" use="170" target="171" covered="0"/><du var="results" def="146" use="218" covered="0"/><du var="results" def="146" use="223" target="224" covered="0"/><du var="results" def="146" use="223" target="228" covered="0"/><du var="results" def="146" use="224" covered="0"/><du var="i1" def="148" use="148" target="223" covered="0"/><du var="i1" def="148" use="148" target="149" covered="0"/><du var="i1" def="148" use="149" covered="0"/><du var="i1" def="148" use="154" covered="0"/><du var="i1" def="148" use="148" covered="0"/><du var="p1" def="149" use="150" target="151" covered="0"/><du var="p1" def="149" use="150" target="154" covered="0"/><du var="p1" def="149" use="161" covered="0"/><du var="p1" def="149" use="163" covered="0"/><du var="p1" def="149" use="186" covered="0"/><du var="p1" def="149" use="196" covered="0"/><du var="i2" def="154" use="154" target="148" covered="0"/><du var="i2" def="154" use="154" target="155" covered="0"/><du var="i2" def="154" use="155" covered="0"/><du var="i2" def="154" use="170" covered="0"/><du var="i2" def="154" use="154" covered="0"/><du var="p2" def="155" use="156" target="157" covered="0"/><du var="p2" def="155" use="156" target="161" covered="0"/><du var="p2" def="155" use="161" covered="0"/><du var="p2" def="155" use="163" covered="0"/><du var="p2" def="155" use="177" covered="0"/><du var="p2" def="155" use="179" covered="0"/><du var="p2" def="155" use="186" covered="0"/><du var="vModSize12" def="161" use="164" target="167" covered="0"/><du var="vModSize12" def="161" use="164" target="170" covered="0"/><du var="vModSize12A" def="163" use="164" target="164" covered="0"/><du var="vModSize12A" def="163" use="164" target="170" covered="0"/><du var="i3" def="170" use="170" target="154" covered="0"/><du var="i3" def="170" use="170" target="171" covered="0"/><du var="i3" def="170" use="171" covered="0"/><du var="i3" def="170" use="170" covered="0"/><du var="p3" def="171" use="172" target="173" covered="0"/><du var="p3" def="171" use="172" target="177" covered="0"/><du var="p3" def="171" use="177" covered="0"/><du var="p3" def="171" use="179" covered="0"/><du var="p3" def="171" use="186" covered="0"/><du var="vModSize23" def="177" use="180" target="183" covered="0"/><du var="vModSize23" def="177" use="180" target="186" covered="0"/><du var="vModSize23A" def="179" use="180" target="180" covered="0"/><du var="vModSize23A" def="179" use="180" target="186" covered="0"/><du var="test" def="186" use="218" covered="0"/><du var="dA" def="191" use="203" covered="0"/><du var="dA" def="191" use="209" covered="0"/><du var="dC" def="192" use="211" covered="0"/><du var="dB" def="193" use="203" covered="0"/><du var="dB" def="193" use="209" covered="0"/><du var="estimatedModuleCount" def="196" use="197" target="198" covered="0"/><du var="estimatedModuleCount" def="196" use="197" target="170" covered="0"/><du var="estimatedModuleCount" def="196" use="198" target="199" covered="0"/><du var="estimatedModuleCount" def="196" use="198" target="203" covered="0"/><du var="vABBC" def="203" use="204" target="205" covered="0"/><du var="vABBC" def="203" use="204" target="209" covered="0"/><du var="vPyC" def="211" use="213" target="214" covered="0"/><du var="vPyC" def="211" use="213" target="218" covered="0"/><du var="i3" def="170" use="170" target="154" covered="0"/><du var="i3" def="170" use="170" target="171" covered="0"/><du var="i3" def="170" use="171" covered="0"/><du var="i3" def="170" use="170" covered="0"/><du var="i2" def="154" use="154" target="148" covered="0"/><du var="i2" def="154" use="154" target="155" covered="0"/><du var="i2" def="154" use="155" covered="0"/><du var="i2" def="154" use="170" covered="0"/><du var="i2" def="154" use="154" covered="0"/><du var="i1" def="148" use="148" target="223" covered="0"/><du var="i1" def="148" use="148" target="149" covered="0"/><du var="i1" def="148" use="149" covered="0"/><du var="i1" def="148" use="154" covered="0"/><du var="i1" def="148" use="148" covered="0"/><counter type="DU" missed="89" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findMulti" desc="(Ljava/util/Map;)[Lcom/google/zxing/qrcode/detector/FinderPatternInfo;"><du var="this" def="232" use="234" covered="0"/><du var="this" def="232" use="268" target="270" covered="0"/><du var="this" def="232" use="268" target="277" covered="0"/><du var="this" def="232" use="294" covered="0"/><du var="this" def="232" use="297" covered="0"/><du var="hints" def="232" use="232" target="232" covered="0"/><du var="hints" def="232" use="232" target="232" covered="0"/><du var="hints" def="232" use="233" target="233" covered="0"/><du var="hints" def="232" use="233" target="233" covered="0"/><du var="hints" def="232" use="233" target="233" covered="0"/><du var="hints" def="232" use="233" target="233" covered="0"/><du var="hints" def="232" use="232" target="232" covered="0"/><du var="hints" def="232" use="232" target="232" covered="0"/><du var="TRY_HARDER" def="232" use="232" target="232" covered="0"/><du var="TRY_HARDER" def="232" use="232" target="232" covered="0"/><du var="PURE_BARCODE" def="232" use="233" target="233" covered="0"/><du var="PURE_BARCODE" def="232" use="233" target="233" covered="0"/><du var="EMPTY_RESULT_ARRAY" def="232" use="305" covered="0"/><du var="tryHarder" def="232" use="245" target="246" covered="0"/><du var="tryHarder" def="232" use="245" target="249" covered="0"/><du var="pureBarcode" def="233" use="268" target="270" covered="0"/><du var="pureBarcode" def="233" use="268" target="277" covered="0"/><du var="pureBarcode" def="233" use="294" covered="0"/><du var="image" def="234" use="259" target="261" covered="0"/><du var="image" def="234" use="259" target="266" covered="0"/><du var="maxI" def="235" use="250" target="297" covered="0"/><du var="maxI" def="235" use="250" target="252" covered="0"/><du var="maxJ" def="236" use="258" target="293" covered="0"/><du var="maxJ" def="236" use="258" target="259" covered="0"/><du var="maxJ" def="236" use="294" covered="0"/><du var="iSkip" def="244" use="245" target="245" covered="0"/><du var="iSkip" def="244" use="245" target="246" covered="0"/><du var="iSkip" def="244" use="250" covered="0"/><du var="iSkip" def="244" use="250" covered="0"/><du var="iSkip" def="246" use="250" covered="0"/><du var="iSkip" def="246" use="250" covered="0"/><du var="stateCount" def="249" use="252" covered="0"/><du var="stateCount" def="249" use="253" covered="0"/><du var="stateCount" def="249" use="254" covered="0"/><du var="stateCount" def="249" use="255" covered="0"/><du var="stateCount" def="249" use="256" covered="0"/><du var="stateCount" def="249" use="288" covered="0"/><du var="stateCount" def="249" use="285" covered="0"/><du var="stateCount" def="249" use="268" target="268" covered="0"/><du var="stateCount" def="249" use="268" target="277" covered="0"/><du var="stateCount" def="249" use="277" covered="0"/><du var="stateCount" def="249" use="278" covered="0"/><du var="stateCount" def="249" use="279" covered="0"/><du var="stateCount" def="249" use="280" covered="0"/><du var="stateCount" def="249" use="281" covered="0"/><du var="stateCount" def="249" use="268" target="270" covered="0"/><du var="stateCount" def="249" use="268" target="277" covered="0"/><du var="stateCount" def="249" use="271" covered="0"/><du var="stateCount" def="249" use="272" covered="0"/><du var="stateCount" def="249" use="273" covered="0"/><du var="stateCount" def="249" use="274" covered="0"/><du var="stateCount" def="249" use="275" covered="0"/><du var="stateCount" def="249" use="264" covered="0"/><du var="stateCount" def="249" use="293" target="294" covered="0"/><du var="stateCount" def="249" use="293" target="250" covered="0"/><du var="stateCount" def="249" use="294" covered="0"/><du var="i" def="250" use="250" target="297" covered="0"/><du var="i" def="250" use="250" target="252" covered="0"/><du var="i" def="250" use="259" target="261" covered="0"/><du var="i" def="250" use="259" target="266" covered="0"/><du var="i" def="250" use="268" target="270" covered="0"/><du var="i" def="250" use="268" target="277" covered="0"/><du var="i" def="250" use="250" covered="0"/><du var="i" def="250" use="294" covered="0"/><du var="currentState" def="257" use="266" target="267" covered="0"/><du var="currentState" def="257" use="266" target="288" covered="0"/><du var="currentState" def="257" use="288" covered="0"/><du var="currentState" def="257" use="267" target="268" covered="0"/><du var="currentState" def="257" use="267" target="285" covered="0"/><du var="currentState" def="257" use="285" covered="0"/><du var="currentState" def="257" use="261" target="262" covered="0"/><du var="currentState" def="257" use="261" target="264" covered="0"/><du var="currentState" def="257" use="264" covered="0"/><du var="currentState" def="257" use="262" covered="0"/><du var="j" def="258" use="258" target="293" covered="0"/><du var="j" def="258" use="258" target="259" covered="0"/><du var="j" def="258" use="259" target="261" covered="0"/><du var="j" def="258" use="259" target="266" covered="0"/><du var="j" def="258" use="258" covered="0"/><du var="j" def="258" use="268" target="270" covered="0"/><du var="j" def="258" use="268" target="277" covered="0"/><du var="currentState" def="262" use="264" covered="0"/><du var="currentState" def="262" use="266" target="267" covered="0"/><du var="currentState" def="262" use="266" target="288" covered="0"/><du var="currentState" def="262" use="288" covered="0"/><du var="currentState" def="262" use="267" target="268" covered="0"/><du var="currentState" def="262" use="267" target="285" covered="0"/><du var="currentState" def="262" use="285" covered="0"/><du var="currentState" def="262" use="261" target="262" covered="0"/><du var="currentState" def="262" use="261" target="264" covered="0"/><du var="currentState" def="262" use="262" covered="0"/><du var="currentState" def="270" use="266" target="267" covered="0"/><du var="currentState" def="270" use="266" target="288" covered="0"/><du var="currentState" def="270" use="288" covered="0"/><du var="currentState" def="270" use="267" target="268" covered="0"/><du var="currentState" def="270" use="267" target="285" covered="0"/><du var="currentState" def="270" use="285" covered="0"/><du var="currentState" def="270" use="261" target="262" covered="0"/><du var="currentState" def="270" use="261" target="264" covered="0"/><du var="currentState" def="270" use="264" covered="0"/><du var="currentState" def="270" use="262" covered="0"/><du var="currentState" def="282" use="266" target="267" covered="0"/><du var="currentState" def="282" use="266" target="288" covered="0"/><du var="currentState" def="282" use="288" covered="0"/><du var="currentState" def="282" use="267" target="268" covered="0"/><du var="currentState" def="282" use="267" target="285" covered="0"/><du var="currentState" def="282" use="285" covered="0"/><du var="currentState" def="282" use="261" target="262" covered="0"/><du var="currentState" def="282" use="261" target="264" covered="0"/><du var="currentState" def="282" use="264" covered="0"/><du var="currentState" def="282" use="262" covered="0"/><du var="currentState" def="285" use="266" target="267" covered="0"/><du var="currentState" def="285" use="266" target="288" covered="0"/><du var="currentState" def="285" use="288" covered="0"/><du var="currentState" def="285" use="267" target="268" covered="0"/><du var="currentState" def="285" use="267" target="285" covered="0"/><du var="currentState" def="285" use="285" covered="0"/><du var="currentState" def="285" use="261" target="262" covered="0"/><du var="currentState" def="285" use="261" target="264" covered="0"/><du var="currentState" def="285" use="264" covered="0"/><du var="currentState" def="285" use="262" covered="0"/><du var="j" def="258" use="258" target="293" covered="0"/><du var="j" def="258" use="258" target="259" covered="0"/><du var="j" def="258" use="259" target="261" covered="0"/><du var="j" def="258" use="259" target="266" covered="0"/><du var="j" def="258" use="258" covered="0"/><du var="j" def="258" use="268" target="270" covered="0"/><du var="j" def="258" use="268" target="277" covered="0"/><du var="i" def="250" use="250" target="297" covered="0"/><du var="i" def="250" use="250" target="252" covered="0"/><du var="i" def="250" use="259" target="261" covered="0"/><du var="i" def="250" use="259" target="266" covered="0"/><du var="i" def="250" use="268" target="270" covered="0"/><du var="i" def="250" use="268" target="277" covered="0"/><du var="i" def="250" use="250" covered="0"/><du var="i" def="250" use="294" covered="0"/><du var="result" def="298" use="301" covered="0"/><du var="result" def="298" use="304" target="305" covered="0"/><du var="result" def="298" use="304" target="307" covered="0"/><du var="result" def="298" use="307" covered="0"/><counter type="DU" missed="156" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="245" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/FormatException"><method name="getFormatInstance" desc="()Lcom/google/zxing/FormatException;"><du var="isStackTrace" def="41" use="41" target="41" covered="0"/><du var="isStackTrace" def="41" use="41" target="41" covered="0"/><du var="INSTANCE" def="41" use="41" covered="0"/><counter type="DU" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFormatInstance" desc="(Ljava/lang/Throwable;)Lcom/google/zxing/FormatException;"><du var="cause" def="45" use="45" covered="0"/><du var="isStackTrace" def="45" use="45" target="45" covered="0"/><du var="isStackTrace" def="45" use="45" target="45" covered="1"/><du var="INSTANCE" def="45" use="45" covered="1"/><counter type="DU" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="5" covered="2"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/BinaryBitmap"><method name="&lt;init&gt;" desc="(Lcom/google/zxing/Binarizer;)V"><du var="this" def="33" use="37" covered="0"/><du var="binarizer" def="33" use="34" target="35" covered="0"/><du var="binarizer" def="33" use="34" target="37" covered="0"/><du var="binarizer" def="33" use="37" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBlackMatrix" desc="()Lcom/google/zxing/common/BitMatrix;"><du var="this" def="84" use="84" target="85" covered="0"/><du var="this" def="84" use="84" target="87" covered="0"/><du var="this" def="84" use="87" covered="0"/><du var="this" def="84" use="85" covered="0"/><du var="this.matrix" def="84" use="84" target="85" covered="0"/><du var="this.matrix" def="84" use="84" target="87" covered="0"/><du var="this.matrix" def="84" use="87" covered="0"/><du var="this.binarizer" def="84" use="85" covered="0"/><du var="this.matrix" def="85" use="87" covered="0"/><counter type="DU" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="13" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/SMSMMSResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/SMSParsedResult;"><du var="rawText" def="45" use="46" target="46" covered="0"/><du var="rawText" def="45" use="46" target="52" covered="0"/><du var="rawText" def="45" use="52" covered="0"/><du var="rawText" def="45" use="63" covered="0"/><du var="rawText" def="45" use="67" covered="0"/><du var="rawText" def="45" use="69" covered="0"/><du var="rawText" def="45" use="46" target="47" covered="0"/><du var="rawText" def="45" use="46" target="52" covered="0"/><du var="rawText" def="45" use="47" target="47" covered="0"/><du var="rawText" def="45" use="47" target="52" covered="0"/><du var="rawText" def="45" use="47" target="48" covered="0"/><du var="rawText" def="45" use="47" target="52" covered="0"/><du var="nameValuePairs" def="52" use="56" target="56" covered="0"/><du var="nameValuePairs" def="52" use="56" target="63" covered="0"/><du var="nameValuePairs" def="52" use="56" target="57" covered="0"/><du var="nameValuePairs" def="52" use="56" target="63" covered="0"/><du var="nameValuePairs" def="52" use="57" covered="0"/><du var="nameValuePairs" def="52" use="58" covered="0"/><du var="subject" def="53" use="83" covered="0"/><du var="body" def="54" use="83" covered="0"/><du var="querySyntax" def="55" use="66" target="67" covered="0"/><du var="querySyntax" def="55" use="66" target="69" covered="0"/><du var="subject" def="57" use="83" covered="0"/><du var="body" def="58" use="83" covered="0"/><du var="querySyntax" def="59" use="66" target="67" covered="0"/><du var="querySyntax" def="59" use="66" target="69" covered="0"/><du var="queryStart" def="63" use="66" target="66" covered="0"/><du var="queryStart" def="63" use="66" target="67" covered="0"/><du var="queryStart" def="63" use="69" covered="0"/><du var="smsURIWithoutQuery" def="67" use="76" covered="0"/><du var="smsURIWithoutQuery" def="67" use="76" target="81" covered="0"/><du var="smsURIWithoutQuery" def="67" use="76" target="77" covered="0"/><du var="smsURIWithoutQuery" def="67" use="77" covered="0"/><du var="smsURIWithoutQuery" def="67" use="81" covered="0"/><du var="smsURIWithoutQuery" def="69" use="76" covered="0"/><du var="smsURIWithoutQuery" def="69" use="76" target="81" covered="0"/><du var="smsURIWithoutQuery" def="69" use="76" target="77" covered="0"/><du var="smsURIWithoutQuery" def="69" use="77" covered="0"/><du var="smsURIWithoutQuery" def="69" use="81" covered="0"/><du var="lastComma" def="72" use="76" covered="0"/><du var="lastComma" def="72" use="76" target="81" covered="0"/><du var="lastComma" def="72" use="76" target="77" covered="0"/><du var="lastComma" def="72" use="77" covered="0"/><du var="lastComma" def="72" use="81" covered="0"/><du var="numbers" def="74" use="78" covered="0"/><du var="numbers" def="74" use="81" covered="0"/><du var="numbers" def="74" use="83" covered="0"/><du var="vias" def="75" use="78" covered="0"/><du var="vias" def="75" use="81" covered="0"/><du var="vias" def="75" use="83" covered="0"/><du var="lastComma" def="79" use="76" covered="0"/><du var="lastComma" def="79" use="76" target="81" covered="0"/><du var="lastComma" def="79" use="76" target="77" covered="0"/><du var="lastComma" def="79" use="77" covered="0"/><du var="lastComma" def="79" use="81" covered="0"/><du var="comma" def="76" use="77" covered="0"/><du var="comma" def="76" use="79" covered="0"/><counter type="DU" missed="57" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addNumberVia" desc="(Ljava/util/Collection;Ljava/util/Collection;Ljava/lang/String;)V"><du var="numbers" def="92" use="97" covered="0"/><du var="numbers" def="92" use="94" covered="0"/><du var="vias" def="92" use="105" covered="0"/><du var="vias" def="92" use="95" covered="0"/><du var="numberPart" def="92" use="97" covered="0"/><du var="numberPart" def="92" use="98" covered="0"/><du var="numberPart" def="92" use="94" covered="0"/><du var="numberEnd" def="92" use="93" target="94" covered="0"/><du var="numberEnd" def="92" use="93" target="97" covered="0"/><du var="numberEnd" def="92" use="97" covered="0"/><du var="numberEnd" def="92" use="98" covered="0"/><du var="maybeVia" def="98" use="100" target="101" covered="0"/><du var="maybeVia" def="98" use="100" target="103" covered="0"/><du var="maybeVia" def="98" use="101" covered="0"/><du var="via" def="101" use="105" covered="0"/><du var="via" def="103" use="105" covered="0"/><counter type="DU" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="73" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/URIParsedResult"><method name="massageURI" desc="(Ljava/lang/String;)Ljava/lang/String;"><du var="uri" def="72" use="77" covered="0"/><du var="uri" def="72" use="74" target="77" covered="0"/><du var="uri" def="72" use="74" target="79" covered="0"/><du var="uri" def="72" use="79" covered="0"/><du var="protocolEnd" def="73" use="74" target="74" covered="0"/><du var="protocolEnd" def="73" use="74" target="77" covered="0"/><du var="protocolEnd" def="73" use="74" target="77" covered="0"/><du var="protocolEnd" def="73" use="74" target="79" covered="0"/><du var="uri" def="77" use="79" covered="0"/><counter type="DU" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isColonFollowedByPortNumber" desc="(Ljava/lang/String;I)Z"><du var="uri" def="83" use="88" covered="0"/><du var="uri" def="83" use="86" covered="0"/><du var="start" def="83" use="88" covered="0"/><du var="nextSlash" def="84" use="85" target="86" covered="0"/><du var="nextSlash" def="84" use="85" target="88" covered="0"/><du var="nextSlash" def="84" use="88" covered="0"/><du var="nextSlash" def="86" use="88" covered="0"/><counter type="DU" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="16" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/BizcardResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/AddressBookParsedResult;"><du var="rawText" def="39" use="40" target="41" covered="0"/><du var="rawText" def="39" use="40" target="43" covered="0"/><du var="rawText" def="39" use="43" covered="0"/><du var="rawText" def="39" use="44" covered="0"/><du var="rawText" def="39" use="46" covered="0"/><du var="rawText" def="39" use="47" covered="0"/><du var="rawText" def="39" use="48" covered="0"/><du var="rawText" def="39" use="49" covered="0"/><du var="rawText" def="39" use="50" covered="0"/><du var="rawText" def="39" use="51" covered="0"/><du var="rawText" def="39" use="52" covered="0"/><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildPhoneNumbers" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;"><du var="number1" def="75" use="76" target="77" covered="0"/><du var="number1" def="75" use="76" target="79" covered="0"/><du var="number1" def="75" use="77" covered="0"/><du var="number2" def="75" use="79" target="80" covered="0"/><du var="number2" def="75" use="79" target="82" covered="0"/><du var="number2" def="75" use="80" covered="0"/><du var="number3" def="75" use="82" target="83" covered="0"/><du var="number3" def="75" use="82" target="85" covered="0"/><du var="number3" def="75" use="83" covered="0"/><du var="numbers" def="75" use="85" covered="0"/><du var="numbers" def="75" use="89" covered="0"/><du var="numbers" def="75" use="83" covered="0"/><du var="numbers" def="75" use="80" covered="0"/><du var="numbers" def="75" use="77" covered="0"/><du var="size" def="85" use="86" target="87" covered="0"/><du var="size" def="85" use="86" target="89" covered="0"/><du var="size" def="85" use="89" covered="0"/><counter type="DU" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildName" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><du var="firstName" def="93" use="93" target="94" covered="0"/><du var="firstName" def="93" use="93" target="96" covered="0"/><du var="firstName" def="93" use="96" covered="0"/><du var="firstName" def="93" use="96" covered="0"/><du var="lastName" def="93" use="96" target="96" covered="0"/><du var="lastName" def="93" use="96" target="96" covered="0"/><du var="lastName" def="93" use="96" covered="0"/><du var="lastName" def="93" use="94" covered="0"/><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="36" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/SMTPResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/EmailAddressParsedResult;"><du var="rawText" def="31" use="32" target="32" covered="0"/><du var="rawText" def="31" use="32" target="35" covered="0"/><du var="rawText" def="31" use="35" covered="0"/><du var="rawText" def="31" use="32" target="33" covered="0"/><du var="rawText" def="31" use="32" target="35" covered="0"/><du var="emailAddress" def="35" use="48" covered="0"/><du var="emailAddress" def="35" use="40" covered="0"/><du var="emailAddress" def="35" use="41" covered="0"/><du var="subject" def="36" use="48" covered="0"/><du var="body" def="37" use="48" covered="0"/><du var="colon" def="38" use="39" target="40" covered="0"/><du var="colon" def="38" use="39" target="48" covered="0"/><du var="colon" def="38" use="40" covered="0"/><du var="colon" def="38" use="41" covered="0"/><du var="subject" def="40" use="48" covered="0"/><du var="subject" def="40" use="44" covered="0"/><du var="subject" def="40" use="45" covered="0"/><du var="emailAddress" def="41" use="48" covered="0"/><du var="colon" def="42" use="43" target="44" covered="0"/><du var="colon" def="42" use="43" target="48" covered="0"/><du var="colon" def="42" use="44" covered="0"/><du var="colon" def="42" use="45" covered="0"/><du var="body" def="44" use="48" covered="0"/><du var="subject" def="45" use="48" covered="0"/><counter type="DU" missed="24" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="24" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/GeoResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/GeoParsedResult;"><du var="matcher" def="40" use="41" target="42" covered="0"/><du var="matcher" def="40" use="41" target="45" covered="0"/><du var="matcher" def="40" use="45" covered="0"/><du var="matcher" def="40" use="51" covered="0"/><du var="matcher" def="40" use="55" covered="0"/><du var="matcher" def="40" use="59" target="60" covered="0"/><du var="matcher" def="40" use="59" target="62" covered="0"/><du var="matcher" def="40" use="62" covered="0"/><du var="query" def="45" use="70" covered="0"/><du var="latitude" def="51" use="52" target="52" covered="0"/><du var="latitude" def="51" use="52" target="53" covered="0"/><du var="latitude" def="51" use="52" target="53" covered="0"/><du var="latitude" def="51" use="52" target="55" covered="0"/><du var="latitude" def="51" use="70" covered="0"/><du var="longitude" def="55" use="56" target="56" covered="0"/><du var="longitude" def="55" use="56" target="57" covered="0"/><du var="longitude" def="55" use="56" target="57" covered="0"/><du var="longitude" def="55" use="56" target="59" covered="0"/><du var="longitude" def="55" use="70" covered="0"/><du var="altitude" def="60" use="70" covered="0"/><du var="altitude" def="62" use="63" target="64" covered="0"/><du var="altitude" def="62" use="63" target="70" covered="0"/><du var="altitude" def="62" use="70" covered="0"/><counter type="DU" missed="23" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="23" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/ProductResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/ProductParsedResult;"><du var="result" def="33" use="38" covered="0"/><du var="UPC_A" def="33" use="34" target="34" covered="0"/><du var="UPC_A" def="33" use="34" target="38" covered="0"/><du var="UPC_E" def="33" use="46" target="46" covered="0"/><du var="UPC_E" def="33" use="46" target="49" covered="0"/><du var="UPC_E" def="33" use="34" target="35" covered="0"/><du var="UPC_E" def="33" use="34" target="38" covered="0"/><du var="EAN_8" def="33" use="35" target="35" covered="0"/><du var="EAN_8" def="33" use="35" target="38" covered="0"/><du var="EAN_13" def="33" use="35" target="36" covered="0"/><du var="EAN_13" def="33" use="35" target="38" covered="0"/><du var="format" def="33" use="34" target="34" covered="0"/><du var="format" def="33" use="34" target="38" covered="0"/><du var="format" def="33" use="46" target="46" covered="0"/><du var="format" def="33" use="46" target="49" covered="0"/><du var="format" def="33" use="34" target="35" covered="0"/><du var="format" def="33" use="34" target="38" covered="0"/><du var="format" def="33" use="35" target="35" covered="0"/><du var="format" def="33" use="35" target="38" covered="0"/><du var="format" def="33" use="35" target="36" covered="0"/><du var="format" def="33" use="35" target="38" covered="0"/><du var="rawText" def="38" use="39" target="40" covered="0"/><du var="rawText" def="38" use="39" target="46" covered="0"/><du var="rawText" def="38" use="49" covered="0"/><du var="rawText" def="38" use="52" covered="0"/><du var="rawText" def="38" use="46" target="47" covered="0"/><du var="rawText" def="38" use="46" target="49" covered="0"/><du var="rawText" def="38" use="47" covered="0"/><du var="normalizedProductID" def="47" use="52" covered="0"/><du var="normalizedProductID" def="49" use="52" covered="0"/><counter type="DU" missed="30" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="30" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/GeoParsedResult"><method name="getGeoURI" desc="()Ljava/lang/String;"><du var="this" def="41" use="46" target="47" covered="0"/><du var="this" def="41" use="46" target="50" covered="0"/><du var="this" def="41" use="50" target="51" covered="0"/><du var="this" def="41" use="50" target="54" covered="0"/><du var="this" def="41" use="52" covered="0"/><du var="this" def="41" use="48" covered="0"/><du var="this.altitude" def="41" use="46" target="47" covered="0"/><du var="this.altitude" def="41" use="46" target="50" covered="0"/><du var="this.altitude" def="41" use="48" covered="0"/><du var="this.query" def="41" use="50" target="51" covered="0"/><du var="this.query" def="41" use="50" target="54" covered="0"/><du var="this.query" def="41" use="52" covered="0"/><du var="result" def="41" use="54" covered="0"/><du var="result" def="41" use="51" covered="0"/><du var="result" def="41" use="52" covered="0"/><du var="result" def="41" use="47" covered="0"/><du var="result" def="41" use="48" covered="0"/><counter type="DU" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDisplayResult" desc="()Ljava/lang/String;"><du var="this" def="87" use="91" target="92" covered="0"/><du var="this" def="87" use="91" target="96" covered="0"/><du var="this" def="87" use="96" target="97" covered="0"/><du var="this" def="87" use="96" target="101" covered="0"/><du var="this" def="87" use="98" covered="0"/><du var="this" def="87" use="93" covered="0"/><du var="this.altitude" def="87" use="91" target="92" covered="0"/><du var="this.altitude" def="87" use="91" target="96" covered="0"/><du var="this.altitude" def="87" use="93" covered="0"/><du var="this.query" def="87" use="96" target="97" covered="0"/><du var="this.query" def="87" use="96" target="101" covered="0"/><du var="this.query" def="87" use="98" covered="0"/><du var="result" def="87" use="101" covered="0"/><du var="result" def="87" use="97" covered="0"/><du var="result" def="87" use="98" covered="0"/><du var="result" def="87" use="99" covered="0"/><du var="result" def="87" use="92" covered="0"/><du var="result" def="87" use="93" covered="0"/><du var="result" def="87" use="94" covered="0"/><counter type="DU" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="36" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/AddressBookParsedResult"><method name="&lt;init&gt;" desc="([Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V"><du var="this" def="85" use="95" covered="0"/><du var="this" def="85" use="96" covered="0"/><du var="this" def="85" use="97" covered="0"/><du var="this" def="85" use="98" covered="0"/><du var="this" def="85" use="99" covered="0"/><du var="this" def="85" use="100" covered="0"/><du var="this" def="85" use="101" covered="0"/><du var="this" def="85" use="102" covered="0"/><du var="this" def="85" use="103" covered="0"/><du var="this" def="85" use="104" covered="0"/><du var="this" def="85" use="105" covered="0"/><du var="this" def="85" use="106" covered="0"/><du var="this" def="85" use="107" covered="0"/><du var="this" def="85" use="108" covered="0"/><du var="this" def="85" use="109" covered="0"/><du var="this" def="85" use="110" covered="0"/><du var="names" def="85" use="95" covered="0"/><du var="nicknames" def="85" use="96" covered="0"/><du var="pronunciation" def="85" use="97" covered="0"/><du var="phoneNumbers" def="85" use="86" target="86" covered="0"/><du var="phoneNumbers" def="85" use="86" target="89" covered="0"/><du var="phoneNumbers" def="85" use="98" covered="0"/><du var="phoneNumbers" def="85" use="86" target="87" covered="0"/><du var="phoneNumbers" def="85" use="86" target="89" covered="0"/><du var="phoneTypes" def="85" use="99" covered="0"/><du var="phoneTypes" def="85" use="86" target="86" covered="0"/><du var="phoneTypes" def="85" use="86" target="89" covered="0"/><du var="phoneTypes" def="85" use="86" target="87" covered="0"/><du var="phoneTypes" def="85" use="86" target="89" covered="0"/><du var="emails" def="85" use="89" target="89" covered="0"/><du var="emails" def="85" use="89" target="92" covered="0"/><du var="emails" def="85" use="100" covered="0"/><du var="emails" def="85" use="89" target="90" covered="0"/><du var="emails" def="85" use="89" target="92" covered="0"/><du var="emailTypes" def="85" use="101" covered="0"/><du var="emailTypes" def="85" use="89" target="89" covered="0"/><du var="emailTypes" def="85" use="89" target="92" covered="0"/><du var="emailTypes" def="85" use="89" target="90" covered="0"/><du var="emailTypes" def="85" use="89" target="92" covered="0"/><du var="instantMessenger" def="85" use="102" covered="0"/><du var="note" def="85" use="103" covered="0"/><du var="addresses" def="85" use="92" target="92" covered="0"/><du var="addresses" def="85" use="92" target="95" covered="0"/><du var="addresses" def="85" use="104" covered="0"/><du var="addresses" def="85" use="92" target="93" covered="0"/><du var="addresses" def="85" use="92" target="95" covered="0"/><du var="addressTypes" def="85" use="105" covered="0"/><du var="addressTypes" def="85" use="92" target="92" covered="0"/><du var="addressTypes" def="85" use="92" target="95" covered="0"/><du var="addressTypes" def="85" use="92" target="93" covered="0"/><du var="addressTypes" def="85" use="92" target="95" covered="0"/><du var="org" def="85" use="106" covered="0"/><du var="birthday" def="85" use="107" covered="0"/><du var="title" def="85" use="108" covered="0"/><du var="urls" def="85" use="109" covered="0"/><du var="geo" def="85" use="110" covered="0"/><counter type="DU" missed="56" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="56" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/VINParsedResult"><method name="getDisplayResult" desc="()Ljava/lang/String;"><du var="this" def="94" use="98" target="99" covered="0"/><du var="this" def="94" use="98" target="101" covered="0"/><du var="this" def="94" use="101" covered="0"/><du var="this" def="94" use="102" covered="0"/><du var="this" def="94" use="103" covered="0"/><du var="this" def="94" use="99" covered="0"/><du var="this.countryCode" def="94" use="98" target="99" covered="0"/><du var="this.countryCode" def="94" use="98" target="101" covered="0"/><du var="this.countryCode" def="94" use="99" covered="0"/><du var="this.modelYear" def="94" use="101" covered="0"/><du var="this.plantCode" def="94" use="102" covered="0"/><du var="this.sequentialNumber" def="94" use="103" covered="0"/><du var="result" def="94" use="101" covered="0"/><du var="result" def="94" use="102" covered="0"/><du var="result" def="94" use="103" covered="0"/><du var="result" def="94" use="104" covered="0"/><du var="result" def="94" use="99" covered="0"/><counter type="DU" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/VINResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/VINParsedResult;"><du var="result" def="36" use="36" target="37" covered="0"/><du var="result" def="36" use="36" target="39" covered="0"/><du var="result" def="36" use="39" covered="0"/><du var="CODE_39" def="36" use="36" target="37" covered="0"/><du var="CODE_39" def="36" use="36" target="39" covered="0"/><du var="IOQ" def="36" use="40" covered="0"/><du var="AZ09" def="36" use="41" target="42" covered="0"/><du var="AZ09" def="36" use="41" target="45" covered="0"/><du var="rawText" def="40" use="41" target="42" covered="0"/><du var="rawText" def="40" use="41" target="45" covered="0"/><du var="rawText" def="40" use="45" target="46" covered="0"/><du var="rawText" def="40" use="45" target="48" covered="0"/><du var="rawText" def="40" use="48" covered="0"/><du var="rawText" def="40" use="49" covered="0"/><counter type="DU" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkChecksum" desc="(Ljava/lang/CharSequence;)Z"><du var="vin" def="64" use="65" target="68" covered="0"/><du var="vin" def="64" use="65" target="66" covered="0"/><du var="vin" def="64" use="66" covered="0"/><du var="vin" def="64" use="68" covered="0"/><du var="sum" def="64" use="66" covered="0"/><du var="sum" def="64" use="69" covered="0"/><du var="i" def="65" use="65" target="68" covered="0"/><du var="i" def="65" use="65" target="66" covered="0"/><du var="i" def="65" use="66" covered="0"/><du var="i" def="65" use="65" covered="0"/><du var="sum" def="66" use="66" covered="0"/><du var="sum" def="66" use="69" covered="0"/><du var="i" def="65" use="65" target="68" covered="0"/><du var="i" def="65" use="65" target="66" covered="0"/><du var="i" def="65" use="66" covered="0"/><du var="i" def="65" use="65" covered="0"/><du var="checkChar" def="68" use="70" target="70" covered="0"/><du var="checkChar" def="68" use="70" target="70" covered="0"/><du var="expectedCheckChar" def="69" use="70" target="70" covered="0"/><du var="expectedCheckChar" def="69" use="70" target="70" covered="0"/><counter type="DU" missed="20" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vinCharValue" desc="(C)I"><du var="c" def="74" use="74" target="74" covered="0"/><du var="c" def="74" use="74" target="77" covered="0"/><du var="c" def="74" use="77" target="77" covered="0"/><du var="c" def="74" use="77" target="80" covered="0"/><du var="c" def="74" use="80" target="80" covered="0"/><du var="c" def="74" use="80" target="83" covered="0"/><du var="c" def="74" use="83" target="83" covered="0"/><du var="c" def="74" use="83" target="86" covered="0"/><du var="c" def="74" use="83" target="84" covered="0"/><du var="c" def="74" use="83" target="86" covered="0"/><du var="c" def="74" use="84" covered="0"/><du var="c" def="74" use="80" target="81" covered="0"/><du var="c" def="74" use="80" target="83" covered="0"/><du var="c" def="74" use="81" covered="0"/><du var="c" def="74" use="77" target="78" covered="0"/><du var="c" def="74" use="77" target="80" covered="0"/><du var="c" def="74" use="78" covered="0"/><du var="c" def="74" use="74" target="75" covered="0"/><du var="c" def="74" use="74" target="77" covered="0"/><du var="c" def="74" use="75" covered="0"/><counter type="DU" missed="20" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vinPositionWeight" desc="(I)I"><du var="position" def="90" use="90" target="90" covered="0"/><du var="position" def="90" use="90" target="93" covered="0"/><du var="position" def="90" use="93" target="94" covered="0"/><du var="position" def="90" use="93" target="96" covered="0"/><du var="position" def="90" use="96" target="97" covered="0"/><du var="position" def="90" use="96" target="99" covered="0"/><du var="position" def="90" use="99" target="99" covered="0"/><du var="position" def="90" use="99" target="102" covered="0"/><du var="position" def="90" use="99" target="100" covered="0"/><du var="position" def="90" use="99" target="102" covered="0"/><du var="position" def="90" use="100" covered="0"/><du var="position" def="90" use="90" target="91" covered="0"/><du var="position" def="90" use="90" target="93" covered="0"/><du var="position" def="90" use="91" covered="0"/><counter type="DU" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkChar" desc="(I)C"><du var="remainder" def="106" use="106" target="107" covered="0"/><du var="remainder" def="106" use="106" target="109" covered="0"/><du var="remainder" def="106" use="109" target="110" covered="0"/><du var="remainder" def="106" use="109" target="112" covered="0"/><du var="remainder" def="106" use="107" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="modelYear" desc="(C)I"><du var="c" def="116" use="116" target="116" covered="0"/><du var="c" def="116" use="116" target="119" covered="0"/><du var="c" def="116" use="119" target="119" covered="0"/><du var="c" def="116" use="119" target="122" covered="0"/><du var="c" def="116" use="122" target="123" covered="0"/><du var="c" def="116" use="122" target="125" covered="0"/><du var="c" def="116" use="125" target="125" covered="0"/><du var="c" def="116" use="125" target="128" covered="0"/><du var="c" def="116" use="128" target="128" covered="0"/><du var="c" def="116" use="128" target="131" covered="0"/><du var="c" def="116" use="131" target="131" covered="0"/><du var="c" def="116" use="131" target="134" covered="0"/><du var="c" def="116" use="134" target="134" covered="0"/><du var="c" def="116" use="134" target="137" covered="0"/><du var="c" def="116" use="134" target="135" covered="0"/><du var="c" def="116" use="134" target="137" covered="0"/><du var="c" def="116" use="135" covered="0"/><du var="c" def="116" use="131" target="132" covered="0"/><du var="c" def="116" use="131" target="134" covered="0"/><du var="c" def="116" use="132" covered="0"/><du var="c" def="116" use="128" target="129" covered="0"/><du var="c" def="116" use="128" target="131" covered="0"/><du var="c" def="116" use="129" covered="0"/><du var="c" def="116" use="125" target="126" covered="0"/><du var="c" def="116" use="125" target="128" covered="0"/><du var="c" def="116" use="126" covered="0"/><du var="c" def="116" use="119" target="120" covered="0"/><du var="c" def="116" use="119" target="122" covered="0"/><du var="c" def="116" use="120" covered="0"/><du var="c" def="116" use="116" target="117" covered="0"/><du var="c" def="116" use="116" target="119" covered="0"/><du var="c" def="116" use="117" covered="0"/><counter type="DU" missed="32" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="countryCode" desc="(Ljava/lang/CharSequence;)Ljava/lang/String;"><du var="c1" def="141" use="143" target="206" covered="0"/><du var="c1" def="141" use="143" target="147" covered="0"/><du var="c1" def="141" use="143" target="149" covered="0"/><du var="c1" def="141" use="143" target="151" covered="0"/><du var="c1" def="141" use="143" target="156" covered="0"/><du var="c1" def="141" use="143" target="161" covered="0"/><du var="c1" def="141" use="143" target="166" covered="0"/><du var="c1" def="141" use="143" target="171" covered="0"/><du var="c1" def="141" use="143" target="173" covered="0"/><du var="c1" def="141" use="143" target="178" covered="0"/><du var="c1" def="141" use="143" target="186" covered="0"/><du var="c1" def="141" use="143" target="194" covered="0"/><du var="c1" def="141" use="143" target="196" covered="0"/><du var="c1" def="141" use="143" target="201" covered="0"/><du var="c2" def="142" use="201" target="201" covered="0"/><du var="c2" def="142" use="201" target="206" covered="0"/><du var="c2" def="142" use="201" target="202" covered="0"/><du var="c2" def="142" use="201" target="206" covered="0"/><du var="c2" def="142" use="196" target="196" covered="0"/><du var="c2" def="142" use="196" target="197" covered="0"/><du var="c2" def="142" use="196" target="196" covered="0"/><du var="c2" def="142" use="196" target="206" covered="0"/><du var="c2" def="142" use="196" target="197" covered="0"/><du var="c2" def="142" use="196" target="206" covered="0"/><du var="c2" def="142" use="186" target="186" covered="0"/><du var="c2" def="142" use="186" target="189" covered="0"/><du var="c2" def="142" use="189" target="189" covered="0"/><du var="c2" def="142" use="189" target="206" covered="0"/><du var="c2" def="142" use="189" target="190" covered="0"/><du var="c2" def="142" use="189" target="206" covered="0"/><du var="c2" def="142" use="186" target="187" covered="0"/><du var="c2" def="142" use="186" target="189" covered="0"/><du var="c2" def="142" use="178" target="178" covered="0"/><du var="c2" def="142" use="178" target="181" covered="0"/><du var="c2" def="142" use="181" target="181" covered="0"/><du var="c2" def="142" use="181" target="206" covered="0"/><du var="c2" def="142" use="181" target="182" covered="0"/><du var="c2" def="142" use="181" target="206" covered="0"/><du var="c2" def="142" use="178" target="179" covered="0"/><du var="c2" def="142" use="178" target="181" covered="0"/><du var="c2" def="142" use="173" target="173" covered="0"/><du var="c2" def="142" use="173" target="206" covered="0"/><du var="c2" def="142" use="173" target="174" covered="0"/><du var="c2" def="142" use="173" target="206" covered="0"/><du var="c2" def="142" use="166" target="166" covered="0"/><du var="c2" def="142" use="166" target="206" covered="0"/><du var="c2" def="142" use="166" target="167" covered="0"/><du var="c2" def="142" use="166" target="206" covered="0"/><du var="c2" def="142" use="161" target="161" covered="0"/><du var="c2" def="142" use="161" target="206" covered="0"/><du var="c2" def="142" use="161" target="162" covered="0"/><du var="c2" def="142" use="161" target="206" covered="0"/><du var="c2" def="142" use="156" target="156" covered="0"/><du var="c2" def="142" use="156" target="156" covered="0"/><du var="c2" def="142" use="156" target="156" covered="0"/><du var="c2" def="142" use="156" target="206" covered="0"/><du var="c2" def="142" use="156" target="157" covered="0"/><du var="c2" def="142" use="156" target="206" covered="0"/><du var="c2" def="142" use="156" target="156" covered="0"/><du var="c2" def="142" use="156" target="157" covered="0"/><du var="c2" def="142" use="151" target="151" covered="0"/><du var="c2" def="142" use="151" target="206" covered="0"/><du var="c2" def="142" use="151" target="152" covered="0"/><du var="c2" def="142" use="151" target="206" covered="0"/><counter type="DU" missed="64" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="169" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/EmailDoCoMoResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/EmailAddressParsedResult;"><du var="rawText" def="36" use="37" target="38" covered="0"/><du var="rawText" def="36" use="37" target="40" covered="0"/><du var="rawText" def="36" use="40" covered="0"/><du var="rawText" def="36" use="49" covered="0"/><du var="rawText" def="36" use="50" covered="0"/><du var="tos" def="40" use="41" target="42" covered="0"/><du var="tos" def="40" use="41" target="44" covered="0"/><du var="tos" def="40" use="44" covered="0"/><du var="tos" def="40" use="44" covered="0"/><du var="tos" def="40" use="51" covered="0"/><du var="to" def="44" use="45" target="46" covered="0"/><du var="to" def="44" use="45" target="44" covered="0"/><counter type="DU" missed="23" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBasicallyValidEmailAddress" desc="(Ljava/lang/String;)Z"><du var="email" def="61" use="61" target="61" covered="0"/><du var="email" def="61" use="61" target="61" covered="0"/><du var="email" def="61" use="61" target="61" covered="0"/><du var="email" def="61" use="61" target="61" covered="0"/><du var="email" def="61" use="61" target="61" covered="0"/><du var="email" def="61" use="61" target="61" covered="0"/><du var="ATEXT_ALPHANUMERIC" def="61" use="61" target="61" covered="0"/><du var="ATEXT_ALPHANUMERIC" def="61" use="61" target="61" covered="0"/><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="31" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/AddressBookAUResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/AddressBookParsedResult;"><du var="rawText" def="36" use="38" target="38" covered="0"/><du var="rawText" def="36" use="38" target="39" covered="0"/><du var="rawText" def="36" use="38" target="39" covered="0"/><du var="rawText" def="36" use="38" target="44" covered="0"/><du var="rawText" def="36" use="44" covered="0"/><du var="rawText" def="36" use="45" covered="0"/><du var="rawText" def="36" use="47" covered="0"/><du var="rawText" def="36" use="48" covered="0"/><du var="rawText" def="36" use="49" covered="0"/><du var="rawText" def="36" use="50" covered="0"/><du var="name" def="44" use="52" covered="0"/><du var="pronunciation" def="45" use="52" covered="0"/><du var="phoneNumbers" def="47" use="52" covered="0"/><du var="emails" def="48" use="52" covered="0"/><du var="note" def="49" use="52" covered="0"/><du var="address" def="50" use="51" target="51" covered="0"/><du var="address" def="50" use="51" target="51" covered="0"/><du var="address" def="50" use="51" covered="0"/><counter type="DU" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchMultipleValuePrefix" desc="(Ljava/lang/String;ILjava/lang/String;Z)[Ljava/lang/String;"><du var="prefix" def="74" use="76" covered="0"/><du var="max" def="74" use="75" target="85" covered="0"/><du var="max" def="74" use="75" target="76" covered="0"/><du var="max" def="74" use="81" covered="0"/><du var="rawText" def="74" use="76" covered="0"/><du var="trim" def="74" use="76" covered="0"/><du var="values" def="74" use="80" target="81" covered="0"/><du var="values" def="74" use="80" target="83" covered="0"/><du var="values" def="74" use="83" covered="0"/><du var="values" def="74" use="85" target="86" covered="0"/><du var="values" def="74" use="85" target="88" covered="0"/><du var="values" def="74" use="88" covered="0"/><du var="i" def="75" use="75" target="85" covered="0"/><du var="i" def="75" use="75" target="76" covered="0"/><du var="i" def="75" use="76" covered="0"/><du var="i" def="75" use="75" covered="0"/><du var="value" def="76" use="77" target="78" covered="0"/><du var="value" def="76" use="77" target="80" covered="0"/><du var="value" def="76" use="83" covered="0"/><du var="values" def="81" use="83" covered="0"/><du var="values" def="81" use="80" target="81" covered="0"/><du var="values" def="81" use="80" target="83" covered="0"/><du var="values" def="81" use="85" target="86" covered="0"/><du var="values" def="81" use="85" target="88" covered="0"/><du var="values" def="81" use="88" covered="0"/><du var="i" def="75" use="75" target="85" covered="0"/><du var="i" def="75" use="75" target="76" covered="0"/><du var="i" def="75" use="76" covered="0"/><du var="i" def="75" use="75" covered="0"/><counter type="DU" missed="29" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="47" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/URLTOResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/URIParsedResult;"><du var="rawText" def="32" use="33" target="33" covered="0"/><du var="rawText" def="32" use="33" target="36" covered="0"/><du var="rawText" def="32" use="36" covered="0"/><du var="rawText" def="32" use="40" covered="0"/><du var="rawText" def="32" use="41" covered="0"/><du var="rawText" def="32" use="33" target="34" covered="0"/><du var="rawText" def="32" use="33" target="36" covered="0"/><du var="titleEnd" def="36" use="37" target="38" covered="0"/><du var="titleEnd" def="36" use="37" target="40" covered="0"/><du var="titleEnd" def="36" use="40" target="40" covered="0"/><du var="titleEnd" def="36" use="40" target="40" covered="0"/><du var="titleEnd" def="36" use="40" covered="0"/><du var="titleEnd" def="36" use="41" covered="0"/><counter type="DU" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/WifiResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/WifiParsedResult;"><du var="rawText" def="35" use="36" target="37" covered="0"/><du var="rawText" def="35" use="36" target="39" covered="0"/><du var="rawText" def="35" use="39" covered="0"/><du var="rawText" def="35" use="43" covered="0"/><du var="rawText" def="35" use="44" covered="0"/><du var="rawText" def="35" use="48" covered="0"/><du var="ssid" def="39" use="40" target="40" covered="0"/><du var="ssid" def="39" use="40" target="41" covered="0"/><du var="ssid" def="39" use="40" target="41" covered="0"/><du var="ssid" def="39" use="40" target="43" covered="0"/><du var="ssid" def="39" use="49" covered="0"/><du var="pass" def="43" use="49" covered="0"/><du var="type" def="44" use="45" target="46" covered="0"/><du var="type" def="44" use="45" target="48" covered="0"/><du var="type" def="44" use="49" covered="0"/><du var="type" def="46" use="49" covered="0"/><counter type="DU" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/AddressBookDoCoMoResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/AddressBookParsedResult;"><du var="rawText" def="40" use="41" target="42" covered="0"/><du var="rawText" def="40" use="41" target="44" covered="0"/><du var="rawText" def="40" use="44" covered="0"/><du var="rawText" def="40" use="49" covered="0"/><du var="rawText" def="40" use="50" covered="0"/><du var="rawText" def="40" use="51" covered="0"/><du var="rawText" def="40" use="52" covered="0"/><du var="rawText" def="40" use="53" covered="0"/><du var="rawText" def="40" use="54" covered="0"/><du var="rawText" def="40" use="59" covered="0"/><du var="rawText" def="40" use="63" covered="0"/><du var="rawName" def="44" use="45" target="46" covered="0"/><du var="rawName" def="44" use="45" target="48" covered="0"/><du var="rawName" def="44" use="48" covered="0"/><du var="name" def="48" use="65" covered="0"/><du var="pronunciation" def="49" use="65" covered="0"/><du var="phoneNumbers" def="50" use="65" covered="0"/><du var="emails" def="51" use="65" covered="0"/><du var="note" def="52" use="65" covered="0"/><du var="addresses" def="53" use="65" covered="0"/><du var="birthday" def="54" use="55" target="57" covered="0"/><du var="birthday" def="54" use="55" target="59" covered="0"/><du var="birthday" def="54" use="65" covered="0"/><du var="birthday" def="57" use="65" covered="0"/><counter type="DU" missed="24" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseName" desc="(Ljava/lang/String;)Ljava/lang/String;"><du var="name" def="84" use="89" covered="0"/><du var="name" def="84" use="87" covered="0"/><du var="name" def="84" use="87" covered="0"/><du var="comma" def="84" use="85" target="87" covered="0"/><du var="comma" def="84" use="85" target="89" covered="0"/><du var="comma" def="84" use="87" covered="0"/><du var="comma" def="84" use="87" covered="0"/><counter type="DU" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="31" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/SMSParsedResult"><method name="getSMSURI" desc="()Ljava/lang/String;"><du var="this" def="55" use="58" target="70" covered="0"/><du var="this" def="55" use="58" target="59" covered="0"/><du var="this" def="55" use="64" covered="0"/><du var="this" def="55" use="65" target="65" covered="0"/><du var="this" def="55" use="65" target="58" covered="0"/><du var="this" def="55" use="65" target="66" covered="0"/><du var="this" def="55" use="65" target="58" covered="0"/><du var="this" def="55" use="67" covered="0"/><du var="this" def="55" use="70" target="70" covered="0"/><du var="this" def="55" use="70" target="70" covered="0"/><du var="this" def="55" use="71" target="71" covered="0"/><du var="this" def="55" use="71" target="71" covered="0"/><du var="this" def="55" use="83" covered="0"/><du var="this" def="55" use="76" covered="0"/><du var="this.numbers" def="55" use="58" target="70" covered="0"/><du var="this.numbers" def="55" use="58" target="59" covered="0"/><du var="this.numbers" def="55" use="64" covered="0"/><du var="this.vias" def="55" use="65" target="65" covered="0"/><du var="this.vias" def="55" use="65" target="58" covered="0"/><du var="this.vias" def="55" use="65" target="66" covered="0"/><du var="this.vias" def="55" use="65" target="58" covered="0"/><du var="this.vias" def="55" use="67" covered="0"/><du var="this.body" def="55" use="70" target="70" covered="0"/><du var="this.body" def="55" use="70" target="70" covered="0"/><du var="this.body" def="55" use="76" covered="0"/><du var="this.subject" def="55" use="71" target="71" covered="0"/><du var="this.subject" def="55" use="71" target="71" covered="0"/><du var="this.subject" def="55" use="83" covered="0"/><du var="result" def="55" use="62" covered="0"/><du var="result" def="55" use="64" covered="0"/><du var="result" def="55" use="66" covered="0"/><du var="result" def="55" use="67" covered="0"/><du var="result" def="55" use="73" covered="0"/><du var="result" def="55" use="86" covered="0"/><du var="result" def="55" use="82" covered="0"/><du var="result" def="55" use="83" covered="0"/><du var="result" def="55" use="80" covered="0"/><du var="result" def="55" use="75" covered="0"/><du var="result" def="55" use="76" covered="0"/><du var="first" def="57" use="59" target="60" covered="0"/><du var="first" def="57" use="59" target="62" covered="0"/><du var="i" def="58" use="58" target="70" covered="0"/><du var="i" def="58" use="58" target="59" covered="0"/><du var="i" def="58" use="64" covered="0"/><du var="i" def="58" use="58" covered="0"/><du var="i" def="58" use="65" target="66" covered="0"/><du var="i" def="58" use="65" target="58" covered="0"/><du var="i" def="58" use="67" covered="0"/><du var="first" def="60" use="59" target="60" covered="0"/><du var="first" def="60" use="59" target="62" covered="0"/><du var="i" def="58" use="58" target="70" covered="0"/><du var="i" def="58" use="58" target="59" covered="0"/><du var="i" def="58" use="64" covered="0"/><du var="i" def="58" use="58" covered="0"/><du var="i" def="58" use="65" target="66" covered="0"/><du var="i" def="58" use="65" target="58" covered="0"/><du var="i" def="58" use="67" covered="0"/><du var="hasBody" def="70" use="72" target="72" covered="0"/><du var="hasBody" def="70" use="72" target="73" covered="0"/><du var="hasBody" def="70" use="74" target="75" covered="0"/><du var="hasBody" def="70" use="74" target="78" covered="0"/><du var="hasBody" def="70" use="79" target="80" covered="0"/><du var="hasBody" def="70" use="79" target="82" covered="0"/><du var="hasSubject" def="71" use="78" target="79" covered="0"/><du var="hasSubject" def="71" use="78" target="86" covered="0"/><du var="hasSubject" def="71" use="72" target="73" covered="0"/><du var="hasSubject" def="71" use="72" target="86" covered="0"/><counter type="DU" missed="67" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="67" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/ExpandedProductResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/ExpandedProductParsedResult;"><du var="result" def="45" use="50" covered="0"/><du var="RSS_EXPANDED" def="45" use="46" target="48" covered="0"/><du var="RSS_EXPANDED" def="45" use="46" target="50" covered="0"/><du var="format" def="45" use="46" target="48" covered="0"/><du var="format" def="45" use="46" target="50" covered="0"/><du var="rawText" def="50" use="69" target="158" covered="0"/><du var="rawText" def="50" use="69" target="70" covered="0"/><du var="rawText" def="50" use="70" covered="0"/><du var="rawText" def="50" use="77" covered="0"/><du var="rawText" def="50" use="158" covered="0"/><du var="productID" def="52" use="158" covered="0"/><du var="sscc" def="53" use="158" covered="0"/><du var="lotNumber" def="54" use="158" covered="0"/><du var="productionDate" def="55" use="158" covered="0"/><du var="packagingDate" def="56" use="158" covered="0"/><du var="bestBeforeDate" def="57" use="158" covered="0"/><du var="expirationDate" def="58" use="158" covered="0"/><du var="weight" def="59" use="158" covered="0"/><du var="weightType" def="60" use="158" covered="0"/><du var="weightIncrement" def="61" use="158" covered="0"/><du var="price" def="62" use="158" covered="0"/><du var="priceIncrement" def="63" use="158" covered="0"/><du var="priceCurrency" def="64" use="158" covered="0"/><du var="uncommonAIs" def="65" use="153" covered="0"/><du var="uncommonAIs" def="65" use="158" covered="0"/><du var="i" def="67" use="69" target="158" covered="0"/><du var="i" def="67" use="69" target="70" covered="0"/><du var="i" def="67" use="70" covered="0"/><du var="i" def="67" use="76" covered="0"/><du var="ai" def="70" use="71" target="74" covered="0"/><du var="ai" def="70" use="71" target="76" covered="0"/><du var="ai" def="70" use="76" covered="0"/><du var="ai" def="70" use="80" covered="0"/><du var="ai" def="70" use="80" target="153" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="80" target="80" covered="0"/><du var="ai" def="70" use="149" covered="0"/><du var="ai" def="70" use="135" covered="0"/><du var="ai" def="70" use="128" covered="0"/><du var="ai" def="70" use="114" covered="0"/><du var="ai" def="70" use="153" covered="0"/><du var="value" def="77" use="141" target="145" covered="0"/><du var="value" def="77" use="141" target="147" covered="0"/><du var="value" def="77" use="147" covered="0"/><du var="value" def="77" use="148" covered="0"/><du var="value" def="77" use="134" covered="0"/><du var="value" def="77" use="126" covered="0"/><du var="value" def="77" use="112" covered="0"/><du var="value" def="77" use="100" covered="0"/><du var="value" def="77" use="97" covered="0"/><du var="value" def="77" use="94" covered="0"/><du var="value" def="77" use="91" covered="0"/><du var="value" def="77" use="88" covered="0"/><du var="value" def="77" use="85" covered="0"/><du var="value" def="77" use="82" covered="0"/><du var="value" def="77" use="153" covered="0"/><du var="i" def="78" use="69" target="158" covered="0"/><du var="i" def="78" use="69" target="70" covered="0"/><du var="i" def="78" use="70" covered="0"/><du var="i" def="78" use="76" covered="0"/><du var="sscc" def="82" use="158" covered="0"/><du var="productID" def="85" use="158" covered="0"/><du var="lotNumber" def="88" use="158" covered="0"/><du var="productionDate" def="91" use="158" covered="0"/><du var="packagingDate" def="94" use="158" covered="0"/><du var="bestBeforeDate" def="97" use="158" covered="0"/><du var="expirationDate" def="100" use="158" covered="0"/><du var="weight" def="112" use="158" covered="0"/><du var="weightType" def="113" use="158" covered="0"/><du var="weightIncrement" def="114" use="158" covered="0"/><du var="weight" def="126" use="158" covered="0"/><du var="weightType" def="127" use="158" covered="0"/><du var="weightIncrement" def="128" use="158" covered="0"/><du var="price" def="134" use="158" covered="0"/><du var="priceIncrement" def="135" use="158" covered="0"/><du var="price" def="147" use="158" covered="0"/><du var="priceCurrency" def="148" use="158" covered="0"/><du var="priceIncrement" def="149" use="158" covered="0"/><counter type="DU" missed="181" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findAIvalue" desc="(ILjava/lang/String;)Ljava/lang/String;"><du var="i" def="176" use="182" covered="0"/><du var="rawText" def="176" use="182" covered="0"/><du var="c" def="176" use="178" target="179" covered="0"/><du var="c" def="176" use="178" target="182" covered="0"/><du var="rawTextAux" def="182" use="185" target="195" covered="0"/><du var="rawTextAux" def="182" use="185" target="186" covered="0"/><du var="rawTextAux" def="182" use="186" covered="0"/><du var="buf" def="184" use="193" covered="0"/><du var="buf" def="184" use="188" covered="0"/><du var="buf" def="184" use="195" covered="0"/><du var="index" def="185" use="185" target="195" covered="0"/><du var="index" def="185" use="185" target="186" covered="0"/><du var="index" def="185" use="186" covered="0"/><du var="index" def="185" use="185" covered="0"/><du var="currentChar" def="186" use="187" target="188" covered="0"/><du var="currentChar" def="186" use="187" target="190" covered="0"/><du var="currentChar" def="186" use="190" target="190" covered="0"/><du var="currentChar" def="186" use="190" target="191" covered="0"/><du var="currentChar" def="186" use="190" target="191" covered="0"/><du var="currentChar" def="186" use="190" target="193" covered="0"/><du var="currentChar" def="186" use="193" covered="0"/><du var="index" def="185" use="185" target="195" covered="0"/><du var="index" def="185" use="185" target="186" covered="0"/><du var="index" def="185" use="186" covered="0"/><du var="index" def="185" use="185" covered="0"/><counter type="DU" missed="25" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findValue" desc="(ILjava/lang/String;)Ljava/lang/String;"><du var="buf" def="199" use="212" covered="0"/><du var="buf" def="199" use="210" covered="0"/><du var="buf" def="199" use="215" covered="0"/><du var="rawTextAux" def="200" use="202" target="215" covered="0"/><du var="rawTextAux" def="200" use="202" target="203" covered="0"/><du var="rawTextAux" def="200" use="203" covered="0"/><du var="rawTextAux" def="200" use="207" target="208" covered="0"/><du var="rawTextAux" def="200" use="207" target="210" covered="0"/><du var="index" def="202" use="202" target="215" covered="0"/><du var="index" def="202" use="202" target="203" covered="0"/><du var="index" def="202" use="203" covered="0"/><du var="index" def="202" use="202" covered="0"/><du var="index" def="202" use="207" target="208" covered="0"/><du var="index" def="202" use="207" target="210" covered="0"/><du var="c" def="203" use="204" target="207" covered="0"/><du var="c" def="203" use="204" target="212" covered="0"/><du var="c" def="203" use="212" covered="0"/><du var="index" def="202" use="202" target="215" covered="0"/><du var="index" def="202" use="202" target="203" covered="0"/><du var="index" def="202" use="203" covered="0"/><du var="index" def="202" use="202" covered="0"/><du var="index" def="202" use="207" target="208" covered="0"/><du var="index" def="202" use="207" target="210" covered="0"/><counter type="DU" missed="23" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="229" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/TelResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/TelParsedResult;"><du var="rawText" def="30" use="31" target="31" covered="0"/><du var="rawText" def="30" use="31" target="35" covered="0"/><du var="rawText" def="30" use="35" target="35" covered="0"/><du var="rawText" def="30" use="35" target="35" covered="0"/><du var="rawText" def="30" use="35" covered="0"/><du var="rawText" def="30" use="37" covered="0"/><du var="rawText" def="30" use="38" covered="0"/><du var="rawText" def="30" use="31" target="32" covered="0"/><du var="rawText" def="30" use="31" target="35" covered="0"/><du var="telURI" def="35" use="39" covered="0"/><du var="queryStart" def="37" use="38" target="38" covered="0"/><du var="queryStart" def="37" use="38" target="38" covered="0"/><du var="queryStart" def="37" use="38" covered="0"/><counter type="DU" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/VEventResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/CalendarParsedResult;"><du var="rawText" def="33" use="39" covered="0"/><du var="rawText" def="33" use="40" covered="0"/><du var="rawText" def="33" use="44" covered="0"/><du var="rawText" def="33" use="45" covered="0"/><du var="rawText" def="33" use="46" covered="0"/><du var="rawText" def="33" use="47" covered="0"/><du var="rawText" def="33" use="49" covered="0"/><du var="rawText" def="33" use="55" covered="0"/><du var="rawText" def="33" use="57" covered="0"/><du var="vEventStart" def="34" use="35" target="36" covered="0"/><du var="vEventStart" def="34" use="35" target="39" covered="0"/><du var="summary" def="39" use="77" covered="0"/><du var="start" def="40" use="41" target="42" covered="0"/><du var="start" def="40" use="41" target="44" covered="0"/><du var="start" def="40" use="77" covered="0"/><du var="end" def="44" use="77" covered="0"/><du var="duration" def="45" use="77" covered="0"/><du var="location" def="46" use="77" covered="0"/><du var="organizer" def="47" use="77" covered="0"/><du var="attendees" def="49" use="50" target="51" covered="0"/><du var="attendees" def="49" use="50" target="55" covered="0"/><du var="attendees" def="49" use="77" covered="0"/><du var="attendees" def="49" use="51" target="55" covered="0"/><du var="attendees" def="49" use="51" target="52" covered="0"/><du var="attendees" def="49" use="52" covered="0"/><du var="i" def="51" use="51" target="55" covered="0"/><du var="i" def="51" use="51" target="52" covered="0"/><du var="i" def="51" use="52" covered="0"/><du var="i" def="51" use="51" covered="0"/><du var="i" def="51" use="51" target="55" covered="0"/><du var="i" def="51" use="51" target="52" covered="0"/><du var="i" def="51" use="52" covered="0"/><du var="i" def="51" use="51" covered="0"/><du var="description" def="55" use="77" covered="0"/><du var="geoString" def="57" use="60" target="61" covered="0"/><du var="geoString" def="57" use="60" target="64" covered="0"/><du var="geoString" def="57" use="64" covered="0"/><du var="geoString" def="57" use="69" covered="0"/><du var="geoString" def="57" use="70" covered="0"/><du var="latitude" def="61" use="77" covered="0"/><du var="longitude" def="62" use="77" covered="0"/><du var="semicolon" def="64" use="65" target="66" covered="0"/><du var="semicolon" def="64" use="65" target="69" covered="0"/><du var="semicolon" def="64" use="69" covered="0"/><du var="semicolon" def="64" use="70" covered="0"/><du var="latitude" def="69" use="77" covered="0"/><du var="longitude" def="70" use="77" covered="0"/><counter type="DU" missed="47" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchSingleVCardPrefixedField" desc="(Ljava/lang/CharSequence;Ljava/lang/String;Z)Ljava/lang/String;"><du var="values" def="95" use="96" target="96" covered="0"/><du var="values" def="95" use="96" target="96" covered="0"/><du var="values" def="95" use="96" covered="0"/><du var="values" def="95" use="96" target="96" covered="0"/><du var="values" def="95" use="96" target="96" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchVCardPrefixedField" desc="(Ljava/lang/CharSequence;Ljava/lang/String;Z)[Ljava/lang/String;"><du var="values" def="100" use="101" target="101" covered="0"/><du var="values" def="100" use="101" target="102" covered="0"/><du var="values" def="100" use="101" target="102" covered="0"/><du var="values" def="100" use="101" target="104" covered="0"/><du var="values" def="100" use="104" covered="0"/><du var="values" def="100" use="107" covered="0"/><du var="size" def="104" use="106" target="109" covered="0"/><du var="size" def="104" use="106" target="107" covered="0"/><du var="result" def="105" use="107" covered="0"/><du var="result" def="105" use="109" covered="0"/><du var="i" def="106" use="106" target="109" covered="0"/><du var="i" def="106" use="106" target="107" covered="0"/><du var="i" def="106" use="107" covered="0"/><du var="i" def="106" use="106" covered="0"/><du var="i" def="106" use="106" target="109" covered="0"/><du var="i" def="106" use="106" target="107" covered="0"/><du var="i" def="106" use="107" covered="0"/><du var="i" def="106" use="106" covered="0"/><counter type="DU" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stripMailto" desc="(Ljava/lang/String;)Ljava/lang/String;"><du var="s" def="113" use="113" target="113" covered="0"/><du var="s" def="113" use="113" target="116" covered="0"/><du var="s" def="113" use="116" covered="0"/><du var="s" def="113" use="113" target="113" covered="0"/><du var="s" def="113" use="113" target="114" covered="0"/><du var="s" def="113" use="114" covered="0"/><du var="s" def="113" use="113" target="114" covered="0"/><du var="s" def="113" use="113" target="116" covered="0"/><du var="s" def="114" use="116" covered="0"/><counter type="DU" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="79" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/VCardResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/AddressBookParsedResult;"><du var="COMMA" def="54" use="66" covered="0"/><du var="SEMICOLON_OR_COMMA" def="54" use="80" covered="0"/><du var="rawText" def="54" use="59" covered="0"/><du var="rawText" def="54" use="65" covered="0"/><du var="rawText" def="54" use="67" covered="0"/><du var="rawText" def="54" use="68" covered="0"/><du var="rawText" def="54" use="69" covered="0"/><du var="rawText" def="54" use="70" covered="0"/><du var="rawText" def="54" use="71" covered="0"/><du var="rawText" def="54" use="72" covered="0"/><du var="rawText" def="54" use="76" covered="0"/><du var="rawText" def="54" use="77" covered="0"/><du var="rawText" def="54" use="78" covered="0"/><du var="rawText" def="54" use="79" covered="0"/><du var="rawText" def="54" use="62" covered="0"/><du var="m" def="55" use="56" target="56" covered="0"/><du var="m" def="55" use="56" target="57" covered="0"/><du var="m" def="55" use="56" target="57" covered="0"/><du var="m" def="55" use="56" target="59" covered="0"/><du var="names" def="59" use="60" target="62" covered="0"/><du var="names" def="59" use="60" target="65" covered="0"/><du var="names" def="59" use="84" covered="0"/><du var="names" def="62" use="84" covered="0"/><du var="nicknameString" def="65" use="66" target="66" covered="0"/><du var="nicknameString" def="65" use="66" target="66" covered="0"/><du var="nicknameString" def="65" use="66" covered="0"/><du var="nicknames" def="66" use="84" covered="0"/><du var="phoneNumbers" def="67" use="84" covered="0"/><du var="emails" def="68" use="84" covered="0"/><du var="note" def="69" use="84" covered="0"/><du var="addresses" def="70" use="84" covered="0"/><du var="org" def="71" use="84" covered="0"/><du var="birthday" def="72" use="73" target="73" covered="0"/><du var="birthday" def="72" use="73" target="76" covered="0"/><du var="birthday" def="72" use="84" covered="0"/><du var="birthday" def="72" use="73" target="74" covered="0"/><du var="birthday" def="72" use="73" target="76" covered="0"/><du var="birthday" def="74" use="84" covered="0"/><du var="title" def="76" use="84" covered="0"/><du var="urls" def="77" use="84" covered="0"/><du var="instantMessenger" def="78" use="84" covered="0"/><du var="geoString" def="79" use="80" target="80" covered="0"/><du var="geoString" def="79" use="80" target="80" covered="0"/><du var="geoString" def="79" use="80" covered="0"/><du var="geo" def="80" use="81" target="81" covered="0"/><du var="geo" def="80" use="81" target="84" covered="0"/><du var="geo" def="80" use="84" covered="0"/><du var="geo" def="80" use="81" target="82" covered="0"/><du var="geo" def="80" use="81" target="84" covered="0"/><du var="geo" def="82" use="84" covered="0"/><counter type="DU" missed="50" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchVCardPrefixedField" desc="(Ljava/lang/CharSequence;Ljava/lang/String;ZZ)Ljava/util/List;"><du var="prefix" def="106" use="114" covered="0"/><du var="rawText" def="106" use="114" covered="0"/><du var="rawText" def="106" use="149" covered="0"/><du var="rawText" def="106" use="149" target="163" covered="0"/><du var="rawText" def="106" use="149" target="150" covered="0"/><du var="rawText" def="106" use="150" target="151" covered="0"/><du var="rawText" def="106" use="150" target="154" covered="0"/><du var="rawText" def="106" use="156" target="157" covered="0"/><du var="rawText" def="106" use="156" target="163" covered="0"/><du var="rawText" def="106" use="155" target="156" covered="0"/><du var="rawText" def="106" use="155" target="157" covered="0"/><du var="rawText" def="106" use="151" target="152" covered="0"/><du var="rawText" def="106" use="151" target="153" covered="0"/><du var="rawText" def="106" use="152" target="153" covered="0"/><du var="rawText" def="106" use="152" target="154" covered="0"/><du var="rawText" def="106" use="174" covered="0"/><du var="rawText" def="106" use="171" target="172" covered="0"/><du var="rawText" def="106" use="171" target="174" covered="0"/><du var="trim" def="106" use="175" target="176" covered="0"/><du var="trim" def="106" use="175" target="178" covered="0"/><du var="parseFieldDivider" def="106" use="184" target="185" covered="0"/><du var="parseFieldDivider" def="106" use="184" target="187" covered="0"/><du var="parseFieldDivider" def="106" use="180" target="181" covered="0"/><du var="parseFieldDivider" def="106" use="180" target="191" covered="0"/><du var="SEMICOLON" def="106" use="129" covered="0"/><du var="SEMICOLON" def="106" use="129" covered="0"/><du var="EQUALS" def="106" use="134" covered="0"/><du var="UNESCAPED_SEMICOLONS" def="106" use="185" covered="0"/><du var="UNESCAPED_SEMICOLONS" def="106" use="181" covered="0"/><du var="CR_LF_SPACE_TAB" def="106" use="187" covered="0"/><du var="NEWLINE_ESCAPE" def="106" use="188" covered="0"/><du var="VCARD_ESCAPES" def="106" use="189" covered="0"/><du var="matches" def="106" use="168" target="169" covered="0"/><du var="matches" def="106" use="168" target="171" covered="0"/><du var="matches" def="106" use="197" covered="0"/><du var="matches" def="106" use="194" covered="0"/><du var="matches" def="106" use="206" covered="0"/><du var="i" def="107" use="110" target="206" covered="0"/><du var="i" def="107" use="110" target="114" covered="0"/><du var="i" def="107" use="116" target="117" covered="0"/><du var="i" def="107" use="116" target="119" covered="0"/><du var="i" def="107" use="119" target="120" covered="0"/><du var="i" def="107" use="119" target="122" covered="0"/><du var="i" def="107" use="117" covered="0"/><du var="max" def="108" use="110" target="206" covered="0"/><du var="max" def="108" use="110" target="114" covered="0"/><du var="max" def="108" use="165" covered="0"/><du var="matcher" def="114" use="119" target="120" covered="0"/><du var="matcher" def="114" use="119" target="122" covered="0"/><du var="matcher" def="114" use="122" covered="0"/><du var="matcher" def="114" use="124" covered="0"/><du var="i" def="117" use="119" target="120" covered="0"/><du var="i" def="117" use="119" target="122" covered="0"/><du var="i" def="122" use="147" covered="0"/><du var="i" def="122" use="149" covered="0"/><du var="metadataString" def="124" use="128" target="129" covered="0"/><du var="metadataString" def="124" use="128" target="147" covered="0"/><du var="metadataString" def="124" use="129" covered="0"/><du var="metadataString" def="124" use="129" covered="0"/><du var="metadata" def="125" use="191" target="192" covered="0"/><du var="metadata" def="125" use="191" target="196" covered="0"/><du var="metadata" def="125" use="196" covered="0"/><du var="metadata" def="125" use="197" covered="0"/><du var="metadata" def="125" use="130" target="131" covered="0"/><du var="metadata" def="125" use="130" target="133" covered="0"/><du var="metadata" def="125" use="133" covered="0"/><du var="quotedPrintable" def="126" use="154" target="155" covered="0"/><du var="quotedPrintable" def="126" use="154" target="163" covered="0"/><du var="quotedPrintable" def="126" use="178" target="179" covered="0"/><du var="quotedPrintable" def="126" use="178" target="184" covered="0"/><du var="quotedPrintableCharset" def="127" use="179" covered="0"/><du var="metadatum" def="129" use="133" covered="0"/><du var="metadatum" def="129" use="134" covered="0"/><du var="metadata" def="131" use="133" covered="0"/><du var="metadata" def="131" use="130" target="131" covered="0"/><du var="metadata" def="131" use="130" target="133" covered="0"/><du var="metadata" def="131" use="191" target="192" covered="0"/><du var="metadata" def="131" use="191" target="196" covered="0"/><du var="metadata" def="131" use="196" covered="0"/><du var="metadata" def="131" use="197" covered="0"/><du var="metadatumTokens" def="134" use="135" target="136" covered="0"/><du var="metadatumTokens" def="134" use="135" target="129" covered="0"/><du var="metadatumTokens" def="134" use="136" covered="0"/><du var="metadatumTokens" def="134" use="137" covered="0"/><du var="key" def="136" use="138" target="138" covered="0"/><du var="key" def="136" use="138" target="140" covered="0"/><du var="key" def="136" use="140" target="141" covered="0"/><du var="key" def="136" use="140" target="129" covered="0"/><du var="value" def="137" use="141" covered="0"/><du var="value" def="137" use="138" target="139" covered="0"/><du var="value" def="137" use="138" target="140" covered="0"/><du var="quotedPrintable" def="139" use="154" target="155" covered="0"/><du var="quotedPrintable" def="139" use="154" target="163" covered="0"/><du var="quotedPrintable" def="139" use="178" target="179" covered="0"/><du var="quotedPrintable" def="139" use="178" target="184" covered="0"/><du var="quotedPrintableCharset" def="141" use="179" covered="0"/><du var="matchStart" def="147" use="166" target="168" covered="0"/><du var="matchStart" def="147" use="166" target="201" covered="0"/><du var="matchStart" def="147" use="174" covered="0"/><du var="i" def="153" use="149" covered="0"/><du var="i" def="157" use="149" covered="0"/><du var="i" def="149" use="149" target="163" covered="0"/><du var="i" def="149" use="149" target="150" covered="0"/><du var="i" def="149" use="150" target="151" covered="0"/><du var="i" def="149" use="150" target="154" covered="0"/><du var="i" def="149" use="155" target="155" covered="0"/><du var="i" def="149" use="155" target="156" covered="0"/><du var="i" def="149" use="156" target="156" covered="0"/><du var="i" def="149" use="156" target="163" covered="0"/><du var="i" def="149" use="156" target="157" covered="0"/><du var="i" def="149" use="156" target="163" covered="0"/><du var="i" def="149" use="157" covered="0"/><du var="i" def="149" use="155" target="156" covered="0"/><du var="i" def="149" use="155" target="157" covered="0"/><du var="i" def="149" use="151" target="152" covered="0"/><du var="i" def="149" use="151" target="153" covered="0"/><du var="i" def="149" use="153" covered="0"/><du var="i" def="149" use="152" target="153" covered="0"/><du var="i" def="149" use="152" target="154" covered="0"/><du var="i" def="149" use="163" target="165" covered="0"/><du var="i" def="149" use="163" target="166" covered="0"/><du var="i" def="149" use="166" target="168" covered="0"/><du var="i" def="149" use="166" target="201" covered="0"/><du var="i" def="149" use="201" covered="0"/><du var="i" def="149" use="171" target="171" covered="0"/><du var="i" def="149" use="171" target="174" covered="0"/><du var="i" def="149" use="174" covered="0"/><du var="i" def="149" use="199" covered="0"/><du var="i" def="149" use="171" target="172" covered="0"/><du var="i" def="149" use="171" target="174" covered="0"/><du var="i" def="149" use="172" covered="0"/><du var="i" def="165" use="110" target="206" covered="0"/><du var="i" def="165" use="110" target="114" covered="0"/><du var="i" def="165" use="116" target="117" covered="0"/><du var="i" def="165" use="116" target="119" covered="0"/><du var="i" def="165" use="119" target="120" covered="0"/><du var="i" def="165" use="119" target="122" covered="0"/><du var="i" def="165" use="117" covered="0"/><du var="matches" def="169" use="197" covered="0"/><du var="matches" def="169" use="168" target="169" covered="0"/><du var="matches" def="169" use="168" target="171" covered="0"/><du var="matches" def="169" use="206" covered="0"/><du var="matches" def="169" use="194" covered="0"/><du var="i" def="172" use="174" covered="0"/><du var="i" def="172" use="199" covered="0"/><du var="element" def="174" use="187" covered="0"/><du var="element" def="174" use="185" covered="0"/><du var="element" def="174" use="179" covered="0"/><du var="element" def="174" use="176" covered="0"/><du var="element" def="176" use="187" covered="0"/><du var="element" def="176" use="185" covered="0"/><du var="element" def="176" use="179" covered="0"/><du var="element" def="179" use="196" covered="0"/><du var="element" def="179" use="193" covered="0"/><du var="element" def="179" use="181" covered="0"/><du var="element" def="181" use="196" covered="0"/><du var="element" def="181" use="193" covered="0"/><du var="element" def="185" use="187" covered="0"/><du var="element" def="189" use="196" covered="0"/><du var="element" def="189" use="193" covered="0"/><du var="i" def="199" use="110" target="206" covered="0"/><du var="i" def="199" use="110" target="114" covered="0"/><du var="i" def="199" use="116" target="117" covered="0"/><du var="i" def="199" use="116" target="119" covered="0"/><du var="i" def="199" use="119" target="120" covered="0"/><du var="i" def="199" use="119" target="122" covered="0"/><du var="i" def="199" use="117" covered="0"/><du var="i" def="201" use="110" target="206" covered="0"/><du var="i" def="201" use="110" target="114" covered="0"/><du var="i" def="201" use="116" target="117" covered="0"/><du var="i" def="201" use="116" target="119" covered="0"/><du var="i" def="201" use="119" target="120" covered="0"/><du var="i" def="201" use="119" target="122" covered="0"/><du var="i" def="201" use="117" covered="0"/><counter type="DU" missed="185" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeQuotedPrintable" desc="(Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/lang/String;"><du var="value" def="210" use="214" covered="0"/><du var="value" def="210" use="221" covered="0"/><du var="value" def="210" use="223" covered="0"/><du var="charset" def="210" use="234" covered="0"/><du var="charset" def="210" use="238" covered="0"/><du var="length" def="210" use="213" target="238" covered="0"/><du var="length" def="210" use="213" target="214" covered="0"/><du var="length" def="210" use="220" target="221" covered="0"/><du var="length" def="210" use="220" target="213" covered="0"/><du var="result" def="211" use="234" covered="0"/><du var="result" def="211" use="235" covered="0"/><du var="result" def="211" use="238" covered="0"/><du var="result" def="211" use="239" covered="0"/><du var="fragmentBuffer" def="212" use="227" covered="0"/><du var="fragmentBuffer" def="212" use="234" covered="0"/><du var="fragmentBuffer" def="212" use="238" covered="0"/><du var="i" def="213" use="213" target="238" covered="0"/><du var="i" def="213" use="213" target="214" covered="0"/><du var="i" def="213" use="214" covered="0"/><du var="i" def="213" use="220" target="221" covered="0"/><du var="i" def="213" use="220" target="213" covered="0"/><du var="i" def="213" use="213" covered="0"/><du var="i" def="213" use="221" covered="0"/><du var="i" def="213" use="223" covered="0"/><du var="i" def="213" use="229" covered="0"/><du var="c" def="214" use="215" target="234" covered="0"/><du var="c" def="214" use="215" target="218" covered="0"/><du var="c" def="214" use="215" target="220" covered="0"/><du var="c" def="214" use="235" covered="0"/><du var="nextChar" def="221" use="222" target="222" covered="0"/><du var="nextChar" def="221" use="222" target="213" covered="0"/><du var="nextChar" def="221" use="222" target="223" covered="0"/><du var="nextChar" def="221" use="222" target="213" covered="0"/><du var="nextChar" def="221" use="224" covered="0"/><du var="firstDigit" def="224" use="226" target="226" covered="0"/><du var="firstDigit" def="224" use="226" target="229" covered="0"/><du var="firstDigit" def="224" use="227" covered="0"/><du var="secondDigit" def="225" use="226" target="227" covered="0"/><du var="secondDigit" def="225" use="226" target="229" covered="0"/><du var="secondDigit" def="225" use="227" covered="0"/><du var="i" def="229" use="213" covered="0"/><du var="i" def="213" use="213" target="238" covered="0"/><du var="i" def="213" use="213" target="214" covered="0"/><du var="i" def="213" use="214" covered="0"/><du var="i" def="213" use="220" target="221" covered="0"/><du var="i" def="213" use="220" target="213" covered="0"/><du var="i" def="213" use="213" covered="0"/><du var="i" def="213" use="221" covered="0"/><du var="i" def="213" use="223" covered="0"/><du var="i" def="213" use="229" covered="0"/><counter type="DU" missed="50" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maybeAppendFragment" desc="(Ljava/io/ByteArrayOutputStream;Ljava/lang/String;Ljava/lang/StringBuilder;)V"><du var="fragmentBuffer" def="245" use="245" target="246" covered="0"/><du var="fragmentBuffer" def="245" use="245" target="260" covered="0"/><du var="fragmentBuffer" def="245" use="246" covered="0"/><du var="fragmentBuffer" def="245" use="257" covered="0"/><du var="charset" def="245" use="248" target="249" covered="0"/><du var="charset" def="245" use="248" target="252" covered="0"/><du var="charset" def="245" use="252" covered="0"/><du var="result" def="245" use="258" covered="0"/><du var="fragmentBytes" def="246" use="252" covered="0"/><du var="fragmentBytes" def="246" use="249" covered="0"/><du var="fragment" def="249" use="258" covered="0"/><du var="fragment" def="252" use="258" covered="0"/><counter type="DU" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchSingleVCardPrefixedField" desc="(Ljava/lang/CharSequence;Ljava/lang/String;ZZ)Ljava/util/List;"><du var="values" def="266" use="267" target="267" covered="0"/><du var="values" def="266" use="267" target="267" covered="0"/><du var="values" def="266" use="267" covered="0"/><du var="values" def="266" use="267" target="267" covered="0"/><du var="values" def="266" use="267" target="267" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPrimaryValue" desc="(Ljava/util/List;)Ljava/lang/String;"><du var="list" def="271" use="271" target="271" covered="0"/><du var="list" def="271" use="271" target="271" covered="0"/><du var="list" def="271" use="271" covered="0"/><du var="list" def="271" use="271" target="271" covered="0"/><du var="list" def="271" use="271" target="271" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPrimaryValues" desc="(Ljava/util/Collection;)[Ljava/lang/String;"><du var="lists" def="275" use="275" target="275" covered="0"/><du var="lists" def="275" use="275" target="276" covered="0"/><du var="lists" def="275" use="275" target="276" covered="0"/><du var="lists" def="275" use="275" target="278" covered="0"/><du var="lists" def="275" use="278" covered="0"/><du var="lists" def="275" use="279" covered="0"/><du var="result" def="278" use="282" covered="0"/><du var="result" def="278" use="285" covered="0"/><du var="value" def="280" use="281" target="281" covered="0"/><du var="value" def="280" use="281" target="279" covered="0"/><du var="value" def="280" use="281" target="282" covered="0"/><du var="value" def="280" use="281" target="279" covered="0"/><du var="value" def="280" use="282" covered="0"/><counter type="DU" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toTypes" desc="(Ljava/util/Collection;)[Ljava/lang/String;"><du var="lists" def="289" use="289" target="289" covered="0"/><du var="lists" def="289" use="289" target="290" covered="0"/><du var="lists" def="289" use="289" target="290" covered="0"/><du var="lists" def="289" use="289" target="292" covered="0"/><du var="lists" def="289" use="292" covered="0"/><du var="lists" def="289" use="293" covered="0"/><du var="result" def="292" use="310" covered="0"/><du var="result" def="292" use="313" covered="0"/><du var="list" def="293" use="297" target="310" covered="0"/><du var="list" def="293" use="297" target="298" covered="0"/><du var="list" def="293" use="298" covered="0"/><du var="value" def="294" use="295" target="295" covered="0"/><du var="value" def="294" use="295" target="293" covered="0"/><du var="value" def="294" use="295" target="296" covered="0"/><du var="value" def="294" use="295" target="293" covered="0"/><du var="type" def="296" use="310" covered="0"/><du var="i" def="297" use="297" target="310" covered="0"/><du var="i" def="297" use="297" target="298" covered="0"/><du var="i" def="297" use="298" covered="0"/><du var="i" def="297" use="297" covered="0"/><du var="metadatum" def="298" use="305" target="306" covered="0"/><du var="metadatum" def="298" use="305" target="297" covered="0"/><du var="metadatum" def="298" use="306" covered="0"/><du var="metadatum" def="298" use="302" covered="0"/><du var="equals" def="299" use="300" target="302" covered="0"/><du var="equals" def="299" use="300" target="305" covered="0"/><du var="equals" def="299" use="305" target="306" covered="0"/><du var="equals" def="299" use="305" target="297" covered="0"/><du var="equals" def="299" use="306" covered="0"/><du var="type" def="302" use="310" covered="0"/><du var="type" def="306" use="310" covered="0"/><du var="i" def="297" use="297" target="310" covered="0"/><du var="i" def="297" use="297" target="298" covered="0"/><du var="i" def="297" use="298" covered="0"/><du var="i" def="297" use="297" covered="0"/><counter type="DU" missed="38" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLikeVCardDate" desc="(Ljava/lang/CharSequence;)Z"><du var="value" def="317" use="317" target="317" covered="0"/><du var="value" def="317" use="317" target="317" covered="0"/><du var="value" def="317" use="317" target="317" covered="0"/><du var="value" def="317" use="317" target="317" covered="0"/><du var="VCARD_LIKE_DATE" def="317" use="317" target="317" covered="0"/><du var="VCARD_LIKE_DATE" def="317" use="317" target="317" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatNames" desc="(Ljava/lang/Iterable;)V"><du var="names" def="327" use="327" target="328" covered="0"/><du var="names" def="327" use="327" target="349" covered="0"/><du var="names" def="327" use="328" covered="0"/><du var="list" def="328" use="346" covered="0"/><du var="name" def="329" use="339" covered="0"/><du var="name" def="329" use="334" covered="0"/><du var="name" def="329" use="334" target="339" covered="0"/><du var="name" def="329" use="334" target="335" covered="0"/><du var="name" def="329" use="335" covered="0"/><du var="components" def="330" use="334" target="334" covered="0"/><du var="components" def="330" use="334" target="339" covered="0"/><du var="components" def="330" use="339" covered="0"/><du var="components" def="330" use="341" covered="0"/><du var="components" def="330" use="342" covered="0"/><du var="components" def="330" use="343" covered="0"/><du var="components" def="330" use="344" covered="0"/><du var="components" def="330" use="345" covered="0"/><du var="components" def="330" use="335" covered="0"/><du var="start" def="331" use="339" covered="0"/><du var="start" def="331" use="334" covered="0"/><du var="start" def="331" use="334" target="339" covered="0"/><du var="start" def="331" use="334" target="335" covered="0"/><du var="start" def="331" use="335" covered="0"/><du var="componentIndex" def="333" use="334" target="334" covered="0"/><du var="componentIndex" def="333" use="334" target="339" covered="0"/><du var="componentIndex" def="333" use="339" covered="0"/><du var="componentIndex" def="333" use="335" covered="0"/><du var="componentIndex" def="333" use="336" covered="0"/><du var="componentIndex" def="336" use="334" target="334" covered="0"/><du var="componentIndex" def="336" use="334" target="339" covered="0"/><du var="componentIndex" def="336" use="339" covered="0"/><du var="componentIndex" def="336" use="335" covered="0"/><du var="componentIndex" def="336" use="336" covered="0"/><du var="start" def="337" use="339" covered="0"/><du var="start" def="337" use="334" covered="0"/><du var="start" def="337" use="334" target="339" covered="0"/><du var="start" def="337" use="334" target="335" covered="0"/><du var="start" def="337" use="335" covered="0"/><du var="end" def="334" use="335" covered="0"/><du var="end" def="334" use="337" covered="0"/><counter type="DU" missed="43" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maybeAppendComponent" desc="([Ljava/lang/String;ILjava/lang/StringBuilder;)V"><du var="components" def="352" use="352" target="352" covered="0"/><du var="components" def="352" use="352" target="358" covered="0"/><du var="components" def="352" use="352" target="353" covered="0"/><du var="components" def="352" use="352" target="358" covered="0"/><du var="components" def="352" use="356" covered="0"/><du var="i" def="352" use="352" target="352" covered="0"/><du var="i" def="352" use="352" target="358" covered="0"/><du var="i" def="352" use="352" target="353" covered="0"/><du var="i" def="352" use="352" target="358" covered="0"/><du var="i" def="352" use="356" covered="0"/><du var="newName" def="352" use="353" target="354" covered="0"/><du var="newName" def="352" use="353" target="356" covered="0"/><du var="newName" def="352" use="356" covered="0"/><du var="newName" def="352" use="354" covered="0"/><counter type="DU" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="424" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/BookmarkDoCoMoResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/URIParsedResult;"><du var="rawText" def="28" use="29" target="30" covered="0"/><du var="rawText" def="28" use="29" target="32" covered="0"/><du var="rawText" def="28" use="32" covered="0"/><du var="rawText" def="28" use="33" covered="0"/><du var="title" def="32" use="38" covered="0"/><du var="rawUri" def="33" use="34" target="35" covered="0"/><du var="rawUri" def="33" use="34" target="37" covered="0"/><du var="rawUri" def="33" use="37" covered="0"/><du var="uri" def="37" use="38" target="38" covered="0"/><du var="uri" def="37" use="38" target="38" covered="0"/><du var="uri" def="37" use="38" covered="0"/><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/ResultParser"><method name="getMassagedText" desc="(Lcom/google/zxing/Result;)Ljava/lang/String;"><du var="text" def="81" use="82" target="83" covered="0"/><du var="text" def="81" use="82" target="85" covered="0"/><du var="text" def="81" use="85" covered="0"/><du var="text" def="81" use="83" covered="0"/><du var="text" def="83" use="85" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseResult" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/ParsedResult;"><du var="theResult" def="89" use="90" covered="0"/><du var="theResult" def="89" use="95" covered="0"/><du var="result" def="90" use="91" target="92" covered="0"/><du var="result" def="90" use="91" target="89" covered="0"/><du var="result" def="90" use="92" covered="0"/><counter type="DU" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maybeAppend" desc="(Ljava/lang/String;Ljava/lang/StringBuilder;)V"><du var="value" def="99" use="99" target="100" covered="0"/><du var="value" def="99" use="99" target="103" covered="0"/><du var="value" def="99" use="101" covered="0"/><du var="result" def="99" use="100" covered="0"/><du var="result" def="99" use="101" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maybeAppend" desc="([Ljava/lang/String;Ljava/lang/StringBuilder;)V"><du var="value" def="106" use="106" target="107" covered="0"/><du var="value" def="106" use="106" target="112" covered="0"/><du var="value" def="106" use="107" covered="0"/><du var="value" def="106" use="107" covered="0"/><du var="result" def="106" use="108" covered="0"/><du var="result" def="106" use="109" covered="0"/><counter type="DU" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maybeWrap" desc="(Ljava/lang/String;)[Ljava/lang/String;"><du var="value" def="115" use="115" target="115" covered="0"/><du var="value" def="115" use="115" target="115" covered="0"/><du var="value" def="115" use="115" covered="0"/><counter type="DU" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unescapeBackslash" desc="(Ljava/lang/String;)Ljava/lang/String;"><du var="escaped" def="119" use="123" covered="0"/><du var="escaped" def="119" use="125" covered="0"/><du var="escaped" def="119" use="128" covered="0"/><du var="escaped" def="119" use="121" covered="0"/><du var="backslash" def="119" use="120" target="121" covered="0"/><du var="backslash" def="119" use="120" target="123" covered="0"/><du var="backslash" def="119" use="125" covered="0"/><du var="backslash" def="119" use="127" covered="0"/><du var="max" def="123" use="127" target="136" covered="0"/><du var="max" def="123" use="127" target="128" covered="0"/><du var="unescaped" def="124" use="130" covered="0"/><du var="unescaped" def="124" use="136" covered="0"/><du var="nextIsEscaped" def="126" use="129" target="129" covered="0"/><du var="nextIsEscaped" def="126" use="129" target="130" covered="0"/><du var="i" def="127" use="127" target="136" covered="0"/><du var="i" def="127" use="127" target="128" covered="0"/><du var="i" def="127" use="128" covered="0"/><du var="i" def="127" use="127" covered="0"/><du var="c" def="128" use="130" covered="0"/><du var="c" def="128" use="129" target="130" covered="0"/><du var="c" def="128" use="129" target="133" covered="0"/><du var="nextIsEscaped" def="131" use="129" target="129" covered="0"/><du var="nextIsEscaped" def="131" use="129" target="130" covered="0"/><du var="nextIsEscaped" def="133" use="129" target="129" covered="0"/><du var="nextIsEscaped" def="133" use="129" target="130" covered="0"/><du var="i" def="127" use="127" target="136" covered="0"/><du var="i" def="127" use="127" target="128" covered="0"/><du var="i" def="127" use="128" covered="0"/><du var="i" def="127" use="127" covered="0"/><counter type="DU" missed="29" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseHexDigit" desc="(C)I"><du var="c" def="140" use="140" target="140" covered="0"/><du var="c" def="140" use="140" target="143" covered="0"/><du var="c" def="140" use="143" target="143" covered="0"/><du var="c" def="140" use="143" target="146" covered="0"/><du var="c" def="140" use="146" target="146" covered="0"/><du var="c" def="140" use="146" target="149" covered="0"/><du var="c" def="140" use="146" target="147" covered="0"/><du var="c" def="140" use="146" target="149" covered="0"/><du var="c" def="140" use="147" covered="0"/><du var="c" def="140" use="143" target="144" covered="0"/><du var="c" def="140" use="143" target="146" covered="0"/><du var="c" def="140" use="144" covered="0"/><du var="c" def="140" use="140" target="141" covered="0"/><du var="c" def="140" use="140" target="143" covered="0"/><du var="c" def="140" use="141" covered="0"/><counter type="DU" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isStringOfDigits" desc="(Ljava/lang/CharSequence;I)Z"><du var="value" def="153" use="153" target="153" covered="0"/><du var="value" def="153" use="153" target="153" covered="0"/><du var="value" def="153" use="153" target="153" covered="0"/><du var="value" def="153" use="153" target="153" covered="0"/><du var="value" def="153" use="153" target="153" covered="0"/><du var="value" def="153" use="153" target="153" covered="0"/><du var="length" def="153" use="153" target="153" covered="0"/><du var="length" def="153" use="153" target="153" covered="0"/><du var="length" def="153" use="153" target="153" covered="0"/><du var="length" def="153" use="153" target="153" covered="0"/><du var="DIGITS" def="153" use="153" target="153" covered="0"/><du var="DIGITS" def="153" use="153" target="153" covered="0"/><counter type="DU" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSubstringOfDigits" desc="(Ljava/lang/CharSequence;II)Z"><du var="value" def="157" use="157" target="157" covered="0"/><du var="value" def="157" use="157" target="158" covered="0"/><du var="value" def="157" use="161" target="161" covered="0"/><du var="value" def="157" use="161" target="161" covered="0"/><du var="value" def="157" use="161" target="161" covered="0"/><du var="value" def="157" use="161" target="161" covered="0"/><du var="offset" def="157" use="160" covered="0"/><du var="offset" def="157" use="161" target="161" covered="0"/><du var="offset" def="157" use="161" target="161" covered="0"/><du var="length" def="157" use="157" target="158" covered="0"/><du var="length" def="157" use="157" target="160" covered="0"/><du var="length" def="157" use="160" covered="0"/><du var="DIGITS" def="157" use="161" target="161" covered="0"/><du var="DIGITS" def="157" use="161" target="161" covered="0"/><du var="max" def="160" use="161" target="161" covered="0"/><du var="max" def="160" use="161" target="161" covered="0"/><du var="max" def="160" use="161" target="161" covered="0"/><du var="max" def="160" use="161" target="161" covered="0"/><counter type="DU" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseNameValuePairs" desc="(Ljava/lang/String;)Ljava/util/Map;"><du var="uri" def="165" use="170" covered="0"/><du var="uri" def="165" use="170" covered="0"/><du var="AMPERSAND" def="165" use="170" covered="0"/><du var="AMPERSAND" def="165" use="170" covered="0"/><du var="paramStart" def="165" use="166" target="167" covered="0"/><du var="paramStart" def="165" use="166" target="169" covered="0"/><du var="paramStart" def="165" use="170" covered="0"/><du var="paramStart" def="165" use="170" covered="0"/><du var="result" def="169" use="171" covered="0"/><du var="result" def="169" use="173" covered="0"/><counter type="DU" missed="21" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendKeyValue" desc="(Ljava/lang/CharSequence;Ljava/util/Map;)V"><du var="result" def="177" use="183" covered="0"/><du var="keyValueTokens" def="177" use="178" target="179" covered="0"/><du var="keyValueTokens" def="177" use="178" target="188" covered="0"/><du var="keyValueTokens" def="177" use="179" covered="0"/><du var="keyValueTokens" def="177" use="180" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchPrefixedField" desc="(Ljava/lang/String;Ljava/lang/String;CZ)[Ljava/lang/String;"><du var="prefix" def="199" use="203" covered="0"/><du var="prefix" def="199" use="207" covered="0"/><du var="rawText" def="199" use="203" covered="0"/><du var="rawText" def="199" use="211" covered="0"/><du var="rawText" def="199" use="216" target="218" covered="0"/><du var="rawText" def="199" use="216" target="221" covered="0"/><du var="rawText" def="199" use="224" covered="0"/><du var="rawText" def="199" use="214" covered="0"/><du var="endChar" def="199" use="211" covered="0"/><du var="trim" def="199" use="225" target="226" covered="0"/><du var="trim" def="199" use="225" target="228" covered="0"/><du var="matches" def="199" use="221" target="222" covered="0"/><du var="matches" def="199" use="221" target="224" covered="0"/><du var="matches" def="199" use="229" covered="0"/><du var="matches" def="199" use="236" target="236" covered="0"/><du var="matches" def="199" use="236" target="237" covered="0"/><du var="matches" def="199" use="236" target="237" covered="0"/><du var="matches" def="199" use="236" target="239" covered="0"/><du var="matches" def="199" use="239" covered="0"/><du var="i" def="200" use="202" target="236" covered="0"/><du var="i" def="200" use="202" target="203" covered="0"/><du var="i" def="200" use="203" covered="0"/><du var="max" def="201" use="202" target="236" covered="0"/><du var="max" def="201" use="202" target="203" covered="0"/><du var="i" def="203" use="204" target="205" covered="0"/><du var="i" def="203" use="204" target="207" covered="0"/><du var="i" def="203" use="207" covered="0"/><du var="i" def="207" use="211" covered="0"/><du var="i" def="207" use="202" target="236" covered="0"/><du var="i" def="207" use="202" target="203" covered="0"/><du var="i" def="207" use="203" covered="0"/><du var="start" def="208" use="224" covered="0"/><du var="more" def="209" use="210" target="202" covered="0"/><du var="more" def="209" use="210" target="211" covered="0"/><du var="i" def="211" use="212" target="214" covered="0"/><du var="i" def="211" use="212" target="216" covered="0"/><du var="i" def="211" use="216" target="218" covered="0"/><du var="i" def="211" use="216" target="221" covered="0"/><du var="i" def="211" use="224" covered="0"/><du var="i" def="211" use="231" covered="0"/><du var="i" def="211" use="218" covered="0"/><du var="i" def="214" use="211" covered="0"/><du var="i" def="214" use="202" target="236" covered="0"/><du var="i" def="214" use="202" target="203" covered="0"/><du var="i" def="214" use="203" covered="0"/><du var="more" def="215" use="210" target="202" covered="0"/><du var="more" def="215" use="210" target="211" covered="0"/><du var="i" def="218" use="211" covered="0"/><du var="i" def="218" use="202" target="236" covered="0"/><du var="i" def="218" use="202" target="203" covered="0"/><du var="i" def="218" use="203" covered="0"/><du var="matches" def="222" use="221" target="222" covered="0"/><du var="matches" def="222" use="221" target="224" covered="0"/><du var="matches" def="222" use="236" target="236" covered="0"/><du var="matches" def="222" use="236" target="237" covered="0"/><du var="matches" def="222" use="236" target="237" covered="0"/><du var="matches" def="222" use="236" target="239" covered="0"/><du var="matches" def="222" use="239" covered="0"/><du var="matches" def="222" use="229" covered="0"/><du var="element" def="224" use="228" target="229" covered="0"/><du var="element" def="224" use="228" target="231" covered="0"/><du var="element" def="224" use="229" covered="0"/><du var="element" def="224" use="226" covered="0"/><du var="element" def="226" use="228" target="229" covered="0"/><du var="element" def="226" use="228" target="231" covered="0"/><du var="element" def="226" use="229" covered="0"/><du var="i" def="231" use="211" covered="0"/><du var="i" def="231" use="202" target="236" covered="0"/><du var="i" def="231" use="202" target="203" covered="0"/><du var="i" def="231" use="203" covered="0"/><du var="more" def="232" use="210" target="202" covered="0"/><du var="more" def="232" use="210" target="211" covered="0"/><counter type="DU" missed="72" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="countPrecedingBackslashes" desc="(Ljava/lang/CharSequence;I)I"><du var="s" def="243" use="245" target="246" covered="0"/><du var="s" def="243" use="245" target="251" covered="0"/><du var="count" def="243" use="246" covered="0"/><du var="count" def="243" use="251" covered="0"/><du var="i" def="244" use="244" target="251" covered="0"/><du var="i" def="244" use="244" target="245" covered="0"/><du var="i" def="244" use="245" target="246" covered="0"/><du var="i" def="244" use="245" target="251" covered="0"/><du var="i" def="244" use="244" covered="0"/><du var="count" def="246" use="246" covered="0"/><du var="count" def="246" use="251" covered="0"/><du var="i" def="244" use="244" target="251" covered="0"/><du var="i" def="244" use="244" target="245" covered="0"/><du var="i" def="244" use="245" target="246" covered="0"/><du var="i" def="244" use="245" target="251" covered="0"/><du var="i" def="244" use="244" covered="0"/><counter type="DU" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchSinglePrefixedField" desc="(Ljava/lang/String;Ljava/lang/String;CZ)Ljava/lang/String;"><du var="matches" def="255" use="256" target="256" covered="0"/><du var="matches" def="255" use="256" target="256" covered="0"/><du var="matches" def="255" use="256" covered="0"/><counter type="DU" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="237" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/SMSTOMMSTOResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/SMSParsedResult;"><du var="rawText" def="35" use="36" target="36" covered="0"/><du var="rawText" def="35" use="36" target="42" covered="0"/><du var="rawText" def="35" use="42" covered="0"/><du var="rawText" def="35" use="36" target="37" covered="0"/><du var="rawText" def="35" use="36" target="42" covered="0"/><du var="rawText" def="35" use="37" target="37" covered="0"/><du var="rawText" def="35" use="37" target="42" covered="0"/><du var="rawText" def="35" use="37" target="38" covered="0"/><du var="rawText" def="35" use="37" target="42" covered="0"/><du var="number" def="42" use="49" covered="0"/><du var="number" def="42" use="46" covered="0"/><du var="number" def="42" use="47" covered="0"/><du var="body" def="43" use="49" covered="0"/><du var="bodyStart" def="44" use="45" target="46" covered="0"/><du var="bodyStart" def="44" use="45" target="49" covered="0"/><du var="bodyStart" def="44" use="46" covered="0"/><du var="bodyStart" def="44" use="47" covered="0"/><du var="body" def="46" use="49" covered="0"/><du var="number" def="47" use="49" covered="0"/><counter type="DU" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/EmailAddressResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/EmailAddressParsedResult;"><du var="COMMA" def="36" use="71" covered="0"/><du var="COMMA" def="36" use="67" covered="0"/><du var="COMMA" def="36" use="62" covered="0"/><du var="COMMA" def="36" use="51" covered="0"/><du var="rawText" def="36" use="37" target="37" covered="0"/><du var="rawText" def="36" use="37" target="39" covered="0"/><du var="rawText" def="36" use="39" covered="0"/><du var="rawText" def="36" use="53" covered="0"/><du var="rawText" def="36" use="37" target="39" covered="0"/><du var="rawText" def="36" use="37" target="78" covered="0"/><du var="rawText" def="36" use="78" target="79" covered="0"/><du var="rawText" def="36" use="78" target="81" covered="0"/><du var="rawText" def="36" use="81" covered="0"/><du var="hostEmail" def="39" use="45" covered="0"/><du var="hostEmail" def="39" use="42" covered="0"/><du var="queryStart" def="40" use="41" target="42" covered="0"/><du var="queryStart" def="40" use="41" target="45" covered="0"/><du var="queryStart" def="40" use="42" covered="0"/><du var="hostEmail" def="42" use="45" covered="0"/><du var="hostEmail" def="45" use="50" target="51" covered="0"/><du var="hostEmail" def="45" use="50" target="53" covered="0"/><du var="hostEmail" def="45" use="51" covered="0"/><du var="tos" def="49" use="76" covered="0"/><du var="tos" def="49" use="59" target="60" covered="0"/><du var="tos" def="49" use="59" target="65" covered="0"/><du var="tos" def="51" use="76" covered="0"/><du var="tos" def="51" use="59" target="60" covered="0"/><du var="tos" def="51" use="59" target="65" covered="0"/><du var="nameValues" def="53" use="58" target="59" covered="0"/><du var="nameValues" def="53" use="58" target="76" covered="0"/><du var="nameValues" def="53" use="65" covered="0"/><du var="nameValues" def="53" use="69" covered="0"/><du var="nameValues" def="53" use="73" covered="0"/><du var="nameValues" def="53" use="74" covered="0"/><du var="nameValues" def="53" use="60" covered="0"/><du var="ccs" def="54" use="76" covered="0"/><du var="bccs" def="55" use="76" covered="0"/><du var="subject" def="56" use="76" covered="0"/><du var="body" def="57" use="76" covered="0"/><du var="tosString" def="60" use="61" target="62" covered="0"/><du var="tosString" def="60" use="61" target="65" covered="0"/><du var="tosString" def="60" use="62" covered="0"/><du var="tos" def="62" use="76" covered="0"/><du var="ccString" def="65" use="66" target="67" covered="0"/><du var="ccString" def="65" use="66" target="69" covered="0"/><du var="ccString" def="65" use="67" covered="0"/><du var="ccs" def="67" use="76" covered="0"/><du var="bccString" def="69" use="70" target="71" covered="0"/><du var="bccString" def="69" use="70" target="73" covered="0"/><du var="bccString" def="69" use="71" covered="0"/><du var="bccs" def="71" use="76" covered="0"/><du var="subject" def="73" use="76" covered="0"/><du var="body" def="74" use="76" covered="0"/><counter type="DU" missed="53" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="53" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/CalendarParsedResult"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;DD)V"><du var="this" def="72" use="86" covered="0"/><du var="this" def="72" use="92" covered="0"/><du var="this" def="72" use="93" covered="0"/><du var="this" def="72" use="95" covered="0"/><du var="this" def="72" use="96" covered="0"/><du var="this" def="72" use="97" covered="0"/><du var="this" def="72" use="98" covered="0"/><du var="this" def="72" use="99" covered="0"/><du var="this" def="72" use="100" covered="0"/><du var="this" def="72" use="83" covered="0"/><du var="startString" def="72" use="92" target="92" covered="0"/><du var="startString" def="72" use="92" target="92" covered="0"/><du var="endString" def="72" use="81" target="82" covered="0"/><du var="endString" def="72" use="81" target="86" covered="0"/><du var="endString" def="72" use="86" covered="0"/><du var="endString" def="72" use="93" target="93" covered="0"/><du var="endString" def="72" use="93" target="93" covered="0"/><du var="endString" def="72" use="93" target="93" covered="0"/><du var="endString" def="72" use="93" target="93" covered="0"/><du var="durationString" def="72" use="82" covered="0"/><du var="location" def="72" use="95" covered="0"/><du var="organizer" def="72" use="96" covered="0"/><du var="attendees" def="72" use="97" covered="0"/><du var="description" def="72" use="98" covered="0"/><du var="latitude" def="72" use="99" covered="0"/><du var="longitude" def="72" use="100" covered="0"/><du var="this.start" def="76" use="83" covered="0"/><du var="durationMS" def="82" use="83" target="83" covered="0"/><du var="durationMS" def="82" use="83" target="83" covered="0"/><du var="durationMS" def="82" use="83" covered="0"/><counter type="DU" missed="30" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEnd" desc="()Ljava/util/Date;"><du var="this" def="137" use="137" target="137" covered="0"/><du var="this" def="137" use="137" target="137" covered="0"/><du var="this" def="137" use="137" covered="0"/><du var="this.end" def="137" use="137" target="137" covered="0"/><du var="this.end" def="137" use="137" target="137" covered="0"/><du var="this.end" def="137" use="137" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseDate" desc="(Ljava/lang/String;)J"><du var="when" def="200" use="200" target="201" covered="0"/><du var="when" def="200" use="200" target="203" covered="0"/><du var="when" def="200" use="203" target="205" covered="0"/><du var="when" def="200" use="203" target="213" covered="0"/><du var="when" def="200" use="213" target="213" covered="0"/><du var="when" def="200" use="213" target="223" covered="0"/><du var="when" def="200" use="223" covered="0"/><du var="when" def="200" use="213" target="214" covered="0"/><du var="when" def="200" use="213" target="223" covered="0"/><du var="when" def="200" use="214" covered="0"/><du var="when" def="200" use="210" covered="0"/><du var="when" def="200" use="201" covered="0"/><du var="DATE_TIME" def="200" use="200" target="201" covered="0"/><du var="DATE_TIME" def="200" use="200" target="203" covered="0"/><du var="ENGLISH" def="200" use="205" covered="0"/><counter type="DU" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(ZJ)Ljava/lang/String;"><du var="allDay" def="227" use="230" target="231" covered="0"/><du var="allDay" def="227" use="230" target="232" covered="0"/><du var="date" def="227" use="227" target="228" covered="0"/><du var="date" def="227" use="227" target="230" covered="0"/><du var="date" def="227" use="233" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseDurationMS" desc="(Ljava/lang/CharSequence;)J"><du var="durationString" def="237" use="237" target="238" covered="0"/><du var="durationString" def="237" use="237" target="240" covered="0"/><du var="durationString" def="237" use="240" covered="0"/><du var="RFC2445_DURATION" def="237" use="240" covered="0"/><du var="RFC2445_DURATION_FIELD_UNITS" def="237" use="245" target="251" covered="0"/><du var="RFC2445_DURATION_FIELD_UNITS" def="237" use="245" target="246" covered="0"/><du var="RFC2445_DURATION_FIELD_UNITS" def="237" use="248" covered="0"/><du var="m" def="240" use="241" target="242" covered="0"/><du var="m" def="240" use="241" target="244" covered="0"/><du var="m" def="240" use="246" covered="0"/><du var="durationMS" def="244" use="248" covered="0"/><du var="durationMS" def="244" use="251" covered="0"/><du var="i" def="245" use="245" target="251" covered="0"/><du var="i" def="245" use="245" target="246" covered="0"/><du var="i" def="245" use="246" covered="0"/><du var="i" def="245" use="245" covered="0"/><du var="i" def="245" use="248" covered="0"/><du var="fieldValue" def="246" use="247" target="248" covered="0"/><du var="fieldValue" def="246" use="247" target="245" covered="0"/><du var="fieldValue" def="246" use="248" covered="0"/><du var="durationMS" def="248" use="248" covered="0"/><du var="durationMS" def="248" use="251" covered="0"/><du var="i" def="245" use="245" target="251" covered="0"/><du var="i" def="245" use="245" target="246" covered="0"/><du var="i" def="245" use="246" covered="0"/><du var="i" def="245" use="245" covered="0"/><du var="i" def="245" use="248" covered="0"/><counter type="DU" missed="27" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="83" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/EmailAddressParsedResult"><method name="getEmailAddress" desc="()Ljava/lang/String;"><du var="this" def="56" use="56" target="56" covered="0"/><du var="this" def="56" use="56" target="56" covered="0"/><du var="this" def="56" use="56" covered="0"/><du var="this" def="56" use="56" target="56" covered="0"/><du var="this" def="56" use="56" target="56" covered="0"/><du var="this.tos" def="56" use="56" target="56" covered="0"/><du var="this.tos" def="56" use="56" target="56" covered="0"/><du var="this.tos" def="56" use="56" covered="0"/><du var="this.tos" def="56" use="56" target="56" covered="0"/><du var="this.tos" def="56" use="56" target="56" covered="0"/><counter type="DU" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/ISBNResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/ISBNParsedResult;"><du var="result" def="34" use="38" covered="0"/><du var="EAN_13" def="34" use="35" target="36" covered="0"/><du var="EAN_13" def="34" use="35" target="38" covered="0"/><du var="format" def="34" use="35" target="36" covered="0"/><du var="format" def="34" use="35" target="38" covered="0"/><du var="rawText" def="38" use="43" target="43" covered="0"/><du var="rawText" def="38" use="43" target="47" covered="0"/><du var="rawText" def="38" use="47" covered="0"/><du var="rawText" def="38" use="43" target="44" covered="0"/><du var="rawText" def="38" use="43" target="47" covered="0"/><du var="length" def="39" use="40" target="41" covered="0"/><du var="length" def="39" use="40" target="43" covered="0"/><counter type="DU" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/URIResultParser"><method name="parse" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/client/result/URIParsedResult;"><du var="rawText" def="40" use="43" target="43" covered="0"/><du var="rawText" def="40" use="43" target="44" covered="0"/><du var="rawText" def="40" use="44" covered="0"/><du var="rawText" def="40" use="43" target="44" covered="0"/><du var="rawText" def="40" use="43" target="46" covered="0"/><du var="rawText" def="40" use="46" covered="0"/><du var="rawText" def="46" use="47" target="47" covered="0"/><du var="rawText" def="46" use="47" target="47" covered="0"/><du var="rawText" def="46" use="47" covered="0"/><counter type="DU" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBasicallyValidURI" desc="(Ljava/lang/String;)Z"><du var="uri" def="51" use="51" target="53" covered="0"/><du var="uri" def="51" use="51" target="55" covered="0"/><du var="uri" def="51" use="55" covered="0"/><du var="uri" def="51" use="59" covered="0"/><du var="URL_WITH_PROTOCOL_PATTERN" def="51" use="55" covered="0"/><du var="URL_WITHOUT_PROTOCOL_PATTERN" def="51" use="59" covered="0"/><du var="m" def="55" use="56" target="56" covered="0"/><du var="m" def="55" use="56" target="59" covered="0"/><du var="m" def="55" use="56" target="57" covered="0"/><du var="m" def="55" use="56" target="59" covered="0"/><du var="m" def="59" use="60" target="60" covered="0"/><du var="m" def="59" use="60" target="60" covered="0"/><du var="m" def="59" use="60" target="60" covered="0"/><du var="m" def="59" use="60" target="60" covered="0"/><counter type="DU" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="23" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/ExpandedProductParsedResult"><method name="equals" desc="(Ljava/lang/Object;)Z"><du var="this" def="95" use="101" target="102" covered="0"/><du var="this" def="95" use="101" target="101" covered="0"/><du var="this" def="95" use="102" target="103" covered="0"/><du var="this" def="95" use="102" target="101" covered="0"/><du var="this" def="95" use="103" target="104" covered="0"/><du var="this" def="95" use="103" target="101" covered="0"/><du var="this" def="95" use="104" target="105" covered="0"/><du var="this" def="95" use="104" target="101" covered="0"/><du var="this" def="95" use="105" target="106" covered="0"/><du var="this" def="95" use="105" target="101" covered="0"/><du var="this" def="95" use="106" target="107" covered="0"/><du var="this" def="95" use="106" target="101" covered="0"/><du var="this" def="95" use="107" target="108" covered="0"/><du var="this" def="95" use="107" target="101" covered="0"/><du var="this" def="95" use="108" target="109" covered="0"/><du var="this" def="95" use="108" target="101" covered="0"/><du var="this" def="95" use="109" target="110" covered="0"/><du var="this" def="95" use="109" target="101" covered="0"/><du var="this" def="95" use="110" target="111" covered="0"/><du var="this" def="95" use="110" target="101" covered="0"/><du var="this" def="95" use="111" target="112" covered="0"/><du var="this" def="95" use="111" target="101" covered="0"/><du var="this" def="95" use="112" target="113" covered="0"/><du var="this" def="95" use="112" target="101" covered="0"/><du var="this" def="95" use="113" target="101" covered="0"/><du var="this" def="95" use="113" target="101" covered="0"/><du var="o" def="95" use="95" target="96" covered="0"/><du var="o" def="95" use="95" target="99" covered="0"/><du var="o" def="95" use="99" covered="0"/><du var="this.productID" def="95" use="101" target="102" covered="0"/><du var="this.productID" def="95" use="101" target="101" covered="0"/><du var="this.sscc" def="95" use="102" target="103" covered="0"/><du var="this.sscc" def="95" use="102" target="101" covered="0"/><du var="this.lotNumber" def="95" use="103" target="104" covered="0"/><du var="this.lotNumber" def="95" use="103" target="101" covered="0"/><du var="this.productionDate" def="95" use="104" target="105" covered="0"/><du var="this.productionDate" def="95" use="104" target="101" covered="0"/><du var="this.bestBeforeDate" def="95" use="105" target="106" covered="0"/><du var="this.bestBeforeDate" def="95" use="105" target="101" covered="0"/><du var="this.expirationDate" def="95" use="106" target="107" covered="0"/><du var="this.expirationDate" def="95" use="106" target="101" covered="0"/><du var="this.weight" def="95" use="107" target="108" covered="0"/><du var="this.weight" def="95" use="107" target="101" covered="0"/><du var="this.weightType" def="95" use="108" target="109" covered="0"/><du var="this.weightType" def="95" use="108" target="101" covered="0"/><du var="this.weightIncrement" def="95" use="109" target="110" covered="0"/><du var="this.weightIncrement" def="95" use="109" target="101" covered="0"/><du var="this.price" def="95" use="110" target="111" covered="0"/><du var="this.price" def="95" use="110" target="101" covered="0"/><du var="this.priceIncrement" def="95" use="111" target="112" covered="0"/><du var="this.priceIncrement" def="95" use="111" target="101" covered="0"/><du var="this.priceCurrency" def="95" use="112" target="113" covered="0"/><du var="this.priceCurrency" def="95" use="112" target="101" covered="0"/><du var="this.uncommonAIs" def="95" use="113" target="101" covered="0"/><du var="this.uncommonAIs" def="95" use="113" target="101" covered="0"/><du var="other" def="99" use="101" target="102" covered="0"/><du var="other" def="99" use="101" target="101" covered="0"/><du var="other" def="99" use="102" target="103" covered="0"/><du var="other" def="99" use="102" target="101" covered="0"/><du var="other" def="99" use="103" target="104" covered="0"/><du var="other" def="99" use="103" target="101" covered="0"/><du var="other" def="99" use="104" target="105" covered="0"/><du var="other" def="99" use="104" target="101" covered="0"/><du var="other" def="99" use="105" target="106" covered="0"/><du var="other" def="99" use="105" target="101" covered="0"/><du var="other" def="99" use="106" target="107" covered="0"/><du var="other" def="99" use="106" target="101" covered="0"/><du var="other" def="99" use="107" target="108" covered="0"/><du var="other" def="99" use="107" target="101" covered="0"/><du var="other" def="99" use="108" target="109" covered="0"/><du var="other" def="99" use="108" target="101" covered="0"/><du var="other" def="99" use="109" target="110" covered="0"/><du var="other" def="99" use="109" target="101" covered="0"/><du var="other" def="99" use="110" target="111" covered="0"/><du var="other" def="99" use="110" target="101" covered="0"/><du var="other" def="99" use="111" target="112" covered="0"/><du var="other" def="99" use="111" target="101" covered="0"/><du var="other" def="99" use="112" target="113" covered="0"/><du var="other" def="99" use="112" target="101" covered="0"/><du var="other" def="99" use="113" target="101" covered="0"/><du var="other" def="99" use="113" target="101" covered="0"/><du var="other.productID" def="99" use="101" target="102" covered="0"/><du var="other.productID" def="99" use="101" target="101" covered="0"/><du var="other.sscc" def="99" use="102" target="103" covered="0"/><du var="other.sscc" def="99" use="102" target="101" covered="0"/><du var="other.lotNumber" def="99" use="103" target="104" covered="0"/><du var="other.lotNumber" def="99" use="103" target="101" covered="0"/><du var="other.productionDate" def="99" use="104" target="105" covered="0"/><du var="other.productionDate" def="99" use="104" target="101" covered="0"/><du var="other.bestBeforeDate" def="99" use="105" target="106" covered="0"/><du var="other.bestBeforeDate" def="99" use="105" target="101" covered="0"/><du var="other.expirationDate" def="99" use="106" target="107" covered="0"/><du var="other.expirationDate" def="99" use="106" target="101" covered="0"/><du var="other.weight" def="99" use="107" target="108" covered="0"/><du var="other.weight" def="99" use="107" target="101" covered="0"/><du var="other.weightType" def="99" use="108" target="109" covered="0"/><du var="other.weightType" def="99" use="108" target="101" covered="0"/><du var="other.weightIncrement" def="99" use="109" target="110" covered="0"/><du var="other.weightIncrement" def="99" use="109" target="101" covered="0"/><du var="other.price" def="99" use="110" target="111" covered="0"/><du var="other.price" def="99" use="110" target="101" covered="0"/><du var="other.priceIncrement" def="99" use="111" target="112" covered="0"/><du var="other.priceIncrement" def="99" use="111" target="101" covered="0"/><du var="other.priceCurrency" def="99" use="112" target="113" covered="0"/><du var="other.priceCurrency" def="99" use="112" target="101" covered="0"/><du var="other.uncommonAIs" def="99" use="113" target="101" covered="0"/><du var="other.uncommonAIs" def="99" use="113" target="101" covered="0"/><counter type="DU" missed="107" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equalsOrNull" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z"><du var="o1" def="117" use="117" target="117" covered="0"/><du var="o1" def="117" use="117" target="117" covered="0"/><du var="o1" def="117" use="117" covered="0"/><du var="o2" def="117" use="117" covered="0"/><du var="o2" def="117" use="117" target="117" covered="0"/><du var="o2" def="117" use="117" target="117" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashNotNull" desc="(Ljava/lang/Object;)I"><du var="o" def="140" use="140" target="140" covered="0"/><du var="o" def="140" use="140" target="140" covered="0"/><du var="o" def="140" use="140" covered="0"/><counter type="DU" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="116" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/client/result/ParsedResult"><method name="maybeAppend" desc="(Ljava/lang/String;Ljava/lang/StringBuilder;)V"><du var="value" def="50" use="50" target="50" covered="0"/><du var="value" def="50" use="50" target="57" covered="0"/><du var="value" def="50" use="50" target="52" covered="0"/><du var="value" def="50" use="50" target="57" covered="0"/><du var="value" def="50" use="55" covered="0"/><du var="result" def="50" use="52" target="53" covered="0"/><du var="result" def="50" use="52" target="55" covered="0"/><du var="result" def="50" use="55" covered="0"/><du var="result" def="50" use="53" covered="0"/><counter type="DU" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maybeAppend" desc="([Ljava/lang/String;Ljava/lang/StringBuilder;)V"><du var="values" def="60" use="60" target="61" covered="0"/><du var="values" def="60" use="60" target="65" covered="0"/><du var="values" def="60" use="61" covered="0"/><du var="values" def="60" use="61" covered="0"/><du var="result" def="60" use="62" covered="0"/><counter type="DU" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="25" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/RGBLuminanceSource"><method name="&lt;init&gt;" desc="(II[I)V"><du var="this" def="35" use="54" covered="1"/><du var="pixels" def="35" use="49" covered="1"/><du var="size" def="46" use="48" target="56" covered="1"/><du var="size" def="46" use="48" target="49" covered="1"/><du var="this.luminances" def="47" use="54" covered="1"/><du var="offset" def="48" use="48" target="56" covered="0"/><du var="offset" def="48" use="48" target="49" covered="1"/><du var="offset" def="48" use="49" covered="1"/><du var="offset" def="48" use="54" covered="1"/><du var="offset" def="48" use="48" covered="1"/><du var="offset" def="48" use="48" target="56" covered="1"/><du var="offset" def="48" use="48" target="49" covered="1"/><du var="offset" def="48" use="49" covered="1"/><du var="offset" def="48" use="54" covered="1"/><du var="offset" def="48" use="48" covered="1"/><counter type="DU" missed="1" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([BIIIIII)V"><du var="this" def="65" use="69" covered="0"/><du var="this" def="65" use="70" covered="0"/><du var="this" def="65" use="71" covered="0"/><du var="this" def="65" use="72" covered="0"/><du var="this" def="65" use="73" covered="0"/><du var="pixels" def="65" use="69" covered="0"/><du var="dataWidth" def="65" use="66" target="66" covered="0"/><du var="dataWidth" def="65" use="66" target="67" covered="0"/><du var="dataWidth" def="65" use="70" covered="0"/><du var="dataHeight" def="65" use="66" target="67" covered="0"/><du var="dataHeight" def="65" use="66" target="69" covered="0"/><du var="dataHeight" def="65" use="71" covered="0"/><du var="left" def="65" use="66" target="66" covered="0"/><du var="left" def="65" use="66" target="67" covered="0"/><du var="left" def="65" use="72" covered="0"/><du var="top" def="65" use="66" target="67" covered="0"/><du var="top" def="65" use="66" target="69" covered="0"/><du var="top" def="65" use="73" covered="0"/><du var="width" def="65" use="66" target="66" covered="0"/><du var="width" def="65" use="66" target="67" covered="0"/><du var="height" def="65" use="66" target="67" covered="0"/><du var="height" def="65" use="66" target="69" covered="0"/><counter type="DU" missed="22" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRow" desc="(I[B)[B"><du var="this" def="78" use="78" target="79" covered="0"/><du var="this" def="78" use="78" target="81" covered="0"/><du var="this" def="78" use="81" covered="0"/><du var="this" def="78" use="85" covered="0"/><du var="this" def="78" use="86" covered="0"/><du var="y" def="78" use="78" target="78" covered="0"/><du var="y" def="78" use="78" target="79" covered="0"/><du var="y" def="78" use="79" covered="0"/><du var="y" def="78" use="78" target="79" covered="0"/><du var="y" def="78" use="78" target="81" covered="0"/><du var="y" def="78" use="85" covered="0"/><du var="row" def="78" use="82" target="82" covered="0"/><du var="row" def="78" use="82" target="83" covered="0"/><du var="row" def="78" use="82" target="83" covered="0"/><du var="row" def="78" use="82" target="85" covered="0"/><du var="row" def="78" use="86" covered="0"/><du var="row" def="78" use="87" covered="0"/><du var="this.top" def="78" use="85" covered="0"/><du var="this.dataWidth" def="78" use="85" covered="0"/><du var="this.left" def="78" use="85" covered="0"/><du var="this.luminances" def="78" use="86" covered="0"/><du var="width" def="81" use="83" covered="0"/><du var="width" def="81" use="86" covered="0"/><du var="width" def="81" use="82" target="83" covered="0"/><du var="width" def="81" use="82" target="85" covered="0"/><du var="row" def="83" use="86" covered="0"/><du var="row" def="83" use="87" covered="0"/><counter type="DU" missed="27" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMatrix" desc="()[B"><du var="this" def="92" use="97" target="97" covered="0"/><du var="this" def="92" use="97" target="101" covered="0"/><du var="this" def="92" use="103" covered="0"/><du var="this" def="92" use="106" target="107" covered="0"/><du var="this" def="92" use="106" target="112" covered="0"/><du var="this" def="92" use="114" covered="0"/><du var="this" def="92" use="115" covered="0"/><du var="this" def="92" use="107" covered="0"/><du var="this" def="92" use="97" target="98" covered="0"/><du var="this" def="92" use="97" target="101" covered="0"/><du var="this" def="92" use="98" covered="0"/><du var="this.dataWidth" def="92" use="97" target="97" covered="0"/><du var="this.dataWidth" def="92" use="97" target="101" covered="0"/><du var="this.dataWidth" def="92" use="103" covered="0"/><du var="this.dataWidth" def="92" use="106" target="107" covered="0"/><du var="this.dataWidth" def="92" use="106" target="112" covered="0"/><du var="this.dataWidth" def="92" use="115" covered="0"/><du var="this.dataHeight" def="92" use="97" target="98" covered="0"/><du var="this.dataHeight" def="92" use="97" target="101" covered="0"/><du var="this.luminances" def="92" use="114" covered="0"/><du var="this.luminances" def="92" use="107" covered="0"/><du var="this.luminances" def="92" use="98" covered="0"/><du var="this.top" def="92" use="103" covered="0"/><du var="this.left" def="92" use="103" covered="0"/><du var="width" def="92" use="97" target="97" covered="0"/><du var="width" def="92" use="97" target="101" covered="0"/><du var="width" def="92" use="101" covered="0"/><du var="width" def="92" use="106" target="107" covered="0"/><du var="width" def="92" use="106" target="112" covered="0"/><du var="width" def="92" use="113" covered="0"/><du var="width" def="92" use="114" covered="0"/><du var="height" def="93" use="101" covered="0"/><du var="height" def="93" use="112" target="117" covered="0"/><du var="height" def="93" use="112" target="113" covered="0"/><du var="height" def="93" use="97" target="98" covered="0"/><du var="height" def="93" use="97" target="101" covered="0"/><du var="area" def="101" use="107" covered="0"/><du var="matrix" def="102" use="114" covered="0"/><du var="matrix" def="102" use="117" covered="0"/><du var="matrix" def="102" use="107" covered="0"/><du var="matrix" def="102" use="108" covered="0"/><du var="inputOffset" def="103" use="114" covered="0"/><du var="inputOffset" def="103" use="115" covered="0"/><du var="inputOffset" def="103" use="107" covered="0"/><du var="y" def="112" use="112" target="117" covered="0"/><du var="y" def="112" use="112" target="113" covered="0"/><du var="y" def="112" use="113" covered="0"/><du var="y" def="112" use="112" covered="0"/><du var="inputOffset" def="115" use="114" covered="0"/><du var="inputOffset" def="115" use="115" covered="0"/><du var="y" def="112" use="112" target="117" covered="0"/><du var="y" def="112" use="112" target="113" covered="0"/><du var="y" def="112" use="113" covered="0"/><du var="y" def="112" use="112" covered="0"/><counter type="DU" missed="54" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="104" covered="14"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/oned/UPCEANExtension2Support"><method name="decodeRow" desc="(ILcom/google/zxing/common/BitArray;[I)Lcom/google/zxing/Result;"><du var="extensionData" def="44" use="54" target="55" covered="0"/><du var="extensionData" def="44" use="54" target="57" covered="0"/><du var="extensionData" def="44" use="55" covered="0"/><du var="extensionResult" def="46" use="57" covered="0"/><du var="extensionResult" def="46" use="55" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeMiddle" desc="(Lcom/google/zxing/common/BitArray;[ILjava/lang/StringBuilder;)I"><du var="row" def="61" use="72" covered="0"/><du var="row" def="61" use="82" covered="0"/><du var="row" def="61" use="83" covered="0"/><du var="resultString" def="61" use="87" target="88" covered="0"/><du var="resultString" def="61" use="87" target="91" covered="0"/><du var="resultString" def="61" use="91" target="92" covered="0"/><du var="resultString" def="61" use="91" target="95" covered="0"/><du var="resultString" def="61" use="73" covered="0"/><du var="L_AND_G_PATTERNS" def="61" use="72" covered="0"/><du var="counters" def="61" use="72" covered="0"/><du var="counters" def="61" use="74" covered="0"/><du var="counters" def="61" use="74" covered="0"/><du var="end" def="66" use="71" target="87" covered="0"/><du var="end" def="66" use="71" target="72" covered="0"/><du var="rowOffset" def="67" use="95" covered="0"/><du var="rowOffset" def="67" use="71" target="87" covered="0"/><du var="rowOffset" def="67" use="71" target="72" covered="0"/><du var="rowOffset" def="67" use="72" covered="0"/><du var="rowOffset" def="67" use="75" covered="0"/><du var="rowOffset" def="67" use="82" covered="0"/><du var="checkParity" def="69" use="91" target="92" covered="0"/><du var="checkParity" def="69" use="91" target="95" covered="0"/><du var="checkParity" def="69" use="78" covered="0"/><du var="x" def="71" use="71" target="71" covered="0"/><du var="x" def="71" use="71" target="87" covered="0"/><du var="x" def="71" use="80" target="82" covered="0"/><du var="x" def="71" use="80" target="71" covered="0"/><du var="x" def="71" use="71" covered="0"/><du var="x" def="71" use="78" covered="0"/><du var="bestMatch" def="72" use="77" target="78" covered="0"/><du var="bestMatch" def="72" use="77" target="80" covered="0"/><du var="rowOffset" def="75" use="75" covered="0"/><du var="rowOffset" def="75" use="95" covered="0"/><du var="rowOffset" def="75" use="71" target="87" covered="0"/><du var="rowOffset" def="75" use="71" target="72" covered="0"/><du var="rowOffset" def="75" use="72" covered="0"/><du var="rowOffset" def="75" use="82" covered="0"/><du var="checkParity" def="78" use="91" target="92" covered="0"/><du var="checkParity" def="78" use="91" target="95" covered="0"/><du var="checkParity" def="78" use="78" covered="0"/><du var="rowOffset" def="83" use="95" covered="0"/><du var="rowOffset" def="83" use="71" target="87" covered="0"/><du var="rowOffset" def="83" use="71" target="72" covered="0"/><du var="rowOffset" def="83" use="72" covered="0"/><du var="rowOffset" def="83" use="75" covered="0"/><du var="rowOffset" def="83" use="82" covered="0"/><du var="x" def="71" use="71" target="71" covered="0"/><du var="x" def="71" use="71" target="87" covered="0"/><du var="x" def="71" use="80" target="82" covered="0"/><du var="x" def="71" use="80" target="71" covered="0"/><du var="x" def="71" use="71" covered="0"/><du var="x" def="71" use="78" covered="0"/><counter type="DU" missed="63" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseExtensionString" desc="(Ljava/lang/String;)Ljava/util/Map;"><du var="raw" def="104" use="104" target="105" covered="0"/><du var="raw" def="104" use="104" target="107" covered="0"/><du var="raw" def="104" use="108" covered="0"/><du var="ISSUE_NUMBER" def="104" use="108" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="72" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/EAN8Reader"><method name="decodeMiddle" desc="(Lcom/google/zxing/common/BitArray;[ILjava/lang/StringBuilder;)I"><du var="row" def="40" use="56" covered="0"/><du var="row" def="40" use="60" covered="0"/><du var="row" def="40" use="49" covered="0"/><du var="result" def="40" use="61" covered="0"/><du var="result" def="40" use="50" covered="0"/><du var="L_PATTERNS" def="40" use="60" covered="0"/><du var="L_PATTERNS" def="40" use="49" covered="0"/><du var="MIDDLE_PATTERN" def="40" use="56" covered="0"/><du var="counters" def="40" use="60" covered="0"/><du var="counters" def="40" use="62" covered="0"/><du var="counters" def="40" use="62" covered="0"/><du var="counters" def="40" use="49" covered="0"/><du var="counters" def="40" use="51" covered="0"/><du var="counters" def="40" use="51" covered="0"/><du var="end" def="45" use="59" target="67" covered="0"/><du var="end" def="45" use="59" target="60" covered="0"/><du var="end" def="45" use="48" target="56" covered="0"/><du var="end" def="45" use="48" target="49" covered="0"/><du var="rowOffset" def="46" use="56" covered="0"/><du var="rowOffset" def="46" use="48" target="56" covered="0"/><du var="rowOffset" def="46" use="48" target="49" covered="0"/><du var="rowOffset" def="46" use="49" covered="0"/><du var="rowOffset" def="46" use="52" covered="0"/><du var="x" def="48" use="48" target="48" covered="0"/><du var="x" def="48" use="48" target="56" covered="0"/><du var="x" def="48" use="48" covered="0"/><du var="rowOffset" def="52" use="52" covered="0"/><du var="rowOffset" def="52" use="56" covered="0"/><du var="rowOffset" def="52" use="48" target="56" covered="0"/><du var="rowOffset" def="52" use="48" target="49" covered="0"/><du var="rowOffset" def="52" use="49" covered="0"/><du var="x" def="48" use="48" target="48" covered="0"/><du var="x" def="48" use="48" target="56" covered="0"/><du var="x" def="48" use="48" covered="0"/><du var="rowOffset" def="57" use="67" covered="0"/><du var="rowOffset" def="57" use="59" target="67" covered="0"/><du var="rowOffset" def="57" use="59" target="60" covered="0"/><du var="rowOffset" def="57" use="60" covered="0"/><du var="rowOffset" def="57" use="63" covered="0"/><du var="x" def="59" use="59" target="59" covered="0"/><du var="x" def="59" use="59" target="67" covered="0"/><du var="x" def="59" use="59" covered="0"/><du var="rowOffset" def="63" use="63" covered="0"/><du var="rowOffset" def="63" use="67" covered="0"/><du var="rowOffset" def="63" use="59" target="67" covered="0"/><du var="rowOffset" def="63" use="59" target="60" covered="0"/><du var="rowOffset" def="63" use="60" covered="0"/><du var="x" def="59" use="59" target="59" covered="0"/><du var="x" def="59" use="59" target="67" covered="0"/><du var="x" def="59" use="59" covered="0"/><counter type="DU" missed="72" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="72" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/MultiFormatOneDReader"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V"><du var="this" def="41" use="87" covered="0"/><du var="hints" def="41" use="43" target="43" covered="0"/><du var="hints" def="41" use="43" target="44" covered="0"/><du var="hints" def="41" use="43" covered="0"/><du var="hints" def="41" use="45" target="46" covered="0"/><du var="hints" def="41" use="45" target="45" covered="0"/><du var="hints" def="41" use="78" covered="0"/><du var="hints" def="41" use="53" covered="0"/><du var="hints" def="41" use="46" target="45" covered="0"/><du var="hints" def="41" use="46" target="45" covered="0"/><du var="POSSIBLE_FORMATS" def="41" use="43" covered="0"/><du var="ASSUME_CODE_39_CHECK_DIGIT" def="41" use="46" target="45" covered="0"/><du var="ASSUME_CODE_39_CHECK_DIGIT" def="41" use="46" target="45" covered="0"/><du var="EAN_13" def="41" use="49" target="50" covered="0"/><du var="EAN_13" def="41" use="49" target="53" covered="0"/><du var="UPC_A" def="41" use="50" target="51" covered="0"/><du var="UPC_A" def="41" use="50" target="53" covered="0"/><du var="EAN_8" def="41" use="51" target="52" covered="0"/><du var="EAN_8" def="41" use="51" target="53" covered="0"/><du var="UPC_E" def="41" use="52" target="53" covered="0"/><du var="UPC_E" def="41" use="52" target="55" covered="0"/><du var="CODE_39" def="41" use="55" target="56" covered="0"/><du var="CODE_39" def="41" use="55" target="58" covered="0"/><du var="CODE_93" def="41" use="58" target="59" covered="0"/><du var="CODE_93" def="41" use="58" target="61" covered="0"/><du var="CODE_128" def="41" use="61" target="62" covered="0"/><du var="CODE_128" def="41" use="61" target="64" covered="0"/><du var="ITF" def="41" use="64" target="65" covered="0"/><du var="ITF" def="41" use="64" target="67" covered="0"/><du var="CODABAR" def="41" use="67" target="68" covered="0"/><du var="CODABAR" def="41" use="67" target="70" covered="0"/><du var="RSS_14" def="41" use="70" target="71" covered="0"/><du var="RSS_14" def="41" use="70" target="73" covered="0"/><du var="RSS_EXPANDED" def="41" use="73" target="74" covered="0"/><du var="RSS_EXPANDED" def="41" use="73" target="77" covered="0"/><du var="possibleFormats" def="43" use="48" target="49" covered="0"/><du var="possibleFormats" def="43" use="48" target="77" covered="0"/><du var="possibleFormats" def="43" use="49" target="50" covered="0"/><du var="possibleFormats" def="43" use="49" target="53" covered="0"/><du var="possibleFormats" def="43" use="55" target="56" covered="0"/><du var="possibleFormats" def="43" use="55" target="58" covered="0"/><du var="possibleFormats" def="43" use="58" target="59" covered="0"/><du var="possibleFormats" def="43" use="58" target="61" covered="0"/><du var="possibleFormats" def="43" use="61" target="62" covered="0"/><du var="possibleFormats" def="43" use="61" target="64" covered="0"/><du var="possibleFormats" def="43" use="64" target="65" covered="0"/><du var="possibleFormats" def="43" use="64" target="67" covered="0"/><du var="possibleFormats" def="43" use="67" target="68" covered="0"/><du var="possibleFormats" def="43" use="67" target="70" covered="0"/><du var="possibleFormats" def="43" use="70" target="71" covered="0"/><du var="possibleFormats" def="43" use="70" target="73" covered="0"/><du var="possibleFormats" def="43" use="73" target="74" covered="0"/><du var="possibleFormats" def="43" use="73" target="77" covered="0"/><du var="possibleFormats" def="43" use="50" target="51" covered="0"/><du var="possibleFormats" def="43" use="50" target="53" covered="0"/><du var="possibleFormats" def="43" use="51" target="52" covered="0"/><du var="possibleFormats" def="43" use="51" target="53" covered="0"/><du var="possibleFormats" def="43" use="52" target="53" covered="0"/><du var="possibleFormats" def="43" use="52" target="55" covered="0"/><du var="useCode39CheckDigit" def="45" use="56" covered="0"/><du var="readers" def="47" use="77" target="78" covered="0"/><du var="readers" def="47" use="77" target="87" covered="0"/><du var="readers" def="47" use="87" covered="0"/><du var="readers" def="47" use="78" covered="0"/><du var="readers" def="47" use="79" covered="0"/><du var="readers" def="47" use="80" covered="0"/><du var="readers" def="47" use="81" covered="0"/><du var="readers" def="47" use="82" covered="0"/><du var="readers" def="47" use="83" covered="0"/><du var="readers" def="47" use="84" covered="0"/><du var="readers" def="47" use="85" covered="0"/><du var="readers" def="47" use="53" covered="0"/><du var="readers" def="47" use="74" covered="0"/><du var="readers" def="47" use="71" covered="0"/><du var="readers" def="47" use="68" covered="0"/><du var="readers" def="47" use="65" covered="0"/><du var="readers" def="47" use="62" covered="0"/><du var="readers" def="47" use="59" covered="0"/><du var="readers" def="47" use="56" covered="0"/><counter type="DU" missed="79" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeRow" desc="(ILcom/google/zxing/common/BitArray;Ljava/util/Map;)Lcom/google/zxing/Result;"><du var="rowNumber" def="94" use="96" covered="0"/><du var="row" def="94" use="96" covered="0"/><du var="hints" def="94" use="96" covered="0"/><counter type="DU" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V"><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="99" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/rss/AbstractRSSReader"><method name="parseFinderValue" desc="([I[[I)I"><du var="counters" def="77" use="79" target="80" covered="0"/><du var="counters" def="77" use="79" target="77" covered="0"/><du var="finderPatterns" def="77" use="77" target="83" covered="0"/><du var="finderPatterns" def="77" use="77" target="78" covered="0"/><du var="finderPatterns" def="77" use="79" target="80" covered="0"/><du var="finderPatterns" def="77" use="79" target="77" covered="0"/><du var="value" def="77" use="77" target="83" covered="0"/><du var="value" def="77" use="77" target="78" covered="0"/><du var="value" def="77" use="79" target="80" covered="0"/><du var="value" def="77" use="79" target="77" covered="0"/><du var="value" def="77" use="77" covered="0"/><du var="value" def="77" use="80" covered="0"/><du var="value" def="77" use="77" target="83" covered="0"/><du var="value" def="77" use="77" target="78" covered="0"/><du var="value" def="77" use="79" target="80" covered="0"/><du var="value" def="77" use="79" target="77" covered="0"/><du var="value" def="77" use="77" covered="0"/><du var="value" def="77" use="80" covered="0"/><counter type="DU" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="increment" desc="([I[F)V"><du var="array" def="97" use="99" target="105" covered="0"/><du var="array" def="97" use="99" target="100" covered="0"/><du var="array" def="97" use="105" covered="0"/><du var="errors" def="97" use="100" target="101" covered="0"/><du var="errors" def="97" use="100" target="99" covered="0"/><du var="errors" def="97" use="101" covered="0"/><du var="index" def="97" use="105" covered="0"/><du var="biggestError" def="98" use="100" target="101" covered="0"/><du var="biggestError" def="98" use="100" target="99" covered="0"/><du var="i" def="99" use="99" target="105" covered="0"/><du var="i" def="99" use="99" target="100" covered="0"/><du var="i" def="99" use="100" target="101" covered="0"/><du var="i" def="99" use="100" target="99" covered="0"/><du var="i" def="99" use="99" covered="0"/><du var="i" def="99" use="101" covered="0"/><du var="i" def="99" use="102" covered="0"/><du var="biggestError" def="101" use="100" target="101" covered="0"/><du var="biggestError" def="101" use="100" target="99" covered="0"/><du var="index" def="102" use="105" covered="0"/><du var="i" def="99" use="99" target="105" covered="0"/><du var="i" def="99" use="99" target="100" covered="0"/><du var="i" def="99" use="100" target="101" covered="0"/><du var="i" def="99" use="100" target="99" covered="0"/><du var="i" def="99" use="99" covered="0"/><du var="i" def="99" use="101" covered="0"/><du var="i" def="99" use="102" covered="0"/><counter type="DU" missed="26" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decrement" desc="([I[F)V"><du var="array" def="109" use="111" target="117" covered="0"/><du var="array" def="109" use="111" target="112" covered="0"/><du var="array" def="109" use="117" covered="0"/><du var="errors" def="109" use="112" target="113" covered="0"/><du var="errors" def="109" use="112" target="111" covered="0"/><du var="errors" def="109" use="113" covered="0"/><du var="index" def="109" use="117" covered="0"/><du var="biggestError" def="110" use="112" target="113" covered="0"/><du var="biggestError" def="110" use="112" target="111" covered="0"/><du var="i" def="111" use="111" target="117" covered="0"/><du var="i" def="111" use="111" target="112" covered="0"/><du var="i" def="111" use="112" target="113" covered="0"/><du var="i" def="111" use="112" target="111" covered="0"/><du var="i" def="111" use="111" covered="0"/><du var="i" def="111" use="113" covered="0"/><du var="i" def="111" use="114" covered="0"/><du var="biggestError" def="113" use="112" target="113" covered="0"/><du var="biggestError" def="113" use="112" target="111" covered="0"/><du var="index" def="114" use="117" covered="0"/><du var="i" def="111" use="111" target="117" covered="0"/><du var="i" def="111" use="111" target="112" covered="0"/><du var="i" def="111" use="112" target="113" covered="0"/><du var="i" def="111" use="112" target="111" covered="0"/><du var="i" def="111" use="111" covered="0"/><du var="i" def="111" use="113" covered="0"/><du var="i" def="111" use="114" covered="0"/><counter type="DU" missed="26" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFinderPattern" desc="([I)Z"><du var="counters" def="121" use="128" covered="0"/><du var="counters" def="121" use="128" covered="0"/><du var="ratio" def="123" use="124" target="124" covered="0"/><du var="ratio" def="123" use="124" target="138" covered="0"/><du var="ratio" def="123" use="124" target="126" covered="0"/><du var="ratio" def="123" use="124" target="138" covered="0"/><du var="minCounter" def="126" use="132" target="133" covered="0"/><du var="minCounter" def="126" use="132" target="128" covered="0"/><du var="minCounter" def="126" use="136" target="136" covered="0"/><du var="minCounter" def="126" use="136" target="136" covered="0"/><du var="maxCounter" def="127" use="129" target="130" covered="0"/><du var="maxCounter" def="127" use="129" target="132" covered="0"/><du var="maxCounter" def="127" use="136" target="136" covered="0"/><du var="maxCounter" def="127" use="136" target="136" covered="0"/><du var="counter" def="128" use="129" target="130" covered="0"/><du var="counter" def="128" use="129" target="132" covered="0"/><du var="counter" def="128" use="132" target="133" covered="0"/><du var="counter" def="128" use="132" target="128" covered="0"/><du var="counter" def="128" use="133" covered="0"/><du var="counter" def="128" use="130" covered="0"/><du var="maxCounter" def="130" use="129" target="130" covered="0"/><du var="maxCounter" def="130" use="129" target="132" covered="0"/><du var="maxCounter" def="130" use="136" target="136" covered="0"/><du var="maxCounter" def="130" use="136" target="136" covered="0"/><du var="minCounter" def="133" use="132" target="133" covered="0"/><du var="minCounter" def="133" use="132" target="128" covered="0"/><du var="minCounter" def="133" use="136" target="136" covered="0"/><du var="minCounter" def="133" use="136" target="136" covered="0"/><counter type="DU" missed="39" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="109" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/rss/expanded/ExpandedRow"><method name="equals" desc="(Ljava/lang/Object;)Z"><du var="this" def="64" use="68" target="68" covered="0"/><du var="this" def="64" use="68" target="68" covered="0"/><du var="this" def="64" use="68" target="68" covered="0"/><du var="this" def="64" use="68" target="68" covered="0"/><du var="o" def="64" use="64" target="65" covered="0"/><du var="o" def="64" use="64" target="67" covered="0"/><du var="o" def="64" use="67" covered="0"/><du var="this.pairs" def="64" use="68" target="68" covered="0"/><du var="this.pairs" def="64" use="68" target="68" covered="0"/><du var="this.wasReversed" def="64" use="68" target="68" covered="0"/><du var="this.wasReversed" def="64" use="68" target="68" covered="0"/><du var="that" def="67" use="68" target="68" covered="0"/><du var="that" def="67" use="68" target="68" covered="0"/><du var="that" def="67" use="68" target="68" covered="0"/><du var="that" def="67" use="68" target="68" covered="0"/><du var="that.wasReversed" def="67" use="68" target="68" covered="0"/><du var="that.wasReversed" def="67" use="68" target="68" covered="0"/><counter type="DU" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/rss/expanded/decoders/CurrentParsingState"><method name="isAlpha" desc="()Z"><du var="this" def="61" use="61" target="61" covered="1"/><du var="this" def="61" use="61" target="61" covered="1"/><du var="ALPHA" def="61" use="61" target="61" covered="1"/><du var="ALPHA" def="61" use="61" target="61" covered="1"/><du var="this.encoding" def="61" use="61" target="61" covered="1"/><du var="this.encoding" def="61" use="61" target="61" covered="1"/><counter type="DU" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNumeric" desc="()Z"><du var="this" def="65" use="65" target="65" covered="0"/><du var="this" def="65" use="65" target="65" covered="0"/><du var="NUMERIC" def="65" use="65" target="65" covered="0"/><du var="NUMERIC" def="65" use="65" target="65" covered="0"/><du var="this.encoding" def="65" use="65" target="65" covered="0"/><du var="this.encoding" def="65" use="65" target="65" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isIsoIec646" desc="()Z"><du var="this" def="69" use="69" target="69" covered="1"/><du var="this" def="69" use="69" target="69" covered="1"/><du var="ISO_IEC_646" def="69" use="69" target="69" covered="1"/><du var="ISO_IEC_646" def="69" use="69" target="69" covered="1"/><du var="this.encoding" def="69" use="69" target="69" covered="1"/><du var="this.encoding" def="69" use="69" target="69" covered="1"/><counter type="DU" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="6" covered="12"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/oned/rss/expanded/decoders/DecodedNumeric"><method name="&lt;init&gt;" desc="(III)V"><du var="this" def="43" use="49" covered="1"/><du var="this" def="43" use="50" covered="1"/><du var="firstDigit" def="43" use="45" target="45" covered="1"/><du var="firstDigit" def="43" use="45" target="46" covered="0"/><du var="firstDigit" def="43" use="45" target="45" covered="1"/><du var="firstDigit" def="43" use="45" target="46" covered="0"/><du var="firstDigit" def="43" use="49" covered="1"/><du var="secondDigit" def="43" use="45" target="45" covered="1"/><du var="secondDigit" def="43" use="45" target="46" covered="0"/><du var="secondDigit" def="43" use="45" target="46" covered="0"/><du var="secondDigit" def="43" use="45" target="49" covered="1"/><du var="secondDigit" def="43" use="50" covered="1"/><counter type="DU" missed="4" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFirstDigitFNC1" desc="()Z"><du var="this" def="66" use="66" target="66" covered="0"/><du var="this" def="66" use="66" target="66" covered="1"/><du var="this.firstDigit" def="66" use="66" target="66" covered="0"/><du var="this.firstDigit" def="66" use="66" target="66" covered="1"/><counter type="DU" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSecondDigitFNC1" desc="()Z"><du var="this" def="70" use="70" target="70" covered="1"/><du var="this" def="70" use="70" target="70" covered="1"/><du var="this.secondDigit" def="70" use="70" target="70" covered="1"/><du var="this.secondDigit" def="70" use="70" target="70" covered="1"/><counter type="DU" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAnyFNC1" desc="()Z"><du var="this" def="74" use="74" target="74" covered="0"/><du var="this" def="74" use="74" target="74" covered="0"/><du var="this" def="74" use="74" target="74" covered="0"/><du var="this" def="74" use="74" target="74" covered="0"/><du var="this.firstDigit" def="74" use="74" target="74" covered="0"/><du var="this.firstDigit" def="74" use="74" target="74" covered="0"/><du var="this.secondDigit" def="74" use="74" target="74" covered="0"/><du var="this.secondDigit" def="74" use="74" target="74" covered="0"/><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="14" covered="14"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/oned/rss/expanded/decoders/FieldParser"><method name="parseFieldsInGeneralPurpose" desc="(Ljava/lang/String;)Ljava/lang/String;"><du var="rawInformation" def="194" use="194" target="195" covered="1"/><du var="rawInformation" def="194" use="194" target="200" covered="1"/><du var="rawInformation" def="194" use="200" target="201" covered="0"/><du var="rawInformation" def="194" use="200" target="204" covered="1"/><du var="rawInformation" def="194" use="204" covered="1"/><du var="rawInformation" def="194" use="211" covered="1"/><du var="rawInformation" def="194" use="209" covered="1"/><du var="rawInformation" def="194" use="215" target="216" covered="0"/><du var="rawInformation" def="194" use="215" target="219" covered="1"/><du var="rawInformation" def="194" use="219" covered="1"/><du var="rawInformation" def="194" use="226" covered="0"/><du var="rawInformation" def="194" use="224" covered="0"/><du var="rawInformation" def="194" use="236" covered="1"/><du var="rawInformation" def="194" use="234" covered="0"/><du var="rawInformation" def="194" use="240" target="241" covered="0"/><du var="rawInformation" def="194" use="240" target="244" covered="0"/><du var="rawInformation" def="194" use="244" covered="0"/><du var="rawInformation" def="194" use="251" covered="0"/><du var="rawInformation" def="194" use="249" covered="0"/><du var="TWO_DIGIT_DATA_LENGTH" def="194" use="206" covered="1"/><du var="TWO_DIGIT_DATA_LENGTH" def="194" use="206" covered="1"/><du var="VARIABLE_LENGTH" def="194" use="208" target="209" covered="1"/><du var="VARIABLE_LENGTH" def="194" use="208" target="211" covered="1"/><du var="VARIABLE_LENGTH" def="194" use="223" target="224" covered="0"/><du var="VARIABLE_LENGTH" def="194" use="223" target="226" covered="0"/><du var="VARIABLE_LENGTH" def="194" use="233" target="234" covered="0"/><du var="VARIABLE_LENGTH" def="194" use="233" target="236" covered="1"/><du var="VARIABLE_LENGTH" def="194" use="248" target="249" covered="0"/><du var="VARIABLE_LENGTH" def="194" use="248" target="251" covered="0"/><du var="THREE_DIGIT_DATA_LENGTH" def="194" use="221" covered="1"/><du var="THREE_DIGIT_DATA_LENGTH" def="194" use="221" covered="1"/><du var="THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH" def="194" use="231" covered="1"/><du var="THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH" def="194" use="231" covered="1"/><du var="FOUR_DIGIT_DATA_LENGTH" def="194" use="246" covered="0"/><du var="FOUR_DIGIT_DATA_LENGTH" def="194" use="246" covered="0"/><du var="firstTwoDigits" def="204" use="207" target="208" covered="1"/><du var="firstTwoDigits" def="204" use="207" target="206" covered="1"/><du var="dataLength" def="206" use="207" target="208" covered="1"/><du var="dataLength" def="206" use="207" target="206" covered="1"/><du var="dataLength" def="206" use="208" target="209" covered="1"/><du var="dataLength" def="206" use="208" target="211" covered="1"/><du var="dataLength" def="206" use="211" covered="1"/><du var="dataLength" def="206" use="209" covered="1"/><du var="firstThreeDigits" def="219" use="222" target="223" covered="0"/><du var="firstThreeDigits" def="219" use="222" target="221" covered="1"/><du var="firstThreeDigits" def="219" use="232" target="233" covered="1"/><du var="firstThreeDigits" def="219" use="232" target="231" covered="0"/><du var="dataLength" def="221" use="222" target="223" covered="0"/><du var="dataLength" def="221" use="222" target="221" covered="1"/><du var="dataLength" def="221" use="223" target="224" covered="0"/><du var="dataLength" def="221" use="223" target="226" covered="0"/><du var="dataLength" def="221" use="226" covered="0"/><du var="dataLength" def="221" use="224" covered="0"/><du var="dataLength" def="231" use="232" target="233" covered="1"/><du var="dataLength" def="231" use="232" target="231" covered="0"/><du var="dataLength" def="231" use="233" target="234" covered="0"/><du var="dataLength" def="231" use="233" target="236" covered="1"/><du var="dataLength" def="231" use="236" covered="1"/><du var="dataLength" def="231" use="234" covered="0"/><du var="firstFourDigits" def="244" use="247" target="248" covered="0"/><du var="firstFourDigits" def="244" use="247" target="246" covered="0"/><du var="dataLength" def="246" use="247" target="248" covered="0"/><du var="dataLength" def="246" use="247" target="246" covered="0"/><du var="dataLength" def="246" use="248" target="249" covered="0"/><du var="dataLength" def="246" use="248" target="251" covered="0"/><du var="dataLength" def="246" use="251" covered="0"/><du var="dataLength" def="246" use="249" covered="0"/><counter type="DU" missed="55" covered="56"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processFixedAI" desc="(IILjava/lang/String;)Ljava/lang/String;"><du var="aiSize" def="259" use="259" target="260" covered="0"/><du var="aiSize" def="259" use="259" target="263" covered="1"/><du var="aiSize" def="259" use="263" covered="1"/><du var="aiSize" def="259" use="265" target="266" covered="0"/><du var="aiSize" def="259" use="265" target="269" covered="1"/><du var="aiSize" def="259" use="269" covered="1"/><du var="aiSize" def="259" use="270" covered="1"/><du var="fieldSize" def="259" use="265" target="266" covered="0"/><du var="fieldSize" def="259" use="265" target="269" covered="1"/><du var="fieldSize" def="259" use="269" covered="1"/><du var="fieldSize" def="259" use="270" covered="1"/><du var="rawInformation" def="259" use="259" target="260" covered="0"/><du var="rawInformation" def="259" use="259" target="263" covered="1"/><du var="rawInformation" def="259" use="263" covered="1"/><du var="rawInformation" def="259" use="265" target="266" covered="0"/><du var="rawInformation" def="259" use="265" target="269" covered="1"/><du var="rawInformation" def="259" use="269" covered="1"/><du var="rawInformation" def="259" use="270" covered="1"/><du var="ai" def="263" use="271" covered="1"/><du var="result" def="271" use="273" covered="1"/><du var="result" def="271" use="273" covered="1"/><du var="parsedAI" def="272" use="273" target="273" covered="0"/><du var="parsedAI" def="272" use="273" target="273" covered="1"/><du var="parsedAI" def="272" use="273" covered="1"/><counter type="DU" missed="6" covered="18"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processVariableAI" desc="(IILjava/lang/String;)Ljava/lang/String;"><du var="aiSize" def="278" use="280" target="281" covered="1"/><du var="aiSize" def="278" use="280" target="283" covered="0"/><du var="aiSize" def="278" use="283" covered="0"/><du var="aiSize" def="278" use="285" covered="1"/><du var="variableFieldSize" def="278" use="280" target="281" covered="1"/><du var="variableFieldSize" def="278" use="280" target="283" covered="0"/><du var="variableFieldSize" def="278" use="283" covered="0"/><du var="rawInformation" def="278" use="280" target="281" covered="1"/><du var="rawInformation" def="278" use="280" target="283" covered="0"/><du var="rawInformation" def="278" use="285" covered="1"/><du var="rawInformation" def="278" use="286" covered="1"/><du var="rawInformation" def="278" use="281" covered="1"/><du var="ai" def="278" use="287" covered="1"/><du var="maxSize" def="281" use="285" covered="1"/><du var="maxSize" def="281" use="286" covered="1"/><du var="maxSize" def="283" use="285" covered="0"/><du var="maxSize" def="283" use="286" covered="0"/><du var="result" def="287" use="289" covered="0"/><du var="result" def="287" use="289" covered="1"/><du var="parsedAI" def="288" use="289" target="289" covered="1"/><du var="parsedAI" def="288" use="289" target="289" covered="0"/><du var="parsedAI" def="288" use="289" covered="1"/><counter type="DU" missed="9" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="70" covered="87"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/oned/rss/expanded/decoders/AI01decoder"><method name="encodeCompressedGtinWithoutAI" desc="(Ljava/lang/StringBuilder;II)V"><du var="this" def="52" use="53" covered="1"/><du var="buf" def="52" use="60" covered="1"/><du var="buf" def="52" use="58" covered="1"/><du var="buf" def="52" use="55" covered="1"/><du var="buf" def="52" use="63" covered="1"/><du var="currentPos" def="52" use="53" covered="1"/><du var="initialBufferPosition" def="52" use="63" covered="1"/><du var="i" def="52" use="52" target="63" covered="0"/><du var="i" def="52" use="52" target="53" covered="1"/><du var="i" def="52" use="53" covered="1"/><du var="i" def="52" use="52" covered="1"/><du var="currentBlock" def="53" use="54" target="55" covered="1"/><du var="currentBlock" def="53" use="54" target="57" covered="1"/><du var="currentBlock" def="53" use="57" target="58" covered="1"/><du var="currentBlock" def="53" use="57" target="60" covered="1"/><du var="currentBlock" def="53" use="60" covered="1"/><du var="i" def="52" use="52" target="63" covered="1"/><du var="i" def="52" use="52" target="53" covered="1"/><du var="i" def="52" use="53" covered="1"/><du var="i" def="52" use="52" covered="1"/><counter type="DU" missed="1" covered="19"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendCheckDigit" desc="(Ljava/lang/StringBuilder;I)V"><du var="buf" def="67" use="69" covered="1"/><du var="buf" def="67" use="78" covered="1"/><du var="currentPos" def="67" use="69" covered="1"/><du var="checkDigit" def="67" use="70" covered="1"/><du var="checkDigit" def="67" use="73" covered="0"/><du var="i" def="68" use="68" target="73" covered="0"/><du var="i" def="68" use="68" target="69" covered="1"/><du var="i" def="68" use="69" covered="1"/><du var="i" def="68" use="70" target="70" covered="1"/><du var="i" def="68" use="70" target="70" covered="0"/><du var="i" def="68" use="68" covered="1"/><du var="digit" def="69" use="70" covered="1"/><du var="checkDigit" def="70" use="70" covered="1"/><du var="checkDigit" def="70" use="73" covered="1"/><du var="i" def="68" use="68" target="73" covered="1"/><du var="i" def="68" use="68" target="69" covered="1"/><du var="i" def="68" use="69" covered="1"/><du var="i" def="68" use="70" target="70" covered="1"/><du var="i" def="68" use="70" target="70" covered="1"/><du var="i" def="68" use="68" covered="1"/><du var="checkDigit" def="73" use="74" target="75" covered="0"/><du var="checkDigit" def="73" use="74" target="78" covered="1"/><du var="checkDigit" def="73" use="78" covered="1"/><du var="checkDigit" def="75" use="78" covered="0"/><counter type="DU" missed="5" covered="19"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="6" covered="38"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/oned/rss/expanded/decoders/AI01320xDecoder"><method name="addWeightCode" desc="(Ljava/lang/StringBuilder;I)V"><du var="buf" def="42" use="45" covered="1"/><du var="buf" def="42" use="43" covered="1"/><du var="weight" def="42" use="42" target="43" covered="1"/><du var="weight" def="42" use="42" target="45" covered="1"/><counter type="DU" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkWeight" desc="(I)I"><du var="weight" def="51" use="51" target="52" covered="1"/><du var="weight" def="51" use="51" target="54" covered="1"/><du var="weight" def="51" use="54" covered="1"/><du var="weight" def="51" use="52" covered="1"/><counter type="DU" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/oned/rss/expanded/decoders/AbstractExpandedDecoder"><method name="createDecoder" desc="(Lcom/google/zxing/common/BitArray;)Lcom/google/zxing/oned/rss/expanded/decoders/AbstractExpandedDecoder;"><du var="information" def="58" use="58" target="59" covered="0"/><du var="information" def="58" use="58" target="61" covered="1"/><du var="information" def="58" use="61" target="62" covered="1"/><du var="information" def="58" use="61" target="65" covered="1"/><du var="information" def="58" use="65" covered="1"/><du var="information" def="58" use="69" covered="1"/><du var="information" def="58" use="68" covered="1"/><du var="information" def="58" use="72" covered="1"/><du var="information" def="58" use="75" covered="0"/><du var="information" def="58" use="74" covered="0"/><du var="information" def="58" use="78" covered="1"/><du var="information" def="58" use="87" covered="1"/><du var="information" def="58" use="86" covered="1"/><du var="information" def="58" use="85" covered="1"/><du var="information" def="58" use="84" covered="1"/><du var="information" def="58" use="83" covered="1"/><du var="information" def="58" use="82" covered="1"/><du var="information" def="58" use="81" covered="1"/><du var="information" def="58" use="80" covered="1"/><du var="information" def="58" use="90" covered="0"/><du var="information" def="58" use="62" covered="1"/><du var="information" def="58" use="59" covered="0"/><du var="fourBitEncodationMethod" def="65" use="67" target="72" covered="1"/><du var="fourBitEncodationMethod" def="65" use="67" target="68" covered="1"/><du var="fourBitEncodationMethod" def="65" use="67" target="69" covered="1"/><du var="fiveBitEncodationMethod" def="72" use="73" target="78" covered="1"/><du var="fiveBitEncodationMethod" def="72" use="73" target="74" covered="0"/><du var="fiveBitEncodationMethod" def="72" use="73" target="75" covered="0"/><du var="sevenBitEncodationMethod" def="78" use="79" target="90" covered="0"/><du var="sevenBitEncodationMethod" def="78" use="79" target="80" covered="1"/><du var="sevenBitEncodationMethod" def="78" use="79" target="81" covered="1"/><du var="sevenBitEncodationMethod" def="78" use="79" target="82" covered="1"/><du var="sevenBitEncodationMethod" def="78" use="79" target="83" covered="1"/><du var="sevenBitEncodationMethod" def="78" use="79" target="84" covered="1"/><du var="sevenBitEncodationMethod" def="78" use="79" target="85" covered="1"/><du var="sevenBitEncodationMethod" def="78" use="79" target="86" covered="1"/><du var="sevenBitEncodationMethod" def="78" use="79" target="87" covered="1"/><counter type="DU" missed="8" covered="29"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="8" covered="29"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/oned/rss/expanded/decoders/AI01392xDecoder"><method name="parseInformation" desc="()Ljava/lang/String;"><du var="this" def="47" use="47" target="48" covered="0"/><du var="this" def="47" use="47" target="51" covered="0"/><du var="this" def="47" use="53" covered="0"/><du var="this" def="47" use="55" covered="0"/><du var="this" def="47" use="61" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/rss/expanded/decoders/AI01393xDecoder"><method name="parseInformation" desc="()Ljava/lang/String;"><du var="this" def="47" use="47" target="48" covered="0"/><du var="this" def="47" use="47" target="51" covered="0"/><du var="this" def="47" use="53" covered="0"/><du var="this" def="47" use="55" covered="0"/><du var="this" def="47" use="62" covered="0"/><du var="this" def="47" use="72" covered="0"/><du var="buf" def="51" use="70" covered="0"/><du var="buf" def="51" use="74" covered="0"/><du var="buf" def="51" use="76" covered="0"/><du var="buf" def="51" use="68" covered="0"/><du var="buf" def="51" use="65" covered="0"/><du var="firstThreeDigits" def="62" use="64" target="65" covered="0"/><du var="firstThreeDigits" def="62" use="64" target="67" covered="0"/><du var="firstThreeDigits" def="62" use="67" target="68" covered="0"/><du var="firstThreeDigits" def="62" use="67" target="70" covered="0"/><du var="firstThreeDigits" def="62" use="70" covered="0"/><counter type="DU" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/rss/expanded/decoders/GeneralAppIdDecoder"><method name="decodeAllCodes" desc="(Ljava/lang/StringBuilder;I)Ljava/lang/String;"><du var="this" def="48" use="51" covered="1"/><du var="buff" def="48" use="68" covered="1"/><du var="buff" def="48" use="54" covered="1"/><du var="currentPosition" def="48" use="51" covered="1"/><du var="currentPosition" def="48" use="62" target="63" covered="0"/><du var="currentPosition" def="48" use="62" target="65" covered="1"/><du var="remaining" def="49" use="51" covered="1"/><du var="info" def="51" use="56" target="57" covered="0"/><du var="info" def="51" use="56" target="59" covered="1"/><du var="info" def="51" use="62" target="63" covered="1"/><du var="info" def="51" use="62" target="65" covered="1"/><du var="info" def="51" use="65" covered="1"/><du var="info" def="51" use="57" covered="0"/><du var="parsedFields" def="52" use="53" target="54" covered="1"/><du var="parsedFields" def="52" use="53" target="56" covered="1"/><du var="parsedFields" def="52" use="54" covered="1"/><du var="remaining" def="57" use="51" covered="0"/><du var="remaining" def="59" use="51" covered="1"/><du var="currentPosition" def="65" use="51" covered="1"/><du var="currentPosition" def="65" use="62" target="63" covered="1"/><du var="currentPosition" def="65" use="62" target="65" covered="0"/><counter type="DU" missed="5" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStillNumeric" desc="(I)Z"><du var="this" def="74" use="74" target="75" covered="1"/><du var="this" def="74" use="74" target="78" covered="1"/><du var="this" def="74" use="79" target="80" covered="1"/><du var="this" def="74" use="79" target="78" covered="1"/><du var="this" def="74" use="84" covered="1"/><du var="this" def="74" use="75" target="75" covered="0"/><du var="this" def="74" use="75" target="75" covered="1"/><du var="pos" def="74" use="74" target="75" covered="1"/><du var="pos" def="74" use="74" target="78" covered="1"/><du var="pos" def="74" use="78" covered="1"/><du var="pos" def="74" use="78" target="84" covered="1"/><du var="pos" def="74" use="78" target="79" covered="1"/><du var="pos" def="74" use="84" covered="1"/><du var="pos" def="74" use="75" target="75" covered="0"/><du var="pos" def="74" use="75" target="75" covered="1"/><du var="this.information" def="74" use="74" target="75" covered="1"/><du var="this.information" def="74" use="74" target="78" covered="1"/><du var="this.information" def="74" use="79" target="80" covered="1"/><du var="this.information" def="74" use="79" target="78" covered="1"/><du var="this.information" def="74" use="84" covered="1"/><du var="this.information" def="74" use="75" target="75" covered="0"/><du var="this.information" def="74" use="75" target="75" covered="1"/><du var="i" def="78" use="78" target="84" covered="0"/><du var="i" def="78" use="78" target="79" covered="1"/><du var="i" def="78" use="79" target="80" covered="0"/><du var="i" def="78" use="79" target="78" covered="1"/><du var="i" def="78" use="78" covered="1"/><du var="i" def="78" use="78" target="84" covered="1"/><du var="i" def="78" use="78" target="79" covered="1"/><du var="i" def="78" use="79" target="80" covered="1"/><du var="i" def="78" use="79" target="78" covered="1"/><du var="i" def="78" use="78" covered="1"/><counter type="DU" missed="5" covered="27"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decodeNumeric" desc="(I)Lcom/google/zxing/oned/rss/expanded/decoders/DecodedNumeric;"><du var="this" def="88" use="88" target="89" covered="0"/><du var="this" def="88" use="88" target="95" covered="1"/><du var="this" def="88" use="95" covered="1"/><du var="this" def="88" use="89" covered="0"/><du var="this" def="88" use="93" covered="0"/><du var="this" def="88" use="91" covered="0"/><du var="pos" def="88" use="88" target="89" covered="0"/><du var="pos" def="88" use="88" target="95" covered="1"/><du var="pos" def="88" use="95" covered="1"/><du var="pos" def="88" use="100" covered="1"/><du var="pos" def="88" use="89" covered="0"/><du var="this.information" def="88" use="88" target="89" covered="0"/><du var="this.information" def="88" use="88" target="95" covered="1"/><du var="this.information" def="88" use="93" covered="0"/><du var="this.information" def="88" use="91" covered="0"/><du var="numeric" def="89" use="90" target="91" covered="0"/><du var="numeric" def="89" use="90" target="93" covered="0"/><du var="numeric" def="89" use="93" covered="0"/><counter type="DU" missed="12" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractNumericValueFromBitArray" desc="(Lcom/google/zxing/common/BitArray;II)I"><du var="information" def="108" use="110" target="111" covered="1"/><du var="information" def="108" use="110" target="109" covered="1"/><du var="pos" def="108" use="110" target="111" covered="1"/><du var="pos" def="108" use="110" target="109" covered="1"/><du var="bits" def="108" use="109" target="115" covered="1"/><du var="bits" def="108" use="109" target="110" covered="1"/><du var="bits" def="108" use="111" covered="1"/><du var="value" def="108" use="111" covered="1"/><du var="value" def="108" use="115" covered="1"/><du var="i" def="109" use="109" target="115" covered="0"/><du var="i" def="109" use="109" target="110" covered="1"/><du var="i" def="109" use="110" target="111" covered="1"/><du var="i" def="109" use="110" target="109" covered="1"/><du var="i" def="109" use="109" covered="1"/><du var="i" def="109" use="111" covered="1"/><du var="value" def="111" use="111" covered="1"/><du var="value" def="111" use="115" covered="1"/><du var="i" def="109" use="109" target="115" covered="1"/><du var="i" def="109" use="109" target="110" covered="1"/><du var="i" def="109" use="110" target="111" covered="1"/><du var="i" def="109" use="110" target="109" covered="1"/><du var="i" def="109" use="109" covered="1"/><du var="i" def="109" use="111" covered="1"/><counter type="DU" missed="1" covered="22"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decodeGeneralPurposeField" desc="(ILjava/lang/String;)Lcom/google/zxing/oned/rss/expanded/decoders/DecodedInformation;"><du var="this" def="119" use="125" covered="1"/><du var="this" def="119" use="127" covered="1"/><du var="this" def="119" use="131" covered="1"/><du var="this" def="119" use="129" covered="0"/><du var="this" def="119" use="122" covered="0"/><du var="pos" def="119" use="125" covered="1"/><du var="remaining" def="119" use="121" target="122" covered="0"/><du var="remaining" def="119" use="121" target="125" covered="1"/><du var="remaining" def="119" use="122" covered="0"/><du var="this.buffer" def="119" use="131" covered="1"/><du var="this.buffer" def="119" use="129" covered="0"/><du var="this.buffer" def="119" use="122" covered="0"/><du var="this.current" def="119" use="125" covered="1"/><du var="this.current" def="119" use="131" covered="1"/><du var="this.current" def="119" use="129" covered="0"/><du var="lastDecoded" def="127" use="128" target="128" covered="1"/><du var="lastDecoded" def="127" use="128" target="131" covered="1"/><du var="lastDecoded" def="127" use="128" target="129" covered="0"/><du var="lastDecoded" def="127" use="128" target="131" covered="1"/><du var="lastDecoded" def="127" use="129" covered="0"/><counter type="DU" missed="9" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseBlocks" desc="()Lcom/google/zxing/oned/rss/expanded/decoders/DecodedInformation;"><du var="this" def="138" use="140" target="141" covered="1"/><du var="this" def="138" use="140" target="143" covered="1"/><du var="this" def="138" use="143" target="144" covered="1"/><du var="this" def="138" use="143" target="147" covered="1"/><du var="this" def="138" use="147" covered="1"/><du var="this" def="138" use="151" target="151" covered="1"/><du var="this" def="138" use="151" target="151" covered="1"/><du var="this" def="138" use="144" covered="1"/><du var="this" def="138" use="141" covered="1"/><du var="this.current" def="138" use="140" target="141" covered="1"/><du var="this.current" def="138" use="140" target="143" covered="1"/><du var="this.current" def="138" use="143" target="144" covered="1"/><du var="this.current" def="138" use="143" target="147" covered="1"/><du var="this.current" def="138" use="151" target="151" covered="1"/><du var="this.current" def="138" use="151" target="151" covered="1"/><du var="initialPosition" def="138" use="151" target="151" covered="1"/><du var="initialPosition" def="138" use="151" target="151" covered="1"/><du var="result" def="141" use="157" covered="1"/><du var="isFinished" def="142" use="155" target="157" covered="1"/><du var="isFinished" def="142" use="155" target="138" covered="1"/><du var="isFinished" def="142" use="152" target="153" covered="1"/><du var="isFinished" def="142" use="152" target="155" covered="0"/><du var="result" def="144" use="157" covered="1"/><du var="isFinished" def="145" use="155" target="157" covered="1"/><du var="isFinished" def="145" use="155" target="138" covered="1"/><du var="isFinished" def="145" use="152" target="153" covered="1"/><du var="isFinished" def="145" use="152" target="155" covered="0"/><du var="result" def="147" use="157" covered="1"/><du var="isFinished" def="148" use="155" target="157" covered="1"/><du var="isFinished" def="148" use="155" target="138" covered="1"/><du var="isFinished" def="148" use="152" target="153" covered="1"/><du var="isFinished" def="148" use="152" target="155" covered="0"/><du var="positionChanged" def="151" use="152" target="152" covered="1"/><du var="positionChanged" def="151" use="152" target="155" covered="1"/><counter type="DU" missed="3" covered="31"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseNumericBlock" desc="()Lcom/google/zxing/oned/rss/expanded/decoders/BlockParsedResult;"><du var="this" def="161" use="161" target="183" covered="1"/><du var="this" def="161" use="161" target="162" covered="1"/><du var="this" def="161" use="162" covered="1"/><du var="this" def="161" use="163" covered="1"/><du var="this" def="161" use="174" covered="1"/><du var="this" def="161" use="180" covered="1"/><du var="this" def="161" use="177" covered="1"/><du var="this" def="161" use="170" covered="0"/><du var="this" def="161" use="168" covered="0"/><du var="this" def="161" use="183" target="184" covered="1"/><du var="this" def="161" use="183" target="187" covered="1"/><du var="this" def="161" use="184" covered="1"/><du var="this" def="161" use="185" covered="1"/><du var="this.current" def="161" use="161" target="183" covered="1"/><du var="this.current" def="161" use="161" target="162" covered="1"/><du var="this.current" def="161" use="162" covered="1"/><du var="this.current" def="161" use="163" covered="1"/><du var="this.current" def="161" use="177" covered="1"/><du var="this.current" def="161" use="170" covered="0"/><du var="this.current" def="161" use="168" covered="0"/><du var="this.current" def="161" use="183" target="184" covered="1"/><du var="this.current" def="161" use="183" target="187" covered="1"/><du var="this.current" def="161" use="184" covered="1"/><du var="this.current" def="161" use="185" covered="1"/><du var="this.buffer" def="161" use="174" covered="1"/><du var="this.buffer" def="161" use="180" covered="1"/><du var="this.buffer" def="161" use="177" covered="1"/><du var="this.buffer" def="161" use="170" covered="0"/><du var="this.buffer" def="161" use="168" covered="0"/><du var="numeric" def="162" use="165" target="167" covered="0"/><du var="numeric" def="162" use="165" target="174" covered="1"/><du var="numeric" def="162" use="174" covered="1"/><du var="numeric" def="162" use="176" target="177" covered="1"/><du var="numeric" def="162" use="176" target="180" covered="1"/><du var="numeric" def="162" use="180" covered="1"/><du var="numeric" def="162" use="167" target="168" covered="0"/><du var="numeric" def="162" use="167" target="170" covered="0"/><du var="numeric" def="162" use="170" covered="0"/><du var="information" def="168" use="172" covered="0"/><du var="information" def="170" use="172" covered="0"/><counter type="DU" missed="12" covered="28"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseIsoIec646Block" desc="()Lcom/google/zxing/oned/rss/expanded/decoders/BlockParsedResult;"><du var="this" def="191" use="191" target="202" covered="1"/><du var="this" def="191" use="191" target="192" covered="1"/><du var="this" def="191" use="192" covered="1"/><du var="this" def="191" use="193" covered="1"/><du var="this" def="191" use="199" covered="1"/><du var="this" def="191" use="196" covered="1"/><du var="this" def="191" use="202" target="203" covered="0"/><du var="this" def="191" use="202" target="205" covered="1"/><du var="this" def="191" use="205" target="206" covered="1"/><du var="this" def="191" use="205" target="214" covered="1"/><du var="this" def="191" use="206" target="207" covered="1"/><du var="this" def="191" use="206" target="209" covered="1"/><du var="this" def="191" use="209" covered="1"/><du var="this" def="191" use="212" covered="1"/><du var="this" def="191" use="207" covered="1"/><du var="this" def="191" use="203" covered="0"/><du var="this" def="191" use="204" covered="0"/><du var="this.current" def="191" use="191" target="202" covered="1"/><du var="this.current" def="191" use="191" target="192" covered="1"/><du var="this.current" def="191" use="192" covered="1"/><du var="this.current" def="191" use="193" covered="1"/><du var="this.current" def="191" use="196" covered="1"/><du var="this.current" def="191" use="202" target="203" covered="0"/><du var="this.current" def="191" use="202" target="205" covered="1"/><du var="this.current" def="191" use="205" target="206" covered="1"/><du var="this.current" def="191" use="205" target="214" covered="1"/><du var="this.current" def="191" use="206" target="207" covered="1"/><du var="this.current" def="191" use="206" target="209" covered="1"/><du var="this.current" def="191" use="209" covered="1"/><du var="this.current" def="191" use="212" covered="1"/><du var="this.current" def="191" use="207" covered="1"/><du var="this.current" def="191" use="203" covered="0"/><du var="this.current" def="191" use="204" covered="0"/><du var="this.buffer" def="191" use="199" covered="1"/><du var="this.buffer" def="191" use="196" covered="1"/><du var="this.information" def="191" use="206" target="207" covered="1"/><du var="this.information" def="191" use="206" target="209" covered="1"/><du var="this.information" def="191" use="209" covered="1"/><du var="iso" def="192" use="195" target="196" covered="1"/><du var="iso" def="192" use="195" target="199" covered="1"/><du var="iso" def="192" use="199" covered="1"/><counter type="DU" missed="6" covered="35"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseAlphaBlock" desc="()Lcom/google/zxing/oned/rss/expanded/decoders/BlockParsedResult;"><du var="this" def="218" use="218" target="230" covered="1"/><du var="this" def="218" use="218" target="219" covered="1"/><du var="this" def="218" use="219" covered="1"/><du var="this" def="218" use="220" covered="1"/><du var="this" def="218" use="227" covered="1"/><du var="this" def="218" use="223" covered="1"/><du var="this" def="218" use="230" target="231" covered="1"/><du var="this" def="218" use="230" target="233" covered="1"/><du var="this" def="218" use="233" target="234" covered="1"/><du var="this" def="218" use="233" target="242" covered="1"/><du var="this" def="218" use="234" target="235" covered="1"/><du var="this" def="218" use="234" target="237" covered="0"/><du var="this" def="218" use="237" covered="0"/><du var="this" def="218" use="240" covered="1"/><du var="this" def="218" use="235" covered="1"/><du var="this" def="218" use="231" covered="1"/><du var="this" def="218" use="232" covered="1"/><du var="this.current" def="218" use="218" target="230" covered="1"/><du var="this.current" def="218" use="218" target="219" covered="1"/><du var="this.current" def="218" use="219" covered="1"/><du var="this.current" def="218" use="220" covered="1"/><du var="this.current" def="218" use="223" covered="1"/><du var="this.current" def="218" use="230" target="231" covered="1"/><du var="this.current" def="218" use="230" target="233" covered="1"/><du var="this.current" def="218" use="233" target="234" covered="1"/><du var="this.current" def="218" use="233" target="242" covered="1"/><du var="this.current" def="218" use="234" target="235" covered="1"/><du var="this.current" def="218" use="234" target="237" covered="0"/><du var="this.current" def="218" use="237" covered="0"/><du var="this.current" def="218" use="240" covered="1"/><du var="this.current" def="218" use="235" covered="1"/><du var="this.current" def="218" use="231" covered="1"/><du var="this.current" def="218" use="232" covered="1"/><du var="this.buffer" def="218" use="227" covered="1"/><du var="this.buffer" def="218" use="223" covered="1"/><du var="this.information" def="218" use="234" target="235" covered="1"/><du var="this.information" def="218" use="234" target="237" covered="0"/><du var="this.information" def="218" use="237" covered="0"/><du var="alpha" def="219" use="222" target="223" covered="1"/><du var="alpha" def="219" use="222" target="227" covered="1"/><du var="alpha" def="219" use="227" covered="1"/><counter type="DU" missed="6" covered="35"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStillIsoIec646" desc="(I)Z"><du var="this" def="246" use="246" target="247" covered="1"/><du var="this" def="246" use="246" target="250" covered="1"/><du var="this" def="246" use="250" covered="1"/><du var="this" def="246" use="255" target="256" covered="0"/><du var="this" def="246" use="255" target="259" covered="1"/><du var="this" def="246" use="259" covered="1"/><du var="this" def="246" use="264" target="265" covered="0"/><du var="this" def="246" use="264" target="268" covered="1"/><du var="this" def="246" use="268" covered="1"/><du var="pos" def="246" use="246" target="247" covered="1"/><du var="pos" def="246" use="246" target="250" covered="1"/><du var="pos" def="246" use="250" covered="1"/><du var="pos" def="246" use="255" target="256" covered="0"/><du var="pos" def="246" use="255" target="259" covered="1"/><du var="pos" def="246" use="259" covered="1"/><du var="pos" def="246" use="264" target="265" covered="0"/><du var="pos" def="246" use="264" target="268" covered="1"/><du var="pos" def="246" use="268" covered="1"/><du var="this.information" def="246" use="246" target="247" covered="1"/><du var="this.information" def="246" use="246" target="250" covered="1"/><du var="this.information" def="246" use="255" target="256" covered="0"/><du var="this.information" def="246" use="255" target="259" covered="1"/><du var="this.information" def="246" use="264" target="265" covered="0"/><du var="this.information" def="246" use="264" target="268" covered="1"/><du var="fiveBitValue" def="250" use="251" target="251" covered="1"/><du var="fiveBitValue" def="250" use="251" target="255" covered="1"/><du var="fiveBitValue" def="250" use="251" target="252" covered="1"/><du var="fiveBitValue" def="250" use="251" target="255" covered="1"/><du var="sevenBitValue" def="259" use="260" target="260" covered="1"/><du var="sevenBitValue" def="259" use="260" target="264" covered="1"/><du var="sevenBitValue" def="259" use="260" target="261" covered="1"/><du var="sevenBitValue" def="259" use="260" target="264" covered="0"/><du var="eightBitValue" def="268" use="269" target="269" covered="0"/><du var="eightBitValue" def="268" use="269" target="269" covered="1"/><du var="eightBitValue" def="268" use="269" target="269" covered="0"/><du var="eightBitValue" def="268" use="269" target="269" covered="0"/><counter type="DU" missed="10" covered="26"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decodeIsoIec646" desc="(I)Lcom/google/zxing/oned/rss/expanded/decoders/DecodedChar;"><du var="this" def="274" use="283" covered="1"/><du var="this" def="274" use="293" covered="0"/><du var="pos" def="274" use="283" covered="1"/><du var="pos" def="274" use="293" covered="0"/><du var="pos" def="274" use="362" covered="0"/><du var="pos" def="274" use="290" covered="0"/><du var="pos" def="274" use="286" covered="1"/><du var="pos" def="274" use="280" covered="0"/><du var="pos" def="274" use="276" covered="1"/><du var="fiveBitValue" def="274" use="275" target="276" covered="1"/><du var="fiveBitValue" def="274" use="275" target="279" covered="1"/><du var="fiveBitValue" def="274" use="279" target="279" covered="1"/><du var="fiveBitValue" def="274" use="279" target="283" covered="0"/><du var="fiveBitValue" def="274" use="279" target="280" covered="0"/><du var="fiveBitValue" def="274" use="279" target="283" covered="1"/><du var="fiveBitValue" def="274" use="280" covered="0"/><du var="sevenBitValue" def="283" use="285" target="285" covered="1"/><du var="sevenBitValue" def="283" use="285" target="289" covered="0"/><du var="sevenBitValue" def="283" use="289" target="289" covered="0"/><du var="sevenBitValue" def="283" use="289" target="293" covered="0"/><du var="sevenBitValue" def="283" use="289" target="290" covered="0"/><du var="sevenBitValue" def="283" use="289" target="293" covered="0"/><du var="sevenBitValue" def="283" use="290" covered="0"/><du var="sevenBitValue" def="283" use="285" target="286" covered="1"/><du var="sevenBitValue" def="283" use="285" target="289" covered="0"/><du var="sevenBitValue" def="283" use="286" covered="1"/><du var="eightBitValue" def="293" use="295" target="360" covered="0"/><du var="eightBitValue" def="293" use="295" target="297" covered="0"/><du var="eightBitValue" def="293" use="295" target="300" covered="0"/><du var="eightBitValue" def="293" use="295" target="303" covered="0"/><du var="eightBitValue" def="293" use="295" target="306" covered="0"/><du var="eightBitValue" def="293" use="295" target="309" covered="0"/><du var="eightBitValue" def="293" use="295" target="312" covered="0"/><du var="eightBitValue" def="293" use="295" target="315" covered="0"/><du var="eightBitValue" def="293" use="295" target="318" covered="0"/><du var="eightBitValue" def="293" use="295" target="321" covered="0"/><du var="eightBitValue" def="293" use="295" target="324" covered="0"/><du var="eightBitValue" def="293" use="295" target="327" covered="0"/><du var="eightBitValue" def="293" use="295" target="330" covered="0"/><du var="eightBitValue" def="293" use="295" target="333" covered="0"/><du var="eightBitValue" def="293" use="295" target="336" covered="0"/><du var="eightBitValue" def="293" use="295" target="339" covered="0"/><du var="eightBitValue" def="293" use="295" target="342" covered="0"/><du var="eightBitValue" def="293" use="295" target="345" covered="0"/><du var="eightBitValue" def="293" use="295" target="348" covered="0"/><du var="eightBitValue" def="293" use="295" target="351" covered="0"/><du var="eightBitValue" def="293" use="295" target="354" covered="0"/><du var="eightBitValue" def="293" use="295" target="357" covered="0"/><du var="c" def="297" use="362" covered="0"/><du var="c" def="300" use="362" covered="0"/><du var="c" def="303" use="362" covered="0"/><du var="c" def="306" use="362" covered="0"/><du var="c" def="309" use="362" covered="0"/><du var="c" def="312" use="362" covered="0"/><du var="c" def="315" use="362" covered="0"/><du var="c" def="318" use="362" covered="0"/><du var="c" def="321" use="362" covered="0"/><du var="c" def="324" use="362" covered="0"/><du var="c" def="327" use="362" covered="0"/><du var="c" def="330" use="362" covered="0"/><du var="c" def="333" use="362" covered="0"/><du var="c" def="336" use="362" covered="0"/><du var="c" def="339" use="362" covered="0"/><du var="c" def="342" use="362" covered="0"/><du var="c" def="345" use="362" covered="0"/><du var="c" def="348" use="362" covered="0"/><du var="c" def="351" use="362" covered="0"/><du var="c" def="354" use="362" covered="0"/><du var="c" def="357" use="362" covered="0"/><counter type="DU" missed="58" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStillAlpha" desc="(I)Z"><du var="this" def="366" use="366" target="367" covered="1"/><du var="this" def="366" use="366" target="371" covered="1"/><du var="this" def="366" use="371" covered="1"/><du var="this" def="366" use="376" target="377" covered="0"/><du var="this" def="366" use="376" target="380" covered="1"/><du var="this" def="366" use="380" covered="1"/><du var="pos" def="366" use="366" target="367" covered="1"/><du var="pos" def="366" use="366" target="371" covered="1"/><du var="pos" def="366" use="371" covered="1"/><du var="pos" def="366" use="376" target="377" covered="0"/><du var="pos" def="366" use="376" target="380" covered="1"/><du var="pos" def="366" use="380" covered="1"/><du var="this.information" def="366" use="366" target="367" covered="1"/><du var="this.information" def="366" use="366" target="371" covered="1"/><du var="this.information" def="366" use="376" target="377" covered="0"/><du var="this.information" def="366" use="376" target="380" covered="1"/><du var="fiveBitValue" def="371" use="372" target="372" covered="1"/><du var="fiveBitValue" def="371" use="372" target="376" covered="1"/><du var="fiveBitValue" def="371" use="372" target="373" covered="1"/><du var="fiveBitValue" def="371" use="372" target="376" covered="1"/><du var="sixBitValue" def="380" use="381" target="381" covered="1"/><du var="sixBitValue" def="380" use="381" target="381" covered="1"/><du var="sixBitValue" def="380" use="381" target="381" covered="1"/><du var="sixBitValue" def="380" use="381" target="381" covered="0"/><counter type="DU" missed="4" covered="20"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decodeAlphanumeric" desc="(I)Lcom/google/zxing/oned/rss/expanded/decoders/DecodedChar;"><du var="this" def="385" use="394" covered="1"/><du var="pos" def="385" use="394" covered="1"/><du var="pos" def="385" use="420" covered="0"/><du var="pos" def="385" use="397" covered="1"/><du var="pos" def="385" use="391" covered="0"/><du var="pos" def="385" use="387" covered="1"/><du var="fiveBitValue" def="385" use="386" target="387" covered="1"/><du var="fiveBitValue" def="385" use="386" target="390" covered="1"/><du var="fiveBitValue" def="385" use="390" target="390" covered="1"/><du var="fiveBitValue" def="385" use="390" target="394" covered="0"/><du var="fiveBitValue" def="385" use="390" target="391" covered="0"/><du var="fiveBitValue" def="385" use="390" target="394" covered="1"/><du var="fiveBitValue" def="385" use="391" covered="0"/><du var="sixBitValue" def="394" use="396" target="396" covered="1"/><du var="sixBitValue" def="394" use="396" target="401" covered="0"/><du var="sixBitValue" def="394" use="401" target="418" covered="0"/><du var="sixBitValue" def="394" use="401" target="403" covered="0"/><du var="sixBitValue" def="394" use="401" target="406" covered="0"/><du var="sixBitValue" def="394" use="401" target="409" covered="0"/><du var="sixBitValue" def="394" use="401" target="412" covered="0"/><du var="sixBitValue" def="394" use="401" target="415" covered="0"/><du var="sixBitValue" def="394" use="418" covered="0"/><du var="sixBitValue" def="394" use="396" target="397" covered="1"/><du var="sixBitValue" def="394" use="396" target="401" covered="0"/><du var="sixBitValue" def="394" use="397" covered="1"/><du var="c" def="403" use="420" covered="0"/><du var="c" def="406" use="420" covered="0"/><du var="c" def="409" use="420" covered="0"/><du var="c" def="412" use="420" covered="0"/><du var="c" def="415" use="420" covered="0"/><counter type="DU" missed="19" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAlphaTo646ToAlphaLatch" desc="(I)Z"><du var="this" def="424" use="424" target="425" covered="1"/><du var="this" def="424" use="424" target="428" covered="1"/><du var="this" def="424" use="428" target="438" covered="1"/><du var="this" def="424" use="428" target="429" covered="1"/><du var="this" def="424" use="433" target="434" covered="0"/><du var="this" def="424" use="433" target="428" covered="1"/><du var="this" def="424" use="430" target="431" covered="0"/><du var="this" def="424" use="430" target="428" covered="1"/><du var="pos" def="424" use="424" target="425" covered="1"/><du var="pos" def="424" use="424" target="428" covered="1"/><du var="pos" def="424" use="428" target="438" covered="1"/><du var="pos" def="424" use="428" target="429" covered="1"/><du var="pos" def="424" use="433" target="434" covered="0"/><du var="pos" def="424" use="433" target="428" covered="1"/><du var="pos" def="424" use="430" target="431" covered="0"/><du var="pos" def="424" use="430" target="428" covered="1"/><du var="this.information" def="424" use="424" target="425" covered="1"/><du var="this.information" def="424" use="424" target="428" covered="1"/><du var="this.information" def="424" use="428" target="438" covered="1"/><du var="this.information" def="424" use="428" target="429" covered="1"/><du var="this.information" def="424" use="433" target="434" covered="0"/><du var="this.information" def="424" use="433" target="428" covered="1"/><du var="this.information" def="424" use="430" target="431" covered="0"/><du var="this.information" def="424" use="430" target="428" covered="1"/><du var="i" def="428" use="428" target="428" covered="1"/><du var="i" def="428" use="428" target="438" covered="0"/><du var="i" def="428" use="428" target="438" covered="0"/><du var="i" def="428" use="428" target="429" covered="1"/><du var="i" def="428" use="429" target="430" covered="0"/><du var="i" def="428" use="429" target="433" covered="1"/><du var="i" def="428" use="433" target="434" covered="0"/><du var="i" def="428" use="433" target="428" covered="1"/><du var="i" def="428" use="428" covered="1"/><du var="i" def="428" use="428" target="428" covered="1"/><du var="i" def="428" use="428" target="438" covered="1"/><du var="i" def="428" use="428" target="438" covered="1"/><du var="i" def="428" use="428" target="429" covered="1"/><du var="i" def="428" use="429" target="430" covered="1"/><du var="i" def="428" use="429" target="433" covered="1"/><du var="i" def="428" use="433" target="434" covered="0"/><du var="i" def="428" use="433" target="428" covered="1"/><du var="i" def="428" use="428" covered="1"/><counter type="DU" missed="11" covered="31"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAlphaOr646ToNumericLatch" desc="(I)Z"><du var="this" def="443" use="443" target="444" covered="1"/><du var="this" def="443" use="443" target="447" covered="1"/><du var="this" def="443" use="448" target="449" covered="1"/><du var="this" def="443" use="448" target="447" covered="1"/><du var="pos" def="443" use="443" target="444" covered="1"/><du var="pos" def="443" use="443" target="447" covered="1"/><du var="pos" def="443" use="447" covered="1"/><du var="pos" def="443" use="447" target="452" covered="1"/><du var="pos" def="443" use="447" target="448" covered="1"/><du var="this.information" def="443" use="443" target="444" covered="1"/><du var="this.information" def="443" use="443" target="447" covered="1"/><du var="this.information" def="443" use="448" target="449" covered="1"/><du var="this.information" def="443" use="448" target="447" covered="1"/><du var="i" def="447" use="447" target="452" covered="0"/><du var="i" def="447" use="447" target="448" covered="1"/><du var="i" def="447" use="448" target="449" covered="0"/><du var="i" def="447" use="448" target="447" covered="1"/><du var="i" def="447" use="447" covered="1"/><du var="i" def="447" use="447" target="452" covered="1"/><du var="i" def="447" use="447" target="448" covered="1"/><du var="i" def="447" use="448" target="449" covered="1"/><du var="i" def="447" use="448" target="447" covered="1"/><du var="i" def="447" use="447" covered="1"/><counter type="DU" missed="2" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNumericToAlphaNumericLatch" desc="(I)Z"><du var="this" def="458" use="458" target="459" covered="1"/><du var="this" def="458" use="458" target="462" covered="1"/><du var="this" def="458" use="462" target="467" covered="0"/><du var="this" def="458" use="462" target="463" covered="1"/><du var="this" def="458" use="463" target="464" covered="0"/><du var="this" def="458" use="463" target="462" covered="1"/><du var="pos" def="458" use="458" target="459" covered="1"/><du var="pos" def="458" use="458" target="462" covered="1"/><du var="pos" def="458" use="462" target="467" covered="0"/><du var="pos" def="458" use="462" target="463" covered="1"/><du var="pos" def="458" use="463" target="464" covered="0"/><du var="pos" def="458" use="463" target="462" covered="1"/><du var="this.information" def="458" use="458" target="459" covered="1"/><du var="this.information" def="458" use="458" target="462" covered="1"/><du var="this.information" def="458" use="462" target="467" covered="0"/><du var="this.information" def="458" use="462" target="463" covered="1"/><du var="this.information" def="458" use="463" target="464" covered="0"/><du var="this.information" def="458" use="463" target="462" covered="1"/><du var="i" def="462" use="462" target="462" covered="1"/><du var="i" def="462" use="462" target="467" covered="0"/><du var="i" def="462" use="462" target="467" covered="0"/><du var="i" def="462" use="462" target="463" covered="1"/><du var="i" def="462" use="463" target="464" covered="0"/><du var="i" def="462" use="463" target="462" covered="1"/><du var="i" def="462" use="462" covered="1"/><du var="i" def="462" use="462" target="462" covered="1"/><du var="i" def="462" use="462" target="467" covered="1"/><du var="i" def="462" use="462" target="467" covered="0"/><du var="i" def="462" use="462" target="463" covered="1"/><du var="i" def="462" use="463" target="464" covered="0"/><du var="i" def="462" use="463" target="462" covered="1"/><du var="i" def="462" use="462" covered="1"/><counter type="DU" missed="11" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="174" covered="352"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/oned/rss/expanded/decoders/AI01weightDecoder"><method name="encodeCompressedWeight" desc="(Ljava/lang/StringBuilder;II)V"><du var="buf" def="41" use="49" covered="1"/><du var="buf" def="41" use="53" covered="1"/><du var="weightNumeric" def="44" use="48" target="49" covered="1"/><du var="weightNumeric" def="44" use="48" target="51" covered="1"/><du var="weightNumeric" def="44" use="53" covered="1"/><du var="currentDivisor" def="46" use="48" target="49" covered="1"/><du var="currentDivisor" def="46" use="48" target="51" covered="0"/><du var="currentDivisor" def="46" use="51" covered="1"/><du var="i" def="47" use="47" target="53" covered="0"/><du var="i" def="47" use="47" target="48" covered="1"/><du var="i" def="47" use="47" covered="1"/><du var="currentDivisor" def="51" use="48" target="49" covered="1"/><du var="currentDivisor" def="51" use="48" target="51" covered="1"/><du var="currentDivisor" def="51" use="51" covered="1"/><du var="i" def="47" use="47" target="53" covered="1"/><du var="i" def="47" use="47" target="48" covered="1"/><du var="i" def="47" use="47" covered="1"/><counter type="DU" missed="2" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="2" covered="15"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/oned/rss/expanded/decoders/DecodedChar"><method name="isFNC1" desc="()Z"><du var="this" def="49" use="49" target="49" covered="1"/><du var="this" def="49" use="49" target="49" covered="1"/><du var="this.value" def="49" use="49" target="49" covered="1"/><du var="this.value" def="49" use="49" target="49" covered="1"/><counter type="DU" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/oned/rss/expanded/decoders/AI013x0x1xDecoder"><method name="parseInformation" desc="()Ljava/lang/String;"><du var="this" def="53" use="53" target="54" covered="0"/><du var="this" def="53" use="53" target="57" covered="1"/><du var="this" def="53" use="59" covered="1"/><du var="this" def="53" use="60" covered="1"/><du var="this" def="53" use="61" covered="1"/><counter type="DU" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encodeCompressedDate" desc="(Ljava/lang/StringBuilder;I)V"><du var="this" def="67" use="73" covered="1"/><du var="buf" def="67" use="72" covered="1"/><du var="buf" def="67" use="73" covered="1"/><du var="buf" def="67" use="74" covered="1"/><du var="buf" def="67" use="85" covered="1"/><du var="buf" def="67" use="89" covered="1"/><du var="buf" def="67" use="93" covered="1"/><du var="buf" def="67" use="91" covered="0"/><du var="buf" def="67" use="87" covered="1"/><du var="buf" def="67" use="83" covered="0"/><du var="this.dateCode" def="67" use="73" covered="1"/><du var="numericDate" def="67" use="68" target="69" covered="1"/><du var="numericDate" def="67" use="68" target="72" covered="1"/><du var="numericDate" def="67" use="76" covered="1"/><du var="numericDate" def="67" use="77" covered="1"/><du var="day" def="76" use="90" target="91" covered="0"/><du var="day" def="76" use="90" target="93" covered="1"/><du var="day" def="76" use="93" covered="1"/><du var="month" def="78" use="86" target="87" covered="1"/><du var="month" def="78" use="86" target="89" covered="0"/><du var="month" def="78" use="89" covered="1"/><du var="year" def="80" use="82" target="83" covered="0"/><du var="year" def="80" use="82" target="85" covered="1"/><du var="year" def="80" use="85" covered="1"/><counter type="DU" missed="5" covered="19"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="6" covered="23"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/oned/rss/expanded/decoders/AI013x0xDecoder"><method name="parseInformation" desc="()Ljava/lang/String;"><du var="this" def="46" use="46" target="47" covered="1"/><du var="this" def="46" use="46" target="50" covered="1"/><du var="this" def="46" use="52" covered="1"/><du var="this" def="46" use="53" covered="1"/><counter type="DU" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/oned/rss/expanded/BitArrayBuilder"><method name="buildBitArray" desc="(Ljava/util/List;)Lcom/google/zxing/common/BitArray;"><du var="pairs" def="43" use="44" target="45" covered="0"/><du var="pairs" def="43" use="44" target="48" covered="1"/><du var="pairs" def="43" use="53" covered="1"/><du var="pairs" def="43" use="62" target="83" covered="1"/><du var="pairs" def="43" use="62" target="63" covered="1"/><du var="pairs" def="43" use="63" covered="1"/><du var="charNumber" def="43" use="48" covered="1"/><du var="charNumber" def="43" use="45" covered="0"/><du var="charNumber" def="45" use="48" covered="0"/><du var="binary" def="50" use="57" covered="1"/><du var="binary" def="50" use="68" covered="1"/><du var="binary" def="50" use="77" covered="1"/><du var="binary" def="50" use="83" covered="1"/><du var="accPos" def="51" use="59" covered="1"/><du var="accPos" def="51" use="57" covered="0"/><du var="accPos" def="51" use="70" covered="0"/><du var="accPos" def="51" use="68" covered="0"/><du var="accPos" def="51" use="79" covered="0"/><du var="accPos" def="51" use="77" covered="0"/><du var="firstValue" def="54" use="56" target="57" covered="1"/><du var="firstValue" def="54" use="56" target="59" covered="1"/><du var="i" def="55" use="55" target="62" covered="0"/><du var="i" def="55" use="55" target="56" covered="1"/><du var="i" def="55" use="56" target="57" covered="0"/><du var="i" def="55" use="56" target="59" covered="1"/><du var="i" def="55" use="55" covered="1"/><du var="accPos" def="59" use="59" covered="1"/><du var="accPos" def="59" use="57" covered="1"/><du var="accPos" def="59" use="70" covered="1"/><du var="accPos" def="59" use="68" covered="0"/><du var="accPos" def="59" use="79" covered="0"/><du var="accPos" def="59" use="77" covered="0"/><du var="i" def="55" use="55" target="62" covered="1"/><du var="i" def="55" use="55" target="56" covered="1"/><du var="i" def="55" use="56" target="57" covered="1"/><du var="i" def="55" use="56" target="59" covered="1"/><du var="i" def="55" use="55" covered="1"/><du var="i" def="62" use="62" target="83" covered="0"/><du var="i" def="62" use="62" target="63" covered="1"/><du var="i" def="62" use="63" covered="1"/><du var="i" def="62" use="62" covered="1"/><du var="currentPair" def="63" use="73" target="74" covered="1"/><du var="currentPair" def="63" use="73" target="62" covered="0"/><du var="currentPair" def="63" use="74" covered="1"/><du var="leftValue" def="65" use="67" target="68" covered="1"/><du var="leftValue" def="65" use="67" target="70" covered="1"/><du var="j" def="66" use="66" target="73" covered="0"/><du var="j" def="66" use="66" target="67" covered="1"/><du var="j" def="66" use="67" target="68" covered="0"/><du var="j" def="66" use="67" target="70" covered="1"/><du var="j" def="66" use="66" covered="1"/><du var="accPos" def="70" use="70" covered="1"/><du var="accPos" def="70" use="68" covered="1"/><du var="accPos" def="70" use="79" covered="1"/><du var="accPos" def="70" use="77" covered="0"/><du var="j" def="66" use="66" target="73" covered="1"/><du var="j" def="66" use="66" target="67" covered="1"/><du var="j" def="66" use="67" target="68" covered="1"/><du var="j" def="66" use="67" target="70" covered="1"/><du var="j" def="66" use="66" covered="1"/><du var="rightValue" def="74" use="76" target="77" covered="1"/><du var="rightValue" def="74" use="76" target="79" covered="1"/><du var="j" def="75" use="75" target="62" covered="0"/><du var="j" def="75" use="75" target="76" covered="1"/><du var="j" def="75" use="76" target="77" covered="0"/><du var="j" def="75" use="76" target="79" covered="1"/><du var="j" def="75" use="75" covered="1"/><du var="accPos" def="79" use="79" covered="1"/><du var="accPos" def="79" use="77" covered="1"/><du var="accPos" def="79" use="70" covered="0"/><du var="accPos" def="79" use="68" covered="0"/><du var="j" def="75" use="75" target="62" covered="1"/><du var="j" def="75" use="75" target="76" covered="1"/><du var="j" def="75" use="76" target="77" covered="1"/><du var="j" def="75" use="76" target="79" covered="1"/><du var="j" def="75" use="75" covered="1"/><du var="i" def="62" use="62" target="83" covered="1"/><du var="i" def="62" use="62" target="63" covered="0"/><du var="i" def="62" use="63" covered="0"/><du var="i" def="62" use="62" covered="0"/><counter type="DU" missed="25" covered="55"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="25" covered="55"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/oned/rss/expanded/ExpandedPair"><method name="mustBeLast" desc="()Z"><du var="this" def="69" use="69" target="69" covered="0"/><du var="this" def="69" use="69" target="69" covered="0"/><du var="this.rightChar" def="69" use="69" target="69" covered="0"/><du var="this.rightChar" def="69" use="69" target="69" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><du var="this" def="75" use="76" target="76" covered="0"/><du var="this" def="75" use="76" target="76" covered="0"/><du var="this" def="75" use="74" covered="0"/><du var="this.finderPattern" def="75" use="76" target="76" covered="0"/><du var="this.finderPattern" def="75" use="76" target="76" covered="0"/><du var="this.finderPattern" def="75" use="74" covered="0"/><du var="this.leftChar" def="75" use="74" covered="0"/><du var="this.rightChar" def="75" use="74" covered="0"/><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><du var="this" def="81" use="86" target="87" covered="0"/><du var="this" def="81" use="86" target="85" covered="0"/><du var="this" def="81" use="87" target="88" covered="0"/><du var="this" def="81" use="87" target="85" covered="0"/><du var="this" def="81" use="88" target="85" covered="0"/><du var="this" def="81" use="88" target="85" covered="0"/><du var="o" def="81" use="81" target="82" covered="0"/><du var="o" def="81" use="81" target="84" covered="0"/><du var="o" def="81" use="84" covered="0"/><du var="this.leftChar" def="81" use="86" target="87" covered="0"/><du var="this.leftChar" def="81" use="86" target="85" covered="0"/><du var="this.rightChar" def="81" use="87" target="88" covered="0"/><du var="this.rightChar" def="81" use="87" target="85" covered="0"/><du var="this.finderPattern" def="81" use="88" target="85" covered="0"/><du var="this.finderPattern" def="81" use="88" target="85" covered="0"/><du var="that" def="84" use="86" target="87" covered="0"/><du var="that" def="84" use="86" target="85" covered="0"/><du var="that" def="84" use="87" target="88" covered="0"/><du var="that" def="84" use="87" target="85" covered="0"/><du var="that" def="84" use="88" target="85" covered="0"/><du var="that" def="84" use="88" target="85" covered="0"/><du var="that.leftChar" def="84" use="86" target="87" covered="0"/><du var="that.leftChar" def="84" use="86" target="85" covered="0"/><du var="that.rightChar" def="84" use="87" target="88" covered="0"/><du var="that.rightChar" def="84" use="87" target="85" covered="0"/><du var="that.finderPattern" def="84" use="88" target="85" covered="0"/><du var="that.finderPattern" def="84" use="88" target="85" covered="0"/><counter type="DU" missed="27" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equalsOrNull" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z"><du var="o1" def="92" use="92" target="92" covered="0"/><du var="o1" def="92" use="92" target="92" covered="0"/><du var="o1" def="92" use="92" covered="0"/><du var="o2" def="92" use="92" covered="0"/><du var="o2" def="92" use="92" target="92" covered="0"/><du var="o2" def="92" use="92" target="92" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashNotNull" desc="(Ljava/lang/Object;)I"><du var="o" def="101" use="101" target="101" covered="0"/><du var="o" def="101" use="101" target="101" covered="0"/><du var="o" def="101" use="101" covered="0"/><counter type="DU" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="48" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/rss/expanded/RSSExpandedReader"><method name="checkRows" desc="(Z)Ljava/util/List;"><du var="this" def="187" use="187" target="188" covered="0"/><du var="this" def="187" use="187" target="192" covered="0"/><du var="this" def="187" use="192" covered="0"/><du var="this" def="187" use="199" covered="0"/><du var="this" def="187" use="205" covered="0"/><du var="this" def="187" use="194" covered="0"/><du var="this" def="187" use="188" covered="0"/><du var="reverse" def="187" use="193" target="194" covered="0"/><du var="reverse" def="187" use="193" target="197" covered="0"/><du var="reverse" def="187" use="204" target="205" covered="0"/><du var="reverse" def="187" use="204" target="208" covered="0"/><du var="this.rows" def="187" use="187" target="188" covered="0"/><du var="this.rows" def="187" use="187" target="192" covered="0"/><du var="this.rows" def="187" use="205" covered="0"/><du var="this.rows" def="187" use="194" covered="0"/><du var="this.rows" def="187" use="188" covered="0"/><du var="this.pairs" def="187" use="192" covered="0"/><du var="ps" def="199" use="208" covered="0"/><counter type="DU" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkRows" desc="(Ljava/util/List;I)Ljava/util/List;"><du var="this" def="214" use="214" target="241" covered="0"/><du var="this" def="214" use="214" target="215" covered="0"/><du var="this" def="214" use="215" covered="0"/><du var="this" def="214" use="216" covered="0"/><du var="this" def="214" use="218" covered="0"/><du var="this" def="214" use="220" covered="0"/><du var="this" def="214" use="222" target="223" covered="0"/><du var="this" def="214" use="222" target="226" covered="0"/><du var="this" def="214" use="226" target="227" covered="0"/><du var="this" def="214" use="226" target="230" covered="0"/><du var="this" def="214" use="235" covered="0"/><du var="this" def="214" use="227" covered="0"/><du var="collectedRows" def="214" use="217" covered="0"/><du var="collectedRows" def="214" use="231" covered="0"/><du var="this.rows" def="214" use="214" target="241" covered="0"/><du var="this.rows" def="214" use="214" target="215" covered="0"/><du var="this.rows" def="214" use="215" covered="0"/><du var="this.pairs" def="214" use="216" covered="0"/><du var="this.pairs" def="214" use="218" covered="0"/><du var="this.pairs" def="214" use="220" covered="0"/><du var="this.pairs" def="214" use="222" target="223" covered="0"/><du var="this.pairs" def="214" use="222" target="226" covered="0"/><du var="this.pairs" def="214" use="227" covered="0"/><du var="i" def="214" use="214" target="241" covered="0"/><du var="i" def="214" use="214" target="215" covered="0"/><du var="i" def="214" use="215" covered="0"/><du var="i" def="214" use="235" covered="0"/><du var="i" def="214" use="214" covered="0"/><du var="row" def="215" use="220" covered="0"/><du var="row" def="215" use="232" covered="0"/><du var="i" def="214" use="214" target="241" covered="0"/><du var="i" def="214" use="214" target="215" covered="0"/><du var="i" def="214" use="215" covered="0"/><du var="i" def="214" use="235" covered="0"/><du var="i" def="214" use="214" covered="0"/><counter type="DU" missed="38" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidSequence" desc="(Ljava/util/List;)Z"><du var="pairs" def="247" use="248" target="249" covered="0"/><du var="pairs" def="247" use="248" target="252" covered="0"/><du var="pairs" def="247" use="253" target="260" covered="0"/><du var="pairs" def="247" use="253" target="254" covered="0"/><du var="pairs" def="247" use="254" target="255" covered="0"/><du var="pairs" def="247" use="254" target="253" covered="0"/><du var="sequence" def="247" use="248" target="249" covered="0"/><du var="sequence" def="247" use="248" target="252" covered="0"/><du var="sequence" def="247" use="254" target="255" covered="0"/><du var="sequence" def="247" use="254" target="253" covered="0"/><du var="stop" def="252" use="260" target="261" covered="0"/><du var="stop" def="252" use="260" target="247" covered="0"/><du var="j" def="253" use="253" target="260" covered="0"/><du var="j" def="253" use="253" target="254" covered="0"/><du var="j" def="253" use="254" target="255" covered="0"/><du var="j" def="253" use="254" target="253" covered="0"/><du var="j" def="253" use="253" covered="0"/><du var="stop" def="255" use="260" target="261" covered="0"/><du var="stop" def="255" use="260" target="247" covered="0"/><du var="j" def="253" use="253" target="260" covered="0"/><du var="j" def="253" use="253" target="254" covered="0"/><du var="j" def="253" use="254" target="255" covered="0"/><du var="j" def="253" use="254" target="253" covered="0"/><du var="j" def="253" use="253" covered="0"/><counter type="DU" missed="35" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="storeRow" desc="(IZ)V"><du var="this" def="270" use="273" target="282" covered="0"/><du var="this" def="270" use="273" target="274" covered="0"/><du var="this" def="270" use="274" covered="0"/><du var="this" def="270" use="279" covered="0"/><du var="this" def="270" use="276" covered="0"/><du var="this" def="270" use="291" target="292" covered="0"/><du var="this" def="270" use="291" target="295" covered="0"/><du var="this" def="270" use="295" covered="0"/><du var="this" def="270" use="295" covered="0"/><du var="this" def="270" use="297" covered="0"/><du var="rowNumber" def="270" use="275" target="276" covered="0"/><du var="rowNumber" def="270" use="275" target="279" covered="0"/><du var="rowNumber" def="270" use="295" covered="0"/><du var="wasReversed" def="270" use="295" covered="0"/><du var="this.rows" def="270" use="273" target="282" covered="0"/><du var="this.rows" def="270" use="273" target="274" covered="0"/><du var="this.rows" def="270" use="274" covered="0"/><du var="this.rows" def="270" use="291" target="292" covered="0"/><du var="this.rows" def="270" use="291" target="295" covered="0"/><du var="this.rows" def="270" use="295" covered="0"/><du var="this.rows" def="270" use="297" covered="0"/><du var="this.pairs" def="270" use="279" covered="0"/><du var="this.pairs" def="270" use="276" covered="0"/><du var="this.pairs" def="270" use="291" target="292" covered="0"/><du var="this.pairs" def="270" use="291" target="295" covered="0"/><du var="this.pairs" def="270" use="295" covered="0"/><du var="this.pairs" def="270" use="297" covered="0"/><du var="insertPos" def="270" use="273" target="282" covered="0"/><du var="insertPos" def="270" use="273" target="274" covered="0"/><du var="insertPos" def="270" use="274" covered="0"/><du var="insertPos" def="270" use="280" covered="0"/><du var="insertPos" def="270" use="295" covered="0"/><du var="prevIsSame" def="271" use="282" target="283" covered="0"/><du var="prevIsSame" def="271" use="282" target="291" covered="0"/><du var="nextIsSame" def="272" use="282" target="282" covered="0"/><du var="nextIsSame" def="272" use="282" target="283" covered="0"/><du var="erow" def="274" use="275" target="276" covered="0"/><du var="erow" def="274" use="275" target="279" covered="0"/><du var="erow" def="274" use="279" covered="0"/><du var="erow" def="274" use="276" covered="0"/><du var="nextIsSame" def="276" use="282" target="282" covered="0"/><du var="nextIsSame" def="276" use="282" target="283" covered="0"/><du var="prevIsSame" def="279" use="282" target="283" covered="0"/><du var="prevIsSame" def="279" use="282" target="291" covered="0"/><du var="insertPos" def="280" use="273" target="282" covered="0"/><du var="insertPos" def="280" use="273" target="274" covered="0"/><du var="insertPos" def="280" use="274" covered="0"/><du var="insertPos" def="280" use="280" covered="0"/><du var="insertPos" def="280" use="295" covered="0"/><counter type="DU" missed="49" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removePartialRows" desc="(Ljava/util/List;Ljava/util/List;)V"><du var="pairs" def="302" use="304" target="305" covered="0"/><du var="pairs" def="302" use="304" target="307" covered="0"/><du var="pairs" def="302" use="310" covered="0"/><du var="iterator" def="302" use="302" target="326" covered="0"/><du var="iterator" def="302" use="302" target="303" covered="0"/><du var="iterator" def="302" use="303" covered="0"/><du var="iterator" def="302" use="323" covered="0"/><du var="r" def="303" use="304" target="305" covered="0"/><du var="r" def="303" use="304" target="307" covered="0"/><du var="r" def="303" use="308" covered="0"/><du var="allFound" def="307" use="321" target="323" covered="0"/><du var="allFound" def="307" use="321" target="302" covered="0"/><du var="p" def="308" use="311" target="312" covered="0"/><du var="p" def="308" use="311" target="310" covered="0"/><du var="found" def="309" use="316" target="317" covered="0"/><du var="found" def="309" use="316" target="308" covered="0"/><du var="pp" def="310" use="311" target="312" covered="0"/><du var="pp" def="310" use="311" target="310" covered="0"/><du var="found" def="312" use="316" target="317" covered="0"/><du var="found" def="312" use="316" target="308" covered="0"/><du var="allFound" def="317" use="321" target="323" covered="0"/><du var="allFound" def="317" use="321" target="302" covered="0"/><counter type="DU" missed="28" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPartialRow" desc="(Ljava/lang/Iterable;Ljava/lang/Iterable;)Z"><du var="pairs" def="330" use="332" covered="0"/><du var="r" def="330" use="334" covered="0"/><du var="allFound" def="331" use="345" target="347" covered="0"/><du var="allFound" def="331" use="345" target="330" covered="0"/><du var="p" def="332" use="335" target="336" covered="0"/><du var="p" def="332" use="335" target="334" covered="0"/><du var="found" def="333" use="340" target="341" covered="0"/><du var="found" def="333" use="340" target="332" covered="0"/><du var="pp" def="334" use="335" target="336" covered="0"/><du var="pp" def="334" use="335" target="334" covered="0"/><du var="found" def="336" use="340" target="341" covered="0"/><du var="found" def="336" use="340" target="332" covered="0"/><du var="allFound" def="341" use="345" target="347" covered="0"/><du var="allFound" def="341" use="345" target="330" covered="0"/><counter type="DU" missed="23" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkChecksum" desc="()Z"><du var="this" def="377" use="388" target="399" covered="0"/><du var="this" def="377" use="388" target="389" covered="0"/><du var="this" def="377" use="389" covered="0"/><du var="this.pairs" def="377" use="388" target="399" covered="0"/><du var="this.pairs" def="377" use="388" target="389" covered="0"/><du var="this.pairs" def="377" use="389" covered="0"/><du var="checkCharacter" def="378" use="403" target="403" covered="0"/><du var="checkCharacter" def="378" use="403" target="403" covered="0"/><du var="firstCharacter" def="379" use="381" target="382" covered="0"/><du var="firstCharacter" def="379" use="381" target="385" covered="0"/><du var="firstCharacter" def="379" use="385" covered="0"/><du var="checksum" def="385" use="390" covered="0"/><du var="checksum" def="385" use="399" covered="0"/><du var="s" def="386" use="391" covered="0"/><du var="s" def="386" use="401" covered="0"/><du var="i" def="388" use="388" target="399" covered="0"/><du var="i" def="388" use="388" target="389" covered="0"/><du var="i" def="388" use="389" covered="0"/><du var="i" def="388" use="388" covered="0"/><du var="checksum" def="390" use="390" covered="0"/><du var="checksum" def="390" use="399" covered="0"/><du var="checksum" def="390" use="394" covered="0"/><du var="s" def="391" use="391" covered="0"/><du var="s" def="391" use="401" covered="0"/><du var="s" def="391" use="395" covered="0"/><du var="currentRightChar" def="392" use="393" target="394" covered="0"/><du var="currentRightChar" def="392" use="393" target="388" covered="0"/><du var="currentRightChar" def="392" use="394" covered="0"/><du var="checksum" def="394" use="390" covered="0"/><du var="checksum" def="394" use="399" covered="0"/><du var="s" def="395" use="391" covered="0"/><du var="s" def="395" use="401" covered="0"/><du var="i" def="388" use="388" target="399" covered="0"/><du var="i" def="388" use="388" target="389" covered="0"/><du var="i" def="388" use="389" covered="0"/><du var="i" def="388" use="388" covered="0"/><du var="checkCharacterValue" def="401" use="403" target="403" covered="0"/><du var="checkCharacterValue" def="401" use="403" target="403" covered="0"/><counter type="DU" missed="38" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNextSecondBar" desc="(Lcom/google/zxing/common/BitArray;I)I"><du var="row" def="408" use="408" target="409" covered="0"/><du var="row" def="408" use="408" target="412" covered="0"/><du var="row" def="408" use="412" covered="0"/><du var="row" def="408" use="413" covered="0"/><du var="row" def="408" use="409" covered="0"/><du var="row" def="408" use="410" covered="0"/><du var="initialPos" def="408" use="408" target="409" covered="0"/><du var="initialPos" def="408" use="408" target="412" covered="0"/><du var="initialPos" def="408" use="412" covered="0"/><du var="initialPos" def="408" use="409" covered="0"/><du var="currentPos" def="410" use="415" covered="0"/><du var="currentPos" def="413" use="415" covered="0"/><counter type="DU" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retrieveNextPair" desc="(Lcom/google/zxing/common/BitArray;Ljava/util/List;I)Lcom/google/zxing/oned/rss/expanded/ExpandedPair;"><du var="this" def="421" use="422" target="423" covered="0"/><du var="this" def="421" use="422" target="428" covered="0"/><du var="this" def="421" use="431" covered="0"/><du var="this" def="421" use="432" covered="0"/><du var="this" def="421" use="443" covered="0"/><du var="this" def="421" use="451" covered="0"/><du var="this" def="421" use="434" covered="0"/><du var="row" def="421" use="431" covered="0"/><du var="row" def="421" use="432" covered="0"/><du var="row" def="421" use="443" covered="0"/><du var="row" def="421" use="451" covered="0"/><du var="row" def="421" use="434" covered="0"/><du var="previousPairs" def="421" use="421" target="421" covered="0"/><du var="previousPairs" def="421" use="421" target="421" covered="0"/><du var="previousPairs" def="421" use="431" covered="0"/><du var="previousPairs" def="421" use="445" target="445" covered="0"/><du var="previousPairs" def="421" use="445" target="451" covered="0"/><du var="previousPairs" def="421" use="445" target="446" covered="0"/><du var="previousPairs" def="421" use="445" target="451" covered="0"/><du var="rowNumber" def="421" use="432" covered="0"/><du var="this.startFromEven" def="421" use="422" target="423" covered="0"/><du var="this.startFromEven" def="421" use="422" target="428" covered="0"/><du var="this.startEnd" def="421" use="434" covered="0"/><du var="isOddPattern" def="421" use="432" covered="0"/><du var="isOddPattern" def="421" use="443" covered="0"/><du var="isOddPattern" def="421" use="451" covered="0"/><du var="isOddPattern" def="421" use="423" target="423" covered="0"/><du var="isOddPattern" def="421" use="423" target="423" covered="0"/><du var="isOddPattern" def="423" use="432" covered="0"/><du var="isOddPattern" def="423" use="443" covered="0"/><du var="isOddPattern" def="423" use="451" covered="0"/><du var="keepFinding" def="428" use="438" target="443" covered="0"/><du var="keepFinding" def="428" use="438" target="431" covered="0"/><du var="forcedOffset" def="429" use="431" covered="0"/><du var="pattern" def="432" use="433" target="434" covered="0"/><du var="pattern" def="432" use="433" target="436" covered="0"/><du var="pattern" def="432" use="443" covered="0"/><du var="pattern" def="432" use="451" covered="0"/><du var="pattern" def="432" use="455" covered="0"/><du var="forcedOffset" def="434" use="431" covered="0"/><du var="keepFinding" def="436" use="438" target="443" covered="0"/><du var="keepFinding" def="436" use="438" target="431" covered="0"/><du var="leftChar" def="443" use="455" covered="0"/><counter type="DU" missed="43" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findNextPair" desc="(Lcom/google/zxing/common/BitArray;Ljava/util/List;I)V"><du var="this" def="460" use="478" target="479" covered="0"/><du var="this" def="460" use="478" target="482" covered="0"/><du var="this" def="460" use="503" covered="0"/><du var="this" def="460" use="504" covered="0"/><du var="row" def="460" use="484" target="484" covered="0"/><du var="row" def="460" use="484" target="484" covered="0"/><du var="row" def="460" use="494" target="495" covered="0"/><du var="row" def="460" use="494" target="497" covered="0"/><du var="previousPairs" def="460" use="471" target="472" covered="0"/><du var="previousPairs" def="460" use="471" target="474" covered="0"/><du var="previousPairs" def="460" use="474" covered="0"/><du var="previousPairs" def="460" use="477" target="477" covered="0"/><du var="previousPairs" def="460" use="477" target="477" covered="0"/><du var="forcedOffset" def="460" use="469" target="470" covered="0"/><du var="forcedOffset" def="460" use="469" target="471" covered="0"/><du var="forcedOffset" def="460" use="470" covered="0"/><du var="this.startFromEven" def="460" use="478" target="479" covered="0"/><du var="this.startFromEven" def="460" use="478" target="482" covered="0"/><du var="this.startEnd" def="460" use="503" covered="0"/><du var="this.startEnd" def="460" use="504" covered="0"/><du var="counters" def="460" use="521" covered="0"/><du var="counters" def="460" use="502" target="503" covered="0"/><du var="counters" def="460" use="502" target="508" covered="0"/><du var="counters" def="460" use="512" covered="0"/><du var="counters" def="460" use="513" covered="0"/><du var="counters" def="460" use="514" covered="0"/><du var="counters" def="460" use="515" covered="0"/><du var="counters" def="460" use="516" covered="0"/><du var="counters" def="460" use="509" covered="0"/><du var="counters" def="460" use="499" covered="0"/><du var="counters" def="460" use="495" covered="0"/><du var="width" def="466" use="483" target="491" covered="0"/><du var="width" def="466" use="483" target="484" covered="0"/><du var="width" def="466" use="493" target="525" covered="0"/><du var="width" def="466" use="493" target="494" covered="0"/><du var="rowOffset" def="470" use="483" target="491" covered="0"/><du var="rowOffset" def="470" use="483" target="484" covered="0"/><du var="rowOffset" def="470" use="484" target="484" covered="0"/><du var="rowOffset" def="470" use="484" target="484" covered="0"/><du var="rowOffset" def="470" use="488" covered="0"/><du var="rowOffset" def="470" use="492" covered="0"/><du var="rowOffset" def="470" use="493" covered="0"/><du var="rowOffset" def="472" use="483" target="491" covered="0"/><du var="rowOffset" def="472" use="483" target="484" covered="0"/><du var="rowOffset" def="472" use="484" target="484" covered="0"/><du var="rowOffset" def="472" use="484" target="484" covered="0"/><du var="rowOffset" def="472" use="488" covered="0"/><du var="rowOffset" def="472" use="492" covered="0"/><du var="rowOffset" def="472" use="493" covered="0"/><du var="rowOffset" def="475" use="483" target="491" covered="0"/><du var="rowOffset" def="475" use="483" target="484" covered="0"/><du var="rowOffset" def="475" use="484" target="484" covered="0"/><du var="rowOffset" def="475" use="484" target="484" covered="0"/><du var="rowOffset" def="475" use="488" covered="0"/><du var="rowOffset" def="475" use="492" covered="0"/><du var="rowOffset" def="475" use="493" covered="0"/><du var="searchingEvenPair" def="477" use="498" target="499" covered="0"/><du var="searchingEvenPair" def="477" use="498" target="502" covered="0"/><du var="searchingEvenPair" def="477" use="508" target="509" covered="0"/><du var="searchingEvenPair" def="477" use="508" target="512" covered="0"/><du var="searchingEvenPair" def="477" use="479" target="479" covered="0"/><du var="searchingEvenPair" def="477" use="479" target="479" covered="0"/><du var="searchingEvenPair" def="479" use="498" target="499" covered="0"/><du var="searchingEvenPair" def="479" use="498" target="502" covered="0"/><du var="searchingEvenPair" def="479" use="508" target="509" covered="0"/><du var="searchingEvenPair" def="479" use="508" target="512" covered="0"/><du var="isWhite" def="482" use="494" target="495" covered="0"/><du var="isWhite" def="482" use="494" target="497" covered="0"/><du var="isWhite" def="482" use="522" target="522" covered="0"/><du var="isWhite" def="482" use="522" target="522" covered="0"/><du var="isWhite" def="484" use="485" target="486" covered="0"/><du var="isWhite" def="484" use="485" target="488" covered="0"/><du var="isWhite" def="484" use="494" target="495" covered="0"/><du var="isWhite" def="484" use="494" target="497" covered="0"/><du var="isWhite" def="484" use="522" target="522" covered="0"/><du var="isWhite" def="484" use="522" target="522" covered="0"/><du var="rowOffset" def="488" use="483" target="491" covered="0"/><du var="rowOffset" def="488" use="483" target="484" covered="0"/><du var="rowOffset" def="488" use="484" target="484" covered="0"/><du var="rowOffset" def="488" use="484" target="484" covered="0"/><du var="rowOffset" def="488" use="488" covered="0"/><du var="rowOffset" def="488" use="492" covered="0"/><du var="rowOffset" def="488" use="493" covered="0"/><du var="counterPosition" def="491" use="497" target="498" covered="0"/><du var="counterPosition" def="491" use="497" target="519" covered="0"/><du var="counterPosition" def="491" use="519" covered="0"/><du var="counterPosition" def="491" use="517" covered="0"/><du var="counterPosition" def="491" use="495" covered="0"/><du var="patternStart" def="492" use="512" covered="0"/><du var="patternStart" def="492" use="503" covered="0"/><du var="x" def="493" use="493" target="525" covered="0"/><du var="x" def="493" use="493" target="494" covered="0"/><du var="x" def="493" use="494" target="495" covered="0"/><du var="x" def="493" use="494" target="497" covered="0"/><du var="x" def="493" use="493" covered="0"/><du var="x" def="493" use="504" covered="0"/><du var="patternStart" def="512" use="512" covered="0"/><du var="patternStart" def="512" use="503" covered="0"/><du var="counterPosition" def="517" use="521" covered="0"/><du var="counterPosition" def="517" use="497" target="498" covered="0"/><du var="counterPosition" def="517" use="497" target="519" covered="0"/><du var="counterPosition" def="517" use="519" covered="0"/><du var="counterPosition" def="517" use="517" covered="0"/><du var="counterPosition" def="517" use="495" covered="0"/><du var="counterPosition" def="519" use="521" covered="0"/><du var="counterPosition" def="519" use="497" target="498" covered="0"/><du var="counterPosition" def="519" use="497" target="519" covered="0"/><du var="counterPosition" def="519" use="519" covered="0"/><du var="counterPosition" def="519" use="517" covered="0"/><du var="counterPosition" def="519" use="495" covered="0"/><du var="isWhite" def="522" use="494" target="495" covered="0"/><du var="isWhite" def="522" use="494" target="497" covered="0"/><du var="isWhite" def="522" use="522" target="522" covered="0"/><du var="isWhite" def="522" use="522" target="522" covered="0"/><du var="x" def="493" use="493" target="525" covered="0"/><du var="x" def="493" use="493" target="494" covered="0"/><du var="x" def="493" use="494" target="495" covered="0"/><du var="x" def="493" use="494" target="497" covered="0"/><du var="x" def="493" use="493" covered="0"/><du var="x" def="493" use="504" covered="0"/><counter type="DU" missed="120" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverseCounters" desc="([I)V"><du var="counters" def="529" use="531" covered="0"/><du var="counters" def="529" use="532" covered="0"/><du var="counters" def="529" use="533" covered="0"/><du var="length" def="529" use="530" target="535" covered="0"/><du var="length" def="529" use="530" target="531" covered="0"/><du var="length" def="529" use="532" covered="0"/><du var="length" def="529" use="533" covered="0"/><du var="i" def="530" use="530" target="535" covered="0"/><du var="i" def="530" use="530" target="531" covered="0"/><du var="i" def="530" use="531" covered="0"/><du var="i" def="530" use="532" covered="0"/><du var="i" def="530" use="533" covered="0"/><du var="i" def="530" use="530" covered="0"/><du var="i" def="530" use="530" target="535" covered="0"/><du var="i" def="530" use="530" target="531" covered="0"/><du var="i" def="530" use="531" covered="0"/><du var="i" def="530" use="532" covered="0"/><du var="i" def="530" use="533" covered="0"/><du var="i" def="530" use="530" covered="0"/><counter type="DU" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseFoundFinderPattern" desc="(Lcom/google/zxing/common/BitArray;IZ)Lcom/google/zxing/oned/rss/FinderPattern;"><du var="this" def="543" use="560" covered="0"/><du var="this" def="543" use="562" covered="0"/><du var="this" def="543" use="563" covered="0"/><du var="this" def="543" use="567" covered="0"/><du var="this" def="543" use="546" covered="0"/><du var="this" def="543" use="553" covered="0"/><du var="this" def="543" use="555" covered="0"/><du var="row" def="543" use="562" covered="0"/><du var="row" def="543" use="548" target="552" covered="0"/><du var="row" def="543" use="548" target="549" covered="0"/><du var="rowNumber" def="543" use="577" covered="0"/><du var="oddPattern" def="543" use="543" target="546" covered="0"/><du var="oddPattern" def="543" use="543" target="560" covered="0"/><du var="this.startEnd" def="543" use="560" covered="0"/><du var="this.startEnd" def="543" use="562" covered="0"/><du var="this.startEnd" def="543" use="563" covered="0"/><du var="this.startEnd" def="543" use="546" covered="0"/><du var="this.startEnd" def="543" use="553" covered="0"/><du var="this.startEnd" def="543" use="555" covered="0"/><du var="FINDER_PATTERNS" def="543" use="573" covered="0"/><du var="firstElementStart" def="546" use="548" target="548" covered="0"/><du var="firstElementStart" def="546" use="548" target="552" covered="0"/><du var="firstElementStart" def="546" use="552" covered="0"/><du var="firstElementStart" def="546" use="548" target="552" covered="0"/><du var="firstElementStart" def="546" use="548" target="549" covered="0"/><du var="firstElementStart" def="546" use="549" covered="0"/><du var="firstElementStart" def="549" use="548" target="548" covered="0"/><du var="firstElementStart" def="549" use="548" target="552" covered="0"/><du var="firstElementStart" def="549" use="552" covered="0"/><du var="firstElementStart" def="549" use="548" target="552" covered="0"/><du var="firstElementStart" def="549" use="548" target="549" covered="0"/><du var="firstElementStart" def="549" use="549" covered="0"/><du var="firstCounter" def="553" use="570" covered="0"/><du var="start" def="554" use="577" covered="0"/><du var="start" def="554" use="577" covered="0"/><du var="end" def="555" use="577" covered="0"/><du var="end" def="555" use="577" covered="0"/><du var="start" def="560" use="577" covered="0"/><du var="start" def="560" use="577" covered="0"/><du var="end" def="562" use="577" covered="0"/><du var="end" def="562" use="577" covered="0"/><du var="firstCounter" def="563" use="570" covered="0"/><counter type="DU" missed="42" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeDataCharacter" desc="(Lcom/google/zxing/common/BitArray;Lcom/google/zxing/oned/rss/FinderPattern;ZZ)Lcom/google/zxing/oned/rss/DataCharacter;"><du var="this" def="584" use="615" covered="0"/><du var="this" def="584" use="616" covered="0"/><du var="this" def="584" use="617" covered="0"/><du var="this" def="584" use="618" covered="0"/><du var="this" def="584" use="644" covered="0"/><du var="row" def="584" use="597" covered="0"/><du var="row" def="584" use="595" covered="0"/><du var="pattern" def="584" use="597" covered="0"/><du var="pattern" def="584" use="610" covered="0"/><du var="pattern" def="584" use="646" covered="0"/><du var="pattern" def="584" use="651" target="652" covered="0"/><du var="pattern" def="584" use="651" target="655" covered="0"/><du var="pattern" def="584" use="660" target="661" covered="0"/><du var="pattern" def="584" use="660" target="659" covered="0"/><du var="pattern" def="584" use="595" covered="0"/><du var="isOddPattern" def="584" use="646" target="646" covered="0"/><du var="isOddPattern" def="584" use="646" target="646" covered="0"/><du var="isOddPattern" def="584" use="651" target="652" covered="0"/><du var="isOddPattern" def="584" use="651" target="655" covered="0"/><du var="isOddPattern" def="584" use="660" target="661" covered="0"/><du var="isOddPattern" def="584" use="660" target="659" covered="0"/><du var="leftChar" def="584" use="594" target="595" covered="0"/><du var="leftChar" def="584" use="594" target="597" covered="0"/><du var="leftChar" def="584" use="646" target="646" covered="0"/><du var="leftChar" def="584" use="646" target="646" covered="0"/><du var="leftChar" def="584" use="651" target="652" covered="0"/><du var="leftChar" def="584" use="651" target="655" covered="0"/><du var="leftChar" def="584" use="660" target="661" covered="0"/><du var="leftChar" def="584" use="660" target="659" covered="0"/><du var="WEIGHTS" def="584" use="652" covered="0"/><du var="WEIGHTS" def="584" use="661" covered="0"/><du var="SYMBOL_WIDEST" def="584" use="673" covered="0"/><du var="EVEN_TOTAL_SUBSET" def="584" use="677" covered="0"/><du var="GSUM" def="584" use="678" covered="0"/><du var="counters" def="584" use="597" covered="0"/><du var="counters" def="584" use="599" covered="0"/><du var="counters" def="584" use="600" covered="0"/><du var="counters" def="584" use="601" covered="0"/><du var="counters" def="584" use="602" covered="0"/><du var="counters" def="584" use="607" covered="0"/><du var="counters" def="584" use="620" target="644" covered="0"/><du var="counters" def="584" use="620" target="621" covered="0"/><du var="counters" def="584" use="621" covered="0"/><du var="counters" def="584" use="595" covered="0"/><du var="i" def="599" use="599" target="606" covered="0"/><du var="i" def="599" use="599" target="600" covered="0"/><du var="i" def="599" use="600" covered="0"/><du var="i" def="599" use="601" covered="0"/><du var="i" def="599" use="599" covered="0"/><du var="j" def="599" use="599" target="606" covered="0"/><du var="j" def="599" use="599" target="600" covered="0"/><du var="j" def="599" use="601" covered="0"/><du var="j" def="599" use="602" covered="0"/><du var="j" def="599" use="599" covered="0"/><du var="i" def="599" use="599" target="606" covered="0"/><du var="i" def="599" use="599" target="600" covered="0"/><du var="i" def="599" use="600" covered="0"/><du var="i" def="599" use="601" covered="0"/><du var="i" def="599" use="599" covered="0"/><du var="j" def="599" use="599" target="606" covered="0"/><du var="j" def="599" use="599" target="600" covered="0"/><du var="j" def="599" use="601" covered="0"/><du var="j" def="599" use="602" covered="0"/><du var="j" def="599" use="599" covered="0"/><du var="numModules" def="606" use="644" covered="0"/><du var="elementWidth" def="607" use="611" target="612" covered="0"/><du var="elementWidth" def="607" use="611" target="615" covered="0"/><du var="elementWidth" def="607" use="621" covered="0"/><du var="expectedElementWidth" def="610" use="611" target="612" covered="0"/><du var="expectedElementWidth" def="610" use="611" target="615" covered="0"/><du var="oddCounts" def="615" use="636" covered="0"/><du var="oddCounts" def="615" use="650" covered="0"/><du var="oddCounts" def="615" use="655" covered="0"/><du var="oddCounts" def="615" use="653" covered="0"/><du var="oddCounts" def="615" use="675" covered="0"/><du var="evenCounts" def="616" use="639" covered="0"/><du var="evenCounts" def="616" use="659" covered="0"/><du var="evenCounts" def="616" use="662" covered="0"/><du var="evenCounts" def="616" use="676" covered="0"/><du var="oddRoundingErrors" def="617" use="637" covered="0"/><du var="evenRoundingErrors" def="618" use="640" covered="0"/><du var="i" def="620" use="620" target="644" covered="0"/><du var="i" def="620" use="620" target="621" covered="0"/><du var="i" def="620" use="621" covered="0"/><du var="i" def="620" use="634" covered="0"/><du var="i" def="620" use="635" target="636" covered="0"/><du var="i" def="620" use="635" target="639" covered="0"/><du var="i" def="620" use="620" covered="0"/><du var="value" def="621" use="640" covered="0"/><du var="value" def="621" use="637" covered="0"/><du var="value" def="621" use="629" target="630" covered="0"/><du var="value" def="621" use="629" target="632" covered="0"/><du var="value" def="621" use="624" target="625" covered="0"/><du var="value" def="621" use="624" target="627" covered="0"/><du var="count" def="622" use="623" target="624" covered="0"/><du var="count" def="622" use="623" target="628" covered="0"/><du var="count" def="622" use="628" target="629" covered="0"/><du var="count" def="622" use="628" target="634" covered="0"/><du var="count" def="622" use="639" covered="0"/><du var="count" def="622" use="640" covered="0"/><du var="count" def="622" use="636" covered="0"/><du var="count" def="622" use="637" covered="0"/><du var="count" def="627" use="639" covered="0"/><du var="count" def="627" use="640" covered="0"/><du var="count" def="627" use="636" covered="0"/><du var="count" def="627" use="637" covered="0"/><du var="count" def="632" use="639" covered="0"/><du var="count" def="632" use="640" covered="0"/><du var="count" def="632" use="636" covered="0"/><du var="count" def="632" use="637" covered="0"/><du var="offset" def="634" use="639" covered="0"/><du var="offset" def="634" use="640" covered="0"/><du var="offset" def="634" use="636" covered="0"/><du var="offset" def="634" use="637" covered="0"/><du var="i" def="620" use="620" target="644" covered="0"/><du var="i" def="620" use="620" target="621" covered="0"/><du var="i" def="620" use="621" covered="0"/><du var="i" def="620" use="634" covered="0"/><du var="i" def="620" use="635" target="636" covered="0"/><du var="i" def="620" use="635" target="639" covered="0"/><du var="i" def="620" use="620" covered="0"/><du var="weightRowNumber" def="646" use="652" covered="0"/><du var="weightRowNumber" def="646" use="661" covered="0"/><du var="oddSum" def="648" use="655" covered="0"/><du var="oddSum" def="648" use="668" target="668" covered="0"/><du var="oddSum" def="648" use="668" target="669" covered="0"/><du var="oddSum" def="648" use="668" target="668" covered="0"/><du var="oddSum" def="648" use="668" target="669" covered="0"/><du var="oddSum" def="648" use="668" target="669" covered="0"/><du var="oddSum" def="648" use="668" target="672" covered="0"/><du var="oddSum" def="648" use="672" covered="0"/><du var="oddChecksumPortion" def="649" use="653" covered="0"/><du var="oddChecksumPortion" def="649" use="666" covered="0"/><du var="i" def="650" use="650" target="657" covered="0"/><du var="i" def="650" use="650" target="651" covered="0"/><du var="i" def="650" use="655" covered="0"/><du var="i" def="650" use="650" covered="0"/><du var="i" def="650" use="652" covered="0"/><du var="i" def="650" use="653" covered="0"/><du var="oddChecksumPortion" def="653" use="653" covered="0"/><du var="oddChecksumPortion" def="653" use="666" covered="0"/><du var="oddSum" def="655" use="655" covered="0"/><du var="oddSum" def="655" use="668" target="668" covered="0"/><du var="oddSum" def="655" use="668" target="669" covered="0"/><du var="oddSum" def="655" use="668" target="668" covered="0"/><du var="oddSum" def="655" use="668" target="669" covered="0"/><du var="oddSum" def="655" use="668" target="669" covered="0"/><du var="oddSum" def="655" use="668" target="672" covered="0"/><du var="oddSum" def="655" use="672" covered="0"/><du var="i" def="650" use="650" target="657" covered="0"/><du var="i" def="650" use="650" target="651" covered="0"/><du var="i" def="650" use="655" covered="0"/><du var="i" def="650" use="650" covered="0"/><du var="i" def="650" use="652" covered="0"/><du var="i" def="650" use="653" covered="0"/><du var="evenChecksumPortion" def="657" use="662" covered="0"/><du var="evenChecksumPortion" def="657" use="666" covered="0"/><du var="i" def="659" use="659" target="666" covered="0"/><du var="i" def="659" use="659" target="660" covered="0"/><du var="i" def="659" use="659" covered="0"/><du var="i" def="659" use="661" covered="0"/><du var="i" def="659" use="662" covered="0"/><du var="evenChecksumPortion" def="662" use="662" covered="0"/><du var="evenChecksumPortion" def="662" use="666" covered="0"/><du var="i" def="659" use="659" target="666" covered="0"/><du var="i" def="659" use="659" target="660" covered="0"/><du var="i" def="659" use="659" covered="0"/><du var="i" def="659" use="661" covered="0"/><du var="i" def="659" use="662" covered="0"/><du var="checksumPortion" def="666" use="681" covered="0"/><counter type="DU" missed="170" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotA1left" desc="(Lcom/google/zxing/oned/rss/FinderPattern;ZZ)Z"><du var="pattern" def="686" use="686" target="686" covered="0"/><du var="pattern" def="686" use="686" target="686" covered="0"/><du var="isOddPattern" def="686" use="686" target="686" covered="0"/><du var="isOddPattern" def="686" use="686" target="686" covered="0"/><du var="leftChar" def="686" use="686" target="686" covered="0"/><du var="leftChar" def="686" use="686" target="686" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustOddEvenCounts" desc="(I)V"><du var="this" def="691" use="776" covered="0"/><du var="this" def="691" use="773" covered="0"/><du var="this" def="691" use="767" covered="0"/><du var="this" def="691" use="764" covered="0"/><du var="numModules" def="691" use="710" covered="0"/><du var="oddSum" def="691" use="697" target="698" covered="0"/><du var="oddSum" def="691" use="697" target="699" covered="0"/><du var="oddSum" def="691" use="699" target="700" covered="0"/><du var="oddSum" def="691" use="699" target="702" covered="0"/><du var="oddSum" def="691" use="710" covered="0"/><du var="oddSum" def="691" use="711" target="711" covered="0"/><du var="oddSum" def="691" use="711" target="711" covered="0"/><du var="oddSum" def="691" use="743" target="744" covered="0"/><du var="oddSum" def="691" use="743" target="747" covered="0"/><du var="evenSum" def="692" use="704" target="705" covered="0"/><du var="evenSum" def="692" use="704" target="706" covered="0"/><du var="evenSum" def="692" use="706" target="707" covered="0"/><du var="evenSum" def="692" use="706" target="710" covered="0"/><du var="evenSum" def="692" use="710" covered="0"/><du var="evenSum" def="692" use="712" target="712" covered="0"/><du var="evenSum" def="692" use="712" target="712" covered="0"/><du var="evenSum" def="692" use="743" target="744" covered="0"/><du var="evenSum" def="692" use="743" target="747" covered="0"/><du var="incrementOdd" def="694" use="760" target="761" covered="0"/><du var="incrementOdd" def="694" use="760" target="766" covered="0"/><du var="decrementOdd" def="695" use="766" target="767" covered="0"/><du var="decrementOdd" def="695" use="766" target="769" covered="0"/><du var="decrementOdd" def="695" use="761" target="762" covered="0"/><du var="decrementOdd" def="695" use="761" target="764" covered="0"/><du var="decrementOdd" def="698" use="766" target="767" covered="0"/><du var="decrementOdd" def="698" use="766" target="769" covered="0"/><du var="decrementOdd" def="698" use="761" target="762" covered="0"/><du var="decrementOdd" def="698" use="761" target="764" covered="0"/><du var="incrementOdd" def="700" use="760" target="761" covered="0"/><du var="incrementOdd" def="700" use="760" target="766" covered="0"/><du var="incrementEven" def="702" use="769" target="770" covered="0"/><du var="incrementEven" def="702" use="769" target="775" covered="0"/><du var="decrementEven" def="703" use="775" target="776" covered="0"/><du var="decrementEven" def="703" use="775" target="778" covered="0"/><du var="decrementEven" def="703" use="770" target="771" covered="0"/><du var="decrementEven" def="703" use="770" target="773" covered="0"/><du var="decrementEven" def="705" use="775" target="776" covered="0"/><du var="decrementEven" def="705" use="775" target="778" covered="0"/><du var="decrementEven" def="705" use="770" target="771" covered="0"/><du var="decrementEven" def="705" use="770" target="773" covered="0"/><du var="incrementEven" def="707" use="769" target="770" covered="0"/><du var="incrementEven" def="707" use="769" target="775" covered="0"/><du var="mismatch" def="710" use="713" target="714" covered="0"/><du var="mismatch" def="710" use="713" target="725" covered="0"/><du var="mismatch" def="710" use="725" target="726" covered="0"/><du var="mismatch" def="710" use="725" target="737" covered="0"/><du var="mismatch" def="710" use="737" target="738" covered="0"/><du var="mismatch" def="710" use="737" target="757" covered="0"/><du var="oddParityBad" def="711" use="738" target="739" covered="0"/><du var="oddParityBad" def="711" use="738" target="751" covered="0"/><du var="oddParityBad" def="711" use="726" target="727" covered="0"/><du var="oddParityBad" def="711" use="726" target="732" covered="0"/><du var="oddParityBad" def="711" use="714" target="715" covered="0"/><du var="oddParityBad" def="711" use="714" target="720" covered="0"/><du var="evenParityBad" def="712" use="751" target="752" covered="0"/><du var="evenParityBad" def="712" use="751" target="760" covered="0"/><du var="evenParityBad" def="712" use="739" target="740" covered="0"/><du var="evenParityBad" def="712" use="739" target="743" covered="0"/><du var="evenParityBad" def="712" use="732" target="733" covered="0"/><du var="evenParityBad" def="712" use="732" target="735" covered="0"/><du var="evenParityBad" def="712" use="727" target="728" covered="0"/><du var="evenParityBad" def="712" use="727" target="730" covered="0"/><du var="evenParityBad" def="712" use="720" target="721" covered="0"/><du var="evenParityBad" def="712" use="720" target="723" covered="0"/><du var="evenParityBad" def="712" use="715" target="716" covered="0"/><du var="evenParityBad" def="712" use="715" target="718" covered="0"/><du var="decrementOdd" def="718" use="766" target="767" covered="0"/><du var="decrementOdd" def="718" use="766" target="769" covered="0"/><du var="decrementOdd" def="718" use="761" target="762" covered="0"/><du var="decrementOdd" def="718" use="761" target="764" covered="0"/><du var="decrementEven" def="723" use="775" target="776" covered="0"/><du var="decrementEven" def="723" use="775" target="778" covered="0"/><du var="decrementEven" def="723" use="770" target="771" covered="0"/><du var="decrementEven" def="723" use="770" target="773" covered="0"/><du var="incrementOdd" def="730" use="760" target="761" covered="0"/><du var="incrementOdd" def="730" use="760" target="766" covered="0"/><du var="incrementEven" def="735" use="769" target="770" covered="0"/><du var="incrementEven" def="735" use="769" target="775" covered="0"/><du var="incrementOdd" def="744" use="760" target="761" covered="0"/><du var="incrementOdd" def="744" use="760" target="766" covered="0"/><du var="decrementEven" def="745" use="775" target="776" covered="0"/><du var="decrementEven" def="745" use="775" target="778" covered="0"/><du var="decrementEven" def="745" use="770" target="771" covered="0"/><du var="decrementEven" def="745" use="770" target="773" covered="0"/><du var="decrementOdd" def="747" use="766" target="767" covered="0"/><du var="decrementOdd" def="747" use="766" target="769" covered="0"/><du var="decrementOdd" def="747" use="761" target="762" covered="0"/><du var="decrementOdd" def="747" use="761" target="764" covered="0"/><du var="incrementEven" def="748" use="769" target="770" covered="0"/><du var="incrementEven" def="748" use="769" target="775" covered="0"/><counter type="DU" missed="95" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="736" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/rss/RSS14Reader"><method name="decodeRow" desc="(ILcom/google/zxing/common/BitArray;Ljava/util/Map;)Lcom/google/zxing/Result;"><du var="this" def="69" use="77" covered="0"/><du var="this.possibleRightPairs" def="69" use="77" covered="0"/><du var="left" def="75" use="76" target="77" covered="0"/><du var="left" def="75" use="76" target="75" covered="0"/><du var="left" def="75" use="79" target="80" covered="0"/><du var="left" def="75" use="79" target="77" covered="0"/><du var="left" def="75" use="80" covered="0"/><du var="right" def="77" use="78" target="79" covered="0"/><du var="right" def="77" use="78" target="77" covered="0"/><du var="right" def="77" use="79" target="80" covered="0"/><du var="right" def="77" use="79" target="77" covered="0"/><du var="right" def="77" use="80" covered="0"/><counter type="DU" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addOrTally" desc="(Ljava/util/Collection;Lcom/google/zxing/oned/rss/Pair;)V"><du var="possiblePairs" def="90" use="94" covered="0"/><du var="possiblePairs" def="90" use="102" covered="0"/><du var="pair" def="90" use="90" target="91" covered="0"/><du var="pair" def="90" use="90" target="93" covered="0"/><du var="pair" def="90" use="95" target="96" covered="0"/><du var="pair" def="90" use="95" target="94" covered="0"/><du var="pair" def="90" use="102" covered="0"/><du var="found" def="93" use="101" target="102" covered="0"/><du var="found" def="93" use="101" target="104" covered="0"/><du var="other" def="94" use="95" target="96" covered="0"/><du var="other" def="94" use="95" target="94" covered="0"/><du var="other" def="94" use="96" covered="0"/><du var="found" def="97" use="101" target="102" covered="0"/><du var="found" def="97" use="101" target="104" covered="0"/><counter type="DU" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="constructResult" desc="(Lcom/google/zxing/oned/rss/Pair;Lcom/google/zxing/oned/rss/Pair;)Lcom/google/zxing/Result;"><du var="leftPair" def="113" use="133" covered="0"/><du var="rightPair" def="113" use="134" covered="0"/><du var="RSS_14" def="113" use="135" covered="0"/><du var="text" def="114" use="120" covered="0"/><du var="buffer" def="116" use="118" covered="0"/><du var="buffer" def="116" use="120" covered="0"/><du var="buffer" def="116" use="124" covered="0"/><du var="buffer" def="116" use="131" covered="0"/><du var="buffer" def="116" use="135" covered="0"/><du var="i" def="117" use="117" target="120" covered="0"/><du var="i" def="117" use="117" target="118" covered="0"/><du var="i" def="117" use="117" covered="0"/><du var="i" def="117" use="117" target="120" covered="0"/><du var="i" def="117" use="117" target="118" covered="0"/><du var="i" def="117" use="117" covered="0"/><du var="checkDigit" def="122" use="125" covered="0"/><du var="checkDigit" def="122" use="127" covered="0"/><du var="i" def="123" use="123" target="127" covered="0"/><du var="i" def="123" use="123" target="124" covered="0"/><du var="i" def="123" use="124" covered="0"/><du var="i" def="123" use="125" target="125" covered="0"/><du var="i" def="123" use="125" target="125" covered="0"/><du var="i" def="123" use="123" covered="0"/><du var="digit" def="124" use="125" covered="0"/><du var="checkDigit" def="125" use="125" covered="0"/><du var="checkDigit" def="125" use="127" covered="0"/><du var="i" def="123" use="123" target="127" covered="0"/><du var="i" def="123" use="123" target="124" covered="0"/><du var="i" def="123" use="124" covered="0"/><du var="i" def="123" use="125" target="125" covered="0"/><du var="i" def="123" use="125" target="125" covered="0"/><du var="i" def="123" use="123" covered="0"/><du var="checkDigit" def="127" use="128" target="129" covered="0"/><du var="checkDigit" def="127" use="128" target="131" covered="0"/><du var="checkDigit" def="127" use="131" covered="0"/><du var="checkDigit" def="129" use="131" covered="0"/><counter type="DU" missed="36" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkChecksum" desc="(Lcom/google/zxing/oned/rss/Pair;Lcom/google/zxing/oned/rss/Pair;)Z"><du var="checkValue" def="148" use="157" target="157" covered="0"/><du var="checkValue" def="148" use="157" target="157" covered="0"/><du var="targetCheckValue" def="149" use="151" target="152" covered="0"/><du var="targetCheckValue" def="149" use="151" target="154" covered="0"/><du var="targetCheckValue" def="149" use="154" target="155" covered="0"/><du var="targetCheckValue" def="149" use="154" target="157" covered="0"/><du var="targetCheckValue" def="149" use="157" target="157" covered="0"/><du var="targetCheckValue" def="149" use="157" target="157" covered="0"/><du var="targetCheckValue" def="149" use="155" covered="0"/><du var="targetCheckValue" def="149" use="152" covered="0"/><du var="targetCheckValue" def="152" use="154" target="155" covered="0"/><du var="targetCheckValue" def="152" use="154" target="157" covered="0"/><du var="targetCheckValue" def="152" use="157" target="157" covered="0"/><du var="targetCheckValue" def="152" use="157" target="157" covered="0"/><du var="targetCheckValue" def="152" use="155" covered="0"/><du var="targetCheckValue" def="155" use="157" target="157" covered="0"/><du var="targetCheckValue" def="155" use="157" target="157" covered="0"/><counter type="DU" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodePair" desc="(Lcom/google/zxing/common/BitArray;ZILjava/util/Map;)Lcom/google/zxing/oned/rss/Pair;"><du var="this" def="162" use="177" covered="0"/><du var="this" def="162" use="178" covered="0"/><du var="row" def="162" use="177" covered="0"/><du var="row" def="162" use="178" covered="0"/><du var="row" def="162" use="172" covered="0"/><du var="right" def="162" use="170" target="172" covered="0"/><du var="right" def="162" use="170" target="174" covered="0"/><du var="rowNumber" def="162" use="174" covered="0"/><du var="hints" def="162" use="165" target="165" covered="0"/><du var="hints" def="162" use="165" target="166" covered="0"/><du var="hints" def="162" use="165" covered="0"/><du var="NEED_RESULT_POINT_CALLBACK" def="162" use="165" covered="0"/><du var="startEnd" def="162" use="169" covered="0"/><du var="pattern" def="163" use="177" covered="0"/><du var="pattern" def="163" use="178" covered="0"/><du var="pattern" def="163" use="179" covered="0"/><du var="resultPointCallback" def="165" use="168" target="169" covered="0"/><du var="resultPointCallback" def="165" use="168" target="177" covered="0"/><du var="resultPointCallback" def="165" use="174" covered="0"/><du var="center" def="169" use="174" covered="0"/><du var="center" def="169" use="172" covered="0"/><du var="center" def="172" use="174" covered="0"/><counter type="DU" missed="22" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeDataCharacter" desc="(Lcom/google/zxing/common/BitArray;Lcom/google/zxing/oned/rss/FinderPattern;Z)Lcom/google/zxing/oned/rss/DataCharacter;"><du var="this" def="190" use="215" covered="0"/><du var="this" def="190" use="216" covered="0"/><du var="this" def="190" use="217" covered="0"/><du var="this" def="190" use="218" covered="0"/><du var="this" def="190" use="238" covered="0"/><du var="row" def="190" use="203" covered="0"/><du var="row" def="190" use="201" covered="0"/><du var="pattern" def="190" use="203" covered="0"/><du var="pattern" def="190" use="201" covered="0"/><du var="outsideChar" def="190" use="200" target="201" covered="0"/><du var="outsideChar" def="190" use="200" target="203" covered="0"/><du var="outsideChar" def="190" use="212" target="212" covered="0"/><du var="outsideChar" def="190" use="212" target="212" covered="0"/><du var="outsideChar" def="190" use="238" covered="0"/><du var="outsideChar" def="190" use="256" target="257" covered="0"/><du var="outsideChar" def="190" use="256" target="269" covered="0"/><du var="OUTSIDE_ODD_WIDEST" def="190" use="261" covered="0"/><du var="OUTSIDE_EVEN_TOTAL_SUBSET" def="190" use="265" covered="0"/><du var="OUTSIDE_GSUM" def="190" use="266" covered="0"/><du var="INSIDE_ODD_WIDEST" def="190" use="273" covered="0"/><du var="INSIDE_ODD_TOTAL_SUBSET" def="190" use="277" covered="0"/><du var="INSIDE_GSUM" def="190" use="278" covered="0"/><du var="counters" def="190" use="203" covered="0"/><du var="counters" def="190" use="205" covered="0"/><du var="counters" def="190" use="206" covered="0"/><du var="counters" def="190" use="207" covered="0"/><du var="counters" def="190" use="208" covered="0"/><du var="counters" def="190" use="213" covered="0"/><du var="counters" def="190" use="220" target="238" covered="0"/><du var="counters" def="190" use="220" target="221" covered="0"/><du var="counters" def="190" use="221" covered="0"/><du var="counters" def="190" use="201" covered="0"/><du var="i" def="205" use="205" target="212" covered="0"/><du var="i" def="205" use="205" target="206" covered="0"/><du var="i" def="205" use="206" covered="0"/><du var="i" def="205" use="207" covered="0"/><du var="i" def="205" use="205" covered="0"/><du var="j" def="205" use="205" target="212" covered="0"/><du var="j" def="205" use="205" target="206" covered="0"/><du var="j" def="205" use="207" covered="0"/><du var="j" def="205" use="208" covered="0"/><du var="j" def="205" use="205" covered="0"/><du var="i" def="205" use="205" target="212" covered="0"/><du var="i" def="205" use="205" target="206" covered="0"/><du var="i" def="205" use="206" covered="0"/><du var="i" def="205" use="207" covered="0"/><du var="i" def="205" use="205" covered="0"/><du var="j" def="205" use="205" target="212" covered="0"/><du var="j" def="205" use="205" target="206" covered="0"/><du var="j" def="205" use="207" covered="0"/><du var="j" def="205" use="208" covered="0"/><du var="j" def="205" use="205" covered="0"/><du var="numModules" def="212" use="238" covered="0"/><du var="elementWidth" def="213" use="221" covered="0"/><du var="oddCounts" def="215" use="230" covered="0"/><du var="oddCounts" def="215" use="242" covered="0"/><du var="oddCounts" def="215" use="244" covered="0"/><du var="oddCounts" def="215" use="245" covered="0"/><du var="oddCounts" def="215" use="275" covered="0"/><du var="oddCounts" def="215" use="263" covered="0"/><du var="evenCounts" def="216" use="233" covered="0"/><du var="evenCounts" def="216" use="249" covered="0"/><du var="evenCounts" def="216" use="251" covered="0"/><du var="evenCounts" def="216" use="252" covered="0"/><du var="evenCounts" def="216" use="276" covered="0"/><du var="evenCounts" def="216" use="264" covered="0"/><du var="oddRoundingErrors" def="217" use="231" covered="0"/><du var="evenRoundingErrors" def="218" use="234" covered="0"/><du var="i" def="220" use="220" target="238" covered="0"/><du var="i" def="220" use="220" target="221" covered="0"/><du var="i" def="220" use="221" covered="0"/><du var="i" def="220" use="228" covered="0"/><du var="i" def="220" use="229" target="230" covered="0"/><du var="i" def="220" use="229" target="233" covered="0"/><du var="i" def="220" use="220" covered="0"/><du var="value" def="221" use="234" covered="0"/><du var="value" def="221" use="231" covered="0"/><du var="count" def="222" use="223" target="224" covered="0"/><du var="count" def="222" use="223" target="225" covered="0"/><du var="count" def="222" use="225" target="226" covered="0"/><du var="count" def="222" use="225" target="228" covered="0"/><du var="count" def="222" use="233" covered="0"/><du var="count" def="222" use="234" covered="0"/><du var="count" def="222" use="230" covered="0"/><du var="count" def="222" use="231" covered="0"/><du var="count" def="224" use="233" covered="0"/><du var="count" def="224" use="234" covered="0"/><du var="count" def="224" use="230" covered="0"/><du var="count" def="224" use="231" covered="0"/><du var="count" def="226" use="233" covered="0"/><du var="count" def="226" use="234" covered="0"/><du var="count" def="226" use="230" covered="0"/><du var="count" def="226" use="231" covered="0"/><du var="offset" def="228" use="233" covered="0"/><du var="offset" def="228" use="234" covered="0"/><du var="offset" def="228" use="230" covered="0"/><du var="offset" def="228" use="231" covered="0"/><du var="i" def="220" use="220" target="238" covered="0"/><du var="i" def="220" use="220" target="221" covered="0"/><du var="i" def="220" use="221" covered="0"/><du var="i" def="220" use="228" covered="0"/><du var="i" def="220" use="229" target="230" covered="0"/><du var="i" def="220" use="229" target="233" covered="0"/><du var="i" def="220" use="220" covered="0"/><du var="oddSum" def="240" use="245" covered="0"/><du var="oddSum" def="240" use="257" target="257" covered="0"/><du var="oddSum" def="240" use="257" target="258" covered="0"/><du var="oddSum" def="240" use="257" target="257" covered="0"/><du var="oddSum" def="240" use="257" target="258" covered="0"/><du var="oddSum" def="240" use="257" target="258" covered="0"/><du var="oddSum" def="240" use="257" target="260" covered="0"/><du var="oddSum" def="240" use="260" covered="0"/><du var="oddChecksumPortion" def="241" use="243" covered="0"/><du var="oddChecksumPortion" def="241" use="254" covered="0"/><du var="i" def="242" use="242" target="247" covered="0"/><du var="i" def="242" use="242" target="243" covered="0"/><du var="i" def="242" use="244" covered="0"/><du var="i" def="242" use="245" covered="0"/><du var="i" def="242" use="242" covered="0"/><du var="oddChecksumPortion" def="244" use="243" covered="0"/><du var="oddChecksumPortion" def="244" use="254" covered="0"/><du var="oddSum" def="245" use="245" covered="0"/><du var="oddSum" def="245" use="257" target="257" covered="0"/><du var="oddSum" def="245" use="257" target="258" covered="0"/><du var="oddSum" def="245" use="257" target="257" covered="0"/><du var="oddSum" def="245" use="257" target="258" covered="0"/><du var="oddSum" def="245" use="257" target="258" covered="0"/><du var="oddSum" def="245" use="257" target="260" covered="0"/><du var="oddSum" def="245" use="260" covered="0"/><du var="i" def="242" use="242" target="247" covered="0"/><du var="i" def="242" use="242" target="243" covered="0"/><du var="i" def="242" use="244" covered="0"/><du var="i" def="242" use="245" covered="0"/><du var="i" def="242" use="242" covered="0"/><du var="evenChecksumPortion" def="247" use="250" covered="0"/><du var="evenChecksumPortion" def="247" use="254" covered="0"/><du var="evenSum" def="248" use="252" covered="0"/><du var="evenSum" def="248" use="269" target="269" covered="0"/><du var="evenSum" def="248" use="269" target="270" covered="0"/><du var="evenSum" def="248" use="269" target="269" covered="0"/><du var="evenSum" def="248" use="269" target="270" covered="0"/><du var="evenSum" def="248" use="269" target="270" covered="0"/><du var="evenSum" def="248" use="269" target="272" covered="0"/><du var="evenSum" def="248" use="272" covered="0"/><du var="i" def="249" use="249" target="254" covered="0"/><du var="i" def="249" use="249" target="250" covered="0"/><du var="i" def="249" use="251" covered="0"/><du var="i" def="249" use="252" covered="0"/><du var="i" def="249" use="249" covered="0"/><du var="evenChecksumPortion" def="251" use="250" covered="0"/><du var="evenChecksumPortion" def="251" use="254" covered="0"/><du var="evenSum" def="252" use="252" covered="0"/><du var="evenSum" def="252" use="269" target="269" covered="0"/><du var="evenSum" def="252" use="269" target="270" covered="0"/><du var="evenSum" def="252" use="269" target="269" covered="0"/><du var="evenSum" def="252" use="269" target="270" covered="0"/><du var="evenSum" def="252" use="269" target="270" covered="0"/><du var="evenSum" def="252" use="269" target="272" covered="0"/><du var="evenSum" def="252" use="272" covered="0"/><du var="i" def="249" use="249" target="254" covered="0"/><du var="i" def="249" use="249" target="250" covered="0"/><du var="i" def="249" use="251" covered="0"/><du var="i" def="249" use="252" covered="0"/><du var="i" def="249" use="249" covered="0"/><du var="checksumPortion" def="254" use="279" covered="0"/><du var="checksumPortion" def="254" use="267" covered="0"/><counter type="DU" missed="166" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findFinderPattern" desc="(Lcom/google/zxing/common/BitArray;Z)[I"><du var="row" def="287" use="297" target="297" covered="0"/><du var="row" def="287" use="297" target="297" covered="0"/><du var="row" def="287" use="308" target="309" covered="0"/><du var="row" def="287" use="308" target="311" covered="0"/><du var="rightFinderPattern" def="287" use="298" target="300" covered="0"/><du var="rightFinderPattern" def="287" use="298" target="302" covered="0"/><du var="counters" def="287" use="324" covered="0"/><du var="counters" def="287" use="312" target="313" covered="0"/><du var="counters" def="287" use="312" target="315" covered="0"/><du var="counters" def="287" use="315" covered="0"/><du var="counters" def="287" use="316" covered="0"/><du var="counters" def="287" use="317" covered="0"/><du var="counters" def="287" use="318" covered="0"/><du var="counters" def="287" use="319" covered="0"/><du var="counters" def="287" use="309" covered="0"/><du var="width" def="293" use="296" target="305" covered="0"/><du var="width" def="293" use="296" target="297" covered="0"/><du var="width" def="293" use="307" target="328" covered="0"/><du var="width" def="293" use="307" target="308" covered="0"/><du var="isWhite" def="294" use="308" target="309" covered="0"/><du var="isWhite" def="294" use="308" target="311" covered="0"/><du var="isWhite" def="294" use="325" target="325" covered="0"/><du var="isWhite" def="294" use="325" target="325" covered="0"/><du var="rowOffset" def="295" use="296" target="305" covered="0"/><du var="rowOffset" def="295" use="296" target="297" covered="0"/><du var="rowOffset" def="295" use="297" target="297" covered="0"/><du var="rowOffset" def="295" use="297" target="297" covered="0"/><du var="rowOffset" def="295" use="302" covered="0"/><du var="rowOffset" def="295" use="306" covered="0"/><du var="rowOffset" def="295" use="307" covered="0"/><du var="isWhite" def="297" use="298" target="300" covered="0"/><du var="isWhite" def="297" use="298" target="302" covered="0"/><du var="isWhite" def="297" use="308" target="309" covered="0"/><du var="isWhite" def="297" use="308" target="311" covered="0"/><du var="isWhite" def="297" use="325" target="325" covered="0"/><du var="isWhite" def="297" use="325" target="325" covered="0"/><du var="rowOffset" def="302" use="296" target="305" covered="0"/><du var="rowOffset" def="302" use="296" target="297" covered="0"/><du var="rowOffset" def="302" use="297" target="297" covered="0"/><du var="rowOffset" def="302" use="297" target="297" covered="0"/><du var="rowOffset" def="302" use="302" covered="0"/><du var="rowOffset" def="302" use="306" covered="0"/><du var="rowOffset" def="302" use="307" covered="0"/><du var="counterPosition" def="305" use="311" target="312" covered="0"/><du var="counterPosition" def="305" use="311" target="322" covered="0"/><du var="counterPosition" def="305" use="322" covered="0"/><du var="counterPosition" def="305" use="320" covered="0"/><du var="counterPosition" def="305" use="309" covered="0"/><du var="patternStart" def="306" use="315" covered="0"/><du var="patternStart" def="306" use="313" covered="0"/><du var="x" def="307" use="307" target="328" covered="0"/><du var="x" def="307" use="307" target="308" covered="0"/><du var="x" def="307" use="308" target="309" covered="0"/><du var="x" def="307" use="308" target="311" covered="0"/><du var="x" def="307" use="307" covered="0"/><du var="x" def="307" use="313" covered="0"/><du var="patternStart" def="315" use="315" covered="0"/><du var="patternStart" def="315" use="313" covered="0"/><du var="counterPosition" def="320" use="324" covered="0"/><du var="counterPosition" def="320" use="311" target="312" covered="0"/><du var="counterPosition" def="320" use="311" target="322" covered="0"/><du var="counterPosition" def="320" use="322" covered="0"/><du var="counterPosition" def="320" use="320" covered="0"/><du var="counterPosition" def="320" use="309" covered="0"/><du var="counterPosition" def="322" use="324" covered="0"/><du var="counterPosition" def="322" use="311" target="312" covered="0"/><du var="counterPosition" def="322" use="311" target="322" covered="0"/><du var="counterPosition" def="322" use="322" covered="0"/><du var="counterPosition" def="322" use="320" covered="0"/><du var="counterPosition" def="322" use="309" covered="0"/><du var="isWhite" def="325" use="308" target="309" covered="0"/><du var="isWhite" def="325" use="308" target="311" covered="0"/><du var="isWhite" def="325" use="325" target="325" covered="0"/><du var="isWhite" def="325" use="325" target="325" covered="0"/><du var="x" def="307" use="307" target="328" covered="0"/><du var="x" def="307" use="307" target="308" covered="0"/><du var="x" def="307" use="308" target="309" covered="0"/><du var="x" def="307" use="308" target="311" covered="0"/><du var="x" def="307" use="307" covered="0"/><du var="x" def="307" use="313" covered="0"/><counter type="DU" missed="80" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseFoundFinderPattern" desc="(Lcom/google/zxing/common/BitArray;IZ[I)Lcom/google/zxing/oned/rss/FinderPattern;"><du var="this" def="335" use="344" covered="0"/><du var="row" def="335" use="352" covered="0"/><du var="row" def="335" use="353" covered="0"/><du var="row" def="335" use="338" target="341" covered="0"/><du var="row" def="335" use="338" target="339" covered="0"/><du var="rowNumber" def="335" use="355" covered="0"/><du var="right" def="335" use="350" target="352" covered="0"/><du var="right" def="335" use="350" target="355" covered="0"/><du var="startEnd" def="335" use="342" covered="0"/><du var="startEnd" def="335" use="349" covered="0"/><du var="startEnd" def="335" use="355" covered="0"/><du var="FINDER_PATTERNS" def="335" use="347" covered="0"/><du var="firstIsBlack" def="335" use="338" target="341" covered="0"/><du var="firstIsBlack" def="335" use="338" target="339" covered="0"/><du var="firstElementStart" def="336" use="338" target="338" covered="0"/><du var="firstElementStart" def="336" use="338" target="341" covered="0"/><du var="firstElementStart" def="336" use="341" covered="0"/><du var="firstElementStart" def="336" use="338" target="341" covered="0"/><du var="firstElementStart" def="336" use="338" target="339" covered="0"/><du var="firstElementStart" def="336" use="339" covered="0"/><du var="firstElementStart" def="339" use="338" target="338" covered="0"/><du var="firstElementStart" def="339" use="338" target="341" covered="0"/><du var="firstElementStart" def="339" use="341" covered="0"/><du var="firstElementStart" def="339" use="338" target="341" covered="0"/><du var="firstElementStart" def="339" use="338" target="339" covered="0"/><du var="firstElementStart" def="339" use="339" covered="0"/><du var="firstElementStart" def="341" use="355" covered="0"/><du var="value" def="347" use="355" covered="0"/><du var="start" def="348" use="355" covered="0"/><du var="start" def="348" use="352" covered="0"/><du var="end" def="349" use="355" covered="0"/><du var="end" def="349" use="353" covered="0"/><du var="start" def="352" use="355" covered="0"/><du var="end" def="353" use="355" covered="0"/><counter type="DU" missed="34" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustOddEvenCounts" desc="(ZI)V"><du var="this" def="360" use="470" covered="0"/><du var="this" def="360" use="467" covered="0"/><du var="this" def="360" use="461" covered="0"/><du var="this" def="360" use="458" covered="0"/><du var="outsideChar" def="360" use="368" target="369" covered="0"/><du var="outsideChar" def="360" use="368" target="380" covered="0"/><du var="outsideChar" def="360" use="393" target="393" covered="0"/><du var="outsideChar" def="360" use="393" target="393" covered="0"/><du var="numModules" def="360" use="392" covered="0"/><du var="oddSum" def="360" use="380" target="381" covered="0"/><du var="oddSum" def="360" use="380" target="382" covered="0"/><du var="oddSum" def="360" use="382" target="383" covered="0"/><du var="oddSum" def="360" use="382" target="385" covered="0"/><du var="oddSum" def="360" use="392" covered="0"/><du var="oddSum" def="360" use="393" target="393" covered="0"/><du var="oddSum" def="360" use="393" target="393" covered="0"/><du var="oddSum" def="360" use="437" target="438" covered="0"/><du var="oddSum" def="360" use="437" target="441" covered="0"/><du var="oddSum" def="360" use="369" target="370" covered="0"/><du var="oddSum" def="360" use="369" target="371" covered="0"/><du var="oddSum" def="360" use="371" target="372" covered="0"/><du var="oddSum" def="360" use="371" target="374" covered="0"/><du var="evenSum" def="361" use="385" target="386" covered="0"/><du var="evenSum" def="361" use="385" target="387" covered="0"/><du var="evenSum" def="361" use="387" target="388" covered="0"/><du var="evenSum" def="361" use="387" target="392" covered="0"/><du var="evenSum" def="361" use="392" covered="0"/><du var="evenSum" def="361" use="394" target="394" covered="0"/><du var="evenSum" def="361" use="394" target="394" covered="0"/><du var="evenSum" def="361" use="437" target="438" covered="0"/><du var="evenSum" def="361" use="437" target="441" covered="0"/><du var="evenSum" def="361" use="374" target="375" covered="0"/><du var="evenSum" def="361" use="374" target="376" covered="0"/><du var="evenSum" def="361" use="376" target="377" covered="0"/><du var="evenSum" def="361" use="376" target="392" covered="0"/><du var="incrementOdd" def="363" use="454" target="455" covered="0"/><du var="incrementOdd" def="363" use="454" target="460" covered="0"/><du var="decrementOdd" def="364" use="460" target="461" covered="0"/><du var="decrementOdd" def="364" use="460" target="463" covered="0"/><du var="decrementOdd" def="364" use="455" target="456" covered="0"/><du var="decrementOdd" def="364" use="455" target="458" covered="0"/><du var="incrementEven" def="365" use="463" target="464" covered="0"/><du var="incrementEven" def="365" use="463" target="469" covered="0"/><du var="decrementEven" def="366" use="469" target="470" covered="0"/><du var="decrementEven" def="366" use="469" target="473" covered="0"/><du var="decrementEven" def="366" use="464" target="465" covered="0"/><du var="decrementEven" def="366" use="464" target="467" covered="0"/><du var="decrementOdd" def="370" use="460" target="461" covered="0"/><du var="decrementOdd" def="370" use="460" target="463" covered="0"/><du var="decrementOdd" def="370" use="455" target="456" covered="0"/><du var="decrementOdd" def="370" use="455" target="458" covered="0"/><du var="incrementOdd" def="372" use="454" target="455" covered="0"/><du var="incrementOdd" def="372" use="454" target="460" covered="0"/><du var="decrementEven" def="375" use="469" target="470" covered="0"/><du var="decrementEven" def="375" use="469" target="473" covered="0"/><du var="decrementEven" def="375" use="464" target="465" covered="0"/><du var="decrementEven" def="375" use="464" target="467" covered="0"/><du var="incrementEven" def="377" use="463" target="464" covered="0"/><du var="incrementEven" def="377" use="463" target="469" covered="0"/><du var="decrementOdd" def="381" use="460" target="461" covered="0"/><du var="decrementOdd" def="381" use="460" target="463" covered="0"/><du var="decrementOdd" def="381" use="455" target="456" covered="0"/><du var="decrementOdd" def="381" use="455" target="458" covered="0"/><du var="incrementOdd" def="383" use="454" target="455" covered="0"/><du var="incrementOdd" def="383" use="454" target="460" covered="0"/><du var="decrementEven" def="386" use="469" target="470" covered="0"/><du var="decrementEven" def="386" use="469" target="473" covered="0"/><du var="decrementEven" def="386" use="464" target="465" covered="0"/><du var="decrementEven" def="386" use="464" target="467" covered="0"/><du var="incrementEven" def="388" use="463" target="464" covered="0"/><du var="incrementEven" def="388" use="463" target="469" covered="0"/><du var="mismatch" def="392" use="407" target="408" covered="0"/><du var="mismatch" def="392" use="407" target="419" covered="0"/><du var="mismatch" def="392" use="419" target="420" covered="0"/><du var="mismatch" def="392" use="419" target="431" covered="0"/><du var="mismatch" def="392" use="431" target="432" covered="0"/><du var="mismatch" def="392" use="431" target="451" covered="0"/><du var="oddParityBad" def="393" use="432" target="433" covered="0"/><du var="oddParityBad" def="393" use="432" target="445" covered="0"/><du var="oddParityBad" def="393" use="420" target="421" covered="0"/><du var="oddParityBad" def="393" use="420" target="426" covered="0"/><du var="oddParityBad" def="393" use="408" target="409" covered="0"/><du var="oddParityBad" def="393" use="408" target="414" covered="0"/><du var="evenParityBad" def="394" use="445" target="446" covered="0"/><du var="evenParityBad" def="394" use="445" target="454" covered="0"/><du var="evenParityBad" def="394" use="433" target="434" covered="0"/><du var="evenParityBad" def="394" use="433" target="437" covered="0"/><du var="evenParityBad" def="394" use="426" target="427" covered="0"/><du var="evenParityBad" def="394" use="426" target="429" covered="0"/><du var="evenParityBad" def="394" use="421" target="422" covered="0"/><du var="evenParityBad" def="394" use="421" target="424" covered="0"/><du var="evenParityBad" def="394" use="414" target="415" covered="0"/><du var="evenParityBad" def="394" use="414" target="417" covered="0"/><du var="evenParityBad" def="394" use="409" target="410" covered="0"/><du var="evenParityBad" def="394" use="409" target="412" covered="0"/><du var="decrementOdd" def="412" use="460" target="461" covered="0"/><du var="decrementOdd" def="412" use="460" target="463" covered="0"/><du var="decrementOdd" def="412" use="455" target="456" covered="0"/><du var="decrementOdd" def="412" use="455" target="458" covered="0"/><du var="decrementEven" def="417" use="469" target="470" covered="0"/><du var="decrementEven" def="417" use="469" target="473" covered="0"/><du var="decrementEven" def="417" use="464" target="465" covered="0"/><du var="decrementEven" def="417" use="464" target="467" covered="0"/><du var="incrementOdd" def="424" use="454" target="455" covered="0"/><du var="incrementOdd" def="424" use="454" target="460" covered="0"/><du var="incrementEven" def="429" use="463" target="464" covered="0"/><du var="incrementEven" def="429" use="463" target="469" covered="0"/><du var="incrementOdd" def="438" use="454" target="455" covered="0"/><du var="incrementOdd" def="438" use="454" target="460" covered="0"/><du var="decrementEven" def="439" use="469" target="470" covered="0"/><du var="decrementEven" def="439" use="469" target="473" covered="0"/><du var="decrementEven" def="439" use="464" target="465" covered="0"/><du var="decrementEven" def="439" use="464" target="467" covered="0"/><du var="decrementOdd" def="441" use="460" target="461" covered="0"/><du var="decrementOdd" def="441" use="460" target="463" covered="0"/><du var="decrementOdd" def="441" use="455" target="456" covered="0"/><du var="decrementOdd" def="441" use="455" target="458" covered="0"/><du var="incrementEven" def="442" use="463" target="464" covered="0"/><du var="incrementEven" def="442" use="463" target="469" covered="0"/><counter type="DU" missed="119" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="509" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/rss/DataCharacter"><method name="equals" desc="(Ljava/lang/Object;)Z"><du var="this" def="47" use="51" target="51" covered="0"/><du var="this" def="47" use="51" target="51" covered="0"/><du var="this" def="47" use="51" target="51" covered="0"/><du var="this" def="47" use="51" target="51" covered="0"/><du var="o" def="47" use="47" target="48" covered="0"/><du var="o" def="47" use="47" target="50" covered="0"/><du var="o" def="47" use="50" covered="0"/><du var="this.value" def="47" use="51" target="51" covered="0"/><du var="this.value" def="47" use="51" target="51" covered="0"/><du var="this.checksumPortion" def="47" use="51" target="51" covered="0"/><du var="this.checksumPortion" def="47" use="51" target="51" covered="0"/><du var="that" def="50" use="51" target="51" covered="0"/><du var="that" def="50" use="51" target="51" covered="0"/><du var="that" def="50" use="51" target="51" covered="0"/><du var="that" def="50" use="51" target="51" covered="0"/><du var="that.value" def="50" use="51" target="51" covered="0"/><du var="that.value" def="50" use="51" target="51" covered="0"/><du var="that.checksumPortion" def="50" use="51" target="51" covered="0"/><du var="that.checksumPortion" def="50" use="51" target="51" covered="0"/><counter type="DU" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/rss/FinderPattern"><method name="equals" desc="(Ljava/lang/Object;)Z"><du var="this" def="53" use="57" target="57" covered="0"/><du var="this" def="53" use="57" target="57" covered="0"/><du var="o" def="53" use="53" target="54" covered="0"/><du var="o" def="53" use="53" target="56" covered="0"/><du var="o" def="53" use="56" covered="0"/><du var="this.value" def="53" use="57" target="57" covered="0"/><du var="this.value" def="53" use="57" target="57" covered="0"/><du var="that" def="56" use="57" target="57" covered="0"/><du var="that" def="56" use="57" target="57" covered="0"/><du var="that.value" def="56" use="57" target="57" covered="0"/><du var="that.value" def="56" use="57" target="57" covered="0"/><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/rss/RSSUtils"><method name="getRSSvalue" desc="([IIZ)I"><du var="widths" def="67" use="73" covered="0"/><du var="widths" def="67" use="76" target="98" covered="0"/><du var="widths" def="67" use="76" target="79" covered="0"/><du var="maxWidth" def="67" use="93" target="94" covered="0"/><du var="maxWidth" def="67" use="93" target="96" covered="0"/><du var="maxWidth" def="67" use="87" target="92" covered="0"/><du var="maxWidth" def="67" use="87" target="89" covered="0"/><du var="noNarrow" def="67" use="80" target="80" covered="0"/><du var="noNarrow" def="67" use="80" target="85" covered="0"/><du var="n" def="67" use="69" covered="0"/><du var="n" def="67" use="79" covered="0"/><du var="n" def="67" use="93" target="94" covered="0"/><du var="n" def="67" use="93" target="96" covered="0"/><du var="n" def="67" use="87" covered="0"/><du var="n" def="67" use="90" covered="0"/><du var="n" def="67" use="81" target="82" covered="0"/><du var="n" def="67" use="81" target="85" covered="0"/><du var="n" def="67" use="83" covered="0"/><du var="n" def="67" use="98" covered="0"/><du var="n" def="69" use="69" covered="0"/><du var="n" def="69" use="79" covered="0"/><du var="n" def="69" use="93" target="94" covered="0"/><du var="n" def="69" use="93" target="96" covered="0"/><du var="n" def="69" use="87" covered="0"/><du var="n" def="69" use="90" covered="0"/><du var="n" def="69" use="81" target="82" covered="0"/><du var="n" def="69" use="81" target="85" covered="0"/><du var="n" def="69" use="83" covered="0"/><du var="n" def="69" use="98" covered="0"/><du var="val" def="71" use="96" covered="0"/><du var="val" def="71" use="100" covered="0"/><du var="narrowMask" def="72" use="76" covered="0"/><du var="elements" def="73" use="74" target="100" covered="0"/><du var="elements" def="73" use="74" target="76" covered="0"/><du var="elements" def="73" use="79" covered="0"/><du var="elements" def="73" use="85" target="86" covered="0"/><du var="elements" def="73" use="85" target="93" covered="0"/><du var="elements" def="73" use="87" covered="0"/><du var="elements" def="73" use="90" covered="0"/><du var="elements" def="73" use="92" covered="0"/><du var="elements" def="73" use="81" target="82" covered="0"/><du var="elements" def="73" use="81" target="85" covered="0"/><du var="elements" def="73" use="83" covered="0"/><du var="bar" def="74" use="74" target="100" covered="0"/><du var="bar" def="74" use="74" target="76" covered="0"/><du var="bar" def="74" use="76" covered="0"/><du var="bar" def="74" use="76" target="98" covered="0"/><du var="bar" def="74" use="76" target="79" covered="0"/><du var="bar" def="74" use="79" covered="0"/><du var="bar" def="74" use="85" target="86" covered="0"/><du var="bar" def="74" use="85" target="93" covered="0"/><du var="bar" def="74" use="78" covered="0"/><du var="bar" def="74" use="87" covered="0"/><du var="bar" def="74" use="90" covered="0"/><du var="bar" def="74" use="92" covered="0"/><du var="bar" def="74" use="81" target="82" covered="0"/><du var="bar" def="74" use="81" target="85" covered="0"/><du var="bar" def="74" use="83" covered="0"/><du var="bar" def="74" use="74" covered="0"/><du var="elmWidth" def="76" use="76" target="98" covered="0"/><du var="elmWidth" def="76" use="76" target="79" covered="0"/><du var="elmWidth" def="76" use="79" covered="0"/><du var="elmWidth" def="76" use="93" target="94" covered="0"/><du var="elmWidth" def="76" use="93" target="96" covered="0"/><du var="elmWidth" def="76" use="78" covered="0"/><du var="elmWidth" def="76" use="87" covered="0"/><du var="elmWidth" def="76" use="90" covered="0"/><du var="elmWidth" def="76" use="81" target="82" covered="0"/><du var="elmWidth" def="76" use="81" target="85" covered="0"/><du var="elmWidth" def="76" use="83" covered="0"/><du var="elmWidth" def="76" use="98" covered="0"/><du var="narrowMask" def="76" use="78" covered="0"/><du var="narrowMask" def="76" use="80" target="81" covered="0"/><du var="narrowMask" def="76" use="80" target="85" covered="0"/><du var="narrowMask" def="76" use="76" covered="0"/><du var="subVal" def="79" use="96" covered="0"/><du var="subVal" def="79" use="94" covered="0"/><du var="subVal" def="79" use="92" covered="0"/><du var="subVal" def="79" use="83" covered="0"/><du var="subVal" def="83" use="96" covered="0"/><du var="subVal" def="83" use="94" covered="0"/><du var="subVal" def="83" use="92" covered="0"/><du var="lessVal" def="86" use="90" covered="0"/><du var="lessVal" def="86" use="92" covered="0"/><du var="mxwElement" def="87" use="87" target="92" covered="0"/><du var="mxwElement" def="87" use="87" target="89" covered="0"/><du var="mxwElement" def="87" use="90" covered="0"/><du var="mxwElement" def="87" use="88" covered="0"/><du var="lessVal" def="90" use="90" covered="0"/><du var="lessVal" def="90" use="92" covered="0"/><du var="mxwElement" def="88" use="87" target="92" covered="0"/><du var="mxwElement" def="88" use="87" target="89" covered="0"/><du var="mxwElement" def="88" use="90" covered="0"/><du var="mxwElement" def="88" use="88" covered="0"/><du var="subVal" def="92" use="96" covered="0"/><du var="subVal" def="94" use="96" covered="0"/><du var="val" def="96" use="96" covered="0"/><du var="val" def="96" use="100" covered="0"/><du var="elmWidth" def="78" use="76" target="98" covered="0"/><du var="elmWidth" def="78" use="76" target="79" covered="0"/><du var="elmWidth" def="78" use="79" covered="0"/><du var="elmWidth" def="78" use="93" target="94" covered="0"/><du var="elmWidth" def="78" use="93" target="96" covered="0"/><du var="elmWidth" def="78" use="78" covered="0"/><du var="elmWidth" def="78" use="87" covered="0"/><du var="elmWidth" def="78" use="90" covered="0"/><du var="elmWidth" def="78" use="81" target="82" covered="0"/><du var="elmWidth" def="78" use="81" target="85" covered="0"/><du var="elmWidth" def="78" use="83" covered="0"/><du var="elmWidth" def="78" use="98" covered="0"/><du var="narrowMask" def="78" use="78" covered="0"/><du var="narrowMask" def="78" use="80" target="81" covered="0"/><du var="narrowMask" def="78" use="80" target="85" covered="0"/><du var="narrowMask" def="78" use="76" covered="0"/><du var="n" def="98" use="79" covered="0"/><du var="n" def="98" use="93" target="94" covered="0"/><du var="n" def="98" use="93" target="96" covered="0"/><du var="n" def="98" use="87" covered="0"/><du var="n" def="98" use="90" covered="0"/><du var="n" def="98" use="81" target="82" covered="0"/><du var="n" def="98" use="81" target="85" covered="0"/><du var="n" def="98" use="83" covered="0"/><du var="n" def="98" use="98" covered="0"/><du var="bar" def="74" use="74" target="100" covered="0"/><du var="bar" def="74" use="74" target="76" covered="0"/><du var="bar" def="74" use="76" covered="0"/><du var="bar" def="74" use="76" target="98" covered="0"/><du var="bar" def="74" use="76" target="79" covered="0"/><du var="bar" def="74" use="79" covered="0"/><du var="bar" def="74" use="85" target="86" covered="0"/><du var="bar" def="74" use="85" target="93" covered="0"/><du var="bar" def="74" use="78" covered="0"/><du var="bar" def="74" use="87" covered="0"/><du var="bar" def="74" use="90" covered="0"/><du var="bar" def="74" use="92" covered="0"/><du var="bar" def="74" use="81" target="82" covered="0"/><du var="bar" def="74" use="81" target="85" covered="0"/><du var="bar" def="74" use="83" covered="0"/><du var="bar" def="74" use="74" covered="0"/><counter type="DU" missed="150" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="combins" desc="(II)I"><du var="n" def="106" use="106" target="107" covered="0"/><du var="n" def="106" use="106" target="110" covered="0"/><du var="n" def="106" use="110" covered="0"/><du var="n" def="106" use="115" covered="0"/><du var="n" def="106" use="108" covered="0"/><du var="r" def="106" use="106" target="107" covered="0"/><du var="r" def="106" use="106" target="110" covered="0"/><du var="r" def="106" use="110" covered="0"/><du var="r" def="106" use="111" covered="0"/><du var="r" def="106" use="107" covered="0"/><du var="r" def="106" use="108" covered="0"/><du var="minDenom" def="107" use="117" target="118" covered="0"/><du var="minDenom" def="107" use="117" target="115" covered="0"/><du var="minDenom" def="107" use="122" target="126" covered="0"/><du var="minDenom" def="107" use="122" target="123" covered="0"/><du var="maxDenom" def="108" use="115" target="122" covered="0"/><du var="maxDenom" def="108" use="115" target="116" covered="0"/><du var="minDenom" def="110" use="117" target="118" covered="0"/><du var="minDenom" def="110" use="117" target="115" covered="0"/><du var="minDenom" def="110" use="122" target="126" covered="0"/><du var="minDenom" def="110" use="122" target="123" covered="0"/><du var="maxDenom" def="111" use="115" target="122" covered="0"/><du var="maxDenom" def="111" use="115" target="116" covered="0"/><du var="val" def="113" use="116" covered="0"/><du var="val" def="113" use="123" covered="0"/><du var="val" def="113" use="126" covered="0"/><du var="j" def="114" use="117" target="118" covered="0"/><du var="j" def="114" use="117" target="115" covered="0"/><du var="j" def="114" use="118" covered="0"/><du var="j" def="114" use="119" covered="0"/><du var="j" def="114" use="122" target="126" covered="0"/><du var="j" def="114" use="122" target="123" covered="0"/><du var="j" def="114" use="123" covered="0"/><du var="j" def="114" use="124" covered="0"/><du var="i" def="115" use="115" target="122" covered="0"/><du var="i" def="115" use="115" target="116" covered="0"/><du var="i" def="115" use="116" covered="0"/><du var="i" def="115" use="115" covered="0"/><du var="val" def="116" use="116" covered="0"/><du var="val" def="116" use="123" covered="0"/><du var="val" def="116" use="126" covered="0"/><du var="val" def="116" use="118" covered="0"/><du var="val" def="118" use="116" covered="0"/><du var="val" def="118" use="123" covered="0"/><du var="val" def="118" use="126" covered="0"/><du var="j" def="119" use="117" target="118" covered="0"/><du var="j" def="119" use="117" target="115" covered="0"/><du var="j" def="119" use="118" covered="0"/><du var="j" def="119" use="119" covered="0"/><du var="j" def="119" use="122" target="126" covered="0"/><du var="j" def="119" use="122" target="123" covered="0"/><du var="j" def="119" use="123" covered="0"/><du var="j" def="119" use="124" covered="0"/><du var="i" def="115" use="115" target="122" covered="0"/><du var="i" def="115" use="115" target="116" covered="0"/><du var="i" def="115" use="116" covered="0"/><du var="i" def="115" use="115" covered="0"/><du var="val" def="123" use="123" covered="0"/><du var="val" def="123" use="126" covered="0"/><du var="j" def="124" use="122" target="126" covered="0"/><du var="j" def="124" use="122" target="123" covered="0"/><du var="j" def="124" use="123" covered="0"/><du var="j" def="124" use="124" covered="0"/><counter type="DU" missed="63" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="213" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/Code128Reader"><method name="findStartPattern" desc="(Lcom/google/zxing/common/BitArray;)[I"><du var="row" def="170" use="180" target="181" covered="0"/><du var="row" def="170" use="180" target="183" covered="0"/><du var="row" def="170" use="196" target="197" covered="0"/><du var="row" def="170" use="196" target="199" covered="0"/><du var="CODE_PATTERNS" def="170" use="187" covered="0"/><du var="width" def="170" use="179" target="211" covered="0"/><du var="width" def="170" use="179" target="180" covered="0"/><du var="counterPosition" def="173" use="183" target="184" covered="0"/><du var="counterPosition" def="173" use="183" target="205" covered="0"/><du var="counterPosition" def="173" use="205" covered="0"/><du var="counterPosition" def="173" use="200" covered="0"/><du var="counterPosition" def="173" use="201" covered="0"/><du var="counterPosition" def="173" use="202" covered="0"/><du var="counterPosition" def="173" use="203" covered="0"/><du var="counterPosition" def="173" use="181" covered="0"/><du var="counters" def="174" use="207" covered="0"/><du var="counters" def="174" use="187" covered="0"/><du var="counters" def="174" use="199" covered="0"/><du var="counters" def="174" use="200" covered="0"/><du var="counters" def="174" use="201" covered="0"/><du var="counters" def="174" use="202" covered="0"/><du var="counters" def="174" use="181" covered="0"/><du var="patternStart" def="175" use="199" covered="0"/><du var="patternStart" def="175" use="196" target="197" covered="0"/><du var="patternStart" def="175" use="196" target="199" covered="0"/><du var="patternStart" def="175" use="197" covered="0"/><du var="isWhite" def="176" use="180" target="181" covered="0"/><du var="isWhite" def="176" use="180" target="183" covered="0"/><du var="isWhite" def="176" use="208" target="208" covered="0"/><du var="isWhite" def="176" use="208" target="208" covered="0"/><du var="patternLength" def="177" use="183" target="184" covered="0"/><du var="patternLength" def="177" use="183" target="205" covered="0"/><du var="i" def="179" use="179" target="211" covered="0"/><du var="i" def="179" use="179" target="180" covered="0"/><du var="i" def="179" use="180" target="181" covered="0"/><du var="i" def="179" use="180" target="183" covered="0"/><du var="i" def="179" use="179" covered="0"/><du var="i" def="179" use="196" target="197" covered="0"/><du var="i" def="179" use="196" target="199" covered="0"/><du var="i" def="179" use="197" covered="0"/><du var="bestVariance" def="184" use="189" target="190" covered="0"/><du var="bestVariance" def="184" use="189" target="186" covered="0"/><du var="bestMatch" def="185" use="195" target="196" covered="0"/><du var="bestMatch" def="185" use="195" target="199" covered="0"/><du var="bestMatch" def="185" use="197" covered="0"/><du var="startCode" def="186" use="186" target="195" covered="0"/><du var="startCode" def="186" use="186" target="187" covered="0"/><du var="startCode" def="186" use="187" covered="0"/><du var="startCode" def="186" use="186" covered="0"/><du var="startCode" def="186" use="191" covered="0"/><du var="variance" def="187" use="189" target="190" covered="0"/><du var="variance" def="187" use="189" target="186" covered="0"/><du var="variance" def="187" use="190" covered="0"/><du var="bestVariance" def="190" use="189" target="190" covered="0"/><du var="bestVariance" def="190" use="189" target="186" covered="0"/><du var="bestMatch" def="191" use="195" target="196" covered="0"/><du var="bestMatch" def="191" use="195" target="199" covered="0"/><du var="bestMatch" def="191" use="197" covered="0"/><du var="startCode" def="186" use="186" target="195" covered="0"/><du var="startCode" def="186" use="186" target="187" covered="0"/><du var="startCode" def="186" use="187" covered="0"/><du var="startCode" def="186" use="186" covered="0"/><du var="startCode" def="186" use="191" covered="0"/><du var="patternStart" def="199" use="199" covered="0"/><du var="patternStart" def="199" use="196" target="197" covered="0"/><du var="patternStart" def="199" use="196" target="199" covered="0"/><du var="patternStart" def="199" use="197" covered="0"/><du var="counterPosition" def="203" use="207" covered="0"/><du var="counterPosition" def="203" use="183" target="184" covered="0"/><du var="counterPosition" def="203" use="183" target="205" covered="0"/><du var="counterPosition" def="203" use="205" covered="0"/><du var="counterPosition" def="203" use="200" covered="0"/><du var="counterPosition" def="203" use="201" covered="0"/><du var="counterPosition" def="203" use="202" covered="0"/><du var="counterPosition" def="203" use="203" covered="0"/><du var="counterPosition" def="203" use="181" covered="0"/><du var="counterPosition" def="205" use="207" covered="0"/><du var="counterPosition" def="205" use="183" target="184" covered="0"/><du var="counterPosition" def="205" use="183" target="205" covered="0"/><du var="counterPosition" def="205" use="205" covered="0"/><du var="counterPosition" def="205" use="200" covered="0"/><du var="counterPosition" def="205" use="201" covered="0"/><du var="counterPosition" def="205" use="202" covered="0"/><du var="counterPosition" def="205" use="203" covered="0"/><du var="counterPosition" def="205" use="181" covered="0"/><du var="isWhite" def="208" use="180" target="181" covered="0"/><du var="isWhite" def="208" use="180" target="183" covered="0"/><du var="isWhite" def="208" use="208" target="208" covered="0"/><du var="isWhite" def="208" use="208" target="208" covered="0"/><du var="i" def="179" use="179" target="211" covered="0"/><du var="i" def="179" use="179" target="180" covered="0"/><du var="i" def="179" use="180" target="181" covered="0"/><du var="i" def="179" use="180" target="183" covered="0"/><du var="i" def="179" use="179" covered="0"/><du var="i" def="179" use="196" target="197" covered="0"/><du var="i" def="179" use="196" target="199" covered="0"/><du var="i" def="179" use="197" covered="0"/><counter type="DU" missed="97" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeCode" desc="(Lcom/google/zxing/common/BitArray;[II)I"><du var="counters" def="216" use="221" covered="0"/><du var="CODE_PATTERNS" def="216" use="219" target="228" covered="0"/><du var="CODE_PATTERNS" def="216" use="219" target="220" covered="0"/><du var="CODE_PATTERNS" def="216" use="220" covered="0"/><du var="bestVariance" def="217" use="222" target="223" covered="0"/><du var="bestVariance" def="217" use="222" target="219" covered="0"/><du var="bestMatch" def="218" use="228" target="229" covered="0"/><du var="bestMatch" def="218" use="228" target="231" covered="0"/><du var="bestMatch" def="218" use="229" covered="0"/><du var="d" def="219" use="219" target="228" covered="0"/><du var="d" def="219" use="219" target="220" covered="0"/><du var="d" def="219" use="220" covered="0"/><du var="d" def="219" use="219" covered="0"/><du var="d" def="219" use="224" covered="0"/><du var="variance" def="221" use="222" target="223" covered="0"/><du var="variance" def="221" use="222" target="219" covered="0"/><du var="variance" def="221" use="223" covered="0"/><du var="bestVariance" def="223" use="222" target="223" covered="0"/><du var="bestVariance" def="223" use="222" target="219" covered="0"/><du var="bestMatch" def="224" use="228" target="229" covered="0"/><du var="bestMatch" def="224" use="228" target="231" covered="0"/><du var="bestMatch" def="224" use="229" covered="0"/><du var="d" def="219" use="219" target="228" covered="0"/><du var="d" def="219" use="219" target="220" covered="0"/><du var="d" def="219" use="220" covered="0"/><du var="d" def="219" use="219" covered="0"/><du var="d" def="219" use="224" covered="0"/><counter type="DU" missed="27" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeRow" desc="(ILcom/google/zxing/common/BitArray;Ljava/util/Map;)Lcom/google/zxing/Result;"><du var="rowNumber" def="239" use="533" covered="0"/><du var="rowNumber" def="239" use="534" covered="0"/><du var="row" def="239" use="241" covered="0"/><du var="row" def="239" use="288" covered="0"/><du var="row" def="239" use="489" covered="0"/><du var="row" def="239" use="492" target="493" covered="0"/><du var="row" def="239" use="492" target="497" covered="0"/><du var="hints" def="239" use="239" target="239" covered="0"/><du var="hints" def="239" use="239" target="239" covered="0"/><du var="hints" def="239" use="239" target="239" covered="0"/><du var="hints" def="239" use="239" target="239" covered="0"/><du var="ASSUME_GS1" def="239" use="239" target="239" covered="0"/><du var="ASSUME_GS1" def="239" use="239" target="239" covered="0"/><du var="CODE_128" def="239" use="529" covered="0"/><du var="convertFNC1" def="239" use="342" target="343" covered="0"/><du var="convertFNC1" def="239" use="342" target="478" covered="0"/><du var="convertFNC1" def="239" use="398" target="399" covered="0"/><du var="convertFNC1" def="239" use="398" target="478" covered="0"/><du var="convertFNC1" def="239" use="452" target="453" covered="0"/><du var="convertFNC1" def="239" use="452" target="478" covered="0"/><du var="startPatternInfo" def="241" use="267" covered="0"/><du var="startPatternInfo" def="241" use="268" covered="0"/><du var="startPatternInfo" def="241" use="520" covered="0"/><du var="startCode" def="242" use="248" target="259" covered="0"/><du var="startCode" def="242" use="248" target="250" covered="0"/><du var="startCode" def="242" use="248" target="253" covered="0"/><du var="startCode" def="242" use="248" target="256" covered="0"/><du var="startCode" def="242" use="273" covered="0"/><du var="rawCodes" def="244" use="290" covered="0"/><du var="rawCodes" def="244" use="523" covered="0"/><du var="rawCodes" def="244" use="526" covered="0"/><du var="codeSet" def="250" use="317" target="478" covered="0"/><du var="codeSet" def="250" use="317" target="441" covered="0"/><du var="codeSet" def="250" use="317" target="385" covered="0"/><du var="codeSet" def="250" use="317" target="320" covered="0"/><du var="codeSet" def="250" use="479" target="479" covered="0"/><du var="codeSet" def="250" use="479" target="479" covered="0"/><du var="codeSet" def="250" use="513" target="514" covered="0"/><du var="codeSet" def="250" use="513" target="516" covered="0"/><du var="codeSet" def="253" use="317" target="478" covered="0"/><du var="codeSet" def="253" use="317" target="441" covered="0"/><du var="codeSet" def="253" use="317" target="385" covered="0"/><du var="codeSet" def="253" use="317" target="320" covered="0"/><du var="codeSet" def="253" use="479" target="479" covered="0"/><du var="codeSet" def="253" use="479" target="479" covered="0"/><du var="codeSet" def="253" use="513" target="514" covered="0"/><du var="codeSet" def="253" use="513" target="516" covered="0"/><du var="codeSet" def="256" use="317" target="478" covered="0"/><du var="codeSet" def="256" use="317" target="441" covered="0"/><du var="codeSet" def="256" use="317" target="385" covered="0"/><du var="codeSet" def="256" use="317" target="320" covered="0"/><du var="codeSet" def="256" use="479" target="479" covered="0"/><du var="codeSet" def="256" use="479" target="479" covered="0"/><du var="codeSet" def="256" use="513" target="514" covered="0"/><du var="codeSet" def="256" use="513" target="516" covered="0"/><du var="done" def="262" use="279" target="484" covered="0"/><du var="done" def="262" use="279" target="281" covered="0"/><du var="isNextShifted" def="263" use="281" covered="0"/><du var="result" def="265" use="343" target="346" covered="0"/><du var="result" def="265" use="343" target="349" covered="0"/><du var="result" def="265" use="349" covered="0"/><du var="result" def="265" use="346" covered="0"/><du var="result" def="265" use="331" covered="0"/><du var="result" def="265" use="329" covered="0"/><du var="result" def="265" use="324" covered="0"/><du var="result" def="265" use="322" covered="0"/><du var="result" def="265" use="399" target="402" covered="0"/><du var="result" def="265" use="399" target="405" covered="0"/><du var="result" def="265" use="405" covered="0"/><du var="result" def="265" use="402" covered="0"/><du var="result" def="265" use="389" covered="0"/><du var="result" def="265" use="387" covered="0"/><du var="result" def="265" use="453" target="456" covered="0"/><du var="result" def="265" use="453" target="459" covered="0"/><du var="result" def="265" use="459" covered="0"/><du var="result" def="265" use="456" covered="0"/><du var="result" def="265" use="445" covered="0"/><du var="result" def="265" use="443" covered="0"/><du var="result" def="265" use="504" covered="0"/><du var="result" def="265" use="529" covered="0"/><du var="result" def="265" use="516" covered="0"/><du var="result" def="265" use="514" covered="0"/><du var="lastStart" def="267" use="484" covered="0"/><du var="lastStart" def="267" use="492" target="493" covered="0"/><du var="lastStart" def="267" use="492" target="497" covered="0"/><du var="lastStart" def="267" use="521" covered="0"/><du var="nextStart" def="268" use="288" covered="0"/><du var="nextStart" def="268" use="304" covered="0"/><du var="nextStart" def="268" use="306" covered="0"/><du var="nextStart" def="268" use="484" covered="0"/><du var="nextStart" def="268" use="489" covered="0"/><du var="counters" def="269" use="288" covered="0"/><du var="counters" def="269" use="305" covered="0"/><du var="counters" def="269" use="305" covered="0"/><du var="lastCode" def="271" use="497" covered="0"/><du var="lastCode" def="271" use="499" target="500" covered="0"/><du var="lastCode" def="271" use="499" target="504" covered="0"/><du var="code" def="272" use="285" covered="0"/><du var="checksumTotal" def="273" use="300" covered="0"/><du var="checksumTotal" def="273" use="497" covered="0"/><du var="multiplier" def="274" use="299" covered="0"/><du var="multiplier" def="274" use="497" covered="0"/><du var="lastCharacterWasPrintable" def="275" use="512" target="513" covered="0"/><du var="lastCharacterWasPrintable" def="275" use="512" target="520" covered="0"/><du var="upperMode" def="276" use="358" target="358" covered="0"/><du var="upperMode" def="276" use="358" target="361" covered="0"/><du var="upperMode" def="276" use="361" target="361" covered="0"/><du var="upperMode" def="276" use="361" target="365" covered="0"/><du var="upperMode" def="276" use="328" target="329" covered="0"/><du var="upperMode" def="276" use="328" target="331" covered="0"/><du var="upperMode" def="276" use="321" target="322" covered="0"/><du var="upperMode" def="276" use="321" target="324" covered="0"/><du var="upperMode" def="276" use="414" target="414" covered="0"/><du var="upperMode" def="276" use="414" target="417" covered="0"/><du var="upperMode" def="276" use="417" target="417" covered="0"/><du var="upperMode" def="276" use="417" target="421" covered="0"/><du var="upperMode" def="276" use="386" target="387" covered="0"/><du var="upperMode" def="276" use="386" target="389" covered="0"/><du var="shiftUpperMode" def="277" use="361" target="362" covered="0"/><du var="shiftUpperMode" def="277" use="361" target="365" covered="0"/><du var="shiftUpperMode" def="277" use="358" target="359" covered="0"/><du var="shiftUpperMode" def="277" use="358" target="361" covered="0"/><du var="shiftUpperMode" def="277" use="328" target="329" covered="0"/><du var="shiftUpperMode" def="277" use="328" target="331" covered="0"/><du var="shiftUpperMode" def="277" use="321" target="322" covered="0"/><du var="shiftUpperMode" def="277" use="321" target="324" covered="0"/><du var="shiftUpperMode" def="277" use="417" target="418" covered="0"/><du var="shiftUpperMode" def="277" use="417" target="421" covered="0"/><du var="shiftUpperMode" def="277" use="414" target="415" covered="0"/><du var="shiftUpperMode" def="277" use="414" target="417" covered="0"/><du var="shiftUpperMode" def="277" use="386" target="387" covered="0"/><du var="shiftUpperMode" def="277" use="386" target="389" covered="0"/><du var="unshift" def="281" use="478" target="479" covered="0"/><du var="unshift" def="281" use="478" target="279" covered="0"/><du var="isNextShifted" def="282" use="281" covered="0"/><du var="lastCode" def="285" use="497" covered="0"/><du var="lastCode" def="285" use="499" target="500" covered="0"/><du var="lastCode" def="285" use="499" target="504" covered="0"/><du var="code" def="288" use="293" target="294" covered="0"/><du var="code" def="288" use="293" target="298" covered="0"/><du var="code" def="288" use="298" target="299" covered="0"/><du var="code" def="288" use="298" target="304" covered="0"/><du var="code" def="288" use="310" target="317" covered="0"/><du var="code" def="288" use="310" target="314" covered="0"/><du var="code" def="288" use="320" target="321" covered="0"/><du var="code" def="288" use="320" target="327" covered="0"/><du var="code" def="288" use="327" target="328" covered="0"/><du var="code" def="288" use="327" target="337" covered="0"/><du var="code" def="288" use="337" target="338" covered="0"/><du var="code" def="288" use="337" target="340" covered="0"/><du var="code" def="288" use="340" target="383" covered="0"/><du var="code" def="288" use="340" target="356" covered="0"/><du var="code" def="288" use="340" target="369" covered="0"/><du var="code" def="288" use="340" target="376" covered="0"/><du var="code" def="288" use="340" target="373" covered="0"/><du var="code" def="288" use="340" target="358" covered="0"/><du var="code" def="288" use="340" target="342" covered="0"/><du var="code" def="288" use="340" target="379" covered="0"/><du var="code" def="288" use="331" covered="0"/><du var="code" def="288" use="329" covered="0"/><du var="code" def="288" use="324" covered="0"/><du var="code" def="288" use="322" covered="0"/><du var="code" def="288" use="385" target="386" covered="0"/><du var="code" def="288" use="385" target="393" covered="0"/><du var="code" def="288" use="393" target="394" covered="0"/><du var="code" def="288" use="393" target="396" covered="0"/><du var="code" def="288" use="396" target="439" covered="0"/><du var="code" def="288" use="396" target="412" covered="0"/><du var="code" def="288" use="396" target="425" covered="0"/><du var="code" def="288" use="396" target="432" covered="0"/><du var="code" def="288" use="396" target="414" covered="0"/><du var="code" def="288" use="396" target="429" covered="0"/><du var="code" def="288" use="396" target="398" covered="0"/><du var="code" def="288" use="396" target="435" covered="0"/><du var="code" def="288" use="389" covered="0"/><du var="code" def="288" use="387" covered="0"/><du var="code" def="288" use="441" target="442" covered="0"/><du var="code" def="288" use="441" target="447" covered="0"/><du var="code" def="288" use="447" target="448" covered="0"/><du var="code" def="288" use="447" target="450" covered="0"/><du var="code" def="288" use="450" target="478" covered="0"/><du var="code" def="288" use="450" target="467" covered="0"/><du var="code" def="288" use="450" target="464" covered="0"/><du var="code" def="288" use="450" target="452" covered="0"/><du var="code" def="288" use="450" target="470" covered="0"/><du var="code" def="288" use="442" target="443" covered="0"/><du var="code" def="288" use="442" target="445" covered="0"/><du var="code" def="288" use="445" covered="0"/><du var="code" def="288" use="285" covered="0"/><du var="code" def="288" use="300" covered="0"/><du var="lastCharacterWasPrintable" def="294" use="512" target="513" covered="0"/><du var="lastCharacterWasPrintable" def="294" use="512" target="520" covered="0"/><du var="multiplier" def="299" use="299" covered="0"/><du var="multiplier" def="299" use="497" covered="0"/><du var="checksumTotal" def="300" use="300" covered="0"/><du var="checksumTotal" def="300" use="497" covered="0"/><du var="lastStart" def="304" use="484" covered="0"/><du var="lastStart" def="304" use="492" target="493" covered="0"/><du var="lastStart" def="304" use="492" target="497" covered="0"/><du var="lastStart" def="304" use="521" covered="0"/><du var="nextStart" def="306" use="306" covered="0"/><du var="nextStart" def="306" use="288" covered="0"/><du var="nextStart" def="306" use="304" covered="0"/><du var="nextStart" def="306" use="484" covered="0"/><du var="nextStart" def="306" use="489" covered="0"/><du var="shiftUpperMode" def="326" use="361" target="362" covered="0"/><du var="shiftUpperMode" def="326" use="361" target="365" covered="0"/><du var="shiftUpperMode" def="326" use="358" target="359" covered="0"/><du var="shiftUpperMode" def="326" use="358" target="361" covered="0"/><du var="shiftUpperMode" def="326" use="328" target="329" covered="0"/><du var="shiftUpperMode" def="326" use="328" target="331" covered="0"/><du var="shiftUpperMode" def="326" use="321" target="322" covered="0"/><du var="shiftUpperMode" def="326" use="321" target="324" covered="0"/><du var="shiftUpperMode" def="326" use="417" target="418" covered="0"/><du var="shiftUpperMode" def="326" use="417" target="421" covered="0"/><du var="shiftUpperMode" def="326" use="414" target="415" covered="0"/><du var="shiftUpperMode" def="326" use="414" target="417" covered="0"/><du var="shiftUpperMode" def="326" use="386" target="387" covered="0"/><du var="shiftUpperMode" def="326" use="386" target="389" covered="0"/><du var="shiftUpperMode" def="333" use="361" target="362" covered="0"/><du var="shiftUpperMode" def="333" use="361" target="365" covered="0"/><du var="shiftUpperMode" def="333" use="358" target="359" covered="0"/><du var="shiftUpperMode" def="333" use="358" target="361" covered="0"/><du var="shiftUpperMode" def="333" use="328" target="329" covered="0"/><du var="shiftUpperMode" def="333" use="328" target="331" covered="0"/><du var="shiftUpperMode" def="333" use="321" target="322" covered="0"/><du var="shiftUpperMode" def="333" use="321" target="324" covered="0"/><du var="shiftUpperMode" def="333" use="417" target="418" covered="0"/><du var="shiftUpperMode" def="333" use="417" target="421" covered="0"/><du var="shiftUpperMode" def="333" use="414" target="415" covered="0"/><du var="shiftUpperMode" def="333" use="414" target="417" covered="0"/><du var="shiftUpperMode" def="333" use="386" target="387" covered="0"/><du var="shiftUpperMode" def="333" use="386" target="389" covered="0"/><du var="lastCharacterWasPrintable" def="338" use="512" target="513" covered="0"/><du var="lastCharacterWasPrintable" def="338" use="512" target="520" covered="0"/><du var="upperMode" def="359" use="358" target="358" covered="0"/><du var="upperMode" def="359" use="358" target="361" covered="0"/><du var="upperMode" def="359" use="361" target="361" covered="0"/><du var="upperMode" def="359" use="361" target="365" covered="0"/><du var="upperMode" def="359" use="328" target="329" covered="0"/><du var="upperMode" def="359" use="328" target="331" covered="0"/><du var="upperMode" def="359" use="321" target="322" covered="0"/><du var="upperMode" def="359" use="321" target="324" covered="0"/><du var="upperMode" def="359" use="414" target="414" covered="0"/><du var="upperMode" def="359" use="414" target="417" covered="0"/><du var="upperMode" def="359" use="417" target="417" covered="0"/><du var="upperMode" def="359" use="417" target="421" covered="0"/><du var="upperMode" def="359" use="386" target="387" covered="0"/><du var="upperMode" def="359" use="386" target="389" covered="0"/><du var="shiftUpperMode" def="360" use="361" target="362" covered="0"/><du var="shiftUpperMode" def="360" use="361" target="365" covered="0"/><du var="shiftUpperMode" def="360" use="358" target="359" covered="0"/><du var="shiftUpperMode" def="360" use="358" target="361" covered="0"/><du var="shiftUpperMode" def="360" use="328" target="329" covered="0"/><du var="shiftUpperMode" def="360" use="328" target="331" covered="0"/><du var="shiftUpperMode" def="360" use="321" target="322" covered="0"/><du var="shiftUpperMode" def="360" use="321" target="324" covered="0"/><du var="shiftUpperMode" def="360" use="417" target="418" covered="0"/><du var="shiftUpperMode" def="360" use="417" target="421" covered="0"/><du var="shiftUpperMode" def="360" use="414" target="415" covered="0"/><du var="shiftUpperMode" def="360" use="414" target="417" covered="0"/><du var="shiftUpperMode" def="360" use="386" target="387" covered="0"/><du var="shiftUpperMode" def="360" use="386" target="389" covered="0"/><du var="upperMode" def="362" use="358" target="358" covered="0"/><du var="upperMode" def="362" use="358" target="361" covered="0"/><du var="upperMode" def="362" use="361" target="361" covered="0"/><du var="upperMode" def="362" use="361" target="365" covered="0"/><du var="upperMode" def="362" use="328" target="329" covered="0"/><du var="upperMode" def="362" use="328" target="331" covered="0"/><du var="upperMode" def="362" use="321" target="322" covered="0"/><du var="upperMode" def="362" use="321" target="324" covered="0"/><du var="upperMode" def="362" use="414" target="414" covered="0"/><du var="upperMode" def="362" use="414" target="417" covered="0"/><du var="upperMode" def="362" use="417" target="417" covered="0"/><du var="upperMode" def="362" use="417" target="421" covered="0"/><du var="upperMode" def="362" use="386" target="387" covered="0"/><du var="upperMode" def="362" use="386" target="389" covered="0"/><du var="shiftUpperMode" def="363" use="361" target="362" covered="0"/><du var="shiftUpperMode" def="363" use="361" target="365" covered="0"/><du var="shiftUpperMode" def="363" use="358" target="359" covered="0"/><du var="shiftUpperMode" def="363" use="358" target="361" covered="0"/><du var="shiftUpperMode" def="363" use="328" target="329" covered="0"/><du var="shiftUpperMode" def="363" use="328" target="331" covered="0"/><du var="shiftUpperMode" def="363" use="321" target="322" covered="0"/><du var="shiftUpperMode" def="363" use="321" target="324" covered="0"/><du var="shiftUpperMode" def="363" use="417" target="418" covered="0"/><du var="shiftUpperMode" def="363" use="417" target="421" covered="0"/><du var="shiftUpperMode" def="363" use="414" target="415" covered="0"/><du var="shiftUpperMode" def="363" use="414" target="417" covered="0"/><du var="shiftUpperMode" def="363" use="386" target="387" covered="0"/><du var="shiftUpperMode" def="363" use="386" target="389" covered="0"/><du var="shiftUpperMode" def="365" use="361" target="362" covered="0"/><du var="shiftUpperMode" def="365" use="361" target="365" covered="0"/><du var="shiftUpperMode" def="365" use="358" target="359" covered="0"/><du var="shiftUpperMode" def="365" use="358" target="361" covered="0"/><du var="shiftUpperMode" def="365" use="328" target="329" covered="0"/><du var="shiftUpperMode" def="365" use="328" target="331" covered="0"/><du var="shiftUpperMode" def="365" use="321" target="322" covered="0"/><du var="shiftUpperMode" def="365" use="321" target="324" covered="0"/><du var="shiftUpperMode" def="365" use="417" target="418" covered="0"/><du var="shiftUpperMode" def="365" use="417" target="421" covered="0"/><du var="shiftUpperMode" def="365" use="414" target="415" covered="0"/><du var="shiftUpperMode" def="365" use="414" target="417" covered="0"/><du var="shiftUpperMode" def="365" use="386" target="387" covered="0"/><du var="shiftUpperMode" def="365" use="386" target="389" covered="0"/><du var="isNextShifted" def="369" use="281" covered="0"/><du var="codeSet" def="370" use="317" target="478" covered="0"/><du var="codeSet" def="370" use="317" target="441" covered="0"/><du var="codeSet" def="370" use="317" target="385" covered="0"/><du var="codeSet" def="370" use="317" target="320" covered="0"/><du var="codeSet" def="370" use="513" target="514" covered="0"/><du var="codeSet" def="370" use="513" target="516" covered="0"/><du var="codeSet" def="370" use="479" target="479" covered="0"/><du var="codeSet" def="370" use="479" target="479" covered="0"/><du var="codeSet" def="373" use="317" target="478" covered="0"/><du var="codeSet" def="373" use="317" target="441" covered="0"/><du var="codeSet" def="373" use="317" target="385" covered="0"/><du var="codeSet" def="373" use="317" target="320" covered="0"/><du var="codeSet" def="373" use="513" target="514" covered="0"/><du var="codeSet" def="373" use="513" target="516" covered="0"/><du var="codeSet" def="373" use="479" target="479" covered="0"/><du var="codeSet" def="373" use="479" target="479" covered="0"/><du var="codeSet" def="376" use="317" target="478" covered="0"/><du var="codeSet" def="376" use="317" target="441" covered="0"/><du var="codeSet" def="376" use="317" target="385" covered="0"/><du var="codeSet" def="376" use="317" target="320" covered="0"/><du var="codeSet" def="376" use="513" target="514" covered="0"/><du var="codeSet" def="376" use="513" target="516" covered="0"/><du var="codeSet" def="376" use="479" target="479" covered="0"/><du var="codeSet" def="376" use="479" target="479" covered="0"/><du var="done" def="379" use="279" target="484" covered="0"/><du var="done" def="379" use="279" target="281" covered="0"/><du var="shiftUpperMode" def="391" use="361" target="362" covered="0"/><du var="shiftUpperMode" def="391" use="361" target="365" covered="0"/><du var="shiftUpperMode" def="391" use="358" target="359" covered="0"/><du var="shiftUpperMode" def="391" use="358" target="361" covered="0"/><du var="shiftUpperMode" def="391" use="328" target="329" covered="0"/><du var="shiftUpperMode" def="391" use="328" target="331" covered="0"/><du var="shiftUpperMode" def="391" use="321" target="322" covered="0"/><du var="shiftUpperMode" def="391" use="321" target="324" covered="0"/><du var="shiftUpperMode" def="391" use="417" target="418" covered="0"/><du var="shiftUpperMode" def="391" use="417" target="421" covered="0"/><du var="shiftUpperMode" def="391" use="414" target="415" covered="0"/><du var="shiftUpperMode" def="391" use="414" target="417" covered="0"/><du var="shiftUpperMode" def="391" use="386" target="387" covered="0"/><du var="shiftUpperMode" def="391" use="386" target="389" covered="0"/><du var="lastCharacterWasPrintable" def="394" use="512" target="513" covered="0"/><du var="lastCharacterWasPrintable" def="394" use="512" target="520" covered="0"/><du var="upperMode" def="415" use="358" target="358" covered="0"/><du var="upperMode" def="415" use="358" target="361" covered="0"/><du var="upperMode" def="415" use="361" target="361" covered="0"/><du var="upperMode" def="415" use="361" target="365" covered="0"/><du var="upperMode" def="415" use="328" target="329" covered="0"/><du var="upperMode" def="415" use="328" target="331" covered="0"/><du var="upperMode" def="415" use="321" target="322" covered="0"/><du var="upperMode" def="415" use="321" target="324" covered="0"/><du var="upperMode" def="415" use="414" target="414" covered="0"/><du var="upperMode" def="415" use="414" target="417" covered="0"/><du var="upperMode" def="415" use="417" target="417" covered="0"/><du var="upperMode" def="415" use="417" target="421" covered="0"/><du var="upperMode" def="415" use="386" target="387" covered="0"/><du var="upperMode" def="415" use="386" target="389" covered="0"/><du var="shiftUpperMode" def="416" use="361" target="362" covered="0"/><du var="shiftUpperMode" def="416" use="361" target="365" covered="0"/><du var="shiftUpperMode" def="416" use="358" target="359" covered="0"/><du var="shiftUpperMode" def="416" use="358" target="361" covered="0"/><du var="shiftUpperMode" def="416" use="328" target="329" covered="0"/><du var="shiftUpperMode" def="416" use="328" target="331" covered="0"/><du var="shiftUpperMode" def="416" use="321" target="322" covered="0"/><du var="shiftUpperMode" def="416" use="321" target="324" covered="0"/><du var="shiftUpperMode" def="416" use="417" target="418" covered="0"/><du var="shiftUpperMode" def="416" use="417" target="421" covered="0"/><du var="shiftUpperMode" def="416" use="414" target="415" covered="0"/><du var="shiftUpperMode" def="416" use="414" target="417" covered="0"/><du var="shiftUpperMode" def="416" use="386" target="387" covered="0"/><du var="shiftUpperMode" def="416" use="386" target="389" covered="0"/><du var="upperMode" def="418" use="358" target="358" covered="0"/><du var="upperMode" def="418" use="358" target="361" covered="0"/><du var="upperMode" def="418" use="361" target="361" covered="0"/><du var="upperMode" def="418" use="361" target="365" covered="0"/><du var="upperMode" def="418" use="328" target="329" covered="0"/><du var="upperMode" def="418" use="328" target="331" covered="0"/><du var="upperMode" def="418" use="321" target="322" covered="0"/><du var="upperMode" def="418" use="321" target="324" covered="0"/><du var="upperMode" def="418" use="414" target="414" covered="0"/><du var="upperMode" def="418" use="414" target="417" covered="0"/><du var="upperMode" def="418" use="417" target="417" covered="0"/><du var="upperMode" def="418" use="417" target="421" covered="0"/><du var="upperMode" def="418" use="386" target="387" covered="0"/><du var="upperMode" def="418" use="386" target="389" covered="0"/><du var="shiftUpperMode" def="419" use="361" target="362" covered="0"/><du var="shiftUpperMode" def="419" use="361" target="365" covered="0"/><du var="shiftUpperMode" def="419" use="358" target="359" covered="0"/><du var="shiftUpperMode" def="419" use="358" target="361" covered="0"/><du var="shiftUpperMode" def="419" use="328" target="329" covered="0"/><du var="shiftUpperMode" def="419" use="328" target="331" covered="0"/><du var="shiftUpperMode" def="419" use="321" target="322" covered="0"/><du var="shiftUpperMode" def="419" use="321" target="324" covered="0"/><du var="shiftUpperMode" def="419" use="417" target="418" covered="0"/><du var="shiftUpperMode" def="419" use="417" target="421" covered="0"/><du var="shiftUpperMode" def="419" use="414" target="415" covered="0"/><du var="shiftUpperMode" def="419" use="414" target="417" covered="0"/><du var="shiftUpperMode" def="419" use="386" target="387" covered="0"/><du var="shiftUpperMode" def="419" use="386" target="389" covered="0"/><du var="shiftUpperMode" def="421" use="361" target="362" covered="0"/><du var="shiftUpperMode" def="421" use="361" target="365" covered="0"/><du var="shiftUpperMode" def="421" use="358" target="359" covered="0"/><du var="shiftUpperMode" def="421" use="358" target="361" covered="0"/><du var="shiftUpperMode" def="421" use="328" target="329" covered="0"/><du var="shiftUpperMode" def="421" use="328" target="331" covered="0"/><du var="shiftUpperMode" def="421" use="321" target="322" covered="0"/><du var="shiftUpperMode" def="421" use="321" target="324" covered="0"/><du var="shiftUpperMode" def="421" use="417" target="418" covered="0"/><du var="shiftUpperMode" def="421" use="417" target="421" covered="0"/><du var="shiftUpperMode" def="421" use="414" target="415" covered="0"/><du var="shiftUpperMode" def="421" use="414" target="417" covered="0"/><du var="shiftUpperMode" def="421" use="386" target="387" covered="0"/><du var="shiftUpperMode" def="421" use="386" target="389" covered="0"/><du var="isNextShifted" def="425" use="281" covered="0"/><du var="codeSet" def="426" use="317" target="478" covered="0"/><du var="codeSet" def="426" use="317" target="441" covered="0"/><du var="codeSet" def="426" use="317" target="385" covered="0"/><du var="codeSet" def="426" use="317" target="320" covered="0"/><du var="codeSet" def="426" use="513" target="514" covered="0"/><du var="codeSet" def="426" use="513" target="516" covered="0"/><du var="codeSet" def="426" use="479" target="479" covered="0"/><du var="codeSet" def="426" use="479" target="479" covered="0"/><du var="codeSet" def="429" use="317" target="478" covered="0"/><du var="codeSet" def="429" use="317" target="441" covered="0"/><du var="codeSet" def="429" use="317" target="385" covered="0"/><du var="codeSet" def="429" use="317" target="320" covered="0"/><du var="codeSet" def="429" use="513" target="514" covered="0"/><du var="codeSet" def="429" use="513" target="516" covered="0"/><du var="codeSet" def="429" use="479" target="479" covered="0"/><du var="codeSet" def="429" use="479" target="479" covered="0"/><du var="codeSet" def="432" use="317" target="478" covered="0"/><du var="codeSet" def="432" use="317" target="441" covered="0"/><du var="codeSet" def="432" use="317" target="385" covered="0"/><du var="codeSet" def="432" use="317" target="320" covered="0"/><du var="codeSet" def="432" use="513" target="514" covered="0"/><du var="codeSet" def="432" use="513" target="516" covered="0"/><du var="codeSet" def="432" use="479" target="479" covered="0"/><du var="codeSet" def="432" use="479" target="479" covered="0"/><du var="done" def="435" use="279" target="484" covered="0"/><du var="done" def="435" use="279" target="281" covered="0"/><du var="lastCharacterWasPrintable" def="448" use="512" target="513" covered="0"/><du var="lastCharacterWasPrintable" def="448" use="512" target="520" covered="0"/><du var="codeSet" def="464" use="317" target="478" covered="0"/><du var="codeSet" def="464" use="317" target="441" covered="0"/><du var="codeSet" def="464" use="317" target="385" covered="0"/><du var="codeSet" def="464" use="317" target="320" covered="0"/><du var="codeSet" def="464" use="513" target="514" covered="0"/><du var="codeSet" def="464" use="513" target="516" covered="0"/><du var="codeSet" def="464" use="479" target="479" covered="0"/><du var="codeSet" def="464" use="479" target="479" covered="0"/><du var="codeSet" def="467" use="317" target="478" covered="0"/><du var="codeSet" def="467" use="317" target="441" covered="0"/><du var="codeSet" def="467" use="317" target="385" covered="0"/><du var="codeSet" def="467" use="317" target="320" covered="0"/><du var="codeSet" def="467" use="513" target="514" covered="0"/><du var="codeSet" def="467" use="513" target="516" covered="0"/><du var="codeSet" def="467" use="479" target="479" covered="0"/><du var="codeSet" def="467" use="479" target="479" covered="0"/><du var="done" def="470" use="279" target="484" covered="0"/><du var="done" def="470" use="279" target="281" covered="0"/><du var="codeSet" def="479" use="317" target="478" covered="0"/><du var="codeSet" def="479" use="317" target="441" covered="0"/><du var="codeSet" def="479" use="317" target="385" covered="0"/><du var="codeSet" def="479" use="317" target="320" covered="0"/><du var="codeSet" def="479" use="479" target="479" covered="0"/><du var="codeSet" def="479" use="479" target="479" covered="0"/><du var="codeSet" def="479" use="513" target="514" covered="0"/><du var="codeSet" def="479" use="513" target="516" covered="0"/><du var="lastPatternSize" def="484" use="521" covered="0"/><du var="nextStart" def="489" use="492" target="493" covered="0"/><du var="nextStart" def="489" use="492" target="497" covered="0"/><du var="checksumTotal" def="497" use="499" target="500" covered="0"/><du var="checksumTotal" def="497" use="499" target="504" covered="0"/><du var="resultLength" def="504" use="505" target="507" covered="0"/><du var="resultLength" def="504" use="505" target="512" covered="0"/><du var="resultLength" def="504" use="512" target="512" covered="0"/><du var="resultLength" def="504" use="512" target="520" covered="0"/><du var="resultLength" def="504" use="516" covered="0"/><du var="resultLength" def="504" use="514" covered="0"/><du var="left" def="520" use="533" covered="0"/><du var="right" def="521" use="534" covered="0"/><du var="rawCodesSize" def="523" use="525" target="529" covered="0"/><du var="rawCodesSize" def="523" use="525" target="526" covered="0"/><du var="rawBytes" def="524" use="526" covered="0"/><du var="rawBytes" def="524" use="529" covered="0"/><du var="i" def="525" use="525" target="529" covered="0"/><du var="i" def="525" use="525" target="526" covered="0"/><du var="i" def="525" use="526" covered="0"/><du var="i" def="525" use="525" covered="0"/><du var="i" def="525" use="525" target="529" covered="0"/><du var="i" def="525" use="525" target="526" covered="0"/><du var="i" def="525" use="526" covered="0"/><du var="i" def="525" use="525" covered="0"/><counter type="DU" missed="509" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="633" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/UPCEWriter"><method name="encode" desc="(Ljava/lang/String;Lcom/google/zxing/BarcodeFormat;IILjava/util/Map;)Lcom/google/zxing/common/BitMatrix;"><du var="this" def="49" use="53" covered="0"/><du var="contents" def="49" use="53" covered="0"/><du var="format" def="49" use="49" target="50" covered="0"/><du var="format" def="49" use="49" target="53" covered="0"/><du var="format" def="49" use="53" covered="0"/><du var="format" def="49" use="50" covered="0"/><du var="width" def="49" use="53" covered="0"/><du var="height" def="49" use="53" covered="0"/><du var="hints" def="49" use="53" covered="0"/><du var="UPC_E" def="49" use="49" target="50" covered="0"/><du var="UPC_E" def="49" use="49" target="53" covered="0"/><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/String;)[Z"><du var="contents" def="58" use="72" target="73" covered="0"/><du var="contents" def="58" use="72" target="84" covered="0"/><du var="contents" def="58" use="84" covered="0"/><du var="contents" def="58" use="89" covered="0"/><du var="contents" def="58" use="97" covered="0"/><du var="contents" def="58" use="64" covered="0"/><du var="contents" def="58" use="68" covered="0"/><du var="NUMSYS_AND_CHECK_DIGIT_PATTERNS" def="58" use="90" covered="0"/><du var="START_END_PATTERN" def="58" use="94" covered="0"/><du var="L_AND_G_PATTERNS" def="58" use="101" covered="0"/><du var="END_PATTERN" def="58" use="104" covered="0"/><du var="length" def="58" use="59" target="80" covered="0"/><du var="length" def="58" use="59" target="64" covered="0"/><du var="length" def="58" use="59" target="72" covered="0"/><du var="length" def="58" use="80" covered="0"/><du var="contents" def="68" use="84" covered="0"/><du var="contents" def="68" use="89" covered="0"/><du var="contents" def="68" use="97" covered="0"/><du var="firstDigit" def="84" use="85" target="85" covered="0"/><du var="firstDigit" def="84" use="85" target="89" covered="0"/><du var="firstDigit" def="84" use="90" covered="0"/><du var="firstDigit" def="84" use="85" target="86" covered="0"/><du var="firstDigit" def="84" use="85" target="89" covered="0"/><du var="parities" def="90" use="98" target="99" covered="0"/><du var="parities" def="90" use="98" target="101" covered="0"/><du var="result" def="91" use="101" covered="0"/><du var="result" def="91" use="104" covered="0"/><du var="result" def="91" use="106" covered="0"/><du var="pos" def="94" use="101" covered="0"/><du var="pos" def="94" use="104" covered="0"/><du var="i" def="96" use="96" target="104" covered="0"/><du var="i" def="96" use="96" target="97" covered="0"/><du var="i" def="96" use="97" covered="0"/><du var="i" def="96" use="98" target="99" covered="0"/><du var="i" def="96" use="98" target="101" covered="0"/><du var="i" def="96" use="96" covered="0"/><du var="digit" def="97" use="101" covered="0"/><du var="digit" def="97" use="99" covered="0"/><du var="digit" def="99" use="101" covered="0"/><du var="pos" def="101" use="101" covered="0"/><du var="pos" def="101" use="104" covered="0"/><du var="i" def="96" use="96" target="104" covered="0"/><du var="i" def="96" use="96" target="97" covered="0"/><du var="i" def="96" use="97" covered="0"/><du var="i" def="96" use="98" target="99" covered="0"/><du var="i" def="96" use="98" target="101" covered="0"/><du var="i" def="96" use="96" covered="0"/><counter type="DU" missed="47" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="58" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/Code128Writer"><method name="encode" desc="(Ljava/lang/String;Lcom/google/zxing/BarcodeFormat;IILjava/util/Map;)Lcom/google/zxing/common/BitMatrix;"><du var="this" def="66" use="69" covered="0"/><du var="contents" def="66" use="69" covered="0"/><du var="format" def="66" use="66" target="67" covered="0"/><du var="format" def="66" use="66" target="69" covered="0"/><du var="format" def="66" use="69" covered="0"/><du var="format" def="66" use="67" covered="0"/><du var="width" def="66" use="69" covered="0"/><du var="height" def="66" use="69" covered="0"/><du var="hints" def="66" use="69" covered="0"/><du var="CODE_128" def="66" use="66" target="67" covered="0"/><du var="CODE_128" def="66" use="66" target="69" covered="0"/><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/String;)[Z"><du var="contents" def="74" use="82" covered="0"/><du var="contents" def="74" use="104" covered="0"/><du var="contents" def="74" use="111" target="126" covered="0"/><du var="contents" def="74" use="111" target="113" covered="0"/><du var="contents" def="74" use="111" target="116" covered="0"/><du var="contents" def="74" use="111" target="119" covered="0"/><du var="contents" def="74" use="111" target="122" covered="0"/><du var="contents" def="74" use="129" covered="0"/><du var="contents" def="74" use="127" covered="0"/><du var="CODE_PATTERNS" def="74" use="153" covered="0"/><du var="CODE_PATTERNS" def="74" use="164" covered="0"/><du var="CODE_PATTERNS" def="74" use="167" covered="0"/><du var="length" def="74" use="76" target="76" covered="0"/><du var="length" def="74" use="76" target="77" covered="0"/><du var="length" def="74" use="77" covered="0"/><du var="length" def="74" use="76" target="77" covered="0"/><du var="length" def="74" use="76" target="81" covered="0"/><du var="length" def="74" use="81" target="96" covered="0"/><du var="length" def="74" use="81" target="82" covered="0"/><du var="length" def="74" use="102" target="163" covered="0"/><du var="length" def="74" use="102" target="104" covered="0"/><du var="i" def="81" use="81" target="96" covered="0"/><du var="i" def="81" use="81" target="82" covered="0"/><du var="i" def="81" use="82" covered="0"/><du var="i" def="81" use="81" covered="0"/><du var="c" def="82" use="83" target="83" covered="0"/><du var="c" def="82" use="83" target="84" covered="0"/><du var="c" def="82" use="84" target="91" covered="0"/><du var="c" def="82" use="84" target="89" covered="0"/><du var="c" def="82" use="91" covered="0"/><du var="c" def="82" use="83" target="84" covered="0"/><du var="c" def="82" use="83" target="81" covered="0"/><du var="i" def="81" use="81" target="96" covered="0"/><du var="i" def="81" use="81" target="82" covered="0"/><du var="i" def="81" use="82" covered="0"/><du var="i" def="81" use="81" covered="0"/><du var="patterns" def="96" use="153" covered="0"/><du var="patterns" def="96" use="164" covered="0"/><du var="patterns" def="96" use="167" covered="0"/><du var="patterns" def="96" use="171" covered="0"/><du var="patterns" def="96" use="180" covered="0"/><du var="checkSum" def="97" use="156" covered="0"/><du var="checkSum" def="97" use="163" covered="0"/><du var="checkWeight" def="98" use="156" covered="0"/><du var="checkWeight" def="98" use="158" covered="0"/><du var="codeSet" def="99" use="104" covered="0"/><du var="codeSet" def="99" use="108" target="111" covered="0"/><du var="codeSet" def="99" use="108" target="137" covered="0"/><du var="codeSet" def="99" use="137" target="139" covered="0"/><du var="codeSet" def="99" use="137" target="147" covered="0"/><du var="codeSet" def="99" use="126" target="127" covered="0"/><du var="codeSet" def="99" use="126" target="129" covered="0"/><du var="position" def="100" use="102" target="163" covered="0"/><du var="position" def="100" use="102" target="104" covered="0"/><du var="position" def="100" use="104" covered="0"/><du var="position" def="100" use="157" target="158" covered="0"/><du var="position" def="100" use="157" target="102" covered="0"/><du var="position" def="100" use="111" target="126" covered="0"/><du var="position" def="100" use="111" target="113" covered="0"/><du var="position" def="100" use="111" target="116" covered="0"/><du var="position" def="100" use="111" target="119" covered="0"/><du var="position" def="100" use="111" target="122" covered="0"/><du var="position" def="100" use="133" covered="0"/><du var="position" def="100" use="129" covered="0"/><du var="position" def="100" use="130" covered="0"/><du var="position" def="100" use="127" covered="0"/><du var="newCodeSet" def="104" use="108" target="111" covered="0"/><du var="newCodeSet" def="104" use="108" target="137" covered="0"/><du var="newCodeSet" def="104" use="147" covered="0"/><du var="newCodeSet" def="104" use="149" covered="0"/><du var="newCodeSet" def="104" use="139" target="140" covered="0"/><du var="newCodeSet" def="104" use="139" target="143" covered="0"/><du var="patternIndex" def="113" use="153" covered="0"/><du var="patternIndex" def="113" use="156" covered="0"/><du var="patternIndex" def="116" use="153" covered="0"/><du var="patternIndex" def="116" use="156" covered="0"/><du var="patternIndex" def="119" use="153" covered="0"/><du var="patternIndex" def="119" use="156" covered="0"/><du var="patternIndex" def="122" use="153" covered="0"/><du var="patternIndex" def="122" use="156" covered="0"/><du var="patternIndex" def="127" use="153" covered="0"/><du var="patternIndex" def="127" use="156" covered="0"/><du var="patternIndex" def="129" use="153" covered="0"/><du var="patternIndex" def="129" use="156" covered="0"/><du var="position" def="130" use="133" covered="0"/><du var="position" def="133" use="157" target="158" covered="0"/><du var="position" def="133" use="157" target="102" covered="0"/><du var="position" def="133" use="102" target="163" covered="0"/><du var="position" def="133" use="102" target="104" covered="0"/><du var="position" def="133" use="104" covered="0"/><du var="position" def="133" use="111" target="126" covered="0"/><du var="position" def="133" use="111" target="113" covered="0"/><du var="position" def="133" use="111" target="116" covered="0"/><du var="position" def="133" use="111" target="119" covered="0"/><du var="position" def="133" use="111" target="122" covered="0"/><du var="position" def="133" use="133" covered="0"/><du var="position" def="133" use="129" covered="0"/><du var="position" def="133" use="130" covered="0"/><du var="position" def="133" use="127" covered="0"/><du var="patternIndex" def="140" use="153" covered="0"/><du var="patternIndex" def="140" use="156" covered="0"/><du var="patternIndex" def="143" use="153" covered="0"/><du var="patternIndex" def="143" use="156" covered="0"/><du var="patternIndex" def="147" use="153" covered="0"/><du var="patternIndex" def="147" use="156" covered="0"/><du var="codeSet" def="149" use="104" covered="0"/><du var="codeSet" def="149" use="108" target="111" covered="0"/><du var="codeSet" def="149" use="108" target="137" covered="0"/><du var="codeSet" def="149" use="137" target="139" covered="0"/><du var="codeSet" def="149" use="137" target="147" covered="0"/><du var="codeSet" def="149" use="126" target="127" covered="0"/><du var="codeSet" def="149" use="126" target="129" covered="0"/><du var="checkSum" def="156" use="156" covered="0"/><du var="checkSum" def="156" use="163" covered="0"/><du var="checkWeight" def="158" use="156" covered="0"/><du var="checkWeight" def="158" use="158" covered="0"/><du var="codeWidth" def="170" use="173" covered="0"/><du var="codeWidth" def="170" use="178" covered="0"/><du var="codeWidth" def="173" use="173" covered="0"/><du var="codeWidth" def="173" use="178" covered="0"/><du var="result" def="178" use="181" covered="0"/><du var="result" def="178" use="184" covered="0"/><du var="pos" def="179" use="181" covered="0"/><du var="pos" def="181" use="181" covered="0"/><counter type="DU" missed="141" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findCType" desc="(Ljava/lang/CharSequence;I)Lcom/google/zxing/oned/Code128Writer$CType;"><du var="value" def="188" use="192" covered="0"/><du var="value" def="188" use="202" covered="0"/><du var="start" def="188" use="189" target="190" covered="0"/><du var="start" def="188" use="189" target="192" covered="0"/><du var="start" def="188" use="192" covered="0"/><du var="start" def="188" use="199" target="200" covered="0"/><du var="start" def="188" use="199" target="202" covered="0"/><du var="start" def="188" use="202" covered="0"/><du var="UNCODABLE" def="188" use="197" covered="0"/><du var="UNCODABLE" def="188" use="190" covered="0"/><du var="FNC_1" def="188" use="194" covered="0"/><du var="ONE_DIGIT" def="188" use="204" covered="0"/><du var="ONE_DIGIT" def="188" use="200" covered="0"/><du var="TWO_DIGITS" def="188" use="206" covered="0"/><du var="last" def="188" use="189" target="190" covered="0"/><du var="last" def="188" use="189" target="192" covered="0"/><du var="last" def="188" use="199" target="200" covered="0"/><du var="last" def="188" use="199" target="202" covered="0"/><du var="c" def="192" use="193" target="194" covered="0"/><du var="c" def="192" use="193" target="196" covered="0"/><du var="c" def="192" use="196" target="196" covered="0"/><du var="c" def="192" use="196" target="197" covered="0"/><du var="c" def="192" use="196" target="197" covered="0"/><du var="c" def="192" use="196" target="199" covered="0"/><du var="c" def="202" use="203" target="203" covered="0"/><du var="c" def="202" use="203" target="204" covered="0"/><du var="c" def="202" use="203" target="204" covered="0"/><du var="c" def="202" use="203" target="206" covered="0"/><counter type="DU" missed="28" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="chooseCode" desc="(Ljava/lang/CharSequence;II)I"><du var="value" def="210" use="247" covered="0"/><du var="value" def="210" use="222" covered="0"/><du var="value" def="210" use="237" covered="0"/><du var="value" def="210" use="237" target="240" covered="0"/><du var="value" def="210" use="237" target="238" covered="0"/><du var="value" def="210" use="227" covered="0"/><du var="start" def="210" use="247" covered="0"/><du var="start" def="210" use="222" covered="0"/><du var="start" def="210" use="236" covered="0"/><du var="start" def="210" use="227" covered="0"/><du var="oldCode" def="210" use="214" target="215" covered="0"/><du var="oldCode" def="210" use="214" target="217" covered="0"/><du var="oldCode" def="210" use="217" target="218" covered="0"/><du var="oldCode" def="210" use="217" target="246" covered="0"/><du var="UNCODABLE" def="210" use="211" target="211" covered="0"/><du var="UNCODABLE" def="210" use="211" target="212" covered="0"/><du var="UNCODABLE" def="210" use="223" target="223" covered="0"/><du var="UNCODABLE" def="210" use="223" target="224" covered="0"/><du var="ONE_DIGIT" def="210" use="211" target="212" covered="0"/><du var="ONE_DIGIT" def="210" use="211" target="214" covered="0"/><du var="ONE_DIGIT" def="210" use="223" target="224" covered="0"/><du var="ONE_DIGIT" def="210" use="223" target="226" covered="0"/><du var="ONE_DIGIT" def="210" use="240" target="241" covered="0"/><du var="ONE_DIGIT" def="210" use="240" target="243" covered="0"/><du var="FNC_1" def="210" use="246" target="247" covered="0"/><du var="FNC_1" def="210" use="246" target="249" covered="0"/><du var="FNC_1" def="210" use="218" target="219" covered="0"/><du var="FNC_1" def="210" use="218" target="222" covered="0"/><du var="FNC_1" def="210" use="226" target="227" covered="0"/><du var="FNC_1" def="210" use="226" target="236" covered="0"/><du var="TWO_DIGITS" def="210" use="249" target="250" covered="0"/><du var="TWO_DIGITS" def="210" use="249" target="252" covered="0"/><du var="TWO_DIGITS" def="210" use="237" target="240" covered="0"/><du var="TWO_DIGITS" def="210" use="237" target="238" covered="0"/><du var="TWO_DIGITS" def="210" use="228" target="229" covered="0"/><du var="TWO_DIGITS" def="210" use="228" target="231" covered="0"/><du var="lookahead" def="210" use="211" target="211" covered="0"/><du var="lookahead" def="210" use="211" target="212" covered="0"/><du var="lookahead" def="210" use="211" target="212" covered="0"/><du var="lookahead" def="210" use="211" target="214" covered="0"/><du var="lookahead" def="210" use="246" target="247" covered="0"/><du var="lookahead" def="210" use="246" target="249" covered="0"/><du var="lookahead" def="210" use="249" target="250" covered="0"/><du var="lookahead" def="210" use="249" target="252" covered="0"/><du var="lookahead" def="210" use="218" target="219" covered="0"/><du var="lookahead" def="210" use="218" target="222" covered="0"/><du var="lookahead" def="222" use="223" target="223" covered="0"/><du var="lookahead" def="222" use="223" target="224" covered="0"/><du var="lookahead" def="222" use="223" target="224" covered="0"/><du var="lookahead" def="222" use="223" target="226" covered="0"/><du var="lookahead" def="222" use="226" target="227" covered="0"/><du var="lookahead" def="222" use="226" target="236" covered="0"/><du var="lookahead" def="227" use="228" target="229" covered="0"/><du var="lookahead" def="227" use="228" target="231" covered="0"/><du var="index" def="236" use="237" covered="0"/><du var="index" def="236" use="237" target="240" covered="0"/><du var="index" def="236" use="237" target="238" covered="0"/><du var="index" def="236" use="238" covered="0"/><du var="index" def="238" use="237" covered="0"/><du var="index" def="238" use="237" target="240" covered="0"/><du var="index" def="238" use="237" target="238" covered="0"/><du var="index" def="238" use="238" covered="0"/><du var="lookahead" def="237" use="240" target="241" covered="0"/><du var="lookahead" def="237" use="240" target="243" covered="0"/><du var="lookahead" def="247" use="249" target="250" covered="0"/><du var="lookahead" def="247" use="249" target="252" covered="0"/><counter type="DU" missed="66" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="246" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/Code39Writer"><method name="encode" desc="(Ljava/lang/String;Lcom/google/zxing/BarcodeFormat;IILjava/util/Map;)Lcom/google/zxing/common/BitMatrix;"><du var="this" def="39" use="42" covered="0"/><du var="contents" def="39" use="42" covered="0"/><du var="format" def="39" use="39" target="40" covered="0"/><du var="format" def="39" use="39" target="42" covered="0"/><du var="format" def="39" use="42" covered="0"/><du var="format" def="39" use="40" covered="0"/><du var="width" def="39" use="42" covered="0"/><du var="height" def="39" use="42" covered="0"/><du var="hints" def="39" use="42" covered="0"/><du var="CODE_39" def="39" use="39" target="40" covered="0"/><du var="CODE_39" def="39" use="39" target="42" covered="0"/><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/String;)[Z"><du var="contents" def="47" use="56" covered="0"/><du var="contents" def="47" use="58" covered="0"/><du var="contents" def="47" use="72" covered="0"/><du var="CHARACTER_ENCODINGS" def="47" use="60" covered="0"/><du var="CHARACTER_ENCODINGS" def="47" use="73" covered="0"/><du var="ASTERISK_ENCODING" def="47" use="66" covered="0"/><du var="ASTERISK_ENCODING" def="47" use="77" covered="0"/><du var="length" def="47" use="48" target="49" covered="0"/><du var="length" def="47" use="48" target="53" covered="0"/><du var="length" def="47" use="54" covered="0"/><du var="length" def="47" use="55" target="65" covered="0"/><du var="length" def="47" use="55" target="56" covered="0"/><du var="length" def="47" use="71" target="77" covered="0"/><du var="length" def="47" use="71" target="72" covered="0"/><du var="length" def="47" use="49" covered="0"/><du var="widths" def="53" use="60" covered="0"/><du var="widths" def="53" use="61" covered="0"/><du var="widths" def="53" use="61" covered="0"/><du var="widths" def="53" use="66" covered="0"/><du var="widths" def="53" use="67" covered="0"/><du var="widths" def="53" use="73" covered="0"/><du var="widths" def="53" use="74" covered="0"/><du var="widths" def="53" use="77" covered="0"/><du var="widths" def="53" use="78" covered="0"/><du var="codeWidth" def="54" use="62" covered="0"/><du var="codeWidth" def="54" use="65" covered="0"/><du var="i" def="55" use="55" target="65" covered="0"/><du var="i" def="55" use="55" target="56" covered="0"/><du var="i" def="55" use="56" covered="0"/><du var="i" def="55" use="55" covered="0"/><du var="indexInString" def="56" use="57" target="58" covered="0"/><du var="indexInString" def="56" use="57" target="60" covered="0"/><du var="indexInString" def="56" use="60" covered="0"/><du var="codeWidth" def="62" use="62" covered="0"/><du var="codeWidth" def="62" use="65" covered="0"/><du var="i" def="55" use="55" target="65" covered="0"/><du var="i" def="55" use="55" target="56" covered="0"/><du var="i" def="55" use="56" covered="0"/><du var="i" def="55" use="55" covered="0"/><du var="result" def="65" use="74" covered="0"/><du var="result" def="65" use="75" covered="0"/><du var="result" def="65" use="78" covered="0"/><du var="result" def="65" use="79" covered="0"/><du var="narrowWhite" def="68" use="75" covered="0"/><du var="pos" def="69" use="74" covered="0"/><du var="pos" def="69" use="78" covered="0"/><du var="i" def="71" use="71" target="77" covered="0"/><du var="i" def="71" use="71" target="72" covered="0"/><du var="i" def="71" use="72" covered="0"/><du var="i" def="71" use="71" covered="0"/><du var="pos" def="75" use="74" covered="0"/><du var="pos" def="75" use="78" covered="0"/><du var="i" def="71" use="71" target="77" covered="0"/><du var="i" def="71" use="71" target="72" covered="0"/><du var="i" def="71" use="72" covered="0"/><du var="i" def="71" use="71" covered="0"/><counter type="DU" missed="67" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toIntArray" desc="(I[I)V"><du var="a" def="83" use="84" covered="0"/><du var="toReturn" def="83" use="85" covered="0"/><du var="i" def="83" use="83" target="87" covered="0"/><du var="i" def="83" use="83" target="84" covered="0"/><du var="i" def="83" use="84" covered="0"/><du var="i" def="83" use="85" covered="0"/><du var="i" def="83" use="83" covered="0"/><du var="temp" def="84" use="85" target="85" covered="0"/><du var="temp" def="84" use="85" target="85" covered="0"/><du var="i" def="83" use="83" target="87" covered="0"/><du var="i" def="83" use="83" target="84" covered="0"/><du var="i" def="83" use="84" covered="0"/><du var="i" def="83" use="85" covered="0"/><du var="i" def="83" use="83" covered="0"/><counter type="DU" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="92" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/UPCAReader"><method name="maybeReturnResult" desc="(Lcom/google/zxing/Result;)Lcom/google/zxing/Result;"><du var="result" def="78" use="80" covered="0"/><du var="UPC_A" def="78" use="80" covered="0"/><du var="text" def="78" use="79" target="80" covered="0"/><du var="text" def="78" use="79" target="82" covered="0"/><du var="text" def="78" use="80" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/MultiFormatUPCEANReader"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V"><du var="this" def="42" use="66" covered="0"/><du var="hints" def="42" use="44" target="44" covered="0"/><du var="hints" def="42" use="44" target="45" covered="0"/><du var="hints" def="42" use="44" covered="0"/><du var="POSSIBLE_FORMATS" def="42" use="44" covered="0"/><du var="EAN_13" def="42" use="48" target="49" covered="0"/><du var="EAN_13" def="42" use="48" target="50" covered="0"/><du var="UPC_A" def="42" use="50" target="51" covered="0"/><du var="UPC_A" def="42" use="50" target="53" covered="0"/><du var="EAN_8" def="42" use="53" target="54" covered="0"/><du var="EAN_8" def="42" use="53" target="56" covered="0"/><du var="UPC_E" def="42" use="56" target="57" covered="0"/><du var="UPC_E" def="42" use="56" target="60" covered="0"/><du var="possibleFormats" def="44" use="47" target="48" covered="0"/><du var="possibleFormats" def="44" use="47" target="60" covered="0"/><du var="possibleFormats" def="44" use="48" target="49" covered="0"/><du var="possibleFormats" def="44" use="48" target="50" covered="0"/><du var="possibleFormats" def="44" use="50" target="51" covered="0"/><du var="possibleFormats" def="44" use="50" target="53" covered="0"/><du var="possibleFormats" def="44" use="53" target="54" covered="0"/><du var="possibleFormats" def="44" use="53" target="56" covered="0"/><du var="possibleFormats" def="44" use="56" target="57" covered="0"/><du var="possibleFormats" def="44" use="56" target="60" covered="0"/><du var="readers" def="46" use="60" target="61" covered="0"/><du var="readers" def="46" use="60" target="66" covered="0"/><du var="readers" def="46" use="66" covered="0"/><du var="readers" def="46" use="61" covered="0"/><du var="readers" def="46" use="63" covered="0"/><du var="readers" def="46" use="64" covered="0"/><du var="readers" def="46" use="57" covered="0"/><du var="readers" def="46" use="54" covered="0"/><du var="readers" def="46" use="51" covered="0"/><du var="readers" def="46" use="49" covered="0"/><counter type="DU" missed="33" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeRow" desc="(ILcom/google/zxing/common/BitArray;Ljava/util/Map;)Lcom/google/zxing/Result;"><du var="rowNumber" def="74" use="78" covered="0"/><du var="row" def="74" use="78" covered="0"/><du var="hints" def="74" use="78" covered="0"/><du var="hints" def="74" use="99" target="99" covered="0"/><du var="hints" def="74" use="99" target="99" covered="0"/><du var="hints" def="74" use="98" covered="0"/><du var="EAN_13" def="74" use="95" target="96" covered="0"/><du var="EAN_13" def="74" use="95" target="94" covered="0"/><du var="POSSIBLE_FORMATS" def="74" use="98" covered="0"/><du var="UPC_A" def="74" use="104" covered="0"/><du var="UPC_A" def="74" use="100" target="100" covered="0"/><du var="UPC_A" def="74" use="100" target="100" covered="0"/><du var="startGuardPattern" def="74" use="78" covered="0"/><du var="result" def="78" use="95" target="96" covered="0"/><du var="result" def="78" use="95" target="94" covered="0"/><du var="result" def="78" use="111" covered="0"/><du var="result" def="78" use="104" covered="0"/><du var="result" def="78" use="108" covered="0"/><du var="result" def="78" use="96" target="94" covered="0"/><du var="result" def="78" use="96" target="94" covered="0"/><du var="ean13MayBeUPCA" def="94" use="102" target="102" covered="0"/><du var="ean13MayBeUPCA" def="94" use="102" target="111" covered="0"/><du var="possibleFormats" def="98" use="100" target="100" covered="0"/><du var="possibleFormats" def="98" use="100" target="100" covered="0"/><du var="possibleFormats" def="98" use="100" target="100" covered="0"/><du var="possibleFormats" def="98" use="100" target="100" covered="0"/><du var="canReturnUPCA" def="100" use="102" target="104" covered="0"/><du var="canReturnUPCA" def="100" use="102" target="111" covered="0"/><counter type="DU" missed="34" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V"><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="78" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/UPCEANExtension5Support"><method name="decodeRow" desc="(ILcom/google/zxing/common/BitArray;[I)Lcom/google/zxing/Result;"><du var="extensionData" def="48" use="58" target="59" covered="0"/><du var="extensionData" def="48" use="58" target="61" covered="0"/><du var="extensionData" def="48" use="59" covered="0"/><du var="extensionResult" def="50" use="61" covered="0"/><du var="extensionResult" def="50" use="59" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeMiddle" desc="(Lcom/google/zxing/common/BitArray;[ILjava/lang/StringBuilder;)I"><du var="row" def="65" use="76" covered="0"/><du var="row" def="65" use="86" covered="0"/><du var="row" def="65" use="87" covered="0"/><du var="resultString" def="65" use="91" target="92" covered="0"/><du var="resultString" def="65" use="91" target="95" covered="0"/><du var="resultString" def="65" use="96" target="97" covered="0"/><du var="resultString" def="65" use="96" target="100" covered="0"/><du var="resultString" def="65" use="77" covered="0"/><du var="L_AND_G_PATTERNS" def="65" use="76" covered="0"/><du var="counters" def="65" use="76" covered="0"/><du var="counters" def="65" use="78" covered="0"/><du var="counters" def="65" use="78" covered="0"/><du var="end" def="70" use="75" target="91" covered="0"/><du var="end" def="70" use="75" target="76" covered="0"/><du var="rowOffset" def="71" use="100" covered="0"/><du var="rowOffset" def="71" use="75" target="91" covered="0"/><du var="rowOffset" def="71" use="75" target="76" covered="0"/><du var="rowOffset" def="71" use="76" covered="0"/><du var="rowOffset" def="71" use="79" covered="0"/><du var="rowOffset" def="71" use="86" covered="0"/><du var="lgPatternFound" def="73" use="95" covered="0"/><du var="lgPatternFound" def="73" use="82" covered="0"/><du var="x" def="75" use="75" target="75" covered="0"/><du var="x" def="75" use="75" target="91" covered="0"/><du var="x" def="75" use="84" target="86" covered="0"/><du var="x" def="75" use="84" target="75" covered="0"/><du var="x" def="75" use="75" covered="0"/><du var="x" def="75" use="82" covered="0"/><du var="bestMatch" def="76" use="81" target="82" covered="0"/><du var="bestMatch" def="76" use="81" target="84" covered="0"/><du var="rowOffset" def="79" use="79" covered="0"/><du var="rowOffset" def="79" use="100" covered="0"/><du var="rowOffset" def="79" use="75" target="91" covered="0"/><du var="rowOffset" def="79" use="75" target="76" covered="0"/><du var="rowOffset" def="79" use="76" covered="0"/><du var="rowOffset" def="79" use="86" covered="0"/><du var="lgPatternFound" def="82" use="95" covered="0"/><du var="lgPatternFound" def="82" use="82" covered="0"/><du var="rowOffset" def="87" use="100" covered="0"/><du var="rowOffset" def="87" use="75" target="91" covered="0"/><du var="rowOffset" def="87" use="75" target="76" covered="0"/><du var="rowOffset" def="87" use="76" covered="0"/><du var="rowOffset" def="87" use="79" covered="0"/><du var="rowOffset" def="87" use="86" covered="0"/><du var="x" def="75" use="75" target="75" covered="0"/><du var="x" def="75" use="75" target="91" covered="0"/><du var="x" def="75" use="84" target="86" covered="0"/><du var="x" def="75" use="84" target="75" covered="0"/><du var="x" def="75" use="75" covered="0"/><du var="x" def="75" use="82" covered="0"/><du var="checkDigit" def="95" use="96" target="97" covered="0"/><du var="checkDigit" def="95" use="96" target="100" covered="0"/><counter type="DU" missed="63" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extensionChecksum" desc="(Ljava/lang/CharSequence;)I"><du var="s" def="104" use="107" covered="0"/><du var="s" def="104" use="111" covered="0"/><du var="length" def="104" use="110" covered="0"/><du var="sum" def="105" use="107" covered="0"/><du var="sum" def="105" use="109" covered="0"/><du var="i" def="106" use="106" target="109" covered="0"/><du var="i" def="106" use="106" target="107" covered="0"/><du var="i" def="106" use="107" covered="0"/><du var="i" def="106" use="106" covered="0"/><du var="sum" def="107" use="107" covered="0"/><du var="sum" def="107" use="109" covered="0"/><du var="i" def="106" use="106" target="109" covered="0"/><du var="i" def="106" use="106" target="107" covered="0"/><du var="i" def="106" use="107" covered="0"/><du var="i" def="106" use="106" covered="0"/><du var="sum" def="109" use="111" covered="0"/><du var="sum" def="109" use="113" covered="0"/><du var="i" def="110" use="110" target="113" covered="0"/><du var="i" def="110" use="110" target="111" covered="0"/><du var="i" def="110" use="111" covered="0"/><du var="i" def="110" use="110" covered="0"/><du var="sum" def="111" use="111" covered="0"/><du var="sum" def="111" use="113" covered="0"/><du var="i" def="110" use="110" target="113" covered="0"/><du var="i" def="110" use="110" target="111" covered="0"/><du var="i" def="110" use="111" covered="0"/><du var="i" def="110" use="110" covered="0"/><counter type="DU" missed="27" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="determineCheckDigit" desc="(I)I"><du var="lgPatternFound" def="119" use="120" target="121" covered="0"/><du var="lgPatternFound" def="119" use="120" target="119" covered="0"/><du var="CHECK_DIGIT_ENCODINGS" def="119" use="120" target="121" covered="0"/><du var="CHECK_DIGIT_ENCODINGS" def="119" use="120" target="119" covered="0"/><du var="d" def="119" use="119" target="124" covered="0"/><du var="d" def="119" use="119" target="120" covered="0"/><du var="d" def="119" use="120" target="121" covered="0"/><du var="d" def="119" use="120" target="119" covered="0"/><du var="d" def="119" use="119" covered="0"/><du var="d" def="119" use="121" covered="0"/><du var="d" def="119" use="119" target="124" covered="0"/><du var="d" def="119" use="119" target="120" covered="0"/><du var="d" def="119" use="120" target="121" covered="0"/><du var="d" def="119" use="120" target="119" covered="0"/><du var="d" def="119" use="119" covered="0"/><du var="d" def="119" use="121" covered="0"/><counter type="DU" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseExtensionString" desc="(Ljava/lang/String;)Ljava/util/Map;"><du var="raw" def="133" use="133" target="134" covered="0"/><du var="raw" def="133" use="133" target="136" covered="0"/><du var="raw" def="133" use="136" covered="0"/><du var="SUGGESTED_PRICE" def="133" use="141" covered="0"/><du var="value" def="136" use="137" target="138" covered="0"/><du var="value" def="136" use="137" target="140" covered="0"/><du var="value" def="136" use="141" covered="0"/><counter type="DU" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseExtension5String" desc="(Ljava/lang/String;)Ljava/lang/String;"><du var="raw" def="147" use="147" target="171" covered="0"/><du var="raw" def="147" use="147" target="149" covered="0"/><du var="raw" def="147" use="147" target="152" covered="0"/><du var="raw" def="147" use="147" target="156" covered="0"/><du var="raw" def="147" use="156" target="158" covered="0"/><du var="raw" def="147" use="156" target="160" covered="0"/><du var="raw" def="147" use="160" target="162" covered="0"/><du var="raw" def="147" use="160" target="164" covered="0"/><du var="raw" def="147" use="164" target="165" covered="0"/><du var="raw" def="147" use="164" target="168" covered="0"/><du var="raw" def="147" use="174" covered="0"/><du var="currency" def="149" use="178" covered="0"/><du var="currency" def="152" use="178" covered="0"/><du var="currency" def="168" use="178" covered="0"/><du var="currency" def="171" use="178" covered="0"/><du var="unitsString" def="175" use="178" covered="0"/><du var="hundredths" def="176" use="177" target="177" covered="0"/><du var="hundredths" def="176" use="177" target="177" covered="0"/><du var="hundredths" def="176" use="177" covered="0"/><counter type="DU" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="137" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/Code39Reader"><method name="decodeRow" desc="(ILcom/google/zxing/common/BitArray;Ljava/util/Map;)Lcom/google/zxing/Result;"><du var="this" def="103" use="144" target="145" covered="0"/><du var="this" def="103" use="144" target="156" covered="0"/><du var="this" def="103" use="162" target="163" covered="0"/><du var="this" def="103" use="162" target="165" covered="0"/><du var="this" def="103" use="148" covered="0"/><du var="rowNumber" def="103" use="174" covered="0"/><du var="rowNumber" def="103" use="175" covered="0"/><du var="row" def="103" use="116" covered="0"/><du var="row" def="103" use="128" covered="0"/><du var="this.decodeRowResult" def="103" use="148" covered="0"/><du var="this.usingCheckDigit" def="103" use="144" target="145" covered="0"/><du var="this.usingCheckDigit" def="103" use="144" target="156" covered="0"/><du var="this.extendedMode" def="103" use="162" target="163" covered="0"/><du var="this.extendedMode" def="103" use="162" target="165" covered="0"/><du var="CODE_39" def="103" use="170" covered="0"/><du var="theCounters" def="103" use="116" covered="0"/><du var="theCounters" def="103" use="117" covered="0"/><du var="theCounters" def="103" use="124" covered="0"/><du var="theCounters" def="103" use="124" covered="0"/><du var="theCounters" def="103" use="134" covered="0"/><du var="theCounters" def="103" use="134" covered="0"/><du var="result" def="105" use="122" covered="0"/><du var="result" def="105" use="130" covered="0"/><du var="result" def="105" use="156" target="158" covered="0"/><du var="result" def="105" use="156" target="162" covered="0"/><du var="result" def="105" use="165" covered="0"/><du var="result" def="105" use="163" covered="0"/><du var="result" def="105" use="145" covered="0"/><du var="result" def="105" use="150" target="151" covered="0"/><du var="result" def="105" use="150" target="153" covered="0"/><du var="result" def="105" use="153" covered="0"/><du var="start" def="108" use="168" covered="0"/><du var="nextStart" def="110" use="116" covered="0"/><du var="nextStart" def="110" use="123" covered="0"/><du var="nextStart" def="110" use="125" covered="0"/><du var="nextStart" def="110" use="128" covered="0"/><du var="end" def="111" use="140" target="140" covered="0"/><du var="end" def="111" use="140" target="144" covered="0"/><du var="pattern" def="117" use="118" target="119" covered="0"/><du var="pattern" def="117" use="118" target="121" covered="0"/><du var="pattern" def="117" use="121" covered="0"/><du var="decodedChar" def="121" use="129" target="130" covered="0"/><du var="decodedChar" def="121" use="129" target="116" covered="0"/><du var="lastStart" def="123" use="137" covered="0"/><du var="lastStart" def="123" use="169" covered="0"/><du var="nextStart" def="125" use="125" covered="0"/><du var="nextStart" def="125" use="128" covered="0"/><du var="nextStart" def="128" use="116" covered="0"/><du var="nextStart" def="128" use="123" covered="0"/><du var="nextStart" def="128" use="125" covered="0"/><du var="nextStart" def="128" use="128" covered="0"/><du var="nextStart" def="128" use="137" covered="0"/><du var="nextStart" def="128" use="140" target="140" covered="0"/><du var="nextStart" def="128" use="140" target="144" covered="0"/><du var="lastPatternSize" def="133" use="135" covered="0"/><du var="lastPatternSize" def="133" use="137" covered="0"/><du var="lastPatternSize" def="133" use="169" covered="0"/><du var="lastPatternSize" def="133" use="140" target="141" covered="0"/><du var="lastPatternSize" def="133" use="140" target="144" covered="0"/><du var="lastPatternSize" def="135" use="135" covered="0"/><du var="lastPatternSize" def="135" use="137" covered="0"/><du var="lastPatternSize" def="135" use="169" covered="0"/><du var="lastPatternSize" def="135" use="140" target="141" covered="0"/><du var="lastPatternSize" def="135" use="140" target="144" covered="0"/><du var="whiteSpaceAfterEnd" def="137" use="140" target="141" covered="0"/><du var="whiteSpaceAfterEnd" def="137" use="140" target="144" covered="0"/><du var="max" def="145" use="147" target="150" covered="0"/><du var="max" def="145" use="147" target="148" covered="0"/><du var="max" def="145" use="150" target="151" covered="0"/><du var="max" def="145" use="150" target="153" covered="0"/><du var="max" def="145" use="153" covered="0"/><du var="total" def="146" use="148" covered="0"/><du var="total" def="146" use="150" target="151" covered="0"/><du var="total" def="146" use="150" target="153" covered="0"/><du var="i" def="147" use="147" target="150" covered="0"/><du var="i" def="147" use="147" target="148" covered="0"/><du var="i" def="147" use="148" covered="0"/><du var="i" def="147" use="147" covered="0"/><du var="total" def="148" use="148" covered="0"/><du var="total" def="148" use="150" target="151" covered="0"/><du var="total" def="148" use="150" target="153" covered="0"/><du var="i" def="147" use="147" target="150" covered="0"/><du var="i" def="147" use="147" target="148" covered="0"/><du var="i" def="147" use="148" covered="0"/><du var="i" def="147" use="147" covered="0"/><du var="resultString" def="163" use="170" covered="0"/><du var="resultString" def="165" use="170" covered="0"/><counter type="DU" missed="109" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findAsteriskPattern" desc="(Lcom/google/zxing/common/BitArray;[I)[I"><du var="row" def="181" use="190" target="191" covered="0"/><du var="row" def="181" use="190" target="193" covered="0"/><du var="row" def="181" use="196" target="197" covered="0"/><du var="row" def="181" use="196" target="199" covered="0"/><du var="counters" def="181" use="207" covered="0"/><du var="counters" def="181" use="195" target="196" covered="0"/><du var="counters" def="181" use="195" target="199" covered="0"/><du var="counters" def="181" use="199" covered="0"/><du var="counters" def="181" use="200" covered="0"/><du var="counters" def="181" use="201" covered="0"/><du var="counters" def="181" use="202" covered="0"/><du var="counters" def="181" use="191" covered="0"/><du var="ASTERISK_ENCODING" def="181" use="195" target="196" covered="0"/><du var="ASTERISK_ENCODING" def="181" use="195" target="199" covered="0"/><du var="width" def="181" use="189" target="211" covered="0"/><du var="width" def="181" use="189" target="190" covered="0"/><du var="counterPosition" def="184" use="193" target="195" covered="0"/><du var="counterPosition" def="184" use="193" target="205" covered="0"/><du var="counterPosition" def="184" use="205" covered="0"/><du var="counterPosition" def="184" use="200" covered="0"/><du var="counterPosition" def="184" use="201" covered="0"/><du var="counterPosition" def="184" use="202" covered="0"/><du var="counterPosition" def="184" use="203" covered="0"/><du var="counterPosition" def="184" use="191" covered="0"/><du var="patternStart" def="185" use="199" covered="0"/><du var="patternStart" def="185" use="196" target="197" covered="0"/><du var="patternStart" def="185" use="196" target="199" covered="0"/><du var="patternStart" def="185" use="197" covered="0"/><du var="isWhite" def="186" use="190" target="191" covered="0"/><du var="isWhite" def="186" use="190" target="193" covered="0"/><du var="isWhite" def="186" use="208" target="208" covered="0"/><du var="isWhite" def="186" use="208" target="208" covered="0"/><du var="patternLength" def="187" use="193" target="195" covered="0"/><du var="patternLength" def="187" use="193" target="205" covered="0"/><du var="i" def="189" use="189" target="211" covered="0"/><du var="i" def="189" use="189" target="190" covered="0"/><du var="i" def="189" use="190" target="191" covered="0"/><du var="i" def="189" use="190" target="193" covered="0"/><du var="i" def="189" use="189" covered="0"/><du var="i" def="189" use="196" target="197" covered="0"/><du var="i" def="189" use="196" target="199" covered="0"/><du var="i" def="189" use="197" covered="0"/><du var="patternStart" def="199" use="199" covered="0"/><du var="patternStart" def="199" use="196" target="197" covered="0"/><du var="patternStart" def="199" use="196" target="199" covered="0"/><du var="patternStart" def="199" use="197" covered="0"/><du var="counterPosition" def="203" use="207" covered="0"/><du var="counterPosition" def="203" use="193" target="195" covered="0"/><du var="counterPosition" def="203" use="193" target="205" covered="0"/><du var="counterPosition" def="203" use="205" covered="0"/><du var="counterPosition" def="203" use="200" covered="0"/><du var="counterPosition" def="203" use="201" covered="0"/><du var="counterPosition" def="203" use="202" covered="0"/><du var="counterPosition" def="203" use="203" covered="0"/><du var="counterPosition" def="203" use="191" covered="0"/><du var="counterPosition" def="205" use="207" covered="0"/><du var="counterPosition" def="205" use="193" target="195" covered="0"/><du var="counterPosition" def="205" use="193" target="205" covered="0"/><du var="counterPosition" def="205" use="205" covered="0"/><du var="counterPosition" def="205" use="200" covered="0"/><du var="counterPosition" def="205" use="201" covered="0"/><du var="counterPosition" def="205" use="202" covered="0"/><du var="counterPosition" def="205" use="203" covered="0"/><du var="counterPosition" def="205" use="191" covered="0"/><du var="isWhite" def="208" use="190" target="191" covered="0"/><du var="isWhite" def="208" use="190" target="193" covered="0"/><du var="isWhite" def="208" use="208" target="208" covered="0"/><du var="isWhite" def="208" use="208" target="208" covered="0"/><du var="i" def="189" use="189" target="211" covered="0"/><du var="i" def="189" use="189" target="190" covered="0"/><du var="i" def="189" use="190" target="191" covered="0"/><du var="i" def="189" use="190" target="193" covered="0"/><du var="i" def="189" use="189" covered="0"/><du var="i" def="189" use="196" target="197" covered="0"/><du var="i" def="189" use="196" target="199" covered="0"/><du var="i" def="189" use="197" covered="0"/><counter type="DU" missed="76" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toNarrowWidePattern" desc="([I)I"><du var="counters" def="217" use="222" covered="0"/><du var="counters" def="217" use="222" covered="0"/><du var="counters" def="217" use="232" covered="0"/><du var="counters" def="217" use="244" covered="0"/><du var="numCounters" def="217" use="231" target="239" covered="0"/><du var="numCounters" def="217" use="231" target="232" covered="0"/><du var="numCounters" def="217" use="234" covered="0"/><du var="numCounters" def="217" use="243" target="243" covered="0"/><du var="numCounters" def="217" use="243" target="253" covered="0"/><du var="maxNarrowCounter" def="218" use="223" target="224" covered="0"/><du var="maxNarrowCounter" def="218" use="223" target="222" covered="0"/><du var="minCounter" def="221" use="223" target="223" covered="0"/><du var="minCounter" def="221" use="223" target="222" covered="0"/><du var="minCounter" def="221" use="227" covered="0"/><du var="counter" def="222" use="223" target="223" covered="0"/><du var="counter" def="222" use="223" target="222" covered="0"/><du var="counter" def="222" use="223" target="224" covered="0"/><du var="counter" def="222" use="223" target="222" covered="0"/><du var="counter" def="222" use="224" covered="0"/><du var="minCounter" def="224" use="223" target="223" covered="0"/><du var="minCounter" def="224" use="223" target="222" covered="0"/><du var="minCounter" def="224" use="227" covered="0"/><du var="maxNarrowCounter" def="227" use="233" target="234" covered="0"/><du var="maxNarrowCounter" def="227" use="233" target="231" covered="0"/><du var="maxNarrowCounter" def="227" use="223" target="224" covered="0"/><du var="maxNarrowCounter" def="227" use="223" target="222" covered="0"/><du var="maxNarrowCounter" def="227" use="245" target="246" covered="0"/><du var="maxNarrowCounter" def="227" use="245" target="243" covered="0"/><du var="wideCounters" def="228" use="235" covered="0"/><du var="wideCounters" def="228" use="239" target="243" covered="0"/><du var="wideCounters" def="228" use="239" target="255" covered="0"/><du var="wideCounters" def="228" use="220" target="256" covered="0"/><du var="wideCounters" def="228" use="220" target="221" covered="0"/><du var="wideCounters" def="228" use="243" target="253" covered="0"/><du var="wideCounters" def="228" use="243" target="244" covered="0"/><du var="wideCounters" def="228" use="246" covered="0"/><du var="totalWideCountersWidth" def="229" use="236" covered="0"/><du var="totalWideCountersWidth" def="229" use="248" target="249" covered="0"/><du var="totalWideCountersWidth" def="229" use="248" target="243" covered="0"/><du var="pattern" def="230" use="234" covered="0"/><du var="pattern" def="230" use="253" covered="0"/><du var="i" def="231" use="231" target="239" covered="0"/><du var="i" def="231" use="231" target="232" covered="0"/><du var="i" def="231" use="232" covered="0"/><du var="i" def="231" use="231" covered="0"/><du var="i" def="231" use="234" covered="0"/><du var="counter" def="232" use="233" target="234" covered="0"/><du var="counter" def="232" use="233" target="231" covered="0"/><du var="counter" def="232" use="236" covered="0"/><du var="pattern" def="234" use="234" covered="0"/><du var="pattern" def="234" use="253" covered="0"/><du var="wideCounters" def="235" use="235" covered="0"/><du var="wideCounters" def="235" use="239" target="243" covered="0"/><du var="wideCounters" def="235" use="239" target="255" covered="0"/><du var="wideCounters" def="235" use="220" target="256" covered="0"/><du var="wideCounters" def="235" use="220" target="221" covered="0"/><du var="wideCounters" def="235" use="243" target="253" covered="0"/><du var="wideCounters" def="235" use="243" target="244" covered="0"/><du var="wideCounters" def="235" use="246" covered="0"/><du var="totalWideCountersWidth" def="236" use="236" covered="0"/><du var="totalWideCountersWidth" def="236" use="248" target="249" covered="0"/><du var="totalWideCountersWidth" def="236" use="248" target="243" covered="0"/><du var="i" def="231" use="231" target="239" covered="0"/><du var="i" def="231" use="231" target="232" covered="0"/><du var="i" def="231" use="232" covered="0"/><du var="i" def="231" use="231" covered="0"/><du var="i" def="231" use="234" covered="0"/><du var="i" def="243" use="243" target="243" covered="0"/><du var="i" def="243" use="243" target="253" covered="0"/><du var="i" def="243" use="244" covered="0"/><du var="i" def="243" use="243" covered="0"/><du var="counter" def="244" use="245" target="246" covered="0"/><du var="counter" def="244" use="245" target="243" covered="0"/><du var="counter" def="244" use="248" target="249" covered="0"/><du var="counter" def="244" use="248" target="243" covered="0"/><du var="wideCounters" def="246" use="243" target="253" covered="0"/><du var="wideCounters" def="246" use="243" target="244" covered="0"/><du var="wideCounters" def="246" use="246" covered="0"/><du var="i" def="243" use="243" target="243" covered="0"/><du var="i" def="243" use="243" target="253" covered="0"/><du var="i" def="243" use="244" covered="0"/><du var="i" def="243" use="243" covered="0"/><counter type="DU" missed="93" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="patternToChar" desc="(I)C"><du var="pattern" def="260" use="261" target="262" covered="0"/><du var="pattern" def="260" use="261" target="260" covered="0"/><du var="CHARACTER_ENCODINGS" def="260" use="260" target="265" covered="0"/><du var="CHARACTER_ENCODINGS" def="260" use="260" target="261" covered="0"/><du var="CHARACTER_ENCODINGS" def="260" use="261" target="262" covered="0"/><du var="CHARACTER_ENCODINGS" def="260" use="261" target="260" covered="0"/><du var="i" def="260" use="260" target="265" covered="0"/><du var="i" def="260" use="260" target="261" covered="0"/><du var="i" def="260" use="261" target="262" covered="0"/><du var="i" def="260" use="261" target="260" covered="0"/><du var="i" def="260" use="260" covered="0"/><du var="i" def="260" use="262" covered="0"/><du var="i" def="260" use="260" target="265" covered="0"/><du var="i" def="260" use="260" target="261" covered="0"/><du var="i" def="260" use="261" target="262" covered="0"/><du var="i" def="260" use="261" target="260" covered="0"/><du var="i" def="260" use="260" covered="0"/><du var="i" def="260" use="262" covered="0"/><counter type="DU" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeExtended" desc="(Ljava/lang/CharSequence;)Ljava/lang/String;"><du var="encoded" def="269" use="272" covered="0"/><du var="encoded" def="269" use="274" covered="0"/><du var="length" def="269" use="271" target="321" covered="0"/><du var="length" def="269" use="271" target="272" covered="0"/><du var="decoded" def="270" use="314" covered="0"/><du var="decoded" def="270" use="318" covered="0"/><du var="decoded" def="270" use="321" covered="0"/><du var="i" def="271" use="271" target="321" covered="0"/><du var="i" def="271" use="271" target="272" covered="0"/><du var="i" def="271" use="272" covered="0"/><du var="i" def="271" use="274" covered="0"/><du var="i" def="271" use="316" covered="0"/><du var="i" def="271" use="271" covered="0"/><du var="c" def="272" use="273" target="273" covered="0"/><du var="c" def="272" use="273" target="274" covered="0"/><du var="c" def="272" use="276" target="314" covered="0"/><du var="c" def="272" use="276" target="287" covered="0"/><du var="c" def="272" use="276" target="295" covered="0"/><du var="c" def="272" use="276" target="279" covered="0"/><du var="c" def="272" use="276" target="305" covered="0"/><du var="c" def="272" use="273" target="273" covered="0"/><du var="c" def="272" use="273" target="274" covered="0"/><du var="c" def="272" use="273" target="273" covered="0"/><du var="c" def="272" use="273" target="274" covered="0"/><du var="c" def="272" use="273" target="274" covered="0"/><du var="c" def="272" use="273" target="318" covered="0"/><du var="c" def="272" use="318" covered="0"/><du var="next" def="274" use="305" target="305" covered="0"/><du var="next" def="274" use="305" target="307" covered="0"/><du var="next" def="274" use="307" target="308" covered="0"/><du var="next" def="274" use="307" target="310" covered="0"/><du var="next" def="274" use="305" target="306" covered="0"/><du var="next" def="274" use="305" target="307" covered="0"/><du var="next" def="274" use="306" covered="0"/><du var="next" def="274" use="279" target="279" covered="0"/><du var="next" def="274" use="279" target="282" covered="0"/><du var="next" def="274" use="279" target="280" covered="0"/><du var="next" def="274" use="279" target="282" covered="0"/><du var="next" def="274" use="280" covered="0"/><du var="next" def="274" use="295" target="295" covered="0"/><du var="next" def="274" use="295" target="297" covered="0"/><du var="next" def="274" use="297" target="297" covered="0"/><du var="next" def="274" use="297" target="300" covered="0"/><du var="next" def="274" use="297" target="298" covered="0"/><du var="next" def="274" use="297" target="300" covered="0"/><du var="next" def="274" use="298" covered="0"/><du var="next" def="274" use="295" target="296" covered="0"/><du var="next" def="274" use="295" target="297" covered="0"/><du var="next" def="274" use="296" covered="0"/><du var="next" def="274" use="287" target="287" covered="0"/><du var="next" def="274" use="287" target="290" covered="0"/><du var="next" def="274" use="287" target="288" covered="0"/><du var="next" def="274" use="287" target="290" covered="0"/><du var="next" def="274" use="288" covered="0"/><du var="decodedChar" def="275" use="314" covered="0"/><du var="decodedChar" def="280" use="314" covered="0"/><du var="decodedChar" def="288" use="314" covered="0"/><du var="decodedChar" def="296" use="314" covered="0"/><du var="decodedChar" def="298" use="314" covered="0"/><du var="decodedChar" def="306" use="314" covered="0"/><du var="decodedChar" def="308" use="314" covered="0"/><du var="i" def="316" use="271" covered="0"/><du var="i" def="271" use="271" target="321" covered="0"/><du var="i" def="271" use="271" target="272" covered="0"/><du var="i" def="271" use="272" covered="0"/><du var="i" def="271" use="274" covered="0"/><du var="i" def="271" use="316" covered="0"/><du var="i" def="271" use="271" covered="0"/><counter type="DU" missed="68" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="364" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/CodaBarReader"><method name="decodeRow" desc="(ILcom/google/zxing/common/BitArray;Ljava/util/Map;)Lcom/google/zxing/Result;"><du var="this" def="82" use="89" covered="0"/><du var="this" def="82" use="96" covered="0"/><du var="this" def="82" use="99" target="100" covered="0"/><du var="this" def="82" use="99" target="103" covered="0"/><du var="this" def="82" use="88" target="106" covered="0"/><du var="this" def="82" use="88" target="89" covered="0"/><du var="this" def="82" use="106" covered="0"/><du var="this" def="82" use="109" covered="0"/><du var="this" def="82" use="115" target="115" covered="0"/><du var="this" def="82" use="115" target="119" covered="0"/><du var="this" def="82" use="119" covered="0"/><du var="this" def="82" use="122" target="126" covered="0"/><du var="this" def="82" use="122" target="123" covered="0"/><du var="this" def="82" use="123" covered="0"/><du var="this" def="82" use="126" covered="0"/><du var="this" def="82" use="130" covered="0"/><du var="this" def="82" use="136" target="138" covered="0"/><du var="this" def="82" use="136" target="141" covered="0"/><du var="this" def="82" use="142" covered="0"/><du var="this" def="82" use="143" covered="0"/><du var="this" def="82" use="148" covered="0"/><du var="this" def="82" use="152" covered="0"/><du var="this" def="82" use="155" covered="0"/><du var="rowNumber" def="82" use="159" covered="0"/><du var="rowNumber" def="82" use="160" covered="0"/><du var="hints" def="82" use="141" target="141" covered="0"/><du var="hints" def="82" use="141" target="142" covered="0"/><du var="hints" def="82" use="141" target="142" covered="0"/><du var="hints" def="82" use="141" target="146" covered="0"/><du var="this.counters" def="82" use="106" covered="0"/><du var="this.counters" def="82" use="109" covered="0"/><du var="this.counters" def="82" use="148" covered="0"/><du var="this.counters" def="82" use="152" covered="0"/><du var="this.decodeRowResult" def="82" use="96" covered="0"/><du var="this.decodeRowResult" def="82" use="99" target="100" covered="0"/><du var="this.decodeRowResult" def="82" use="99" target="103" covered="0"/><du var="this.decodeRowResult" def="82" use="122" target="126" covered="0"/><du var="this.decodeRowResult" def="82" use="122" target="123" covered="0"/><du var="this.decodeRowResult" def="82" use="123" covered="0"/><du var="this.decodeRowResult" def="82" use="126" covered="0"/><du var="this.decodeRowResult" def="82" use="130" covered="0"/><du var="this.decodeRowResult" def="82" use="136" target="138" covered="0"/><du var="this.decodeRowResult" def="82" use="136" target="141" covered="0"/><du var="this.decodeRowResult" def="82" use="142" covered="0"/><du var="this.decodeRowResult" def="82" use="143" covered="0"/><du var="this.decodeRowResult" def="82" use="155" covered="0"/><du var="STARTEND_ENCODING" def="82" use="127" target="128" covered="0"/><du var="STARTEND_ENCODING" def="82" use="127" target="130" covered="0"/><du var="STARTEND_ENCODING" def="82" use="131" target="132" covered="0"/><du var="STARTEND_ENCODING" def="82" use="131" target="136" covered="0"/><du var="STARTEND_ENCODING" def="82" use="100" target="101" covered="0"/><du var="STARTEND_ENCODING" def="82" use="100" target="103" covered="0"/><du var="ALPHABET" def="82" use="123" covered="0"/><du var="ALPHABET" def="82" use="100" target="101" covered="0"/><du var="ALPHABET" def="82" use="100" target="103" covered="0"/><du var="this.counterLength" def="82" use="88" target="106" covered="0"/><du var="this.counterLength" def="82" use="88" target="89" covered="0"/><du var="this.counterLength" def="82" use="115" target="115" covered="0"/><du var="this.counterLength" def="82" use="115" target="119" covered="0"/><du var="RETURN_CODABAR_START_END" def="82" use="141" target="142" covered="0"/><du var="RETURN_CODABAR_START_END" def="82" use="141" target="146" covered="0"/><du var="CODABAR" def="82" use="155" covered="0"/><du var="startOffset" def="84" use="119" covered="0"/><du var="startOffset" def="84" use="147" target="150" covered="0"/><du var="startOffset" def="84" use="147" target="148" covered="0"/><du var="startOffset" def="84" use="151" covered="0"/><du var="nextStart" def="85" use="89" covered="0"/><du var="nextStart" def="85" use="97" covered="0"/><du var="charOffset" def="89" use="90" target="91" covered="0"/><du var="charOffset" def="89" use="90" target="96" covered="0"/><du var="charOffset" def="89" use="96" covered="0"/><du var="charOffset" def="89" use="100" target="101" covered="0"/><du var="charOffset" def="89" use="100" target="103" covered="0"/><du var="nextStart" def="97" use="88" target="106" covered="0"/><du var="nextStart" def="97" use="88" target="89" covered="0"/><du var="nextStart" def="97" use="89" covered="0"/><du var="nextStart" def="97" use="97" covered="0"/><du var="nextStart" def="97" use="106" covered="0"/><du var="nextStart" def="97" use="109" covered="0"/><du var="nextStart" def="97" use="115" target="115" covered="0"/><du var="nextStart" def="97" use="115" target="119" covered="0"/><du var="nextStart" def="97" use="151" target="154" covered="0"/><du var="nextStart" def="97" use="151" target="152" covered="0"/><du var="trailingWhitespace" def="106" use="115" target="116" covered="0"/><du var="trailingWhitespace" def="106" use="115" target="119" covered="0"/><du var="lastPatternSize" def="107" use="109" covered="0"/><du var="lastPatternSize" def="107" use="115" target="116" covered="0"/><du var="lastPatternSize" def="107" use="115" target="119" covered="0"/><du var="i" def="108" use="108" target="115" covered="0"/><du var="i" def="108" use="108" target="109" covered="0"/><du var="i" def="108" use="109" covered="0"/><du var="i" def="108" use="108" covered="0"/><du var="lastPatternSize" def="109" use="109" covered="0"/><du var="lastPatternSize" def="109" use="115" target="116" covered="0"/><du var="lastPatternSize" def="109" use="115" target="119" covered="0"/><du var="i" def="108" use="108" target="115" covered="0"/><du var="i" def="108" use="108" target="109" covered="0"/><du var="i" def="108" use="109" covered="0"/><du var="i" def="108" use="108" covered="0"/><du var="i" def="122" use="122" target="126" covered="0"/><du var="i" def="122" use="122" target="123" covered="0"/><du var="i" def="122" use="123" covered="0"/><du var="i" def="122" use="122" covered="0"/><du var="i" def="122" use="122" target="126" covered="0"/><du var="i" def="122" use="122" target="123" covered="0"/><du var="i" def="122" use="123" covered="0"/><du var="i" def="122" use="122" covered="0"/><du var="startchar" def="126" use="127" target="128" covered="0"/><du var="startchar" def="126" use="127" target="130" covered="0"/><du var="endchar" def="130" use="131" target="132" covered="0"/><du var="endchar" def="130" use="131" target="136" covered="0"/><du var="runningCount" def="146" use="148" covered="0"/><du var="runningCount" def="146" use="150" covered="0"/><du var="runningCount" def="146" use="152" covered="0"/><du var="runningCount" def="146" use="154" covered="0"/><du var="i" def="147" use="147" target="150" covered="0"/><du var="i" def="147" use="147" target="148" covered="0"/><du var="i" def="147" use="148" covered="0"/><du var="i" def="147" use="147" covered="0"/><du var="runningCount" def="148" use="148" covered="0"/><du var="runningCount" def="148" use="150" covered="0"/><du var="runningCount" def="148" use="152" covered="0"/><du var="runningCount" def="148" use="154" covered="0"/><du var="i" def="147" use="147" target="150" covered="0"/><du var="i" def="147" use="147" target="148" covered="0"/><du var="i" def="147" use="148" covered="0"/><du var="i" def="147" use="147" covered="0"/><du var="left" def="150" use="159" covered="0"/><du var="i" def="151" use="151" target="154" covered="0"/><du var="i" def="151" use="151" target="152" covered="0"/><du var="i" def="151" use="152" covered="0"/><du var="i" def="151" use="151" covered="0"/><du var="runningCount" def="152" use="152" covered="0"/><du var="runningCount" def="152" use="154" covered="0"/><du var="i" def="151" use="151" target="154" covered="0"/><du var="i" def="151" use="151" target="152" covered="0"/><du var="i" def="151" use="152" covered="0"/><du var="i" def="151" use="151" covered="0"/><counter type="DU" missed="138" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validatePattern" desc="(I)V"><du var="this" def="166" use="174" covered="0"/><du var="this" def="166" use="179" covered="0"/><du var="this" def="166" use="206" covered="0"/><du var="this" def="166" use="211" covered="0"/><du var="start" def="166" use="204" covered="0"/><du var="this.decodeRowResult" def="166" use="174" covered="0"/><du var="this.decodeRowResult" def="166" use="206" covered="0"/><du var="CHARACTER_ENCODINGS" def="166" use="174" covered="0"/><du var="CHARACTER_ENCODINGS" def="166" use="206" covered="0"/><du var="this.counters" def="166" use="179" covered="0"/><du var="this.counters" def="166" use="211" covered="0"/><du var="sizes" def="166" use="179" covered="0"/><du var="sizes" def="166" use="198" covered="0"/><du var="sizes" def="166" use="200" covered="0"/><du var="counts" def="167" use="180" covered="0"/><du var="counts" def="167" use="198" covered="0"/><du var="counts" def="167" use="200" covered="0"/><du var="end" def="168" use="183" target="184" covered="0"/><du var="end" def="168" use="183" target="187" covered="0"/><du var="end" def="168" use="217" target="218" covered="0"/><du var="end" def="168" use="217" target="220" covered="0"/><du var="pos" def="172" use="179" covered="0"/><du var="pos" def="172" use="187" covered="0"/><du var="i" def="173" use="174" covered="0"/><du var="i" def="173" use="183" target="184" covered="0"/><du var="i" def="173" use="183" target="187" covered="0"/><du var="i" def="173" use="173" covered="0"/><du var="pattern" def="174" use="178" covered="0"/><du var="pattern" def="174" use="181" covered="0"/><du var="j" def="175" use="175" target="183" covered="0"/><du var="j" def="175" use="175" target="178" covered="0"/><du var="j" def="175" use="178" covered="0"/><du var="j" def="175" use="179" covered="0"/><du var="j" def="175" use="175" covered="0"/><du var="pattern" def="181" use="178" covered="0"/><du var="pattern" def="181" use="181" covered="0"/><du var="j" def="175" use="175" target="183" covered="0"/><du var="j" def="175" use="175" target="178" covered="0"/><du var="j" def="175" use="178" covered="0"/><du var="j" def="175" use="179" covered="0"/><du var="j" def="175" use="175" covered="0"/><du var="pos" def="187" use="179" covered="0"/><du var="pos" def="187" use="187" covered="0"/><du var="i" def="173" use="174" covered="0"/><du var="i" def="173" use="183" target="184" covered="0"/><du var="i" def="173" use="183" target="187" covered="0"/><du var="i" def="173" use="173" covered="0"/><du var="maxes" def="191" use="199" covered="0"/><du var="maxes" def="191" use="200" covered="0"/><du var="maxes" def="191" use="212" target="213" covered="0"/><du var="maxes" def="191" use="212" target="215" covered="0"/><du var="mins" def="192" use="197" covered="0"/><du var="mins" def="192" use="198" covered="0"/><du var="mins" def="192" use="199" covered="0"/><du var="mins" def="192" use="212" target="212" covered="0"/><du var="mins" def="192" use="212" target="213" covered="0"/><du var="i" def="196" use="196" target="204" covered="0"/><du var="i" def="196" use="196" target="197" covered="0"/><du var="i" def="196" use="197" covered="0"/><du var="i" def="196" use="198" covered="0"/><du var="i" def="196" use="199" covered="0"/><du var="i" def="196" use="200" covered="0"/><du var="i" def="196" use="196" covered="0"/><du var="i" def="196" use="196" target="204" covered="0"/><du var="i" def="196" use="196" target="197" covered="0"/><du var="i" def="196" use="197" covered="0"/><du var="i" def="196" use="198" covered="0"/><du var="i" def="196" use="199" covered="0"/><du var="i" def="196" use="200" covered="0"/><du var="i" def="196" use="196" covered="0"/><du var="pos" def="204" use="211" covered="0"/><du var="pos" def="204" use="220" covered="0"/><du var="i" def="205" use="206" covered="0"/><du var="i" def="205" use="217" target="218" covered="0"/><du var="i" def="205" use="217" target="220" covered="0"/><du var="i" def="205" use="205" covered="0"/><du var="pattern" def="206" use="210" covered="0"/><du var="pattern" def="206" use="215" covered="0"/><du var="j" def="207" use="207" target="217" covered="0"/><du var="j" def="207" use="207" target="210" covered="0"/><du var="j" def="207" use="210" covered="0"/><du var="j" def="207" use="211" covered="0"/><du var="j" def="207" use="207" covered="0"/><du var="category" def="210" use="212" target="212" covered="0"/><du var="category" def="210" use="212" target="213" covered="0"/><du var="category" def="210" use="212" target="213" covered="0"/><du var="category" def="210" use="212" target="215" covered="0"/><du var="size" def="211" use="212" target="212" covered="0"/><du var="size" def="211" use="212" target="213" covered="0"/><du var="size" def="211" use="212" target="213" covered="0"/><du var="size" def="211" use="212" target="215" covered="0"/><du var="pattern" def="215" use="210" covered="0"/><du var="pattern" def="215" use="215" covered="0"/><du var="j" def="207" use="207" target="217" covered="0"/><du var="j" def="207" use="207" target="210" covered="0"/><du var="j" def="207" use="210" covered="0"/><du var="j" def="207" use="211" covered="0"/><du var="j" def="207" use="207" covered="0"/><du var="pos" def="220" use="211" covered="0"/><du var="pos" def="220" use="220" covered="0"/><du var="i" def="205" use="206" covered="0"/><du var="i" def="205" use="217" target="218" covered="0"/><du var="i" def="205" use="217" target="220" covered="0"/><du var="i" def="205" use="205" covered="0"/><counter type="DU" missed="104" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCounters" desc="(Lcom/google/zxing/common/BitArray;)V"><du var="this" def="231" use="244" covered="0"/><du var="this" def="231" use="250" covered="0"/><du var="row" def="231" use="241" target="242" covered="0"/><du var="row" def="231" use="241" target="244" covered="0"/><du var="i" def="233" use="235" target="236" covered="0"/><du var="i" def="233" use="235" target="238" covered="0"/><du var="i" def="233" use="240" target="250" covered="0"/><du var="i" def="233" use="240" target="241" covered="0"/><du var="i" def="233" use="241" target="242" covered="0"/><du var="i" def="233" use="241" target="244" covered="0"/><du var="i" def="233" use="248" covered="0"/><du var="end" def="234" use="235" target="236" covered="0"/><du var="end" def="234" use="235" target="238" covered="0"/><du var="end" def="234" use="240" target="250" covered="0"/><du var="end" def="234" use="240" target="241" covered="0"/><du var="isWhite" def="238" use="241" target="242" covered="0"/><du var="isWhite" def="238" use="241" target="244" covered="0"/><du var="isWhite" def="238" use="246" target="246" covered="0"/><du var="isWhite" def="238" use="246" target="246" covered="0"/><du var="count" def="239" use="244" covered="0"/><du var="count" def="239" use="242" covered="0"/><du var="count" def="239" use="250" covered="0"/><du var="count" def="242" use="244" covered="0"/><du var="count" def="242" use="242" covered="0"/><du var="count" def="242" use="250" covered="0"/><du var="count" def="245" use="244" covered="0"/><du var="count" def="245" use="242" covered="0"/><du var="count" def="245" use="250" covered="0"/><du var="isWhite" def="246" use="241" target="242" covered="0"/><du var="isWhite" def="246" use="241" target="244" covered="0"/><du var="isWhite" def="246" use="246" target="246" covered="0"/><du var="isWhite" def="246" use="246" target="246" covered="0"/><du var="i" def="248" use="240" target="250" covered="0"/><du var="i" def="248" use="240" target="241" covered="0"/><du var="i" def="248" use="241" target="242" covered="0"/><du var="i" def="248" use="241" target="244" covered="0"/><du var="i" def="248" use="248" covered="0"/><counter type="DU" missed="37" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="counterAppend" desc="(I)V"><du var="this" def="254" use="256" target="257" covered="0"/><du var="this" def="254" use="256" target="261" covered="0"/><du var="this" def="254" use="257" covered="0"/><du var="this" def="254" use="258" covered="0"/><du var="this" def="254" use="259" covered="0"/><du var="this.counters" def="254" use="256" target="257" covered="0"/><du var="this.counters" def="254" use="256" target="261" covered="0"/><du var="this.counters" def="254" use="258" covered="0"/><du var="this.counterLength" def="255" use="256" target="257" covered="0"/><du var="this.counterLength" def="255" use="256" target="261" covered="0"/><du var="this.counterLength" def="255" use="257" covered="0"/><du var="this.counterLength" def="255" use="258" covered="0"/><counter type="DU" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findStartPattern" desc="()I"><du var="this" def="264" use="264" target="278" covered="0"/><du var="this" def="264" use="264" target="265" covered="0"/><du var="this" def="264" use="265" covered="0"/><du var="this" def="264" use="271" covered="0"/><du var="this" def="264" use="273" target="274" covered="0"/><du var="this" def="264" use="273" target="264" covered="0"/><du var="STARTEND_ENCODING" def="264" use="266" target="269" covered="0"/><du var="STARTEND_ENCODING" def="264" use="266" target="264" covered="0"/><du var="ALPHABET" def="264" use="266" target="269" covered="0"/><du var="ALPHABET" def="264" use="266" target="264" covered="0"/><du var="this.counters" def="264" use="271" covered="0"/><du var="this.counters" def="264" use="273" target="274" covered="0"/><du var="this.counters" def="264" use="273" target="264" covered="0"/><du var="this.counterLength" def="264" use="264" target="278" covered="0"/><du var="this.counterLength" def="264" use="264" target="265" covered="0"/><du var="i" def="264" use="264" target="278" covered="0"/><du var="i" def="264" use="264" target="265" covered="0"/><du var="i" def="264" use="265" covered="0"/><du var="i" def="264" use="264" covered="0"/><du var="i" def="264" use="270" covered="0"/><du var="i" def="264" use="270" target="273" covered="0"/><du var="i" def="264" use="270" target="271" covered="0"/><du var="i" def="264" use="273" target="273" covered="0"/><du var="i" def="264" use="273" target="274" covered="0"/><du var="i" def="264" use="274" covered="0"/><du var="i" def="264" use="273" target="274" covered="0"/><du var="i" def="264" use="273" target="264" covered="0"/><du var="charOffset" def="265" use="266" target="266" covered="0"/><du var="charOffset" def="265" use="266" target="264" covered="0"/><du var="charOffset" def="265" use="266" target="269" covered="0"/><du var="charOffset" def="265" use="266" target="264" covered="0"/><du var="patternSize" def="269" use="271" covered="0"/><du var="patternSize" def="269" use="273" target="274" covered="0"/><du var="patternSize" def="269" use="273" target="264" covered="0"/><du var="j" def="270" use="270" target="273" covered="0"/><du var="j" def="270" use="270" target="271" covered="0"/><du var="j" def="270" use="271" covered="0"/><du var="j" def="270" use="270" covered="0"/><du var="patternSize" def="271" use="271" covered="0"/><du var="patternSize" def="271" use="273" target="274" covered="0"/><du var="patternSize" def="271" use="273" target="264" covered="0"/><du var="j" def="270" use="270" target="273" covered="0"/><du var="j" def="270" use="270" target="271" covered="0"/><du var="j" def="270" use="271" covered="0"/><du var="j" def="270" use="270" covered="0"/><du var="i" def="264" use="264" target="278" covered="0"/><du var="i" def="264" use="264" target="265" covered="0"/><du var="i" def="264" use="265" covered="0"/><du var="i" def="264" use="264" covered="0"/><du var="i" def="264" use="270" covered="0"/><du var="i" def="264" use="270" target="273" covered="0"/><du var="i" def="264" use="270" target="271" covered="0"/><du var="i" def="264" use="273" target="273" covered="0"/><du var="i" def="264" use="273" target="274" covered="0"/><du var="i" def="264" use="274" covered="0"/><du var="i" def="264" use="273" target="274" covered="0"/><du var="i" def="264" use="273" target="264" covered="0"/><counter type="DU" missed="57" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayContains" desc="([CC)Z"><du var="array" def="282" use="282" target="283" covered="0"/><du var="array" def="282" use="282" target="289" covered="0"/><du var="array" def="282" use="283" covered="0"/><du var="array" def="282" use="283" covered="0"/><du var="key" def="282" use="284" target="285" covered="0"/><du var="key" def="282" use="284" target="283" covered="0"/><du var="c" def="283" use="284" target="285" covered="0"/><du var="c" def="283" use="284" target="283" covered="0"/><counter type="DU" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toNarrowWidePattern" desc="(I)I"><du var="this" def="294" use="295" target="296" covered="0"/><du var="this" def="294" use="295" target="299" covered="0"/><du var="this" def="294" use="299" covered="0"/><du var="position" def="294" use="303" covered="0"/><du var="position" def="294" use="316" covered="0"/><du var="position" def="294" use="332" target="333" covered="0"/><du var="position" def="294" use="332" target="329" covered="0"/><du var="this.counterLength" def="294" use="295" target="296" covered="0"/><du var="this.counterLength" def="294" use="295" target="299" covered="0"/><du var="this.counters" def="294" use="299" covered="0"/><du var="CHARACTER_ENCODINGS" def="294" use="337" target="342" covered="0"/><du var="CHARACTER_ENCODINGS" def="294" use="337" target="338" covered="0"/><du var="CHARACTER_ENCODINGS" def="294" use="338" target="339" covered="0"/><du var="CHARACTER_ENCODINGS" def="294" use="338" target="337" covered="0"/><du var="end" def="294" use="295" target="296" covered="0"/><du var="end" def="294" use="295" target="299" covered="0"/><du var="end" def="294" use="303" target="312" covered="0"/><du var="end" def="294" use="303" target="304" covered="0"/><du var="end" def="294" use="316" target="325" covered="0"/><du var="end" def="294" use="316" target="317" covered="0"/><du var="theCounters" def="299" use="304" covered="0"/><du var="theCounters" def="299" use="317" covered="0"/><du var="theCounters" def="299" use="332" target="333" covered="0"/><du var="theCounters" def="299" use="332" target="329" covered="0"/><du var="maxBar" def="301" use="308" target="309" covered="0"/><du var="maxBar" def="301" use="308" target="303" covered="0"/><du var="maxBar" def="301" use="312" covered="0"/><du var="minBar" def="302" use="305" target="306" covered="0"/><du var="minBar" def="302" use="305" target="308" covered="0"/><du var="minBar" def="302" use="312" covered="0"/><du var="j" def="303" use="303" target="312" covered="0"/><du var="j" def="303" use="303" target="304" covered="0"/><du var="j" def="303" use="304" covered="0"/><du var="j" def="303" use="303" covered="0"/><du var="currentCounter" def="304" use="305" target="306" covered="0"/><du var="currentCounter" def="304" use="305" target="308" covered="0"/><du var="currentCounter" def="304" use="308" target="309" covered="0"/><du var="currentCounter" def="304" use="308" target="303" covered="0"/><du var="currentCounter" def="304" use="309" covered="0"/><du var="currentCounter" def="304" use="306" covered="0"/><du var="minBar" def="306" use="305" target="306" covered="0"/><du var="minBar" def="306" use="305" target="308" covered="0"/><du var="minBar" def="306" use="312" covered="0"/><du var="maxBar" def="309" use="308" target="309" covered="0"/><du var="maxBar" def="309" use="308" target="303" covered="0"/><du var="maxBar" def="309" use="312" covered="0"/><du var="j" def="303" use="303" target="312" covered="0"/><du var="j" def="303" use="303" target="304" covered="0"/><du var="j" def="303" use="304" covered="0"/><du var="j" def="303" use="303" covered="0"/><du var="thresholdBar" def="312" use="330" covered="0"/><du var="maxSpace" def="314" use="321" target="322" covered="0"/><du var="maxSpace" def="314" use="321" target="316" covered="0"/><du var="maxSpace" def="314" use="325" covered="0"/><du var="minSpace" def="315" use="318" target="319" covered="0"/><du var="minSpace" def="315" use="318" target="321" covered="0"/><du var="minSpace" def="315" use="325" covered="0"/><du var="j" def="316" use="316" target="325" covered="0"/><du var="j" def="316" use="316" target="317" covered="0"/><du var="j" def="316" use="317" covered="0"/><du var="j" def="316" use="316" covered="0"/><du var="currentCounter" def="317" use="318" target="319" covered="0"/><du var="currentCounter" def="317" use="318" target="321" covered="0"/><du var="currentCounter" def="317" use="321" target="322" covered="0"/><du var="currentCounter" def="317" use="321" target="316" covered="0"/><du var="currentCounter" def="317" use="322" covered="0"/><du var="currentCounter" def="317" use="319" covered="0"/><du var="minSpace" def="319" use="318" target="319" covered="0"/><du var="minSpace" def="319" use="318" target="321" covered="0"/><du var="minSpace" def="319" use="325" covered="0"/><du var="maxSpace" def="322" use="321" target="322" covered="0"/><du var="maxSpace" def="322" use="321" target="316" covered="0"/><du var="maxSpace" def="322" use="325" covered="0"/><du var="j" def="316" use="316" target="325" covered="0"/><du var="j" def="316" use="316" target="317" covered="0"/><du var="j" def="316" use="317" covered="0"/><du var="j" def="316" use="316" covered="0"/><du var="thresholdSpace" def="325" use="330" covered="0"/><du var="bitmask" def="327" use="331" covered="0"/><du var="pattern" def="328" use="333" covered="0"/><du var="pattern" def="328" use="338" target="339" covered="0"/><du var="pattern" def="328" use="338" target="337" covered="0"/><du var="i" def="329" use="329" target="337" covered="0"/><du var="i" def="329" use="329" target="330" covered="0"/><du var="i" def="329" use="330" target="330" covered="0"/><du var="i" def="329" use="330" target="330" covered="0"/><du var="i" def="329" use="332" target="333" covered="0"/><du var="i" def="329" use="332" target="329" covered="0"/><du var="i" def="329" use="329" covered="0"/><du var="threshold" def="330" use="332" target="333" covered="0"/><du var="threshold" def="330" use="332" target="329" covered="0"/><du var="bitmask" def="331" use="331" covered="0"/><du var="bitmask" def="331" use="333" covered="0"/><du var="pattern" def="333" use="333" covered="0"/><du var="pattern" def="333" use="338" target="339" covered="0"/><du var="pattern" def="333" use="338" target="337" covered="0"/><du var="i" def="329" use="329" target="337" covered="0"/><du var="i" def="329" use="329" target="330" covered="0"/><du var="i" def="329" use="330" target="330" covered="0"/><du var="i" def="329" use="330" target="330" covered="0"/><du var="i" def="329" use="332" target="333" covered="0"/><du var="i" def="329" use="332" target="329" covered="0"/><du var="i" def="329" use="329" covered="0"/><du var="i" def="337" use="337" target="342" covered="0"/><du var="i" def="337" use="337" target="338" covered="0"/><du var="i" def="337" use="338" target="339" covered="0"/><du var="i" def="337" use="338" target="337" covered="0"/><du var="i" def="337" use="337" covered="0"/><du var="i" def="337" use="339" covered="0"/><du var="i" def="337" use="337" target="342" covered="0"/><du var="i" def="337" use="337" target="338" covered="0"/><du var="i" def="337" use="338" target="339" covered="0"/><du var="i" def="337" use="338" target="337" covered="0"/><du var="i" def="337" use="337" covered="0"/><du var="i" def="337" use="339" covered="0"/><counter type="DU" missed="115" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="482" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/UPCAWriter"><method name="encode" desc="(Ljava/lang/String;Lcom/google/zxing/BarcodeFormat;IILjava/util/Map;)Lcom/google/zxing/common/BitMatrix;"><du var="this" def="48" use="52" covered="0"/><du var="contents" def="48" use="52" covered="0"/><du var="format" def="48" use="48" target="49" covered="0"/><du var="format" def="48" use="48" target="52" covered="0"/><du var="format" def="48" use="49" covered="0"/><du var="width" def="48" use="52" covered="0"/><du var="height" def="48" use="52" covered="0"/><du var="hints" def="48" use="52" covered="0"/><du var="UPC_A" def="48" use="48" target="49" covered="0"/><du var="UPC_A" def="48" use="48" target="52" covered="0"/><du var="this.subWriter" def="48" use="52" covered="0"/><du var="EAN_13" def="48" use="52" covered="0"/><counter type="DU" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/UPCEReader"><method name="decodeMiddle" desc="(Lcom/google/zxing/common/BitArray;[ILjava/lang/StringBuilder;)I"><du var="row" def="82" use="93" covered="0"/><du var="result" def="82" use="103" covered="0"/><du var="result" def="82" use="94" covered="0"/><du var="L_AND_G_PATTERNS" def="82" use="93" covered="0"/><du var="counters" def="82" use="93" covered="0"/><du var="counters" def="82" use="95" covered="0"/><du var="counters" def="82" use="95" covered="0"/><du var="end" def="87" use="92" target="103" covered="0"/><du var="end" def="87" use="92" target="93" covered="0"/><du var="rowOffset" def="88" use="105" covered="0"/><du var="rowOffset" def="88" use="92" target="103" covered="0"/><du var="rowOffset" def="88" use="92" target="93" covered="0"/><du var="rowOffset" def="88" use="93" covered="0"/><du var="rowOffset" def="88" use="96" covered="0"/><du var="lgPatternFound" def="90" use="103" covered="0"/><du var="lgPatternFound" def="90" use="99" covered="0"/><du var="x" def="92" use="92" target="92" covered="0"/><du var="x" def="92" use="92" target="103" covered="0"/><du var="x" def="92" use="92" covered="0"/><du var="x" def="92" use="99" covered="0"/><du var="bestMatch" def="93" use="98" target="99" covered="0"/><du var="bestMatch" def="93" use="98" target="92" covered="0"/><du var="rowOffset" def="96" use="96" covered="0"/><du var="rowOffset" def="96" use="105" covered="0"/><du var="rowOffset" def="96" use="92" target="103" covered="0"/><du var="rowOffset" def="96" use="92" target="93" covered="0"/><du var="rowOffset" def="96" use="93" covered="0"/><du var="lgPatternFound" def="99" use="103" covered="0"/><du var="lgPatternFound" def="99" use="99" covered="0"/><du var="x" def="92" use="92" target="92" covered="0"/><du var="x" def="92" use="92" target="103" covered="0"/><du var="x" def="92" use="92" covered="0"/><du var="x" def="92" use="99" covered="0"/><counter type="DU" missed="44" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="determineNumSysAndCheckDigit" desc="(Ljava/lang/StringBuilder;I)V"><du var="resultString" def="121" use="124" covered="0"/><du var="resultString" def="121" use="125" covered="0"/><du var="lgPatternFound" def="121" use="123" target="124" covered="0"/><du var="lgPatternFound" def="121" use="123" target="122" covered="0"/><du var="NUMSYS_AND_CHECK_DIGIT_PATTERNS" def="121" use="123" target="124" covered="0"/><du var="NUMSYS_AND_CHECK_DIGIT_PATTERNS" def="121" use="123" target="122" covered="0"/><du var="numSys" def="121" use="121" target="130" covered="0"/><du var="numSys" def="121" use="121" target="122" covered="0"/><du var="numSys" def="121" use="123" target="124" covered="0"/><du var="numSys" def="121" use="123" target="122" covered="0"/><du var="numSys" def="121" use="124" covered="0"/><du var="numSys" def="121" use="121" covered="0"/><du var="d" def="122" use="122" target="121" covered="0"/><du var="d" def="122" use="122" target="123" covered="0"/><du var="d" def="122" use="123" target="124" covered="0"/><du var="d" def="122" use="123" target="122" covered="0"/><du var="d" def="122" use="122" covered="0"/><du var="d" def="122" use="125" covered="0"/><du var="d" def="122" use="122" target="121" covered="0"/><du var="d" def="122" use="122" target="123" covered="0"/><du var="d" def="122" use="123" target="124" covered="0"/><du var="d" def="122" use="123" target="122" covered="0"/><du var="d" def="122" use="122" covered="0"/><du var="d" def="122" use="125" covered="0"/><du var="numSys" def="121" use="121" target="130" covered="0"/><du var="numSys" def="121" use="121" target="122" covered="0"/><du var="numSys" def="121" use="123" target="124" covered="0"/><du var="numSys" def="121" use="123" target="122" covered="0"/><du var="numSys" def="121" use="124" covered="0"/><du var="numSys" def="121" use="121" covered="0"/><counter type="DU" missed="30" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertUPCEtoUPCA" desc="(Ljava/lang/String;)Ljava/lang/String;"><du var="upce" def="145" use="176" target="177" covered="0"/><du var="upce" def="145" use="176" target="179" covered="0"/><du var="upce" def="145" use="177" covered="0"/><du var="upceChars" def="145" use="165" covered="0"/><du var="upceChars" def="145" use="167" covered="0"/><du var="upceChars" def="145" use="160" covered="0"/><du var="upceChars" def="145" use="162" covered="0"/><du var="upceChars" def="145" use="154" covered="0"/><du var="upceChars" def="145" use="157" covered="0"/><du var="upceChars" def="145" use="170" covered="0"/><du var="result" def="147" use="165" covered="0"/><du var="result" def="147" use="166" covered="0"/><du var="result" def="147" use="167" covered="0"/><du var="result" def="147" use="179" covered="0"/><du var="result" def="147" use="177" covered="0"/><du var="result" def="147" use="160" covered="0"/><du var="result" def="147" use="161" covered="0"/><du var="result" def="147" use="162" covered="0"/><du var="result" def="147" use="154" covered="0"/><du var="result" def="147" use="155" covered="0"/><du var="result" def="147" use="156" covered="0"/><du var="result" def="147" use="157" covered="0"/><du var="result" def="147" use="170" covered="0"/><du var="result" def="147" use="171" covered="0"/><du var="result" def="147" use="172" covered="0"/><du var="lastChar" def="149" use="150" target="170" covered="0"/><du var="lastChar" def="149" use="150" target="154" covered="0"/><du var="lastChar" def="149" use="150" target="160" covered="0"/><du var="lastChar" def="149" use="150" target="165" covered="0"/><du var="lastChar" def="149" use="155" covered="0"/><du var="lastChar" def="149" use="172" covered="0"/><counter type="DU" missed="31" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="105" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/EANManufacturerOrgSupport"><method name="lookupCountryIdentifier" desc="(Ljava/lang/String;)Ljava/lang/String;"><du var="this" def="37" use="41" covered="1"/><du var="this" def="37" use="48" covered="1"/><du var="this.ranges" def="37" use="41" covered="1"/><du var="this.countryIdentifiers" def="37" use="48" covered="1"/><du var="prefix" def="38" use="43" target="44" covered="1"/><du var="prefix" def="38" use="43" target="46" covered="1"/><du var="prefix" def="38" use="47" target="48" covered="1"/><du var="prefix" def="38" use="47" target="40" covered="1"/><du var="max" def="39" use="40" target="51" covered="0"/><du var="max" def="39" use="40" target="41" covered="1"/><du var="i" def="40" use="40" target="51" covered="0"/><du var="i" def="40" use="40" target="41" covered="1"/><du var="i" def="40" use="41" covered="1"/><du var="i" def="40" use="40" covered="1"/><du var="i" def="40" use="48" covered="1"/><du var="range" def="41" use="46" target="46" covered="1"/><du var="range" def="41" use="46" target="46" covered="1"/><du var="range" def="41" use="46" covered="1"/><du var="start" def="42" use="43" target="44" covered="1"/><du var="start" def="42" use="43" target="46" covered="1"/><du var="start" def="42" use="46" covered="1"/><du var="end" def="46" use="47" target="48" covered="1"/><du var="end" def="46" use="47" target="40" covered="1"/><du var="i" def="40" use="40" target="51" covered="0"/><du var="i" def="40" use="40" target="41" covered="1"/><du var="i" def="40" use="41" covered="1"/><du var="i" def="40" use="40" covered="1"/><du var="i" def="40" use="48" covered="1"/><counter type="DU" missed="3" covered="25"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initIfNeeded" desc="()V"><du var="this" def="60" use="60" target="61" covered="1"/><du var="this" def="60" use="60" target="63" covered="1"/><du var="this" def="60" use="63" covered="1"/><du var="this" def="60" use="64" covered="1"/><du var="this" def="60" use="65" covered="1"/><du var="this" def="60" use="66" covered="1"/><du var="this" def="60" use="67" covered="1"/><du var="this" def="60" use="68" covered="1"/><du var="this" def="60" use="69" covered="1"/><du var="this" def="60" use="70" covered="1"/><du var="this" def="60" use="71" covered="1"/><du var="this" def="60" use="72" covered="1"/><du var="this" def="60" use="73" covered="1"/><du var="this" def="60" use="74" covered="1"/><du var="this" def="60" use="75" covered="1"/><du var="this" def="60" use="76" covered="1"/><du var="this" def="60" use="77" covered="1"/><du var="this" def="60" use="78" covered="1"/><du var="this" def="60" use="79" covered="1"/><du var="this" def="60" use="80" covered="1"/><du var="this" def="60" use="81" covered="1"/><du var="this" def="60" use="82" covered="1"/><du var="this" def="60" use="83" covered="1"/><du var="this" def="60" use="84" covered="1"/><du var="this" def="60" use="85" covered="1"/><du var="this" def="60" use="86" covered="1"/><du var="this" def="60" use="87" covered="1"/><du var="this" def="60" use="88" covered="1"/><du var="this" def="60" use="89" covered="1"/><du var="this" def="60" use="90" covered="1"/><du var="this" def="60" use="91" covered="1"/><du var="this" def="60" use="92" covered="1"/><du var="this" def="60" use="93" covered="1"/><du var="this" def="60" use="94" covered="1"/><du var="this" def="60" use="95" covered="1"/><du var="this" def="60" use="96" covered="1"/><du var="this" def="60" use="97" covered="1"/><du var="this" def="60" use="98" covered="1"/><du var="this" def="60" use="99" covered="1"/><du var="this" def="60" use="100" covered="1"/><du var="this" def="60" use="101" covered="1"/><du var="this" def="60" use="102" covered="1"/><du var="this" def="60" use="103" covered="1"/><du var="this" def="60" use="104" covered="1"/><du var="this" def="60" use="105" covered="1"/><du var="this" def="60" use="106" covered="1"/><du var="this" def="60" use="107" covered="1"/><du var="this" def="60" use="108" covered="1"/><du var="this" def="60" use="109" covered="1"/><du var="this" def="60" use="110" covered="1"/><du var="this" def="60" use="111" covered="1"/><du var="this" def="60" use="112" covered="1"/><du var="this" def="60" use="113" covered="1"/><du var="this" def="60" use="114" covered="1"/><du var="this" def="60" use="115" covered="1"/><du var="this" def="60" use="116" covered="1"/><du var="this" def="60" use="117" covered="1"/><du var="this" def="60" use="118" covered="1"/><du var="this" def="60" use="119" covered="1"/><du var="this" def="60" use="120" covered="1"/><du var="this" def="60" use="121" covered="1"/><du var="this" def="60" use="122" covered="1"/><du var="this" def="60" use="123" covered="1"/><du var="this" def="60" use="124" covered="1"/><du var="this" def="60" use="125" covered="1"/><du var="this" def="60" use="126" covered="1"/><du var="this" def="60" use="127" covered="1"/><du var="this" def="60" use="128" covered="1"/><du var="this" def="60" use="129" covered="1"/><du var="this" def="60" use="130" covered="1"/><du var="this" def="60" use="131" covered="1"/><du var="this" def="60" use="132" covered="1"/><du var="this" def="60" use="133" covered="1"/><du var="this" def="60" use="134" covered="1"/><du var="this" def="60" use="135" covered="1"/><du var="this" def="60" use="136" covered="1"/><du var="this" def="60" use="137" covered="1"/><du var="this" def="60" use="138" covered="1"/><du var="this" def="60" use="139" covered="1"/><du var="this" def="60" use="140" covered="1"/><du var="this" def="60" use="141" covered="1"/><du var="this" def="60" use="142" covered="1"/><du var="this" def="60" use="143" covered="1"/><du var="this" def="60" use="144" covered="1"/><du var="this" def="60" use="145" covered="1"/><du var="this" def="60" use="146" covered="1"/><du var="this" def="60" use="147" covered="1"/><du var="this" def="60" use="148" covered="1"/><du var="this" def="60" use="149" covered="1"/><du var="this" def="60" use="150" covered="1"/><du var="this" def="60" use="151" covered="1"/><du var="this" def="60" use="152" covered="1"/><du var="this" def="60" use="153" covered="1"/><du var="this" def="60" use="154" covered="1"/><du var="this" def="60" use="155" covered="1"/><du var="this" def="60" use="156" covered="1"/><du var="this" def="60" use="157" covered="1"/><du var="this" def="60" use="158" covered="1"/><du var="this" def="60" use="159" covered="1"/><du var="this" def="60" use="160" covered="1"/><du var="this" def="60" use="161" covered="1"/><du var="this" def="60" use="162" covered="1"/><du var="this" def="60" use="163" covered="1"/><du var="this" def="60" use="164" covered="1"/><du var="this" def="60" use="165" covered="1"/><du var="this" def="60" use="166" covered="1"/><du var="this" def="60" use="167" covered="1"/><du var="this" def="60" use="168" covered="1"/><du var="this.ranges" def="60" use="60" target="61" covered="1"/><du var="this.ranges" def="60" use="60" target="63" covered="1"/><counter type="DU" missed="0" covered="110"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="3" covered="135"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/oned/Code93Writer"><method name="encode" desc="(Ljava/lang/String;Lcom/google/zxing/BarcodeFormat;IILjava/util/Map;)Lcom/google/zxing/common/BitMatrix;"><du var="this" def="35" use="38" covered="0"/><du var="contents" def="35" use="38" covered="0"/><du var="format" def="35" use="35" target="36" covered="0"/><du var="format" def="35" use="35" target="38" covered="0"/><du var="format" def="35" use="38" covered="0"/><du var="format" def="35" use="36" covered="0"/><du var="width" def="35" use="38" covered="0"/><du var="height" def="35" use="38" covered="0"/><du var="hints" def="35" use="38" covered="0"/><du var="CODE_93" def="35" use="35" target="36" covered="0"/><du var="CODE_93" def="35" use="35" target="38" covered="0"/><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/String;)[Z"><du var="contents" def="43" use="52" covered="0"/><du var="contents" def="43" use="61" covered="0"/><du var="contents" def="43" use="67" covered="0"/><du var="contents" def="43" use="72" covered="0"/><du var="CHARACTER_ENCODINGS" def="43" use="55" covered="0"/><du var="CHARACTER_ENCODINGS" def="43" use="62" covered="0"/><du var="CHARACTER_ENCODINGS" def="43" use="68" covered="0"/><du var="CHARACTER_ENCODINGS" def="43" use="75" covered="0"/><du var="CHARACTER_ENCODINGS" def="43" use="79" covered="0"/><du var="length" def="43" use="44" target="45" covered="0"/><du var="length" def="43" use="44" target="49" covered="0"/><du var="length" def="43" use="60" target="67" covered="0"/><du var="length" def="43" use="60" target="61" covered="0"/><du var="length" def="43" use="45" covered="0"/><du var="widths" def="49" use="62" covered="0"/><du var="widths" def="49" use="63" covered="0"/><du var="widths" def="49" use="68" covered="0"/><du var="widths" def="49" use="69" covered="0"/><du var="widths" def="49" use="75" covered="0"/><du var="widths" def="49" use="76" covered="0"/><du var="widths" def="49" use="79" covered="0"/><du var="widths" def="49" use="80" covered="0"/><du var="result" def="57" use="63" covered="0"/><du var="result" def="57" use="69" covered="0"/><du var="result" def="57" use="76" covered="0"/><du var="result" def="57" use="80" covered="0"/><du var="result" def="57" use="83" covered="0"/><du var="result" def="57" use="85" covered="0"/><du var="pos" def="58" use="63" covered="0"/><du var="pos" def="58" use="69" covered="0"/><du var="i" def="60" use="60" target="67" covered="0"/><du var="i" def="60" use="60" target="61" covered="0"/><du var="i" def="60" use="61" covered="0"/><du var="i" def="60" use="60" covered="0"/><du var="pos" def="63" use="63" covered="0"/><du var="pos" def="63" use="69" covered="0"/><du var="i" def="60" use="60" target="67" covered="0"/><du var="i" def="60" use="60" target="61" covered="0"/><du var="i" def="60" use="61" covered="0"/><du var="i" def="60" use="60" covered="0"/><counter type="DU" missed="40" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toIntArray" desc="(I[I)V"><du var="a" def="89" use="90" covered="0"/><du var="toReturn" def="89" use="91" covered="0"/><du var="i" def="89" use="89" target="93" covered="0"/><du var="i" def="89" use="89" target="90" covered="0"/><du var="i" def="89" use="90" covered="0"/><du var="i" def="89" use="91" covered="0"/><du var="i" def="89" use="89" covered="0"/><du var="temp" def="90" use="91" target="91" covered="0"/><du var="temp" def="90" use="91" target="91" covered="0"/><du var="i" def="89" use="89" target="93" covered="0"/><du var="i" def="89" use="89" target="90" covered="0"/><du var="i" def="89" use="90" covered="0"/><du var="i" def="89" use="91" covered="0"/><du var="i" def="89" use="89" covered="0"/><counter type="DU" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendPattern" desc="([ZI[I)I"><du var="target" def="109" use="110" covered="0"/><du var="pos" def="109" use="110" covered="0"/><du var="bit" def="109" use="110" target="110" covered="0"/><du var="bit" def="109" use="110" target="110" covered="0"/><du var="pos" def="110" use="110" covered="0"/><du var="pos" def="110" use="110" covered="0"/><counter type="DU" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeChecksumIndex" desc="(Ljava/lang/String;I)I"><du var="contents" def="116" use="120" covered="0"/><du var="maxWeight" def="116" use="122" target="123" covered="0"/><du var="maxWeight" def="116" use="122" target="119" covered="0"/><du var="weight" def="116" use="121" covered="0"/><du var="weight" def="116" use="122" covered="0"/><du var="total" def="117" use="121" covered="0"/><du var="total" def="117" use="126" covered="0"/><du var="i" def="119" use="119" target="126" covered="0"/><du var="i" def="119" use="119" target="120" covered="0"/><du var="i" def="119" use="120" covered="0"/><du var="i" def="119" use="119" covered="0"/><du var="total" def="121" use="121" covered="0"/><du var="total" def="121" use="126" covered="0"/><du var="weight" def="122" use="122" target="123" covered="0"/><du var="weight" def="122" use="122" target="119" covered="0"/><du var="weight" def="122" use="121" covered="0"/><du var="weight" def="122" use="122" covered="0"/><du var="weight" def="123" use="121" covered="0"/><du var="weight" def="123" use="122" covered="0"/><du var="i" def="119" use="119" target="126" covered="0"/><du var="i" def="119" use="119" target="120" covered="0"/><du var="i" def="119" use="120" covered="0"/><du var="i" def="119" use="119" covered="0"/><counter type="DU" missed="23" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="105" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/ITFReader"><method name="decodeRow" desc="(ILcom/google/zxing/common/BitArray;Ljava/util/Map;)Lcom/google/zxing/Result;"><du var="rowNumber" def="89" use="129" covered="0"/><du var="rowNumber" def="89" use="130" covered="0"/><du var="hints" def="89" use="97" target="98" covered="0"/><du var="hints" def="89" use="97" target="101" covered="0"/><du var="hints" def="89" use="98" covered="0"/><du var="ALLOWED_LENGTHS" def="89" use="98" covered="0"/><du var="DEFAULT_ALLOWED_LENGTHS" def="89" use="102" covered="0"/><du var="ITF" def="89" use="126" covered="0"/><du var="startRange" def="89" use="129" covered="0"/><du var="endRange" def="90" use="130" covered="0"/><du var="resultString" def="94" use="107" covered="0"/><du var="resultString" def="94" use="126" covered="0"/><du var="allowedLengths" def="96" use="101" target="102" covered="0"/><du var="allowedLengths" def="96" use="101" target="107" covered="0"/><du var="allowedLengths" def="96" use="110" covered="0"/><du var="allowedLengths" def="96" use="110" covered="0"/><du var="allowedLengths" def="98" use="101" target="102" covered="0"/><du var="allowedLengths" def="98" use="101" target="107" covered="0"/><du var="allowedLengths" def="98" use="110" covered="0"/><du var="allowedLengths" def="98" use="110" covered="0"/><du var="allowedLengths" def="102" use="110" covered="0"/><du var="allowedLengths" def="102" use="110" covered="0"/><du var="length" def="107" use="111" target="112" covered="0"/><du var="length" def="107" use="111" target="115" covered="0"/><du var="length" def="107" use="119" target="120" covered="0"/><du var="length" def="107" use="119" target="122" covered="0"/><du var="lengthOK" def="108" use="119" target="119" covered="0"/><du var="lengthOK" def="108" use="119" target="122" covered="0"/><du var="lengthOK" def="108" use="122" target="123" covered="0"/><du var="lengthOK" def="108" use="122" target="126" covered="0"/><du var="maxAllowedLength" def="109" use="115" target="116" covered="0"/><du var="maxAllowedLength" def="109" use="115" target="110" covered="0"/><du var="maxAllowedLength" def="109" use="119" target="120" covered="0"/><du var="maxAllowedLength" def="109" use="119" target="122" covered="0"/><du var="allowedLength" def="110" use="111" target="112" covered="0"/><du var="allowedLength" def="110" use="111" target="115" covered="0"/><du var="allowedLength" def="110" use="115" target="116" covered="0"/><du var="allowedLength" def="110" use="115" target="110" covered="0"/><du var="allowedLength" def="110" use="116" covered="0"/><du var="lengthOK" def="112" use="119" target="119" covered="0"/><du var="lengthOK" def="112" use="119" target="122" covered="0"/><du var="lengthOK" def="112" use="122" target="123" covered="0"/><du var="lengthOK" def="112" use="122" target="126" covered="0"/><du var="maxAllowedLength" def="116" use="115" target="116" covered="0"/><du var="maxAllowedLength" def="116" use="115" target="110" covered="0"/><du var="maxAllowedLength" def="116" use="119" target="120" covered="0"/><du var="maxAllowedLength" def="116" use="119" target="122" covered="0"/><du var="lengthOK" def="120" use="122" target="123" covered="0"/><du var="lengthOK" def="120" use="122" target="126" covered="0"/><counter type="DU" missed="60" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeMiddle" desc="(Lcom/google/zxing/common/BitArray;IILjava/lang/StringBuilder;)V"><du var="row" def="150" use="157" covered="0"/><du var="payloadStart" def="150" use="154" target="174" covered="0"/><du var="payloadStart" def="150" use="154" target="157" covered="0"/><du var="payloadStart" def="150" use="157" covered="0"/><du var="payloadStart" def="150" use="171" covered="0"/><du var="payloadEnd" def="150" use="154" target="174" covered="0"/><du var="payloadEnd" def="150" use="154" target="157" covered="0"/><du var="resultString" def="150" use="166" covered="0"/><du var="resultString" def="150" use="168" covered="0"/><du var="counterDigitPair" def="150" use="157" covered="0"/><du var="counterDigitPair" def="150" use="161" covered="0"/><du var="counterDigitPair" def="150" use="162" covered="0"/><du var="counterDigitPair" def="150" use="170" covered="0"/><du var="counterDigitPair" def="150" use="170" covered="0"/><du var="counterBlack" def="151" use="161" covered="0"/><du var="counterBlack" def="151" use="165" covered="0"/><du var="counterWhite" def="152" use="162" covered="0"/><du var="counterWhite" def="152" use="167" covered="0"/><du var="k" def="159" use="159" target="165" covered="0"/><du var="k" def="159" use="159" target="160" covered="0"/><du var="k" def="159" use="160" covered="0"/><du var="k" def="159" use="161" covered="0"/><du var="k" def="159" use="162" covered="0"/><du var="k" def="159" use="159" covered="0"/><du var="k" def="159" use="159" target="165" covered="0"/><du var="k" def="159" use="159" target="160" covered="0"/><du var="k" def="159" use="160" covered="0"/><du var="k" def="159" use="161" covered="0"/><du var="k" def="159" use="162" covered="0"/><du var="k" def="159" use="159" covered="0"/><du var="payloadStart" def="171" use="171" covered="0"/><du var="payloadStart" def="171" use="154" target="174" covered="0"/><du var="payloadStart" def="171" use="154" target="157" covered="0"/><du var="payloadStart" def="171" use="157" covered="0"/><counter type="DU" missed="45" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateQuietZone" desc="(Lcom/google/zxing/common/BitArray;I)V"><du var="row" def="214" use="220" target="221" covered="0"/><du var="row" def="214" use="220" target="223" covered="0"/><du var="startPattern" def="214" use="217" target="217" covered="0"/><du var="startPattern" def="214" use="217" target="217" covered="0"/><du var="startPattern" def="214" use="217" covered="0"/><du var="startPattern" def="214" use="219" covered="0"/><du var="quietCount" def="214" use="217" target="217" covered="0"/><du var="quietCount" def="214" use="217" target="217" covered="0"/><du var="quietCount" def="214" use="217" covered="0"/><du var="quietCount" def="217" use="219" target="219" covered="0"/><du var="quietCount" def="217" use="219" target="225" covered="0"/><du var="quietCount" def="217" use="225" target="227" covered="0"/><du var="quietCount" def="217" use="225" target="229" covered="0"/><du var="quietCount" def="217" use="223" covered="0"/><du var="i" def="219" use="219" target="225" covered="0"/><du var="i" def="219" use="219" target="220" covered="0"/><du var="i" def="219" use="220" target="221" covered="0"/><du var="i" def="219" use="220" target="223" covered="0"/><du var="i" def="219" use="219" covered="0"/><du var="quietCount" def="223" use="219" target="219" covered="0"/><du var="quietCount" def="223" use="219" target="225" covered="0"/><du var="quietCount" def="223" use="225" target="227" covered="0"/><du var="quietCount" def="223" use="225" target="229" covered="0"/><du var="quietCount" def="223" use="223" covered="0"/><du var="i" def="219" use="219" target="225" covered="0"/><du var="i" def="219" use="219" target="220" covered="0"/><du var="i" def="219" use="220" target="221" covered="0"/><du var="i" def="219" use="220" target="223" covered="0"/><du var="i" def="219" use="219" covered="0"/><counter type="DU" missed="29" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skipWhiteSpace" desc="(Lcom/google/zxing/common/BitArray;)I"><du var="width" def="239" use="241" target="242" covered="0"/><du var="width" def="239" use="241" target="245" covered="0"/><du var="endStart" def="240" use="241" target="242" covered="0"/><du var="endStart" def="240" use="241" target="245" covered="0"/><du var="endStart" def="240" use="245" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findGuardPattern" desc="(Lcom/google/zxing/common/BitArray;I[I)[I"><du var="row" def="295" use="303" target="304" covered="0"/><du var="row" def="295" use="303" target="306" covered="0"/><du var="pattern" def="295" use="307" target="308" covered="0"/><du var="pattern" def="295" use="307" target="310" covered="0"/><du var="patternLength" def="295" use="306" target="307" covered="0"/><du var="patternLength" def="295" use="306" target="316" covered="0"/><du var="counters" def="296" use="318" covered="0"/><du var="counters" def="296" use="307" target="308" covered="0"/><du var="counters" def="296" use="307" target="310" covered="0"/><du var="counters" def="296" use="310" covered="0"/><du var="counters" def="296" use="311" covered="0"/><du var="counters" def="296" use="312" covered="0"/><du var="counters" def="296" use="313" covered="0"/><du var="counters" def="296" use="304" covered="0"/><du var="width" def="297" use="302" target="322" covered="0"/><du var="width" def="297" use="302" target="303" covered="0"/><du var="isWhite" def="298" use="303" target="304" covered="0"/><du var="isWhite" def="298" use="303" target="306" covered="0"/><du var="isWhite" def="298" use="319" target="319" covered="0"/><du var="isWhite" def="298" use="319" target="319" covered="0"/><du var="counterPosition" def="300" use="306" target="307" covered="0"/><du var="counterPosition" def="300" use="306" target="316" covered="0"/><du var="counterPosition" def="300" use="316" covered="0"/><du var="counterPosition" def="300" use="311" covered="0"/><du var="counterPosition" def="300" use="312" covered="0"/><du var="counterPosition" def="300" use="313" covered="0"/><du var="counterPosition" def="300" use="314" covered="0"/><du var="counterPosition" def="300" use="304" covered="0"/><du var="patternStart" def="301" use="310" covered="0"/><du var="patternStart" def="301" use="308" covered="0"/><du var="x" def="302" use="302" target="322" covered="0"/><du var="x" def="302" use="302" target="303" covered="0"/><du var="x" def="302" use="303" target="304" covered="0"/><du var="x" def="302" use="303" target="306" covered="0"/><du var="x" def="302" use="302" covered="0"/><du var="x" def="302" use="308" covered="0"/><du var="patternStart" def="310" use="310" covered="0"/><du var="patternStart" def="310" use="308" covered="0"/><du var="counterPosition" def="314" use="318" covered="0"/><du var="counterPosition" def="314" use="306" target="307" covered="0"/><du var="counterPosition" def="314" use="306" target="316" covered="0"/><du var="counterPosition" def="314" use="316" covered="0"/><du var="counterPosition" def="314" use="311" covered="0"/><du var="counterPosition" def="314" use="312" covered="0"/><du var="counterPosition" def="314" use="313" covered="0"/><du var="counterPosition" def="314" use="314" covered="0"/><du var="counterPosition" def="314" use="304" covered="0"/><du var="counterPosition" def="316" use="318" covered="0"/><du var="counterPosition" def="316" use="306" target="307" covered="0"/><du var="counterPosition" def="316" use="306" target="316" covered="0"/><du var="counterPosition" def="316" use="316" covered="0"/><du var="counterPosition" def="316" use="311" covered="0"/><du var="counterPosition" def="316" use="312" covered="0"/><du var="counterPosition" def="316" use="313" covered="0"/><du var="counterPosition" def="316" use="314" covered="0"/><du var="counterPosition" def="316" use="304" covered="0"/><du var="isWhite" def="319" use="303" target="304" covered="0"/><du var="isWhite" def="319" use="303" target="306" covered="0"/><du var="isWhite" def="319" use="319" target="319" covered="0"/><du var="isWhite" def="319" use="319" target="319" covered="0"/><du var="x" def="302" use="302" target="322" covered="0"/><du var="x" def="302" use="302" target="303" covered="0"/><du var="x" def="302" use="303" target="304" covered="0"/><du var="x" def="302" use="303" target="306" covered="0"/><du var="x" def="302" use="302" covered="0"/><du var="x" def="302" use="308" covered="0"/><counter type="DU" missed="66" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeDigit" desc="([I)I"><du var="counters" def="334" use="339" covered="0"/><du var="PATTERNS" def="334" use="338" covered="0"/><du var="bestVariance" def="334" use="340" target="341" covered="0"/><du var="bestVariance" def="334" use="340" target="337" covered="0"/><du var="bestMatch" def="335" use="345" target="346" covered="0"/><du var="bestMatch" def="335" use="345" target="348" covered="0"/><du var="bestMatch" def="335" use="346" covered="0"/><du var="max" def="336" use="337" target="345" covered="0"/><du var="max" def="336" use="337" target="338" covered="0"/><du var="i" def="337" use="337" target="345" covered="0"/><du var="i" def="337" use="337" target="338" covered="0"/><du var="i" def="337" use="338" covered="0"/><du var="i" def="337" use="337" covered="0"/><du var="i" def="337" use="342" covered="0"/><du var="variance" def="339" use="340" target="341" covered="0"/><du var="variance" def="339" use="340" target="337" covered="0"/><du var="variance" def="339" use="341" covered="0"/><du var="bestVariance" def="341" use="340" target="341" covered="0"/><du var="bestVariance" def="341" use="340" target="337" covered="0"/><du var="bestMatch" def="342" use="345" target="346" covered="0"/><du var="bestMatch" def="342" use="345" target="348" covered="0"/><du var="bestMatch" def="342" use="346" covered="0"/><du var="i" def="337" use="337" target="345" covered="0"/><du var="i" def="337" use="337" target="338" covered="0"/><du var="i" def="337" use="338" covered="0"/><du var="i" def="337" use="337" covered="0"/><du var="i" def="337" use="342" covered="0"/><counter type="DU" missed="27" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="232" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/EAN8Writer"><method name="encode" desc="(Ljava/lang/String;Lcom/google/zxing/BarcodeFormat;IILjava/util/Map;)Lcom/google/zxing/common/BitMatrix;"><du var="this" def="46" use="51" covered="0"/><du var="contents" def="46" use="51" covered="0"/><du var="format" def="46" use="46" target="47" covered="0"/><du var="format" def="46" use="46" target="51" covered="0"/><du var="format" def="46" use="51" covered="0"/><du var="format" def="46" use="47" covered="0"/><du var="width" def="46" use="51" covered="0"/><du var="height" def="46" use="51" covered="0"/><du var="hints" def="46" use="51" covered="0"/><du var="EAN_8" def="46" use="46" target="47" covered="0"/><du var="EAN_8" def="46" use="46" target="51" covered="0"/><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/String;)[Z"><du var="contents" def="59" use="73" target="74" covered="0"/><du var="contents" def="59" use="73" target="85" covered="0"/><du var="contents" def="59" use="91" covered="0"/><du var="contents" def="59" use="98" covered="0"/><du var="contents" def="59" use="65" covered="0"/><du var="contents" def="59" use="69" covered="0"/><du var="START_END_PATTERN" def="59" use="88" covered="0"/><du var="START_END_PATTERN" def="59" use="101" covered="0"/><du var="L_PATTERNS" def="59" use="92" covered="0"/><du var="L_PATTERNS" def="59" use="99" covered="0"/><du var="MIDDLE_PATTERN" def="59" use="95" covered="0"/><du var="length" def="59" use="60" target="81" covered="0"/><du var="length" def="59" use="60" target="65" covered="0"/><du var="length" def="59" use="60" target="73" covered="0"/><du var="length" def="59" use="81" covered="0"/><du var="contents" def="69" use="91" covered="0"/><du var="contents" def="69" use="98" covered="0"/><du var="result" def="85" use="92" covered="0"/><du var="result" def="85" use="95" covered="0"/><du var="result" def="85" use="99" covered="0"/><du var="result" def="85" use="101" covered="0"/><du var="result" def="85" use="103" covered="0"/><du var="pos" def="88" use="92" covered="0"/><du var="pos" def="88" use="95" covered="0"/><du var="i" def="90" use="90" target="95" covered="0"/><du var="i" def="90" use="90" target="91" covered="0"/><du var="i" def="90" use="91" covered="0"/><du var="i" def="90" use="90" covered="0"/><du var="pos" def="92" use="92" covered="0"/><du var="pos" def="92" use="95" covered="0"/><du var="i" def="90" use="90" target="95" covered="0"/><du var="i" def="90" use="90" target="91" covered="0"/><du var="i" def="90" use="91" covered="0"/><du var="i" def="90" use="90" covered="0"/><du var="pos" def="95" use="99" covered="0"/><du var="pos" def="95" use="101" covered="0"/><du var="i" def="97" use="97" target="101" covered="0"/><du var="i" def="97" use="97" target="98" covered="0"/><du var="i" def="97" use="98" covered="0"/><du var="i" def="97" use="97" covered="0"/><du var="pos" def="99" use="99" covered="0"/><du var="pos" def="99" use="101" covered="0"/><du var="i" def="97" use="97" target="101" covered="0"/><du var="i" def="97" use="97" target="98" covered="0"/><du var="i" def="97" use="98" covered="0"/><du var="i" def="97" use="97" covered="0"/><counter type="DU" missed="46" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="57" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/UPCEANReader"><method name="findStartGuardPattern" desc="(Lcom/google/zxing/common/BitArray;)[I"><du var="row" def="108" use="114" covered="0"/><du var="row" def="108" use="122" covered="0"/><du var="START_END_PATTERN" def="108" use="113" covered="0"/><du var="START_END_PATTERN" def="108" use="114" covered="0"/><du var="foundStart" def="108" use="112" target="125" covered="0"/><du var="foundStart" def="108" use="112" target="113" covered="0"/><du var="startRange" def="109" use="125" covered="0"/><du var="nextStart" def="110" use="114" covered="0"/><du var="counters" def="111" use="113" covered="0"/><du var="counters" def="111" use="114" covered="0"/><du var="startRange" def="114" use="125" covered="0"/><du var="start" def="115" use="122" covered="0"/><du var="nextStart" def="116" use="114" covered="0"/><du var="quietStart" def="120" use="121" target="122" covered="0"/><du var="quietStart" def="120" use="121" target="112" covered="0"/><du var="quietStart" def="120" use="122" covered="0"/><du var="foundStart" def="122" use="112" target="125" covered="0"/><du var="foundStart" def="122" use="112" target="113" covered="0"/><counter type="DU" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeRow" desc="(ILcom/google/zxing/common/BitArray;[ILjava/util/Map;)Lcom/google/zxing/Result;"><du var="this" def="154" use="163" covered="0"/><du var="this" def="154" use="165" covered="0"/><du var="this" def="154" use="173" covered="0"/><du var="this" def="154" use="195" target="196" covered="0"/><du var="this" def="154" use="195" target="199" covered="0"/><du var="this" def="154" use="201" covered="0"/><du var="this" def="154" use="212" covered="0"/><du var="this" def="154" use="237" covered="0"/><du var="rowNumber" def="154" use="205" covered="0"/><du var="rowNumber" def="154" use="206" covered="0"/><du var="rowNumber" def="154" use="212" covered="0"/><du var="rowNumber" def="154" use="177" covered="0"/><du var="rowNumber" def="154" use="169" covered="0"/><du var="rowNumber" def="154" use="159" covered="0"/><du var="row" def="154" use="165" covered="0"/><du var="row" def="154" use="173" covered="0"/><du var="row" def="154" use="186" target="186" covered="0"/><du var="row" def="154" use="186" target="187" covered="0"/><du var="row" def="154" use="186" target="187" covered="0"/><du var="row" def="154" use="186" target="190" covered="0"/><du var="row" def="154" use="212" covered="0"/><du var="startGuardRange" def="154" use="165" covered="0"/><du var="startGuardRange" def="154" use="199" covered="0"/><du var="startGuardRange" def="154" use="159" covered="0"/><du var="hints" def="154" use="154" target="154" covered="0"/><du var="hints" def="154" use="154" target="155" covered="0"/><du var="hints" def="154" use="154" covered="0"/><du var="hints" def="154" use="222" target="222" covered="0"/><du var="hints" def="154" use="222" target="222" covered="0"/><du var="hints" def="154" use="221" covered="0"/><du var="NEED_RESULT_POINT_CALLBACK" def="154" use="154" covered="0"/><du var="this.decodeRowStringBuffer" def="154" use="163" covered="0"/><du var="this.extensionReader" def="154" use="212" covered="0"/><du var="UPC_EAN_EXTENSION" def="154" use="213" covered="0"/><du var="ALLOWED_EAN_EXTENSIONS" def="154" use="221" covered="0"/><du var="EAN_13" def="154" use="236" target="236" covered="0"/><du var="EAN_13" def="154" use="236" target="237" covered="0"/><du var="UPC_A" def="154" use="236" target="237" covered="0"/><du var="UPC_A" def="154" use="236" target="243" covered="0"/><du var="this.eanManSupport" def="154" use="237" covered="0"/><du var="POSSIBLE_COUNTRY" def="154" use="239" covered="0"/><du var="resultPointCallback" def="154" use="157" target="158" covered="0"/><du var="resultPointCallback" def="154" use="157" target="163" covered="0"/><du var="resultPointCallback" def="154" use="167" target="168" covered="0"/><du var="resultPointCallback" def="154" use="167" target="173" covered="0"/><du var="resultPointCallback" def="154" use="175" target="176" covered="0"/><du var="resultPointCallback" def="154" use="175" target="184" covered="0"/><du var="resultPointCallback" def="154" use="176" covered="0"/><du var="resultPointCallback" def="154" use="168" covered="0"/><du var="resultPointCallback" def="154" use="158" covered="0"/><du var="result" def="163" use="190" covered="0"/><du var="endStart" def="165" use="173" covered="0"/><du var="endStart" def="165" use="169" covered="0"/><du var="endRange" def="173" use="184" covered="0"/><du var="endRange" def="173" use="185" covered="0"/><du var="endRange" def="173" use="200" covered="0"/><du var="endRange" def="173" use="212" covered="0"/><du var="endRange" def="173" use="177" covered="0"/><du var="end" def="184" use="186" target="187" covered="0"/><du var="end" def="184" use="186" target="190" covered="0"/><du var="quietEnd" def="185" use="186" target="186" covered="0"/><du var="quietEnd" def="185" use="186" target="187" covered="0"/><du var="quietEnd" def="185" use="186" target="187" covered="0"/><du var="quietEnd" def="185" use="186" target="190" covered="0"/><du var="resultString" def="190" use="192" target="193" covered="0"/><du var="resultString" def="190" use="192" target="195" covered="0"/><du var="resultString" def="190" use="195" target="196" covered="0"/><du var="resultString" def="190" use="195" target="199" covered="0"/><du var="resultString" def="190" use="202" covered="0"/><du var="resultString" def="190" use="237" covered="0"/><du var="format" def="201" use="236" target="236" covered="0"/><du var="format" def="201" use="236" target="237" covered="0"/><du var="format" def="201" use="236" target="237" covered="0"/><du var="format" def="201" use="236" target="243" covered="0"/><du var="decodeResult" def="202" use="243" covered="0"/><du var="decodeResult" def="202" use="239" covered="0"/><du var="extensionLength" def="216" use="226" target="227" covered="0"/><du var="extensionLength" def="216" use="226" target="225" covered="0"/><du var="allowedExtensions" def="221" use="223" target="224" covered="0"/><du var="allowedExtensions" def="221" use="223" target="236" covered="0"/><du var="allowedExtensions" def="221" use="225" covered="0"/><du var="allowedExtensions" def="221" use="225" covered="0"/><du var="valid" def="224" use="231" target="232" covered="0"/><du var="valid" def="224" use="231" target="236" covered="0"/><du var="length" def="225" use="226" target="227" covered="0"/><du var="length" def="225" use="226" target="225" covered="0"/><du var="valid" def="227" use="231" target="232" covered="0"/><du var="valid" def="227" use="231" target="236" covered="0"/><du var="countryID" def="237" use="238" target="239" covered="0"/><du var="countryID" def="237" use="238" target="243" covered="0"/><du var="countryID" def="237" use="239" covered="0"/><counter type="DU" missed="102" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkStandardUPCEANChecksum" desc="(Ljava/lang/CharSequence;)Z"><du var="s" def="264" use="268" covered="0"/><du var="s" def="264" use="269" target="269" covered="0"/><du var="s" def="264" use="269" target="269" covered="0"/><du var="length" def="264" use="265" target="266" covered="0"/><du var="length" def="264" use="265" target="268" covered="0"/><du var="length" def="264" use="268" covered="0"/><du var="length" def="264" use="269" target="269" covered="0"/><du var="length" def="264" use="269" target="269" covered="0"/><du var="check" def="268" use="269" target="269" covered="0"/><du var="check" def="268" use="269" target="269" covered="0"/><counter type="DU" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStandardUPCEANChecksum" desc="(Ljava/lang/CharSequence;)I"><du var="s" def="273" use="276" covered="0"/><du var="s" def="273" use="284" covered="0"/><du var="length" def="273" use="283" covered="0"/><du var="sum" def="274" use="280" covered="0"/><du var="sum" def="274" use="282" covered="0"/><du var="i" def="275" use="275" target="282" covered="0"/><du var="i" def="275" use="275" target="276" covered="0"/><du var="i" def="275" use="276" covered="0"/><du var="i" def="275" use="275" covered="0"/><du var="digit" def="276" use="277" target="277" covered="0"/><du var="digit" def="276" use="277" target="278" covered="0"/><du var="digit" def="276" use="277" target="278" covered="0"/><du var="digit" def="276" use="277" target="280" covered="0"/><du var="digit" def="276" use="280" covered="0"/><du var="sum" def="280" use="280" covered="0"/><du var="sum" def="280" use="282" covered="0"/><du var="i" def="275" use="275" target="282" covered="0"/><du var="i" def="275" use="275" target="276" covered="0"/><du var="i" def="275" use="276" covered="0"/><du var="i" def="275" use="275" covered="0"/><du var="sum" def="282" use="288" covered="0"/><du var="sum" def="282" use="290" covered="0"/><du var="i" def="283" use="283" target="290" covered="0"/><du var="i" def="283" use="283" target="284" covered="0"/><du var="i" def="283" use="284" covered="0"/><du var="i" def="283" use="283" covered="0"/><du var="digit" def="284" use="285" target="285" covered="0"/><du var="digit" def="284" use="285" target="286" covered="0"/><du var="digit" def="284" use="285" target="286" covered="0"/><du var="digit" def="284" use="285" target="288" covered="0"/><du var="digit" def="284" use="288" covered="0"/><du var="sum" def="288" use="288" covered="0"/><du var="sum" def="288" use="290" covered="0"/><du var="i" def="283" use="283" target="290" covered="0"/><du var="i" def="283" use="283" target="284" covered="0"/><du var="i" def="283" use="284" covered="0"/><du var="i" def="283" use="283" covered="0"/><counter type="DU" missed="37" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findGuardPattern" desc="(Lcom/google/zxing/common/BitArray;IZ[I[I)[I"><du var="row" def="320" use="321" covered="0"/><du var="row" def="320" use="327" target="328" covered="0"/><du var="row" def="320" use="327" target="330" covered="0"/><du var="rowOffset" def="320" use="321" covered="0"/><du var="whiteFirst" def="320" use="321" target="321" covered="0"/><du var="whiteFirst" def="320" use="321" target="321" covered="0"/><du var="whiteFirst" def="320" use="325" covered="0"/><du var="pattern" def="320" use="324" covered="0"/><du var="pattern" def="320" use="331" target="332" covered="0"/><du var="pattern" def="320" use="331" target="334" covered="0"/><du var="counters" def="320" use="342" covered="0"/><du var="counters" def="320" use="331" target="332" covered="0"/><du var="counters" def="320" use="331" target="334" covered="0"/><du var="counters" def="320" use="334" covered="0"/><du var="counters" def="320" use="335" covered="0"/><du var="counters" def="320" use="336" covered="0"/><du var="counters" def="320" use="337" covered="0"/><du var="counters" def="320" use="328" covered="0"/><du var="width" def="320" use="326" target="346" covered="0"/><du var="width" def="320" use="326" target="327" covered="0"/><du var="counterPosition" def="322" use="330" target="331" covered="0"/><du var="counterPosition" def="322" use="330" target="340" covered="0"/><du var="counterPosition" def="322" use="340" covered="0"/><du var="counterPosition" def="322" use="335" covered="0"/><du var="counterPosition" def="322" use="336" covered="0"/><du var="counterPosition" def="322" use="337" covered="0"/><du var="counterPosition" def="322" use="338" covered="0"/><du var="counterPosition" def="322" use="328" covered="0"/><du var="patternStart" def="323" use="334" covered="0"/><du var="patternStart" def="323" use="332" covered="0"/><du var="patternLength" def="324" use="330" target="331" covered="0"/><du var="patternLength" def="324" use="330" target="340" covered="0"/><du var="isWhite" def="325" use="327" target="328" covered="0"/><du var="isWhite" def="325" use="327" target="330" covered="0"/><du var="isWhite" def="325" use="343" target="343" covered="0"/><du var="isWhite" def="325" use="343" target="343" covered="0"/><du var="x" def="326" use="326" target="346" covered="0"/><du var="x" def="326" use="326" target="327" covered="0"/><du var="x" def="326" use="327" target="328" covered="0"/><du var="x" def="326" use="327" target="330" covered="0"/><du var="x" def="326" use="326" covered="0"/><du var="x" def="326" use="332" covered="0"/><du var="patternStart" def="334" use="334" covered="0"/><du var="patternStart" def="334" use="332" covered="0"/><du var="counterPosition" def="338" use="342" covered="0"/><du var="counterPosition" def="338" use="330" target="331" covered="0"/><du var="counterPosition" def="338" use="330" target="340" covered="0"/><du var="counterPosition" def="338" use="340" covered="0"/><du var="counterPosition" def="338" use="335" covered="0"/><du var="counterPosition" def="338" use="336" covered="0"/><du var="counterPosition" def="338" use="337" covered="0"/><du var="counterPosition" def="338" use="338" covered="0"/><du var="counterPosition" def="338" use="328" covered="0"/><du var="counterPosition" def="340" use="342" covered="0"/><du var="counterPosition" def="340" use="330" target="331" covered="0"/><du var="counterPosition" def="340" use="330" target="340" covered="0"/><du var="counterPosition" def="340" use="340" covered="0"/><du var="counterPosition" def="340" use="335" covered="0"/><du var="counterPosition" def="340" use="336" covered="0"/><du var="counterPosition" def="340" use="337" covered="0"/><du var="counterPosition" def="340" use="338" covered="0"/><du var="counterPosition" def="340" use="328" covered="0"/><du var="isWhite" def="343" use="327" target="328" covered="0"/><du var="isWhite" def="343" use="327" target="330" covered="0"/><du var="isWhite" def="343" use="343" target="343" covered="0"/><du var="isWhite" def="343" use="343" target="343" covered="0"/><du var="x" def="326" use="326" target="346" covered="0"/><du var="x" def="326" use="326" target="327" covered="0"/><du var="x" def="326" use="327" target="328" covered="0"/><du var="x" def="326" use="327" target="330" covered="0"/><du var="x" def="326" use="326" covered="0"/><du var="x" def="326" use="332" covered="0"/><counter type="DU" missed="72" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeDigit" desc="(Lcom/google/zxing/common/BitArray;[II[[I)I"><du var="counters" def="363" use="369" covered="0"/><du var="patterns" def="363" use="368" covered="0"/><du var="bestVariance" def="364" use="370" target="371" covered="0"/><du var="bestVariance" def="364" use="370" target="367" covered="0"/><du var="bestMatch" def="365" use="375" target="376" covered="0"/><du var="bestMatch" def="365" use="375" target="378" covered="0"/><du var="bestMatch" def="365" use="376" covered="0"/><du var="max" def="366" use="367" target="375" covered="0"/><du var="max" def="366" use="367" target="368" covered="0"/><du var="i" def="367" use="367" target="375" covered="0"/><du var="i" def="367" use="367" target="368" covered="0"/><du var="i" def="367" use="368" covered="0"/><du var="i" def="367" use="367" covered="0"/><du var="i" def="367" use="372" covered="0"/><du var="variance" def="369" use="370" target="371" covered="0"/><du var="variance" def="369" use="370" target="367" covered="0"/><du var="variance" def="369" use="371" covered="0"/><du var="bestVariance" def="371" use="370" target="371" covered="0"/><du var="bestVariance" def="371" use="370" target="367" covered="0"/><du var="bestMatch" def="372" use="375" target="376" covered="0"/><du var="bestMatch" def="372" use="375" target="378" covered="0"/><du var="bestMatch" def="372" use="376" covered="0"/><du var="i" def="367" use="367" target="375" covered="0"/><du var="i" def="367" use="367" target="368" covered="0"/><du var="i" def="367" use="368" covered="0"/><du var="i" def="367" use="367" covered="0"/><du var="i" def="367" use="372" covered="0"/><counter type="DU" missed="27" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="266" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/EAN13Reader"><method name="decodeMiddle" desc="(Lcom/google/zxing/common/BitArray;[ILjava/lang/StringBuilder;)I"><du var="row" def="75" use="98" covered="0"/><du var="row" def="75" use="102" covered="0"/><du var="row" def="75" use="86" covered="0"/><du var="resultString" def="75" use="96" covered="0"/><du var="resultString" def="75" use="103" covered="0"/><du var="resultString" def="75" use="87" covered="0"/><du var="L_AND_G_PATTERNS" def="75" use="86" covered="0"/><du var="MIDDLE_PATTERN" def="75" use="98" covered="0"/><du var="L_PATTERNS" def="75" use="102" covered="0"/><du var="counters" def="75" use="102" covered="0"/><du var="counters" def="75" use="104" covered="0"/><du var="counters" def="75" use="104" covered="0"/><du var="counters" def="75" use="86" covered="0"/><du var="counters" def="75" use="88" covered="0"/><du var="counters" def="75" use="88" covered="0"/><du var="end" def="80" use="101" target="109" covered="0"/><du var="end" def="80" use="101" target="102" covered="0"/><du var="end" def="80" use="85" target="96" covered="0"/><du var="end" def="80" use="85" target="86" covered="0"/><du var="rowOffset" def="81" use="98" covered="0"/><du var="rowOffset" def="81" use="85" target="96" covered="0"/><du var="rowOffset" def="81" use="85" target="86" covered="0"/><du var="rowOffset" def="81" use="86" covered="0"/><du var="rowOffset" def="81" use="89" covered="0"/><du var="lgPatternFound" def="83" use="96" covered="0"/><du var="lgPatternFound" def="83" use="92" covered="0"/><du var="x" def="85" use="85" target="85" covered="0"/><du var="x" def="85" use="85" target="96" covered="0"/><du var="x" def="85" use="85" covered="0"/><du var="x" def="85" use="92" covered="0"/><du var="bestMatch" def="86" use="91" target="92" covered="0"/><du var="bestMatch" def="86" use="91" target="85" covered="0"/><du var="rowOffset" def="89" use="89" covered="0"/><du var="rowOffset" def="89" use="98" covered="0"/><du var="rowOffset" def="89" use="85" target="96" covered="0"/><du var="rowOffset" def="89" use="85" target="86" covered="0"/><du var="rowOffset" def="89" use="86" covered="0"/><du var="lgPatternFound" def="92" use="96" covered="0"/><du var="lgPatternFound" def="92" use="92" covered="0"/><du var="x" def="85" use="85" target="85" covered="0"/><du var="x" def="85" use="85" target="96" covered="0"/><du var="x" def="85" use="85" covered="0"/><du var="x" def="85" use="92" covered="0"/><du var="rowOffset" def="99" use="109" covered="0"/><du var="rowOffset" def="99" use="101" target="109" covered="0"/><du var="rowOffset" def="99" use="101" target="102" covered="0"/><du var="rowOffset" def="99" use="102" covered="0"/><du var="rowOffset" def="99" use="105" covered="0"/><du var="x" def="101" use="101" target="101" covered="0"/><du var="x" def="101" use="101" target="109" covered="0"/><du var="x" def="101" use="101" covered="0"/><du var="rowOffset" def="105" use="105" covered="0"/><du var="rowOffset" def="105" use="109" covered="0"/><du var="rowOffset" def="105" use="101" target="109" covered="0"/><du var="rowOffset" def="105" use="101" target="102" covered="0"/><du var="rowOffset" def="105" use="102" covered="0"/><du var="x" def="101" use="101" target="101" covered="0"/><du var="x" def="101" use="101" target="109" covered="0"/><du var="x" def="101" use="101" covered="0"/><counter type="DU" missed="81" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="determineFirstDigit" desc="(Ljava/lang/StringBuilder;I)V"><du var="resultString" def="129" use="131" covered="0"/><du var="lgPatternFound" def="129" use="130" target="131" covered="0"/><du var="lgPatternFound" def="129" use="130" target="129" covered="0"/><du var="FIRST_DIGIT_ENCODINGS" def="129" use="130" target="131" covered="0"/><du var="FIRST_DIGIT_ENCODINGS" def="129" use="130" target="129" covered="0"/><du var="d" def="129" use="129" target="135" covered="0"/><du var="d" def="129" use="129" target="130" covered="0"/><du var="d" def="129" use="130" target="131" covered="0"/><du var="d" def="129" use="130" target="129" covered="0"/><du var="d" def="129" use="129" covered="0"/><du var="d" def="129" use="131" covered="0"/><du var="d" def="129" use="129" target="135" covered="0"/><du var="d" def="129" use="129" target="130" covered="0"/><du var="d" def="129" use="130" target="131" covered="0"/><du var="d" def="129" use="130" target="129" covered="0"/><du var="d" def="129" use="129" covered="0"/><du var="d" def="129" use="131" covered="0"/><counter type="DU" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="98" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/EAN13Writer"><method name="encode" desc="(Ljava/lang/String;Lcom/google/zxing/BarcodeFormat;IILjava/util/Map;)Lcom/google/zxing/common/BitMatrix;"><du var="this" def="46" use="50" covered="0"/><du var="contents" def="46" use="50" covered="0"/><du var="format" def="46" use="46" target="47" covered="0"/><du var="format" def="46" use="46" target="50" covered="0"/><du var="format" def="46" use="50" covered="0"/><du var="format" def="46" use="47" covered="0"/><du var="width" def="46" use="50" covered="0"/><du var="height" def="46" use="50" covered="0"/><du var="hints" def="46" use="50" covered="0"/><du var="EAN_13" def="46" use="46" target="47" covered="0"/><du var="EAN_13" def="46" use="46" target="50" covered="0"/><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/String;)[Z"><du var="contents" def="55" use="69" target="70" covered="0"/><du var="contents" def="55" use="69" target="82" covered="0"/><du var="contents" def="55" use="82" covered="0"/><du var="contents" def="55" use="91" covered="0"/><du var="contents" def="55" use="101" covered="0"/><du var="contents" def="55" use="61" covered="0"/><du var="contents" def="55" use="65" covered="0"/><du var="FIRST_DIGIT_ENCODINGS" def="55" use="83" covered="0"/><du var="START_END_PATTERN" def="55" use="87" covered="0"/><du var="START_END_PATTERN" def="55" use="104" covered="0"/><du var="L_AND_G_PATTERNS" def="55" use="95" covered="0"/><du var="MIDDLE_PATTERN" def="55" use="98" covered="0"/><du var="L_PATTERNS" def="55" use="102" covered="0"/><du var="length" def="55" use="56" target="77" covered="0"/><du var="length" def="55" use="56" target="61" covered="0"/><du var="length" def="55" use="56" target="69" covered="0"/><du var="length" def="55" use="77" covered="0"/><du var="contents" def="65" use="82" covered="0"/><du var="contents" def="65" use="91" covered="0"/><du var="contents" def="65" use="101" covered="0"/><du var="parities" def="83" use="92" target="93" covered="0"/><du var="parities" def="83" use="92" target="95" covered="0"/><du var="result" def="84" use="95" covered="0"/><du var="result" def="84" use="98" covered="0"/><du var="result" def="84" use="102" covered="0"/><du var="result" def="84" use="104" covered="0"/><du var="result" def="84" use="106" covered="0"/><du var="pos" def="87" use="95" covered="0"/><du var="pos" def="87" use="98" covered="0"/><du var="i" def="90" use="90" target="98" covered="0"/><du var="i" def="90" use="90" target="91" covered="0"/><du var="i" def="90" use="91" covered="0"/><du var="i" def="90" use="92" target="93" covered="0"/><du var="i" def="90" use="92" target="95" covered="0"/><du var="i" def="90" use="90" covered="0"/><du var="digit" def="91" use="95" covered="0"/><du var="digit" def="91" use="93" covered="0"/><du var="digit" def="93" use="95" covered="0"/><du var="pos" def="95" use="95" covered="0"/><du var="pos" def="95" use="98" covered="0"/><du var="i" def="90" use="90" target="98" covered="0"/><du var="i" def="90" use="90" target="91" covered="0"/><du var="i" def="90" use="91" covered="0"/><du var="i" def="90" use="92" target="93" covered="0"/><du var="i" def="90" use="92" target="95" covered="0"/><du var="i" def="90" use="90" covered="0"/><du var="pos" def="98" use="102" covered="0"/><du var="pos" def="98" use="104" covered="0"/><du var="i" def="100" use="100" target="104" covered="0"/><du var="i" def="100" use="100" target="101" covered="0"/><du var="i" def="100" use="101" covered="0"/><du var="i" def="100" use="100" covered="0"/><du var="pos" def="102" use="102" covered="0"/><du var="pos" def="102" use="104" covered="0"/><du var="i" def="100" use="100" target="104" covered="0"/><du var="i" def="100" use="100" target="101" covered="0"/><du var="i" def="100" use="101" covered="0"/><du var="i" def="100" use="100" covered="0"/><counter type="DU" missed="58" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="69" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/ITFWriter"><method name="encode" desc="(Ljava/lang/String;Lcom/google/zxing/BarcodeFormat;IILjava/util/Map;)Lcom/google/zxing/common/BitMatrix;"><du var="this" def="42" use="46" covered="0"/><du var="contents" def="42" use="46" covered="0"/><du var="format" def="42" use="42" target="43" covered="0"/><du var="format" def="42" use="42" target="46" covered="0"/><du var="format" def="42" use="46" covered="0"/><du var="format" def="42" use="43" covered="0"/><du var="width" def="42" use="46" covered="0"/><du var="height" def="42" use="46" covered="0"/><du var="hints" def="42" use="46" covered="0"/><du var="ITF" def="42" use="42" target="43" covered="0"/><du var="ITF" def="42" use="42" target="46" covered="0"/><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/String;)[Z"><du var="contents" def="51" use="62" covered="0"/><du var="contents" def="51" use="63" covered="0"/><du var="START_PATTERN" def="51" use="60" covered="0"/><du var="PATTERNS" def="51" use="66" covered="0"/><du var="PATTERNS" def="51" use="67" covered="0"/><du var="END_PATTERN" def="51" use="71" covered="0"/><du var="length" def="51" use="52" target="53" covered="0"/><du var="length" def="51" use="52" target="55" covered="0"/><du var="length" def="51" use="55" target="56" covered="0"/><du var="length" def="51" use="55" target="59" covered="0"/><du var="length" def="51" use="59" covered="0"/><du var="length" def="51" use="61" target="71" covered="0"/><du var="length" def="51" use="61" target="62" covered="0"/><du var="length" def="51" use="56" covered="0"/><du var="result" def="59" use="69" covered="0"/><du var="result" def="59" use="71" covered="0"/><du var="result" def="59" use="73" covered="0"/><du var="pos" def="60" use="69" covered="0"/><du var="pos" def="60" use="71" covered="0"/><du var="i" def="61" use="61" target="71" covered="0"/><du var="i" def="61" use="61" target="62" covered="0"/><du var="i" def="61" use="62" covered="0"/><du var="i" def="61" use="63" covered="0"/><du var="i" def="61" use="61" covered="0"/><du var="one" def="62" use="66" covered="0"/><du var="two" def="63" use="67" covered="0"/><du var="encoding" def="64" use="66" covered="0"/><du var="encoding" def="64" use="67" covered="0"/><du var="encoding" def="64" use="69" covered="0"/><du var="j" def="65" use="65" target="69" covered="0"/><du var="j" def="65" use="65" target="66" covered="0"/><du var="j" def="65" use="66" covered="0"/><du var="j" def="65" use="67" covered="0"/><du var="j" def="65" use="65" covered="0"/><du var="j" def="65" use="65" target="69" covered="0"/><du var="j" def="65" use="65" target="66" covered="0"/><du var="j" def="65" use="66" covered="0"/><du var="j" def="65" use="67" covered="0"/><du var="j" def="65" use="65" covered="0"/><du var="pos" def="69" use="69" covered="0"/><du var="pos" def="69" use="71" covered="0"/><du var="i" def="61" use="61" target="71" covered="0"/><du var="i" def="61" use="61" target="62" covered="0"/><du var="i" def="61" use="62" covered="0"/><du var="i" def="61" use="63" covered="0"/><du var="i" def="61" use="61" covered="0"/><counter type="DU" missed="46" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="57" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/OneDimensionalCodeWriter"><method name="encode" desc="(Ljava/lang/String;Lcom/google/zxing/BarcodeFormat;IILjava/util/Map;)Lcom/google/zxing/common/BitMatrix;"><du var="this" def="53" use="62" covered="0"/><du var="this" def="53" use="67" covered="0"/><du var="contents" def="53" use="53" target="54" covered="0"/><du var="contents" def="53" use="53" target="57" covered="0"/><du var="contents" def="53" use="67" covered="0"/><du var="width" def="53" use="57" target="57" covered="0"/><du var="width" def="53" use="57" target="58" covered="0"/><du var="width" def="53" use="58" covered="0"/><du var="width" def="53" use="68" covered="0"/><du var="height" def="53" use="58" covered="0"/><du var="height" def="53" use="57" target="58" covered="0"/><du var="height" def="53" use="57" target="62" covered="0"/><du var="height" def="53" use="68" covered="0"/><du var="hints" def="53" use="63" target="63" covered="0"/><du var="hints" def="53" use="63" target="67" covered="0"/><du var="hints" def="53" use="63" target="64" covered="0"/><du var="hints" def="53" use="63" target="67" covered="0"/><du var="hints" def="53" use="64" covered="0"/><du var="MARGIN" def="53" use="63" target="64" covered="0"/><du var="MARGIN" def="53" use="63" target="67" covered="0"/><du var="MARGIN" def="53" use="64" covered="0"/><du var="sidesMargin" def="62" use="68" covered="0"/><du var="sidesMargin" def="64" use="68" covered="0"/><counter type="DU" missed="23" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="renderResult" desc="([ZIII)Lcom/google/zxing/common/BitMatrix;"><du var="code" def="75" use="86" target="87" covered="0"/><du var="code" def="75" use="86" target="85" covered="0"/><du var="inputWidth" def="75" use="85" target="90" covered="0"/><du var="inputWidth" def="75" use="85" target="86" covered="0"/><du var="outputHeight" def="79" use="87" covered="0"/><du var="multiple" def="81" use="85" covered="0"/><du var="multiple" def="81" use="87" covered="0"/><du var="output" def="84" use="87" covered="0"/><du var="output" def="84" use="90" covered="0"/><du var="inputX" def="85" use="85" target="90" covered="0"/><du var="inputX" def="85" use="85" target="86" covered="0"/><du var="inputX" def="85" use="86" target="87" covered="0"/><du var="inputX" def="85" use="86" target="85" covered="0"/><du var="inputX" def="85" use="85" covered="0"/><du var="outputX" def="85" use="85" covered="0"/><du var="outputX" def="85" use="87" covered="0"/><du var="inputX" def="85" use="85" target="90" covered="0"/><du var="inputX" def="85" use="85" target="86" covered="0"/><du var="inputX" def="85" use="86" target="87" covered="0"/><du var="inputX" def="85" use="86" target="85" covered="0"/><du var="inputX" def="85" use="85" covered="0"/><du var="outputX" def="85" use="85" covered="0"/><du var="outputX" def="85" use="87" covered="0"/><counter type="DU" missed="23" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendPattern" desc="([ZI[IZ)I"><du var="target" def="102" use="106" covered="0"/><du var="pos" def="102" use="106" covered="0"/><du var="color" def="102" use="106" covered="0"/><du var="color" def="102" use="109" target="109" covered="0"/><du var="color" def="102" use="109" target="109" covered="0"/><du var="numAdded" def="103" use="108" covered="0"/><du var="numAdded" def="103" use="111" covered="0"/><du var="len" def="104" use="105" target="108" covered="0"/><du var="len" def="104" use="105" target="106" covered="0"/><du var="len" def="104" use="108" covered="0"/><du var="j" def="105" use="105" target="108" covered="0"/><du var="j" def="105" use="105" target="106" covered="0"/><du var="j" def="105" use="105" covered="0"/><du var="pos" def="106" use="106" covered="0"/><du var="j" def="105" use="105" target="108" covered="0"/><du var="j" def="105" use="105" target="106" covered="0"/><du var="j" def="105" use="105" covered="0"/><du var="numAdded" def="108" use="108" covered="0"/><du var="numAdded" def="108" use="111" covered="0"/><du var="color" def="109" use="106" covered="0"/><du var="color" def="109" use="109" target="109" covered="0"/><du var="color" def="109" use="109" target="109" covered="0"/><counter type="DU" missed="33" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="79" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/OneDReader"><method name="doDecode" desc="(Lcom/google/zxing/BinaryBitmap;Ljava/util/Map;)Lcom/google/zxing/Result;"><du var="this" def="105" use="155" covered="0"/><du var="image" def="105" use="132" covered="0"/><du var="hints" def="105" use="109" target="109" covered="0"/><du var="hints" def="105" use="109" target="109" covered="0"/><du var="hints" def="105" use="155" covered="0"/><du var="hints" def="105" use="146" target="146" covered="0"/><du var="hints" def="105" use="146" target="155" covered="0"/><du var="hints" def="105" use="146" target="147" covered="0"/><du var="hints" def="105" use="146" target="155" covered="0"/><du var="hints" def="105" use="148" covered="0"/><du var="hints" def="105" use="109" target="109" covered="0"/><du var="hints" def="105" use="109" target="109" covered="0"/><du var="TRY_HARDER" def="105" use="109" target="109" covered="0"/><du var="TRY_HARDER" def="105" use="109" target="109" covered="0"/><du var="NEED_RESULT_POINT_CALLBACK" def="105" use="146" target="147" covered="0"/><du var="NEED_RESULT_POINT_CALLBACK" def="105" use="146" target="155" covered="0"/><du var="NEED_RESULT_POINT_CALLBACK" def="105" use="149" covered="0"/><du var="ORIENTATION" def="105" use="159" covered="0"/><du var="width" def="105" use="163" covered="0"/><du var="width" def="105" use="164" covered="0"/><du var="height" def="106" use="110" covered="0"/><du var="height" def="106" use="118" covered="0"/><du var="height" def="106" use="125" target="127" covered="0"/><du var="height" def="106" use="125" target="132" covered="0"/><du var="height" def="106" use="113" covered="0"/><du var="row" def="107" use="132" covered="0"/><du var="tryHarder" def="109" use="110" target="110" covered="0"/><du var="tryHarder" def="109" use="110" target="110" covered="0"/><du var="tryHarder" def="109" use="112" target="113" covered="0"/><du var="tryHarder" def="109" use="112" target="115" covered="0"/><du var="rowStep" def="110" use="124" covered="0"/><du var="maxLines" def="113" use="119" target="174" covered="0"/><du var="maxLines" def="113" use="119" target="122" covered="0"/><du var="maxLines" def="115" use="119" target="174" covered="0"/><du var="maxLines" def="115" use="119" target="122" covered="0"/><du var="middle" def="118" use="124" covered="0"/><du var="x" def="119" use="119" target="174" covered="0"/><du var="x" def="119" use="119" target="122" covered="0"/><du var="x" def="119" use="122" covered="0"/><du var="x" def="119" use="123" target="123" covered="0"/><du var="x" def="119" use="123" target="123" covered="0"/><du var="x" def="119" use="119" covered="0"/><du var="rowStepsAboveOrBelow" def="122" use="124" covered="0"/><du var="isAbove" def="123" use="124" target="124" covered="0"/><du var="isAbove" def="123" use="124" target="124" covered="0"/><du var="rowNumber" def="124" use="125" target="125" covered="0"/><du var="rowNumber" def="124" use="125" target="174" covered="0"/><du var="rowNumber" def="124" use="125" target="127" covered="0"/><du var="rowNumber" def="124" use="125" target="132" covered="0"/><du var="rowNumber" def="124" use="132" covered="0"/><du var="rowNumber" def="124" use="155" covered="0"/><du var="row" def="132" use="155" covered="0"/><du var="row" def="132" use="141" covered="0"/><du var="row" def="132" use="132" covered="0"/><du var="attempt" def="139" use="139" target="119" covered="0"/><du var="attempt" def="139" use="139" target="140" covered="0"/><du var="attempt" def="139" use="140" target="141" covered="0"/><du var="attempt" def="139" use="140" target="155" covered="0"/><du var="attempt" def="139" use="157" target="159" covered="0"/><du var="attempt" def="139" use="157" target="167" covered="0"/><du var="hints" def="150" use="155" covered="0"/><du var="result" def="155" use="167" covered="0"/><du var="result" def="155" use="159" covered="0"/><du var="result" def="155" use="161" covered="0"/><du var="points" def="161" use="162" target="163" covered="0"/><du var="points" def="161" use="162" target="167" covered="0"/><du var="points" def="161" use="163" covered="0"/><du var="points" def="161" use="163" covered="0"/><du var="points" def="161" use="164" covered="0"/><du var="points" def="161" use="164" covered="0"/><du var="x" def="119" use="119" target="174" covered="0"/><du var="x" def="119" use="119" target="122" covered="0"/><du var="x" def="119" use="122" covered="0"/><du var="x" def="119" use="123" target="123" covered="0"/><du var="x" def="119" use="123" target="123" covered="0"/><du var="x" def="119" use="119" covered="0"/><counter type="DU" missed="76" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="recordPattern" desc="(Lcom/google/zxing/common/BitArray;I[I)V"><du var="row" def="193" use="199" target="199" covered="0"/><du var="row" def="193" use="199" target="199" covered="0"/><du var="row" def="193" use="203" target="204" covered="0"/><du var="row" def="193" use="203" target="206" covered="0"/><du var="start" def="193" use="196" target="197" covered="0"/><du var="start" def="193" use="196" target="199" covered="0"/><du var="start" def="193" use="199" target="199" covered="0"/><du var="start" def="193" use="199" target="199" covered="0"/><du var="start" def="193" use="201" covered="0"/><du var="counters" def="193" use="209" covered="0"/><du var="counters" def="193" use="204" covered="0"/><du var="numCounters" def="193" use="206" target="207" covered="0"/><du var="numCounters" def="193" use="206" target="209" covered="0"/><du var="numCounters" def="193" use="217" target="217" covered="0"/><du var="numCounters" def="193" use="217" target="220" covered="0"/><du var="numCounters" def="193" use="217" target="217" covered="0"/><du var="numCounters" def="193" use="217" target="218" covered="0"/><du var="end" def="195" use="196" target="197" covered="0"/><du var="end" def="195" use="196" target="199" covered="0"/><du var="end" def="195" use="202" target="217" covered="0"/><du var="end" def="195" use="202" target="203" covered="0"/><du var="end" def="195" use="217" target="218" covered="0"/><du var="end" def="195" use="217" target="220" covered="0"/><du var="isWhite" def="199" use="203" target="204" covered="0"/><du var="isWhite" def="199" use="203" target="206" covered="0"/><du var="isWhite" def="199" use="210" target="210" covered="0"/><du var="isWhite" def="199" use="210" target="210" covered="0"/><du var="counterPosition" def="200" use="206" covered="0"/><du var="counterPosition" def="200" use="204" covered="0"/><du var="counterPosition" def="200" use="217" target="217" covered="0"/><du var="counterPosition" def="200" use="217" target="220" covered="0"/><du var="counterPosition" def="200" use="217" target="217" covered="0"/><du var="counterPosition" def="200" use="217" target="218" covered="0"/><du var="i" def="201" use="202" target="217" covered="0"/><du var="i" def="201" use="202" target="203" covered="0"/><du var="i" def="201" use="203" target="204" covered="0"/><du var="i" def="201" use="203" target="206" covered="0"/><du var="i" def="201" use="213" covered="0"/><du var="i" def="201" use="217" target="218" covered="0"/><du var="i" def="201" use="217" target="220" covered="0"/><du var="counterPosition" def="206" use="206" target="207" covered="0"/><du var="counterPosition" def="206" use="206" target="209" covered="0"/><du var="counterPosition" def="206" use="209" covered="0"/><du var="counterPosition" def="206" use="206" covered="0"/><du var="counterPosition" def="206" use="204" covered="0"/><du var="counterPosition" def="206" use="217" target="217" covered="0"/><du var="counterPosition" def="206" use="217" target="220" covered="0"/><du var="counterPosition" def="206" use="217" target="217" covered="0"/><du var="counterPosition" def="206" use="217" target="218" covered="0"/><du var="isWhite" def="210" use="203" target="204" covered="0"/><du var="isWhite" def="210" use="203" target="206" covered="0"/><du var="isWhite" def="210" use="210" target="210" covered="0"/><du var="isWhite" def="210" use="210" target="210" covered="0"/><du var="i" def="213" use="202" target="217" covered="0"/><du var="i" def="213" use="202" target="203" covered="0"/><du var="i" def="213" use="203" target="204" covered="0"/><du var="i" def="213" use="203" target="206" covered="0"/><du var="i" def="213" use="213" covered="0"/><du var="i" def="213" use="217" target="218" covered="0"/><du var="i" def="213" use="217" target="220" covered="0"/><counter type="DU" missed="60" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="recordPatternInReverse" desc="(Lcom/google/zxing/common/BitArray;I[I)V"><du var="row" def="225" use="236" covered="0"/><du var="row" def="225" use="228" target="229" covered="0"/><du var="row" def="225" use="228" target="227" covered="0"/><du var="start" def="225" use="227" target="227" covered="0"/><du var="start" def="225" use="227" target="233" covered="0"/><du var="start" def="225" use="236" covered="0"/><du var="start" def="225" use="228" covered="0"/><du var="counters" def="225" use="236" covered="0"/><du var="numTransitionsLeft" def="225" use="233" target="234" covered="0"/><du var="numTransitionsLeft" def="225" use="233" target="236" covered="0"/><du var="numTransitionsLeft" def="225" use="227" target="233" covered="0"/><du var="numTransitionsLeft" def="225" use="227" target="228" covered="0"/><du var="numTransitionsLeft" def="225" use="229" covered="0"/><du var="last" def="226" use="228" target="229" covered="0"/><du var="last" def="226" use="228" target="227" covered="0"/><du var="last" def="226" use="230" target="230" covered="0"/><du var="last" def="226" use="230" target="230" covered="0"/><du var="start" def="228" use="228" target="229" covered="0"/><du var="start" def="228" use="228" target="227" covered="0"/><du var="start" def="228" use="227" target="227" covered="0"/><du var="start" def="228" use="227" target="233" covered="0"/><du var="start" def="228" use="236" covered="0"/><du var="start" def="228" use="228" covered="0"/><du var="numTransitionsLeft" def="229" use="233" target="234" covered="0"/><du var="numTransitionsLeft" def="229" use="233" target="236" covered="0"/><du var="numTransitionsLeft" def="229" use="227" target="233" covered="0"/><du var="numTransitionsLeft" def="229" use="227" target="228" covered="0"/><du var="numTransitionsLeft" def="229" use="229" covered="0"/><du var="last" def="230" use="228" target="229" covered="0"/><du var="last" def="230" use="228" target="227" covered="0"/><du var="last" def="230" use="230" target="230" covered="0"/><du var="last" def="230" use="230" target="230" covered="0"/><counter type="DU" missed="32" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="patternMatchVariance" desc="([I[IF)F"><du var="counters" def="252" use="256" covered="0"/><du var="counters" def="252" use="270" covered="0"/><du var="pattern" def="252" use="257" covered="0"/><du var="pattern" def="252" use="271" covered="0"/><du var="maxIndividualVariance" def="252" use="266" covered="0"/><du var="numCounters" def="252" use="255" target="259" covered="0"/><du var="numCounters" def="252" use="255" target="256" covered="0"/><du var="numCounters" def="252" use="269" target="278" covered="0"/><du var="numCounters" def="252" use="269" target="270" covered="0"/><du var="total" def="253" use="256" covered="0"/><du var="total" def="253" use="259" target="262" covered="0"/><du var="total" def="253" use="259" target="265" covered="0"/><du var="total" def="253" use="265" covered="0"/><du var="total" def="253" use="278" covered="0"/><du var="patternLength" def="254" use="257" covered="0"/><du var="patternLength" def="254" use="259" target="262" covered="0"/><du var="patternLength" def="254" use="259" target="265" covered="0"/><du var="patternLength" def="254" use="265" covered="0"/><du var="i" def="255" use="255" target="259" covered="0"/><du var="i" def="255" use="255" target="256" covered="0"/><du var="i" def="255" use="256" covered="0"/><du var="i" def="255" use="257" covered="0"/><du var="i" def="255" use="255" covered="0"/><du var="total" def="256" use="256" covered="0"/><du var="total" def="256" use="259" target="262" covered="0"/><du var="total" def="256" use="259" target="265" covered="0"/><du var="total" def="256" use="265" covered="0"/><du var="total" def="256" use="278" covered="0"/><du var="patternLength" def="257" use="257" covered="0"/><du var="patternLength" def="257" use="259" target="262" covered="0"/><du var="patternLength" def="257" use="259" target="265" covered="0"/><du var="patternLength" def="257" use="265" covered="0"/><du var="i" def="255" use="255" target="259" covered="0"/><du var="i" def="255" use="255" target="256" covered="0"/><du var="i" def="255" use="256" covered="0"/><du var="i" def="255" use="257" covered="0"/><du var="i" def="255" use="255" covered="0"/><du var="unitBarWidth" def="265" use="271" covered="0"/><du var="maxIndividualVariance" def="266" use="273" target="274" covered="0"/><du var="maxIndividualVariance" def="266" use="273" target="276" covered="0"/><du var="totalVariance" def="268" use="276" covered="0"/><du var="totalVariance" def="268" use="278" covered="0"/><du var="x" def="269" use="269" target="278" covered="0"/><du var="x" def="269" use="269" target="270" covered="0"/><du var="x" def="269" use="270" covered="0"/><du var="x" def="269" use="271" covered="0"/><du var="x" def="269" use="269" covered="0"/><du var="counter" def="270" use="272" target="272" covered="0"/><du var="counter" def="270" use="272" target="272" covered="0"/><du var="counter" def="270" use="272" covered="0"/><du var="scaledPattern" def="271" use="272" target="272" covered="0"/><du var="scaledPattern" def="271" use="272" target="272" covered="0"/><du var="scaledPattern" def="271" use="272" covered="0"/><du var="variance" def="272" use="273" target="274" covered="0"/><du var="variance" def="272" use="273" target="276" covered="0"/><du var="variance" def="272" use="276" covered="0"/><du var="totalVariance" def="276" use="276" covered="0"/><du var="totalVariance" def="276" use="278" covered="0"/><du var="x" def="269" use="269" target="278" covered="0"/><du var="x" def="269" use="269" target="270" covered="0"/><du var="x" def="269" use="270" covered="0"/><du var="x" def="269" use="271" covered="0"/><du var="x" def="269" use="269" covered="0"/><counter type="DU" missed="63" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="231" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/Code93Reader"><method name="decodeRow" desc="(ILcom/google/zxing/common/BitArray;Ljava/util/Map;)Lcom/google/zxing/Result;"><du var="rowNumber" def="69" use="125" covered="0"/><du var="rowNumber" def="69" use="126" covered="0"/><du var="row" def="69" use="82" covered="0"/><du var="row" def="69" use="94" covered="0"/><du var="row" def="69" use="104" target="105" covered="0"/><du var="row" def="69" use="104" target="108" covered="0"/><du var="CODE_93" def="69" use="121" covered="0"/><du var="start" def="69" use="119" covered="0"/><du var="nextStart" def="71" use="82" covered="0"/><du var="nextStart" def="71" use="89" covered="0"/><du var="nextStart" def="71" use="91" covered="0"/><du var="nextStart" def="71" use="94" covered="0"/><du var="end" def="72" use="104" target="104" covered="0"/><du var="end" def="72" use="104" target="105" covered="0"/><du var="theCounters" def="74" use="82" covered="0"/><du var="theCounters" def="74" use="83" covered="0"/><du var="theCounters" def="74" use="90" covered="0"/><du var="theCounters" def="74" use="90" covered="0"/><du var="theCounters" def="74" use="99" covered="0"/><du var="theCounters" def="74" use="99" covered="0"/><du var="result" def="76" use="88" covered="0"/><du var="result" def="76" use="96" covered="0"/><du var="result" def="76" use="108" target="110" covered="0"/><du var="result" def="76" use="108" target="113" covered="0"/><du var="result" def="76" use="113" covered="0"/><du var="result" def="76" use="115" covered="0"/><du var="result" def="76" use="117" covered="0"/><du var="pattern" def="83" use="84" target="85" covered="0"/><du var="pattern" def="83" use="84" target="87" covered="0"/><du var="pattern" def="83" use="87" covered="0"/><du var="decodedChar" def="87" use="95" target="96" covered="0"/><du var="decodedChar" def="87" use="95" target="82" covered="0"/><du var="lastStart" def="89" use="120" covered="0"/><du var="nextStart" def="91" use="91" covered="0"/><du var="nextStart" def="91" use="94" covered="0"/><du var="nextStart" def="94" use="82" covered="0"/><du var="nextStart" def="94" use="89" covered="0"/><du var="nextStart" def="94" use="91" covered="0"/><du var="nextStart" def="94" use="94" covered="0"/><du var="nextStart" def="94" use="104" target="104" covered="0"/><du var="nextStart" def="94" use="104" target="105" covered="0"/><du var="nextStart" def="94" use="104" target="105" covered="0"/><du var="nextStart" def="94" use="104" target="108" covered="0"/><du var="lastPatternSize" def="98" use="100" covered="0"/><du var="lastPatternSize" def="98" use="120" covered="0"/><du var="lastPatternSize" def="100" use="100" covered="0"/><du var="lastPatternSize" def="100" use="120" covered="0"/><counter type="DU" missed="69" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findAsteriskPattern" desc="(Lcom/google/zxing/common/BitArray;)[I"><du var="row" def="132" use="143" target="144" covered="0"/><du var="row" def="132" use="143" target="146" covered="0"/><du var="ASTERISK_ENCODING" def="132" use="147" target="148" covered="0"/><du var="ASTERISK_ENCODING" def="132" use="147" target="150" covered="0"/><du var="width" def="132" use="142" target="162" covered="0"/><du var="width" def="132" use="142" target="143" covered="0"/><du var="theCounters" def="136" use="158" covered="0"/><du var="theCounters" def="136" use="147" target="148" covered="0"/><du var="theCounters" def="136" use="147" target="150" covered="0"/><du var="theCounters" def="136" use="150" covered="0"/><du var="theCounters" def="136" use="151" covered="0"/><du var="theCounters" def="136" use="152" covered="0"/><du var="theCounters" def="136" use="153" covered="0"/><du var="theCounters" def="136" use="144" covered="0"/><du var="patternStart" def="137" use="150" covered="0"/><du var="patternStart" def="137" use="148" covered="0"/><du var="isWhite" def="138" use="143" target="144" covered="0"/><du var="isWhite" def="138" use="143" target="146" covered="0"/><du var="isWhite" def="138" use="159" target="159" covered="0"/><du var="isWhite" def="138" use="159" target="159" covered="0"/><du var="patternLength" def="139" use="146" target="147" covered="0"/><du var="patternLength" def="139" use="146" target="156" covered="0"/><du var="counterPosition" def="141" use="146" target="147" covered="0"/><du var="counterPosition" def="141" use="146" target="156" covered="0"/><du var="counterPosition" def="141" use="156" covered="0"/><du var="counterPosition" def="141" use="151" covered="0"/><du var="counterPosition" def="141" use="152" covered="0"/><du var="counterPosition" def="141" use="153" covered="0"/><du var="counterPosition" def="141" use="154" covered="0"/><du var="counterPosition" def="141" use="144" covered="0"/><du var="i" def="142" use="142" target="162" covered="0"/><du var="i" def="142" use="142" target="143" covered="0"/><du var="i" def="142" use="143" target="144" covered="0"/><du var="i" def="142" use="143" target="146" covered="0"/><du var="i" def="142" use="142" covered="0"/><du var="i" def="142" use="148" covered="0"/><du var="patternStart" def="150" use="150" covered="0"/><du var="patternStart" def="150" use="148" covered="0"/><du var="counterPosition" def="154" use="158" covered="0"/><du var="counterPosition" def="154" use="146" target="147" covered="0"/><du var="counterPosition" def="154" use="146" target="156" covered="0"/><du var="counterPosition" def="154" use="156" covered="0"/><du var="counterPosition" def="154" use="151" covered="0"/><du var="counterPosition" def="154" use="152" covered="0"/><du var="counterPosition" def="154" use="153" covered="0"/><du var="counterPosition" def="154" use="154" covered="0"/><du var="counterPosition" def="154" use="144" covered="0"/><du var="counterPosition" def="156" use="158" covered="0"/><du var="counterPosition" def="156" use="146" target="147" covered="0"/><du var="counterPosition" def="156" use="146" target="156" covered="0"/><du var="counterPosition" def="156" use="156" covered="0"/><du var="counterPosition" def="156" use="151" covered="0"/><du var="counterPosition" def="156" use="152" covered="0"/><du var="counterPosition" def="156" use="153" covered="0"/><du var="counterPosition" def="156" use="154" covered="0"/><du var="counterPosition" def="156" use="144" covered="0"/><du var="isWhite" def="159" use="143" target="144" covered="0"/><du var="isWhite" def="159" use="143" target="146" covered="0"/><du var="isWhite" def="159" use="159" target="159" covered="0"/><du var="isWhite" def="159" use="159" target="159" covered="0"/><du var="i" def="142" use="142" target="162" covered="0"/><du var="i" def="142" use="142" target="143" covered="0"/><du var="i" def="142" use="143" target="144" covered="0"/><du var="i" def="142" use="143" target="146" covered="0"/><du var="i" def="142" use="142" covered="0"/><du var="i" def="142" use="148" covered="0"/><counter type="DU" missed="66" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPattern" desc="([I)I"><du var="counters" def="166" use="171" covered="0"/><du var="counters" def="166" use="173" covered="0"/><du var="sum" def="166" use="168" covered="0"/><du var="sum" def="166" use="173" covered="0"/><du var="sum" def="168" use="168" covered="0"/><du var="sum" def="168" use="173" covered="0"/><du var="pattern" def="170" use="182" covered="0"/><du var="pattern" def="170" use="179" covered="0"/><du var="pattern" def="170" use="185" covered="0"/><du var="max" def="171" use="172" target="185" covered="0"/><du var="max" def="171" use="172" target="173" covered="0"/><du var="i" def="172" use="172" target="185" covered="0"/><du var="i" def="172" use="172" target="173" covered="0"/><du var="i" def="172" use="173" covered="0"/><du var="i" def="172" use="177" target="178" covered="0"/><du var="i" def="172" use="177" target="182" covered="0"/><du var="i" def="172" use="172" covered="0"/><du var="scaled" def="173" use="174" target="174" covered="0"/><du var="scaled" def="173" use="174" target="175" covered="0"/><du var="scaled" def="173" use="174" target="175" covered="0"/><du var="scaled" def="173" use="174" target="177" covered="0"/><du var="scaled" def="173" use="182" covered="0"/><du var="scaled" def="173" use="178" target="181" covered="0"/><du var="scaled" def="173" use="178" target="179" covered="0"/><du var="j" def="178" use="178" target="181" covered="0"/><du var="j" def="178" use="178" target="179" covered="0"/><du var="j" def="178" use="178" covered="0"/><du var="pattern" def="179" use="179" covered="0"/><du var="pattern" def="179" use="182" covered="0"/><du var="pattern" def="179" use="185" covered="0"/><du var="j" def="178" use="178" target="181" covered="0"/><du var="j" def="178" use="178" target="179" covered="0"/><du var="j" def="178" use="178" covered="0"/><du var="pattern" def="182" use="182" covered="0"/><du var="pattern" def="182" use="179" covered="0"/><du var="pattern" def="182" use="185" covered="0"/><du var="i" def="172" use="172" target="185" covered="0"/><du var="i" def="172" use="172" target="173" covered="0"/><du var="i" def="172" use="173" covered="0"/><du var="i" def="172" use="177" target="178" covered="0"/><du var="i" def="172" use="177" target="182" covered="0"/><du var="i" def="172" use="172" covered="0"/><counter type="DU" missed="53" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="patternToChar" desc="(I)C"><du var="pattern" def="189" use="190" target="191" covered="0"/><du var="pattern" def="189" use="190" target="189" covered="0"/><du var="CHARACTER_ENCODINGS" def="189" use="189" target="194" covered="0"/><du var="CHARACTER_ENCODINGS" def="189" use="189" target="190" covered="0"/><du var="CHARACTER_ENCODINGS" def="189" use="190" target="191" covered="0"/><du var="CHARACTER_ENCODINGS" def="189" use="190" target="189" covered="0"/><du var="ALPHABET" def="189" use="191" covered="0"/><du var="i" def="189" use="189" target="194" covered="0"/><du var="i" def="189" use="189" target="190" covered="0"/><du var="i" def="189" use="190" target="191" covered="0"/><du var="i" def="189" use="190" target="189" covered="0"/><du var="i" def="189" use="189" covered="0"/><du var="i" def="189" use="191" covered="0"/><du var="i" def="189" use="189" target="194" covered="0"/><du var="i" def="189" use="189" target="190" covered="0"/><du var="i" def="189" use="190" target="191" covered="0"/><du var="i" def="189" use="190" target="189" covered="0"/><du var="i" def="189" use="189" covered="0"/><du var="i" def="189" use="191" covered="0"/><counter type="DU" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeExtended" desc="(Ljava/lang/CharSequence;)Ljava/lang/String;"><du var="encoded" def="198" use="201" covered="0"/><du var="encoded" def="198" use="206" covered="0"/><du var="length" def="198" use="200" target="263" covered="0"/><du var="length" def="198" use="200" target="201" covered="0"/><du var="length" def="198" use="203" target="204" covered="0"/><du var="length" def="198" use="203" target="206" covered="0"/><du var="decoded" def="199" use="260" covered="0"/><du var="decoded" def="199" use="256" covered="0"/><du var="decoded" def="199" use="263" covered="0"/><du var="i" def="200" use="200" target="263" covered="0"/><du var="i" def="200" use="200" target="201" covered="0"/><du var="i" def="200" use="201" covered="0"/><du var="i" def="200" use="200" covered="0"/><du var="i" def="200" use="203" target="204" covered="0"/><du var="i" def="200" use="203" target="206" covered="0"/><du var="i" def="200" use="206" covered="0"/><du var="i" def="200" use="258" covered="0"/><du var="c" def="201" use="202" target="202" covered="0"/><du var="c" def="201" use="202" target="260" covered="0"/><du var="c" def="201" use="260" covered="0"/><du var="c" def="201" use="202" target="203" covered="0"/><du var="c" def="201" use="202" target="260" covered="0"/><du var="c" def="201" use="208" target="256" covered="0"/><du var="c" def="201" use="208" target="219" covered="0"/><du var="c" def="201" use="208" target="226" covered="0"/><du var="c" def="201" use="208" target="247" covered="0"/><du var="c" def="201" use="208" target="211" covered="0"/><du var="next" def="206" use="211" target="211" covered="0"/><du var="next" def="206" use="211" target="214" covered="0"/><du var="next" def="206" use="211" target="212" covered="0"/><du var="next" def="206" use="211" target="214" covered="0"/><du var="next" def="206" use="212" covered="0"/><du var="next" def="206" use="247" target="247" covered="0"/><du var="next" def="206" use="247" target="249" covered="0"/><du var="next" def="206" use="249" target="250" covered="0"/><du var="next" def="206" use="249" target="252" covered="0"/><du var="next" def="206" use="247" target="248" covered="0"/><du var="next" def="206" use="247" target="249" covered="0"/><du var="next" def="206" use="248" covered="0"/><du var="next" def="206" use="226" target="226" covered="0"/><du var="next" def="206" use="226" target="229" covered="0"/><du var="next" def="206" use="229" target="229" covered="0"/><du var="next" def="206" use="229" target="232" covered="0"/><du var="next" def="206" use="232" target="232" covered="0"/><du var="next" def="206" use="232" target="235" covered="0"/><du var="next" def="206" use="235" target="235" covered="0"/><du var="next" def="206" use="235" target="238" covered="0"/><du var="next" def="206" use="238" target="238" covered="0"/><du var="next" def="206" use="238" target="242" covered="0"/><du var="next" def="206" use="238" target="240" covered="0"/><du var="next" def="206" use="238" target="242" covered="0"/><du var="next" def="206" use="235" target="237" covered="0"/><du var="next" def="206" use="235" target="238" covered="0"/><du var="next" def="206" use="237" covered="0"/><du var="next" def="206" use="232" target="234" covered="0"/><du var="next" def="206" use="232" target="235" covered="0"/><du var="next" def="206" use="234" covered="0"/><du var="next" def="206" use="229" target="231" covered="0"/><du var="next" def="206" use="229" target="232" covered="0"/><du var="next" def="206" use="231" covered="0"/><du var="next" def="206" use="226" target="228" covered="0"/><du var="next" def="206" use="226" target="229" covered="0"/><du var="next" def="206" use="228" covered="0"/><du var="next" def="206" use="219" target="219" covered="0"/><du var="next" def="206" use="219" target="222" covered="0"/><du var="next" def="206" use="219" target="220" covered="0"/><du var="next" def="206" use="219" target="222" covered="0"/><du var="next" def="206" use="220" covered="0"/><du var="decodedChar" def="207" use="256" covered="0"/><du var="decodedChar" def="212" use="256" covered="0"/><du var="decodedChar" def="220" use="256" covered="0"/><du var="decodedChar" def="228" use="256" covered="0"/><du var="decodedChar" def="231" use="256" covered="0"/><du var="decodedChar" def="234" use="256" covered="0"/><du var="decodedChar" def="237" use="256" covered="0"/><du var="decodedChar" def="240" use="256" covered="0"/><du var="decodedChar" def="248" use="256" covered="0"/><du var="decodedChar" def="250" use="256" covered="0"/><du var="i" def="258" use="200" covered="0"/><du var="i" def="200" use="200" target="263" covered="0"/><du var="i" def="200" use="200" target="201" covered="0"/><du var="i" def="200" use="201" covered="0"/><du var="i" def="200" use="200" covered="0"/><du var="i" def="200" use="203" target="204" covered="0"/><du var="i" def="200" use="203" target="206" covered="0"/><du var="i" def="200" use="206" covered="0"/><du var="i" def="200" use="258" covered="0"/><counter type="DU" missed="87" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkOneChecksum" desc="(Ljava/lang/CharSequence;II)V"><du var="result" def="274" use="277" covered="0"/><du var="result" def="274" use="282" target="283" covered="0"/><du var="result" def="274" use="282" target="285" covered="0"/><du var="checkPosition" def="274" use="282" target="283" covered="0"/><du var="checkPosition" def="274" use="282" target="285" covered="0"/><du var="weightMax" def="274" use="278" target="279" covered="0"/><du var="weightMax" def="274" use="278" target="276" covered="0"/><du var="ALPHABET" def="274" use="282" target="283" covered="0"/><du var="ALPHABET" def="274" use="282" target="285" covered="0"/><du var="weight" def="274" use="277" covered="0"/><du var="weight" def="274" use="278" covered="0"/><du var="total" def="275" use="277" covered="0"/><du var="total" def="275" use="282" target="283" covered="0"/><du var="total" def="275" use="282" target="285" covered="0"/><du var="i" def="276" use="276" target="282" covered="0"/><du var="i" def="276" use="276" target="277" covered="0"/><du var="i" def="276" use="277" covered="0"/><du var="i" def="276" use="276" covered="0"/><du var="total" def="277" use="277" covered="0"/><du var="total" def="277" use="282" target="283" covered="0"/><du var="total" def="277" use="282" target="285" covered="0"/><du var="weight" def="278" use="278" target="279" covered="0"/><du var="weight" def="278" use="278" target="276" covered="0"/><du var="weight" def="278" use="277" covered="0"/><du var="weight" def="278" use="278" covered="0"/><du var="weight" def="279" use="277" covered="0"/><du var="weight" def="279" use="278" covered="0"/><du var="i" def="276" use="276" target="282" covered="0"/><du var="i" def="276" use="276" target="277" covered="0"/><du var="i" def="276" use="277" covered="0"/><du var="i" def="276" use="276" covered="0"/><counter type="DU" missed="31" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="325" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/oned/CodaBarWriter"><method name="encode" desc="(Ljava/lang/String;)[Z"><du var="contents" def="34" use="34" target="36" covered="0"/><du var="contents" def="34" use="34" target="39" covered="0"/><du var="contents" def="34" use="39" covered="0"/><du var="contents" def="34" use="40" covered="0"/><du var="contents" def="34" use="58" covered="0"/><du var="contents" def="34" use="61" covered="0"/><du var="contents" def="34" use="67" target="77" covered="0"/><du var="contents" def="34" use="67" target="68" covered="0"/><du var="contents" def="34" use="68" target="68" covered="0"/><du var="contents" def="34" use="68" target="69" covered="0"/><du var="contents" def="34" use="68" target="68" covered="0"/><du var="contents" def="34" use="68" target="69" covered="0"/><du var="contents" def="34" use="68" target="69" covered="0"/><du var="contents" def="34" use="68" target="70" covered="0"/><du var="contents" def="34" use="70" target="71" covered="0"/><du var="contents" def="34" use="70" target="73" covered="0"/><du var="contents" def="34" use="73" covered="0"/><du var="contents" def="34" use="77" covered="0"/><du var="contents" def="34" use="81" target="127" covered="0"/><du var="contents" def="34" use="81" target="82" covered="0"/><du var="contents" def="34" use="82" covered="0"/><du var="contents" def="34" use="122" target="123" covered="0"/><du var="contents" def="34" use="122" target="81" covered="0"/><du var="contents" def="34" use="83" target="85" covered="0"/><du var="contents" def="34" use="83" target="100" covered="0"/><du var="contents" def="34" use="52" covered="0"/><du var="contents" def="34" use="47" covered="0"/><du var="contents" def="34" use="36" covered="0"/><du var="DEFAULT_GUARD" def="34" use="61" covered="0"/><du var="DEFAULT_GUARD" def="34" use="61" covered="0"/><du var="DEFAULT_GUARD" def="34" use="36" covered="0"/><du var="DEFAULT_GUARD" def="34" use="36" covered="0"/><du var="START_END_CHARS" def="34" use="41" covered="0"/><du var="START_END_CHARS" def="34" use="42" covered="0"/><du var="ALT_START_END_CHARS" def="34" use="43" covered="0"/><du var="ALT_START_END_CHARS" def="34" use="44" covered="0"/><du var="CHARS_WHICH_ARE_TEN_LENGTH_EACH_AFTER_DECODED" def="34" use="70" target="71" covered="0"/><du var="CHARS_WHICH_ARE_TEN_LENGTH_EACH_AFTER_DECODED" def="34" use="70" target="73" covered="0"/><du var="ALPHABET" def="34" use="101" target="108" covered="0"/><du var="ALPHABET" def="34" use="101" target="103" covered="0"/><du var="ALPHABET" def="34" use="103" target="104" covered="0"/><du var="ALPHABET" def="34" use="103" target="101" covered="0"/><du var="CHARACTER_ENCODINGS" def="34" use="104" covered="0"/><du var="contents" def="36" use="67" target="77" covered="0"/><du var="contents" def="36" use="67" target="68" covered="0"/><du var="contents" def="36" use="68" target="68" covered="0"/><du var="contents" def="36" use="68" target="69" covered="0"/><du var="contents" def="36" use="68" target="68" covered="0"/><du var="contents" def="36" use="68" target="69" covered="0"/><du var="contents" def="36" use="68" target="69" covered="0"/><du var="contents" def="36" use="68" target="70" covered="0"/><du var="contents" def="36" use="70" target="71" covered="0"/><du var="contents" def="36" use="70" target="73" covered="0"/><du var="contents" def="36" use="73" covered="0"/><du var="contents" def="36" use="77" covered="0"/><du var="contents" def="36" use="81" target="127" covered="0"/><du var="contents" def="36" use="81" target="82" covered="0"/><du var="contents" def="36" use="82" covered="0"/><du var="contents" def="36" use="122" target="123" covered="0"/><du var="contents" def="36" use="122" target="81" covered="0"/><du var="contents" def="36" use="83" target="85" covered="0"/><du var="contents" def="36" use="83" target="100" covered="0"/><du var="startsNormal" def="41" use="45" target="46" covered="0"/><du var="startsNormal" def="41" use="45" target="50" covered="0"/><du var="endsNormal" def="42" use="57" target="57" covered="0"/><du var="endsNormal" def="42" use="57" target="58" covered="0"/><du var="endsNormal" def="42" use="46" target="47" covered="0"/><du var="endsNormal" def="42" use="46" target="66" covered="0"/><du var="startsAlt" def="43" use="50" target="51" covered="0"/><du var="startsAlt" def="43" use="50" target="57" covered="0"/><du var="endsAlt" def="44" use="57" target="58" covered="0"/><du var="endsAlt" def="44" use="57" target="61" covered="0"/><du var="endsAlt" def="44" use="51" target="52" covered="0"/><du var="endsAlt" def="44" use="51" target="66" covered="0"/><du var="contents" def="61" use="67" target="77" covered="0"/><du var="contents" def="61" use="67" target="68" covered="0"/><du var="contents" def="61" use="68" target="68" covered="0"/><du var="contents" def="61" use="68" target="69" covered="0"/><du var="contents" def="61" use="68" target="68" covered="0"/><du var="contents" def="61" use="68" target="69" covered="0"/><du var="contents" def="61" use="68" target="69" covered="0"/><du var="contents" def="61" use="68" target="70" covered="0"/><du var="contents" def="61" use="70" target="71" covered="0"/><du var="contents" def="61" use="70" target="73" covered="0"/><du var="contents" def="61" use="73" covered="0"/><du var="contents" def="61" use="77" covered="0"/><du var="contents" def="61" use="81" target="127" covered="0"/><du var="contents" def="61" use="81" target="82" covered="0"/><du var="contents" def="61" use="82" covered="0"/><du var="contents" def="61" use="122" target="123" covered="0"/><du var="contents" def="61" use="122" target="81" covered="0"/><du var="contents" def="61" use="83" target="85" covered="0"/><du var="contents" def="61" use="83" target="100" covered="0"/><du var="resultLength" def="66" use="69" covered="0"/><du var="resultLength" def="66" use="71" covered="0"/><du var="resultLength" def="66" use="77" covered="0"/><du var="i" def="67" use="67" target="77" covered="0"/><du var="i" def="67" use="67" target="68" covered="0"/><du var="i" def="67" use="68" target="68" covered="0"/><du var="i" def="67" use="68" target="69" covered="0"/><du var="i" def="67" use="67" covered="0"/><du var="i" def="67" use="68" target="68" covered="0"/><du var="i" def="67" use="68" target="69" covered="0"/><du var="i" def="67" use="68" target="69" covered="0"/><du var="i" def="67" use="68" target="70" covered="0"/><du var="i" def="67" use="70" target="71" covered="0"/><du var="i" def="67" use="70" target="73" covered="0"/><du var="i" def="67" use="73" covered="0"/><du var="resultLength" def="69" use="69" covered="0"/><du var="resultLength" def="69" use="71" covered="0"/><du var="resultLength" def="69" use="77" covered="0"/><du var="resultLength" def="71" use="69" covered="0"/><du var="resultLength" def="71" use="71" covered="0"/><du var="resultLength" def="71" use="77" covered="0"/><du var="i" def="67" use="67" target="77" covered="0"/><du var="i" def="67" use="67" target="68" covered="0"/><du var="i" def="67" use="68" target="68" covered="0"/><du var="i" def="67" use="68" target="69" covered="0"/><du var="i" def="67" use="67" covered="0"/><du var="i" def="67" use="68" target="68" covered="0"/><du var="i" def="67" use="68" target="69" covered="0"/><du var="i" def="67" use="68" target="69" covered="0"/><du var="i" def="67" use="68" target="70" covered="0"/><du var="i" def="67" use="70" target="71" covered="0"/><du var="i" def="67" use="70" target="73" covered="0"/><du var="i" def="67" use="73" covered="0"/><du var="result" def="79" use="112" covered="0"/><du var="result" def="79" use="123" covered="0"/><du var="result" def="79" use="127" covered="0"/><du var="position" def="80" use="112" covered="0"/><du var="position" def="80" use="113" covered="0"/><du var="position" def="80" use="123" covered="0"/><du var="position" def="80" use="124" covered="0"/><du var="index" def="81" use="81" target="127" covered="0"/><du var="index" def="81" use="81" target="82" covered="0"/><du var="index" def="81" use="82" covered="0"/><du var="index" def="81" use="83" target="83" covered="0"/><du var="index" def="81" use="83" target="85" covered="0"/><du var="index" def="81" use="122" target="123" covered="0"/><du var="index" def="81" use="122" target="81" covered="0"/><du var="index" def="81" use="81" covered="0"/><du var="index" def="81" use="83" target="85" covered="0"/><du var="index" def="81" use="83" target="100" covered="0"/><du var="c" def="82" use="85" target="100" covered="0"/><du var="c" def="82" use="85" target="93" covered="0"/><du var="c" def="82" use="85" target="96" covered="0"/><du var="c" def="82" use="85" target="90" covered="0"/><du var="c" def="82" use="85" target="87" covered="0"/><du var="c" def="82" use="103" target="104" covered="0"/><du var="c" def="82" use="103" target="101" covered="0"/><du var="c" def="87" use="103" target="104" covered="0"/><du var="c" def="87" use="103" target="101" covered="0"/><du var="c" def="90" use="103" target="104" covered="0"/><du var="c" def="90" use="103" target="101" covered="0"/><du var="c" def="93" use="103" target="104" covered="0"/><du var="c" def="93" use="103" target="101" covered="0"/><du var="c" def="96" use="103" target="104" covered="0"/><du var="c" def="96" use="103" target="101" covered="0"/><du var="code" def="100" use="114" target="114" covered="0"/><du var="code" def="100" use="114" target="115" covered="0"/><du var="i" def="101" use="101" target="108" covered="0"/><du var="i" def="101" use="101" target="103" covered="0"/><du var="i" def="101" use="103" target="104" covered="0"/><du var="i" def="101" use="103" target="101" covered="0"/><du var="i" def="101" use="101" covered="0"/><du var="i" def="101" use="104" covered="0"/><du var="code" def="104" use="114" target="114" covered="0"/><du var="code" def="104" use="114" target="115" covered="0"/><du var="i" def="101" use="101" target="108" covered="0"/><du var="i" def="101" use="101" target="103" covered="0"/><du var="i" def="101" use="103" target="104" covered="0"/><du var="i" def="101" use="103" target="101" covered="0"/><du var="i" def="101" use="101" covered="0"/><du var="i" def="101" use="104" covered="0"/><du var="color" def="108" use="112" covered="0"/><du var="color" def="108" use="115" target="115" covered="0"/><du var="color" def="108" use="115" target="115" covered="0"/><du var="counter" def="109" use="114" target="115" covered="0"/><du var="counter" def="109" use="114" target="119" covered="0"/><du var="counter" def="109" use="119" covered="0"/><du var="bit" def="110" use="111" target="122" covered="0"/><du var="bit" def="110" use="111" target="112" covered="0"/><du var="bit" def="110" use="114" target="114" covered="0"/><du var="bit" def="110" use="114" target="115" covered="0"/><du var="bit" def="110" use="116" covered="0"/><du var="position" def="113" use="112" covered="0"/><du var="position" def="113" use="113" covered="0"/><du var="position" def="113" use="123" covered="0"/><du var="position" def="113" use="124" covered="0"/><du var="color" def="115" use="112" covered="0"/><du var="color" def="115" use="115" target="115" covered="0"/><du var="color" def="115" use="115" target="115" covered="0"/><du var="bit" def="116" use="111" target="122" covered="0"/><du var="bit" def="116" use="111" target="112" covered="0"/><du var="bit" def="116" use="114" target="114" covered="0"/><du var="bit" def="116" use="114" target="115" covered="0"/><du var="bit" def="116" use="116" covered="0"/><du var="counter" def="117" use="114" target="115" covered="0"/><du var="counter" def="117" use="114" target="119" covered="0"/><du var="counter" def="117" use="119" covered="0"/><du var="counter" def="119" use="114" target="115" covered="0"/><du var="counter" def="119" use="114" target="119" covered="0"/><du var="counter" def="119" use="119" covered="0"/><du var="position" def="124" use="112" covered="0"/><du var="position" def="124" use="113" covered="0"/><du var="position" def="124" use="123" covered="0"/><du var="position" def="124" use="124" covered="0"/><du var="index" def="81" use="81" target="127" covered="0"/><du var="index" def="81" use="81" target="82" covered="0"/><du var="index" def="81" use="82" covered="0"/><du var="index" def="81" use="83" target="83" covered="0"/><du var="index" def="81" use="83" target="85" covered="0"/><du var="index" def="81" use="122" target="123" covered="0"/><du var="index" def="81" use="122" target="81" covered="0"/><du var="index" def="81" use="81" covered="0"/><du var="index" def="81" use="83" target="85" covered="0"/><du var="index" def="81" use="83" target="100" covered="0"/><counter type="DU" missed="217" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="217" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/MultiFormatWriter"><method name="encode" desc="(Ljava/lang/String;Lcom/google/zxing/BarcodeFormat;IILjava/util/Map;)Lcom/google/zxing/common/BitMatrix;"><du var="contents" def="59" use="102" covered="0"/><du var="format" def="59" use="59" target="100" covered="0"/><du var="format" def="59" use="59" target="97" covered="0"/><du var="format" def="59" use="59" target="91" covered="0"/><du var="format" def="59" use="59" target="76" covered="0"/><du var="format" def="59" use="59" target="79" covered="0"/><du var="format" def="59" use="59" target="82" covered="0"/><du var="format" def="59" use="59" target="94" covered="0"/><du var="format" def="59" use="59" target="61" covered="0"/><du var="format" def="59" use="59" target="67" covered="0"/><du var="format" def="59" use="59" target="85" covered="0"/><du var="format" def="59" use="59" target="88" covered="0"/><du var="format" def="59" use="59" target="73" covered="0"/><du var="format" def="59" use="59" target="70" covered="0"/><du var="format" def="59" use="59" target="64" covered="0"/><du var="format" def="59" use="102" covered="0"/><du var="format" def="59" use="100" covered="0"/><du var="width" def="59" use="102" covered="0"/><du var="height" def="59" use="102" covered="0"/><du var="hints" def="59" use="102" covered="0"/><du var="writer" def="61" use="102" covered="0"/><du var="writer" def="64" use="102" covered="0"/><du var="writer" def="67" use="102" covered="0"/><du var="writer" def="70" use="102" covered="0"/><du var="writer" def="73" use="102" covered="0"/><du var="writer" def="76" use="102" covered="0"/><du var="writer" def="79" use="102" covered="0"/><du var="writer" def="82" use="102" covered="0"/><du var="writer" def="85" use="102" covered="0"/><du var="writer" def="88" use="102" covered="0"/><du var="writer" def="91" use="102" covered="0"/><du var="writer" def="94" use="102" covered="0"/><du var="writer" def="97" use="102" covered="0"/><counter type="DU" missed="33" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="$SWITCH_TABLE$com$google$zxing$BarcodeFormat" desc="()[I"><du var="$SWITCH_TABLE$com$google$zxing$BarcodeFormat" def="42" use="42" target="42" covered="0"/><du var="$SWITCH_TABLE$com$google$zxing$BarcodeFormat" def="42" use="42" target="42" covered="0"/><du var="$SWITCH_TABLE$com$google$zxing$BarcodeFormat" def="42" use="42" covered="0"/><du var="AZTEC" def="42" use="42" covered="0"/><du var="CODABAR" def="42" use="42" covered="0"/><du var="CODE_128" def="42" use="42" covered="0"/><du var="CODE_39" def="42" use="42" covered="0"/><du var="CODE_93" def="42" use="42" covered="0"/><du var="DATA_MATRIX" def="42" use="42" covered="0"/><du var="EAN_13" def="42" use="42" covered="0"/><du var="EAN_8" def="42" use="42" covered="0"/><du var="ITF" def="42" use="42" covered="0"/><du var="MAXICODE" def="42" use="42" covered="0"/><du var="PDF_417" def="42" use="42" covered="0"/><du var="QR_CODE" def="42" use="42" covered="0"/><du var="RSS_14" def="42" use="42" covered="0"/><du var="RSS_EXPANDED" def="42" use="42" covered="0"/><du var="UPC_A" def="42" use="42" covered="0"/><du var="UPC_E" def="42" use="42" covered="0"/><du var="UPC_EAN_EXTENSION" def="42" use="42" covered="0"/><counter type="DU" missed="20" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="53" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/common/GlobalHistogramBinarizer"><method name="getBlackRow" desc="(ILcom/google/zxing/common/BitArray;)Lcom/google/zxing/common/BitArray;"><du var="this" def="53" use="61" covered="0"/><du var="this" def="53" use="62" covered="0"/><du var="this" def="53" use="63" covered="0"/><du var="y" def="53" use="62" covered="0"/><du var="row" def="53" use="55" target="55" covered="0"/><du var="row" def="53" use="55" target="56" covered="0"/><du var="row" def="53" use="55" target="56" covered="0"/><du var="row" def="53" use="55" target="58" covered="0"/><du var="row" def="53" use="58" covered="0"/><du var="row" def="53" use="83" covered="0"/><du var="row" def="53" use="89" covered="0"/><du var="row" def="53" use="73" covered="0"/><du var="this.luminances" def="53" use="62" covered="0"/><du var="this.buckets" def="53" use="63" covered="0"/><du var="source" def="53" use="62" covered="0"/><du var="width" def="54" use="56" covered="0"/><du var="width" def="54" use="61" covered="0"/><du var="width" def="54" use="64" target="67" covered="0"/><du var="width" def="54" use="64" target="65" covered="0"/><du var="width" def="54" use="69" target="71" covered="0"/><du var="width" def="54" use="69" target="77" covered="0"/><du var="width" def="54" use="79" target="89" covered="0"/><du var="width" def="54" use="79" target="80" covered="0"/><du var="width" def="54" use="71" target="76" covered="0"/><du var="width" def="54" use="71" target="72" covered="0"/><du var="width" def="54" use="55" target="56" covered="0"/><du var="width" def="54" use="55" target="58" covered="0"/><du var="row" def="56" use="83" covered="0"/><du var="row" def="56" use="89" covered="0"/><du var="row" def="56" use="73" covered="0"/><du var="localLuminances" def="62" use="65" covered="0"/><du var="localLuminances" def="62" use="77" covered="0"/><du var="localLuminances" def="62" use="78" covered="0"/><du var="localLuminances" def="62" use="80" covered="0"/><du var="localLuminances" def="62" use="72" target="73" covered="0"/><du var="localLuminances" def="62" use="72" target="71" covered="0"/><du var="localBuckets" def="63" use="65" covered="0"/><du var="localBuckets" def="63" use="67" covered="0"/><du var="x" def="64" use="64" target="67" covered="0"/><du var="x" def="64" use="64" target="65" covered="0"/><du var="x" def="64" use="65" covered="0"/><du var="x" def="64" use="64" covered="0"/><du var="x" def="64" use="64" target="67" covered="0"/><du var="x" def="64" use="64" target="65" covered="0"/><du var="x" def="64" use="65" covered="0"/><du var="x" def="64" use="64" covered="0"/><du var="blackPoint" def="67" use="82" target="83" covered="0"/><du var="blackPoint" def="67" use="82" target="85" covered="0"/><du var="blackPoint" def="67" use="72" target="73" covered="0"/><du var="blackPoint" def="67" use="72" target="71" covered="0"/><du var="x" def="71" use="71" target="76" covered="0"/><du var="x" def="71" use="71" target="72" covered="0"/><du var="x" def="71" use="72" target="73" covered="0"/><du var="x" def="71" use="72" target="71" covered="0"/><du var="x" def="71" use="71" covered="0"/><du var="x" def="71" use="73" covered="0"/><du var="x" def="71" use="71" target="76" covered="0"/><du var="x" def="71" use="71" target="72" covered="0"/><du var="x" def="71" use="72" target="73" covered="0"/><du var="x" def="71" use="72" target="71" covered="0"/><du var="x" def="71" use="71" covered="0"/><du var="x" def="71" use="73" covered="0"/><du var="left" def="77" use="82" target="83" covered="0"/><du var="left" def="77" use="82" target="85" covered="0"/><du var="center" def="78" use="82" target="83" covered="0"/><du var="center" def="78" use="82" target="85" covered="0"/><du var="center" def="78" use="85" covered="0"/><du var="x" def="79" use="79" target="89" covered="0"/><du var="x" def="79" use="79" target="80" covered="0"/><du var="x" def="79" use="80" covered="0"/><du var="x" def="79" use="79" covered="0"/><du var="x" def="79" use="83" covered="0"/><du var="right" def="80" use="82" target="83" covered="0"/><du var="right" def="80" use="82" target="85" covered="0"/><du var="right" def="80" use="86" covered="0"/><du var="left" def="85" use="82" target="83" covered="0"/><du var="left" def="85" use="82" target="85" covered="0"/><du var="center" def="86" use="82" target="83" covered="0"/><du var="center" def="86" use="82" target="85" covered="0"/><du var="center" def="86" use="85" covered="0"/><du var="x" def="79" use="79" target="89" covered="0"/><du var="x" def="79" use="79" target="80" covered="0"/><du var="x" def="79" use="80" covered="0"/><du var="x" def="79" use="79" covered="0"/><du var="x" def="79" use="83" covered="0"/><counter type="DU" missed="85" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBlackMatrix" desc="()Lcom/google/zxing/common/BitMatrix;"><du var="this" def="95" use="106" covered="0"/><du var="this.luminances" def="95" use="106" covered="0"/><du var="source" def="95" use="106" covered="0"/><du var="source" def="95" use="118" covered="0"/><du var="width" def="96" use="107" covered="0"/><du var="width" def="96" use="108" covered="0"/><du var="width" def="96" use="120" covered="0"/><du var="width" def="96" use="121" target="119" covered="0"/><du var="width" def="96" use="121" target="122" covered="0"/><du var="height" def="97" use="105" covered="0"/><du var="height" def="97" use="119" target="129" covered="0"/><du var="height" def="97" use="119" target="120" covered="0"/><du var="matrix" def="98" use="124" covered="0"/><du var="matrix" def="98" use="129" covered="0"/><du var="localBuckets" def="103" use="110" covered="0"/><du var="localBuckets" def="103" use="113" covered="0"/><du var="y" def="104" use="104" target="113" covered="0"/><du var="y" def="104" use="104" target="105" covered="0"/><du var="y" def="104" use="105" covered="0"/><du var="y" def="104" use="104" covered="0"/><du var="localLuminances" def="106" use="109" covered="0"/><du var="right" def="107" use="108" target="104" covered="0"/><du var="right" def="107" use="108" target="109" covered="0"/><du var="x" def="108" use="108" target="104" covered="0"/><du var="x" def="108" use="108" target="109" covered="0"/><du var="x" def="108" use="109" covered="0"/><du var="x" def="108" use="108" covered="0"/><du var="x" def="108" use="108" target="104" covered="0"/><du var="x" def="108" use="108" target="109" covered="0"/><du var="x" def="108" use="109" covered="0"/><du var="x" def="108" use="108" covered="0"/><du var="y" def="104" use="104" target="113" covered="0"/><du var="y" def="104" use="104" target="105" covered="0"/><du var="y" def="104" use="105" covered="0"/><du var="y" def="104" use="104" covered="0"/><du var="blackPoint" def="113" use="123" target="124" covered="0"/><du var="blackPoint" def="113" use="123" target="121" covered="0"/><du var="localLuminances" def="118" use="122" covered="0"/><du var="y" def="119" use="119" target="129" covered="0"/><du var="y" def="119" use="119" target="120" covered="0"/><du var="y" def="119" use="120" covered="0"/><du var="y" def="119" use="124" covered="0"/><du var="y" def="119" use="119" covered="0"/><du var="offset" def="120" use="122" covered="0"/><du var="x" def="121" use="121" target="119" covered="0"/><du var="x" def="121" use="121" target="122" covered="0"/><du var="x" def="121" use="122" covered="0"/><du var="x" def="121" use="121" covered="0"/><du var="x" def="121" use="124" covered="0"/><du var="pixel" def="122" use="123" target="124" covered="0"/><du var="pixel" def="122" use="123" target="121" covered="0"/><du var="x" def="121" use="121" target="119" covered="0"/><du var="x" def="121" use="121" target="122" covered="0"/><du var="x" def="121" use="122" covered="0"/><du var="x" def="121" use="121" covered="0"/><du var="x" def="121" use="124" covered="0"/><du var="y" def="119" use="119" target="129" covered="0"/><du var="y" def="119" use="119" target="120" covered="0"/><du var="y" def="119" use="120" covered="0"/><du var="y" def="119" use="124" covered="0"/><du var="y" def="119" use="119" covered="0"/><counter type="DU" missed="61" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initArrays" desc="(I)V"><du var="this" def="138" use="138" target="139" covered="0"/><du var="this" def="138" use="138" target="141" covered="0"/><du var="this" def="138" use="142" covered="0"/><du var="this" def="138" use="139" covered="0"/><du var="luminanceSize" def="138" use="138" target="139" covered="0"/><du var="luminanceSize" def="138" use="138" target="141" covered="0"/><du var="luminanceSize" def="138" use="139" covered="0"/><du var="this.luminances" def="138" use="138" target="139" covered="0"/><du var="this.luminances" def="138" use="138" target="141" covered="0"/><du var="this.buckets" def="138" use="142" covered="0"/><du var="x" def="141" use="141" target="144" covered="0"/><du var="x" def="141" use="141" target="142" covered="0"/><du var="x" def="141" use="142" covered="0"/><du var="x" def="141" use="141" covered="0"/><du var="x" def="141" use="141" target="144" covered="0"/><du var="x" def="141" use="141" target="142" covered="0"/><du var="x" def="141" use="142" covered="0"/><du var="x" def="141" use="141" covered="0"/><counter type="DU" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="estimateBlackPoint" desc="([I)I"><du var="buckets" def="148" use="153" target="154" covered="0"/><du var="buckets" def="148" use="153" target="157" covered="0"/><du var="buckets" def="148" use="157" target="158" covered="0"/><du var="buckets" def="148" use="157" target="152" covered="0"/><du var="buckets" def="148" use="158" covered="0"/><du var="buckets" def="148" use="155" covered="0"/><du var="buckets" def="148" use="168" covered="0"/><du var="buckets" def="148" use="193" covered="0"/><du var="numBuckets" def="148" use="152" target="163" covered="0"/><du var="numBuckets" def="148" use="152" target="153" covered="0"/><du var="numBuckets" def="148" use="165" target="176" covered="0"/><du var="numBuckets" def="148" use="165" target="166" covered="0"/><du var="numBuckets" def="148" use="184" target="185" covered="0"/><du var="numBuckets" def="148" use="184" target="189" covered="0"/><du var="maxBucketCount" def="149" use="157" target="158" covered="0"/><du var="maxBucketCount" def="149" use="157" target="152" covered="0"/><du var="maxBucketCount" def="149" use="193" covered="0"/><du var="firstPeak" def="150" use="166" covered="0"/><du var="firstPeak" def="150" use="176" target="177" covered="0"/><du var="firstPeak" def="150" use="176" target="184" covered="0"/><du var="firstPeak" def="150" use="184" target="185" covered="0"/><du var="firstPeak" def="150" use="184" target="189" covered="0"/><du var="firstPeak" def="150" use="191" target="200" covered="0"/><du var="firstPeak" def="150" use="191" target="192" covered="0"/><du var="firstPeak" def="150" use="192" covered="0"/><du var="firstPeak" def="150" use="177" covered="0"/><du var="firstPeakSize" def="151" use="153" target="154" covered="0"/><du var="firstPeakSize" def="151" use="153" target="157" covered="0"/><du var="x" def="152" use="152" target="163" covered="0"/><du var="x" def="152" use="152" target="153" covered="0"/><du var="x" def="152" use="153" target="154" covered="0"/><du var="x" def="152" use="153" target="157" covered="0"/><du var="x" def="152" use="157" target="158" covered="0"/><du var="x" def="152" use="157" target="152" covered="0"/><du var="x" def="152" use="152" covered="0"/><du var="x" def="152" use="158" covered="0"/><du var="x" def="152" use="154" covered="0"/><du var="x" def="152" use="155" covered="0"/><du var="firstPeak" def="154" use="166" covered="0"/><du var="firstPeak" def="154" use="176" target="177" covered="0"/><du var="firstPeak" def="154" use="176" target="184" covered="0"/><du var="firstPeak" def="154" use="184" target="185" covered="0"/><du var="firstPeak" def="154" use="184" target="189" covered="0"/><du var="firstPeak" def="154" use="191" target="200" covered="0"/><du var="firstPeak" def="154" use="191" target="192" covered="0"/><du var="firstPeak" def="154" use="192" covered="0"/><du var="firstPeak" def="154" use="177" covered="0"/><du var="firstPeakSize" def="155" use="153" target="154" covered="0"/><du var="firstPeakSize" def="155" use="153" target="157" covered="0"/><du var="maxBucketCount" def="158" use="157" target="158" covered="0"/><du var="maxBucketCount" def="158" use="157" target="152" covered="0"/><du var="maxBucketCount" def="158" use="193" covered="0"/><du var="x" def="152" use="152" target="163" covered="0"/><du var="x" def="152" use="152" target="153" covered="0"/><du var="x" def="152" use="153" target="154" covered="0"/><du var="x" def="152" use="153" target="157" covered="0"/><du var="x" def="152" use="157" target="158" covered="0"/><du var="x" def="152" use="157" target="152" covered="0"/><du var="x" def="152" use="152" covered="0"/><du var="x" def="152" use="158" covered="0"/><du var="x" def="152" use="154" covered="0"/><du var="x" def="152" use="155" covered="0"/><du var="secondPeak" def="163" use="176" target="177" covered="0"/><du var="secondPeak" def="163" use="176" target="184" covered="0"/><du var="secondPeak" def="163" use="184" target="185" covered="0"/><du var="secondPeak" def="163" use="184" target="189" covered="0"/><du var="secondPeak" def="163" use="189" covered="0"/><du var="secondPeak" def="163" use="191" covered="0"/><du var="secondPeak" def="163" use="193" covered="0"/><du var="secondPeak" def="163" use="178" covered="0"/><du var="secondPeakScore" def="164" use="169" target="170" covered="0"/><du var="secondPeakScore" def="164" use="169" target="165" covered="0"/><du var="x" def="165" use="165" target="176" covered="0"/><du var="x" def="165" use="165" target="166" covered="0"/><du var="x" def="165" use="166" covered="0"/><du var="x" def="165" use="168" covered="0"/><du var="x" def="165" use="165" covered="0"/><du var="x" def="165" use="170" covered="0"/><du var="score" def="168" use="169" target="170" covered="0"/><du var="score" def="168" use="169" target="165" covered="0"/><du var="score" def="168" use="171" covered="0"/><du var="secondPeak" def="170" use="176" target="177" covered="0"/><du var="secondPeak" def="170" use="176" target="184" covered="0"/><du var="secondPeak" def="170" use="184" target="185" covered="0"/><du var="secondPeak" def="170" use="184" target="189" covered="0"/><du var="secondPeak" def="170" use="189" covered="0"/><du var="secondPeak" def="170" use="191" covered="0"/><du var="secondPeak" def="170" use="193" covered="0"/><du var="secondPeak" def="170" use="178" covered="0"/><du var="secondPeakScore" def="171" use="169" target="170" covered="0"/><du var="secondPeakScore" def="171" use="169" target="165" covered="0"/><du var="x" def="165" use="165" target="176" covered="0"/><du var="x" def="165" use="165" target="166" covered="0"/><du var="x" def="165" use="166" covered="0"/><du var="x" def="165" use="168" covered="0"/><du var="x" def="165" use="165" covered="0"/><du var="x" def="165" use="170" covered="0"/><du var="firstPeak" def="178" use="184" target="185" covered="0"/><du var="firstPeak" def="178" use="184" target="189" covered="0"/><du var="firstPeak" def="178" use="191" target="200" covered="0"/><du var="firstPeak" def="178" use="191" target="192" covered="0"/><du var="firstPeak" def="178" use="192" covered="0"/><du var="secondPeak" def="179" use="184" target="185" covered="0"/><du var="secondPeak" def="179" use="184" target="189" covered="0"/><du var="secondPeak" def="179" use="189" covered="0"/><du var="secondPeak" def="179" use="191" covered="0"/><du var="secondPeak" def="179" use="193" covered="0"/><du var="bestValley" def="189" use="200" covered="0"/><du var="bestValleyScore" def="190" use="194" target="195" covered="0"/><du var="bestValleyScore" def="190" use="194" target="191" covered="0"/><du var="x" def="191" use="191" target="200" covered="0"/><du var="x" def="191" use="191" target="192" covered="0"/><du var="x" def="191" use="192" covered="0"/><du var="x" def="191" use="193" covered="0"/><du var="x" def="191" use="191" covered="0"/><du var="x" def="191" use="195" covered="0"/><du var="score" def="193" use="194" target="195" covered="0"/><du var="score" def="193" use="194" target="191" covered="0"/><du var="score" def="193" use="196" covered="0"/><du var="bestValley" def="195" use="200" covered="0"/><du var="bestValleyScore" def="196" use="194" target="195" covered="0"/><du var="bestValleyScore" def="196" use="194" target="191" covered="0"/><du var="x" def="191" use="191" target="200" covered="0"/><du var="x" def="191" use="191" target="192" covered="0"/><du var="x" def="191" use="192" covered="0"/><du var="x" def="191" use="193" covered="0"/><du var="x" def="191" use="191" covered="0"/><du var="x" def="191" use="195" covered="0"/><counter type="DU" missed="128" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="292" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/common/BitSource"><method name="readBits" desc="(I)I"><du var="this" def="63" use="63" target="64" covered="0"/><du var="this" def="63" use="63" target="67" covered="0"/><du var="this" def="63" use="70" target="71" covered="0"/><du var="this" def="63" use="70" target="85" covered="0"/><du var="this" def="63" use="87" covered="0"/><du var="this" def="63" use="88" covered="0"/><du var="this" def="63" use="96" covered="0"/><du var="this" def="63" use="97" covered="0"/><du var="this" def="63" use="71" covered="0"/><du var="this" def="63" use="75" covered="0"/><du var="this" def="63" use="77" covered="0"/><du var="this" def="63" use="78" target="79" covered="0"/><du var="this" def="63" use="78" target="85" covered="0"/><du var="this" def="63" use="79" covered="0"/><du var="this" def="63" use="80" covered="0"/><du var="numBits" def="63" use="63" target="63" covered="0"/><du var="numBits" def="63" use="63" target="64" covered="0"/><du var="numBits" def="63" use="64" covered="0"/><du var="numBits" def="63" use="63" target="63" covered="0"/><du var="numBits" def="63" use="63" target="64" covered="0"/><du var="numBits" def="63" use="63" target="64" covered="0"/><du var="numBits" def="63" use="63" target="67" covered="0"/><du var="numBits" def="63" use="85" target="86" covered="0"/><du var="numBits" def="63" use="85" target="101" covered="0"/><du var="numBits" def="63" use="86" target="93" covered="0"/><du var="numBits" def="63" use="86" target="87" covered="0"/><du var="numBits" def="63" use="89" covered="0"/><du var="numBits" def="63" use="93" target="94" covered="0"/><du var="numBits" def="63" use="93" target="101" covered="0"/><du var="numBits" def="63" use="94" covered="0"/><du var="numBits" def="63" use="96" covered="0"/><du var="numBits" def="63" use="97" covered="0"/><du var="numBits" def="63" use="72" target="72" covered="0"/><du var="numBits" def="63" use="72" target="72" covered="0"/><du var="numBits" def="63" use="72" covered="0"/><du var="numBits" def="63" use="76" covered="0"/><du var="this.bitOffset" def="63" use="70" target="71" covered="0"/><du var="this.bitOffset" def="63" use="70" target="85" covered="0"/><du var="this.bitOffset" def="63" use="97" covered="0"/><du var="this.bitOffset" def="63" use="71" covered="0"/><du var="this.bitOffset" def="63" use="77" covered="0"/><du var="this.bytes" def="63" use="87" covered="0"/><du var="this.bytes" def="63" use="96" covered="0"/><du var="this.bytes" def="63" use="75" covered="0"/><du var="this.byteOffset" def="63" use="87" covered="0"/><du var="this.byteOffset" def="63" use="88" covered="0"/><du var="this.byteOffset" def="63" use="96" covered="0"/><du var="this.byteOffset" def="63" use="75" covered="0"/><du var="this.byteOffset" def="63" use="80" covered="0"/><du var="result" def="67" use="101" covered="0"/><du var="result" def="67" use="87" covered="0"/><du var="result" def="67" use="96" covered="0"/><du var="bitsLeft" def="71" use="72" target="72" covered="0"/><du var="bitsLeft" def="71" use="72" target="72" covered="0"/><du var="bitsLeft" def="71" use="72" covered="0"/><du var="bitsLeft" def="71" use="73" covered="0"/><du var="result" def="75" use="101" covered="0"/><du var="result" def="75" use="87" covered="0"/><du var="result" def="75" use="96" covered="0"/><du var="numBits" def="76" use="85" target="86" covered="0"/><du var="numBits" def="76" use="85" target="101" covered="0"/><du var="numBits" def="76" use="86" target="93" covered="0"/><du var="numBits" def="76" use="86" target="87" covered="0"/><du var="numBits" def="76" use="89" covered="0"/><du var="numBits" def="76" use="93" target="94" covered="0"/><du var="numBits" def="76" use="93" target="101" covered="0"/><du var="numBits" def="76" use="94" covered="0"/><du var="numBits" def="76" use="96" covered="0"/><du var="numBits" def="76" use="97" covered="0"/><du var="this.bitOffset" def="77" use="78" target="79" covered="0"/><du var="this.bitOffset" def="77" use="78" target="85" covered="0"/><du var="this.bitOffset" def="77" use="97" covered="0"/><du var="this.bitOffset" def="79" use="97" covered="0"/><du var="this.byteOffset" def="80" use="87" covered="0"/><du var="this.byteOffset" def="80" use="88" covered="0"/><du var="this.byteOffset" def="80" use="96" covered="0"/><du var="result" def="87" use="87" covered="0"/><du var="result" def="87" use="101" covered="0"/><du var="result" def="87" use="96" covered="0"/><du var="this.byteOffset" def="88" use="87" covered="0"/><du var="this.byteOffset" def="88" use="88" covered="0"/><du var="this.byteOffset" def="88" use="96" covered="0"/><du var="numBits" def="89" use="86" target="93" covered="0"/><du var="numBits" def="89" use="86" target="87" covered="0"/><du var="numBits" def="89" use="89" covered="0"/><du var="numBits" def="89" use="93" target="94" covered="0"/><du var="numBits" def="89" use="93" target="101" covered="0"/><du var="numBits" def="89" use="94" covered="0"/><du var="numBits" def="89" use="96" covered="0"/><du var="numBits" def="89" use="97" covered="0"/><du var="result" def="96" use="101" covered="0"/><counter type="DU" missed="91" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="91" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/common/GridSampler"><method name="checkAndNudgePoints" desc="(Lcom/google/zxing/common/BitMatrix;[F)V"><du var="points" def="121" use="125" target="125" covered="1"/><du var="points" def="121" use="125" target="148" covered="0"/><du var="points" def="121" use="149" covered="1"/><du var="points" def="121" use="150" covered="1"/><du var="points" def="121" use="151" covered="1"/><du var="points" def="121" use="167" covered="0"/><du var="points" def="121" use="164" covered="0"/><du var="points" def="121" use="160" covered="0"/><du var="points" def="121" use="157" covered="0"/><du var="points" def="121" use="126" covered="1"/><du var="points" def="121" use="127" covered="1"/><du var="points" def="121" use="143" covered="0"/><du var="points" def="121" use="140" covered="0"/><du var="points" def="121" use="136" covered="0"/><du var="points" def="121" use="133" covered="0"/><du var="width" def="121" use="152" target="152" covered="1"/><du var="width" def="121" use="152" target="153" covered="0"/><du var="width" def="121" use="159" target="160" covered="0"/><du var="width" def="121" use="159" target="163" covered="1"/><du var="width" def="121" use="160" covered="0"/><du var="width" def="121" use="128" target="128" covered="1"/><du var="width" def="121" use="128" target="129" covered="0"/><du var="width" def="121" use="135" target="136" covered="0"/><du var="width" def="121" use="135" target="139" covered="1"/><du var="width" def="121" use="136" covered="0"/><du var="height" def="122" use="152" target="153" covered="0"/><du var="height" def="122" use="152" target="155" covered="1"/><du var="height" def="122" use="166" target="167" covered="0"/><du var="height" def="122" use="166" target="149" covered="1"/><du var="height" def="122" use="167" covered="0"/><du var="height" def="122" use="128" target="129" covered="0"/><du var="height" def="122" use="128" target="131" covered="1"/><du var="height" def="122" use="142" target="143" covered="0"/><du var="height" def="122" use="142" target="125" covered="1"/><du var="height" def="122" use="143" covered="0"/><du var="nudged" def="124" use="125" target="148" covered="0"/><du var="nudged" def="124" use="125" target="126" covered="1"/><du var="offset" def="125" use="125" target="125" covered="1"/><du var="offset" def="125" use="125" target="148" covered="0"/><du var="offset" def="125" use="126" covered="1"/><du var="offset" def="125" use="127" covered="1"/><du var="offset" def="125" use="125" covered="1"/><du var="offset" def="125" use="143" covered="0"/><du var="offset" def="125" use="140" covered="0"/><du var="offset" def="125" use="136" covered="0"/><du var="offset" def="125" use="133" covered="0"/><du var="x" def="126" use="128" target="128" covered="1"/><du var="x" def="126" use="128" target="129" covered="0"/><du var="x" def="126" use="128" target="128" covered="1"/><du var="x" def="126" use="128" target="129" covered="0"/><du var="x" def="126" use="132" target="133" covered="0"/><du var="x" def="126" use="132" target="135" covered="1"/><du var="x" def="126" use="135" target="136" covered="0"/><du var="x" def="126" use="135" target="139" covered="1"/><du var="y" def="127" use="128" target="128" covered="1"/><du var="y" def="127" use="128" target="129" covered="0"/><du var="y" def="127" use="128" target="129" covered="0"/><du var="y" def="127" use="128" target="131" covered="1"/><du var="y" def="127" use="139" target="140" covered="0"/><du var="y" def="127" use="139" target="142" covered="1"/><du var="y" def="127" use="142" target="143" covered="0"/><du var="y" def="127" use="142" target="125" covered="1"/><du var="nudged" def="131" use="125" target="148" covered="1"/><du var="nudged" def="131" use="125" target="126" covered="0"/><du var="nudged" def="134" use="125" target="148" covered="0"/><du var="nudged" def="134" use="125" target="126" covered="0"/><du var="nudged" def="137" use="125" target="148" covered="0"/><du var="nudged" def="137" use="125" target="126" covered="0"/><du var="nudged" def="141" use="125" target="148" covered="0"/><du var="nudged" def="141" use="125" target="126" covered="0"/><du var="nudged" def="144" use="125" target="148" covered="0"/><du var="nudged" def="144" use="125" target="126" covered="0"/><du var="offset" def="125" use="125" target="125" covered="1"/><du var="offset" def="125" use="125" target="148" covered="0"/><du var="offset" def="125" use="126" covered="0"/><du var="offset" def="125" use="127" covered="0"/><du var="offset" def="125" use="125" covered="0"/><du var="offset" def="125" use="143" covered="0"/><du var="offset" def="125" use="140" covered="0"/><du var="offset" def="125" use="136" covered="0"/><du var="offset" def="125" use="133" covered="0"/><du var="nudged" def="148" use="149" target="171" covered="0"/><du var="nudged" def="148" use="149" target="150" covered="1"/><du var="offset" def="149" use="149" target="149" covered="1"/><du var="offset" def="149" use="149" target="171" covered="0"/><du var="offset" def="149" use="150" covered="1"/><du var="offset" def="149" use="151" covered="1"/><du var="offset" def="149" use="149" covered="1"/><du var="offset" def="149" use="167" covered="0"/><du var="offset" def="149" use="164" covered="0"/><du var="offset" def="149" use="160" covered="0"/><du var="offset" def="149" use="157" covered="0"/><du var="x" def="150" use="152" target="152" covered="1"/><du var="x" def="150" use="152" target="153" covered="0"/><du var="x" def="150" use="152" target="152" covered="1"/><du var="x" def="150" use="152" target="153" covered="0"/><du var="x" def="150" use="156" target="157" covered="0"/><du var="x" def="150" use="156" target="159" covered="1"/><du var="x" def="150" use="159" target="160" covered="0"/><du var="x" def="150" use="159" target="163" covered="1"/><du var="y" def="151" use="152" target="152" covered="1"/><du var="y" def="151" use="152" target="153" covered="0"/><du var="y" def="151" use="152" target="153" covered="0"/><du var="y" def="151" use="152" target="155" covered="1"/><du var="y" def="151" use="163" target="164" covered="0"/><du var="y" def="151" use="163" target="166" covered="1"/><du var="y" def="151" use="166" target="167" covered="0"/><du var="y" def="151" use="166" target="149" covered="1"/><du var="nudged" def="155" use="149" target="171" covered="1"/><du var="nudged" def="155" use="149" target="150" covered="0"/><du var="nudged" def="158" use="149" target="171" covered="0"/><du var="nudged" def="158" use="149" target="150" covered="0"/><du var="nudged" def="161" use="149" target="171" covered="0"/><du var="nudged" def="161" use="149" target="150" covered="0"/><du var="nudged" def="165" use="149" target="171" covered="0"/><du var="nudged" def="165" use="149" target="150" covered="0"/><du var="nudged" def="168" use="149" target="171" covered="0"/><du var="nudged" def="168" use="149" target="150" covered="0"/><du var="offset" def="149" use="149" target="149" covered="1"/><du var="offset" def="149" use="149" target="171" covered="0"/><du var="offset" def="149" use="150" covered="0"/><du var="offset" def="149" use="151" covered="0"/><du var="offset" def="149" use="149" covered="0"/><du var="offset" def="149" use="167" covered="0"/><du var="offset" def="149" use="164" covered="0"/><du var="offset" def="149" use="160" covered="0"/><du var="offset" def="149" use="157" covered="0"/><counter type="DU" missed="83" covered="44"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="83" covered="44"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/common/DecoderResult"><method name="&lt;init&gt;" desc="([BLjava/lang/String;Ljava/util/List;Ljava/lang/String;II)V"><du var="this" def="48" use="55" covered="1"/><du var="this" def="48" use="56" covered="1"/><du var="this" def="48" use="57" covered="1"/><du var="this" def="48" use="58" covered="1"/><du var="this" def="48" use="59" covered="1"/><du var="this" def="48" use="60" covered="1"/><du var="rawBytes" def="48" use="55" target="55" covered="0"/><du var="rawBytes" def="48" use="55" target="55" covered="1"/><du var="rawBytes" def="48" use="55" covered="1"/><du var="text" def="48" use="56" covered="1"/><du var="byteSegments" def="48" use="57" covered="1"/><du var="ecLevel" def="48" use="58" covered="1"/><du var="saSequence" def="48" use="60" covered="1"/><du var="saParity" def="48" use="59" covered="1"/><counter type="DU" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasStructuredAppend" desc="()Z"><du var="this" def="141" use="141" target="141" covered="0"/><du var="this" def="141" use="141" target="141" covered="0"/><du var="this" def="141" use="141" target="141" covered="0"/><du var="this" def="141" use="141" target="141" covered="0"/><du var="this.structuredAppendParity" def="141" use="141" target="141" covered="0"/><du var="this.structuredAppendParity" def="141" use="141" target="141" covered="0"/><du var="this.structuredAppendSequenceNumber" def="141" use="141" target="141" covered="0"/><du var="this.structuredAppendSequenceNumber" def="141" use="141" target="141" covered="0"/><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="9" covered="13"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/common/StringUtils"><method name="guessEncoding" desc="([BLjava/util/Map;)Ljava/lang/String;"><du var="bytes" def="52" use="57" covered="0"/><du var="bytes" def="52" use="78" target="79" covered="0"/><du var="bytes" def="52" use="78" target="78" covered="0"/><du var="bytes" def="52" use="87" covered="0"/><du var="bytes" def="52" use="79" target="80" covered="0"/><du var="bytes" def="52" use="79" target="78" covered="0"/><du var="bytes" def="52" use="80" target="81" covered="0"/><du var="bytes" def="52" use="80" target="78" covered="0"/><du var="bytes" def="52" use="81" target="78" covered="0"/><du var="bytes" def="52" use="81" target="78" covered="0"/><du var="hints" def="52" use="52" target="52" covered="0"/><du var="hints" def="52" use="52" target="57" covered="0"/><du var="hints" def="52" use="52" target="53" covered="0"/><du var="hints" def="52" use="52" target="57" covered="0"/><du var="hints" def="52" use="53" covered="0"/><du var="CHARACTER_SET" def="52" use="52" target="53" covered="0"/><du var="CHARACTER_SET" def="52" use="52" target="57" covered="0"/><du var="CHARACTER_SET" def="52" use="53" covered="0"/><du var="ASSUME_SHIFT_JIS" def="52" use="183" target="183" covered="0"/><du var="ASSUME_SHIFT_JIS" def="52" use="183" target="184" covered="0"/><du var="PLATFORM_DEFAULT_ENCODING" def="52" use="207" covered="0"/><du var="length" def="57" use="84" target="84" covered="0"/><du var="length" def="57" use="84" target="171" covered="0"/><du var="length" def="57" use="192" target="193" covered="0"/><du var="length" def="57" use="192" target="193" covered="0"/><du var="canBeISO88591" def="58" use="191" target="191" covered="0"/><du var="canBeISO88591" def="58" use="191" target="197" covered="0"/><du var="canBeISO88591" def="58" use="197" target="198" covered="0"/><du var="canBeISO88591" def="58" use="197" target="200" covered="0"/><du var="canBeISO88591" def="58" use="84" target="84" covered="0"/><du var="canBeISO88591" def="58" use="84" target="87" covered="0"/><du var="canBeISO88591" def="58" use="124" target="125" covered="0"/><du var="canBeISO88591" def="58" use="124" target="139" covered="0"/><du var="canBeShiftJIS" def="59" use="174" target="174" covered="0"/><du var="canBeShiftJIS" def="59" use="174" target="179" covered="0"/><du var="canBeShiftJIS" def="59" use="183" target="183" covered="0"/><du var="canBeShiftJIS" def="59" use="183" target="191" covered="0"/><du var="canBeShiftJIS" def="59" use="200" target="201" covered="0"/><du var="canBeShiftJIS" def="59" use="200" target="203" covered="0"/><du var="canBeShiftJIS" def="59" use="191" target="192" covered="0"/><du var="canBeShiftJIS" def="59" use="191" target="197" covered="0"/><du var="canBeShiftJIS" def="59" use="139" target="140" covered="0"/><du var="canBeShiftJIS" def="59" use="139" target="85" covered="0"/><du var="canBeShiftJIS" def="59" use="84" target="84" covered="0"/><du var="canBeShiftJIS" def="59" use="84" target="87" covered="0"/><du var="canBeUTF8" def="60" use="171" target="171" covered="0"/><du var="canBeUTF8" def="60" use="171" target="174" covered="0"/><du var="canBeUTF8" def="60" use="179" target="179" covered="0"/><du var="canBeUTF8" def="60" use="179" target="183" covered="0"/><du var="canBeUTF8" def="60" use="203" target="204" covered="0"/><du var="canBeUTF8" def="60" use="203" target="207" covered="0"/><du var="canBeUTF8" def="60" use="90" target="91" covered="0"/><du var="canBeUTF8" def="60" use="90" target="124" covered="0"/><du var="canBeUTF8" def="60" use="84" target="171" covered="0"/><du var="canBeUTF8" def="60" use="84" target="87" covered="0"/><du var="utf8BytesLeft" def="61" use="171" target="172" covered="0"/><du var="utf8BytesLeft" def="61" use="171" target="174" covered="0"/><du var="utf8BytesLeft" def="61" use="91" target="92" covered="0"/><du var="utf8BytesLeft" def="61" use="91" target="97" covered="0"/><du var="utf8BytesLeft" def="61" use="101" covered="0"/><du var="utf8BytesLeft" def="61" use="95" covered="0"/><du var="utf2BytesChars" def="63" use="179" target="180" covered="0"/><du var="utf2BytesChars" def="63" use="179" target="183" covered="0"/><du var="utf2BytesChars" def="63" use="103" covered="0"/><du var="utf3BytesChars" def="64" use="179" target="180" covered="0"/><du var="utf3BytesChars" def="64" use="179" target="183" covered="0"/><du var="utf3BytesChars" def="64" use="107" covered="0"/><du var="utf4BytesChars" def="65" use="179" target="180" covered="0"/><du var="utf4BytesChars" def="65" use="179" target="183" covered="0"/><du var="utf4BytesChars" def="65" use="111" covered="0"/><du var="sjisBytesLeft" def="66" use="174" target="175" covered="0"/><du var="sjisBytesLeft" def="66" use="174" target="179" covered="0"/><du var="sjisBytesLeft" def="66" use="140" target="141" covered="0"/><du var="sjisBytesLeft" def="66" use="140" target="146" covered="0"/><du var="sjisBytesLeft" def="66" use="156" covered="0"/><du var="sjisBytesLeft" def="66" use="144" covered="0"/><du var="sjisKatakanaChars" def="68" use="192" target="192" covered="0"/><du var="sjisKatakanaChars" def="68" use="192" target="193" covered="0"/><du var="sjisKatakanaChars" def="68" use="149" covered="0"/><du var="sjisCurKatakanaWordLength" def="70" use="151" covered="0"/><du var="sjisCurDoubleBytesWordLength" def="71" use="159" covered="0"/><du var="sjisMaxKatakanaWordLength" def="72" use="192" target="192" covered="0"/><du var="sjisMaxKatakanaWordLength" def="72" use="192" target="192" covered="0"/><du var="sjisMaxKatakanaWordLength" def="72" use="183" target="183" covered="0"/><du var="sjisMaxKatakanaWordLength" def="72" use="183" target="184" covered="0"/><du var="sjisMaxKatakanaWordLength" def="72" use="152" target="153" covered="0"/><du var="sjisMaxKatakanaWordLength" def="72" use="152" target="85" covered="0"/><du var="sjisMaxDoubleBytesWordLength" def="73" use="183" target="184" covered="0"/><du var="sjisMaxDoubleBytesWordLength" def="73" use="183" target="191" covered="0"/><du var="sjisMaxDoubleBytesWordLength" def="73" use="160" target="161" covered="0"/><du var="sjisMaxDoubleBytesWordLength" def="73" use="160" target="85" covered="0"/><du var="isoHighOther" def="76" use="192" target="193" covered="0"/><du var="isoHighOther" def="76" use="192" target="193" covered="0"/><du var="isoHighOther" def="76" use="129" covered="0"/><du var="utf8bom" def="78" use="179" target="179" covered="0"/><du var="utf8bom" def="78" use="179" target="180" covered="0"/><du var="i" def="83" use="84" target="84" covered="0"/><du var="i" def="83" use="84" target="171" covered="0"/><du var="i" def="83" use="87" covered="0"/><du var="i" def="83" use="85" covered="0"/><du var="value" def="87" use="146" target="146" covered="0"/><du var="value" def="87" use="146" target="147" covered="0"/><du var="value" def="87" use="146" target="146" covered="0"/><du var="value" def="87" use="146" target="147" covered="0"/><du var="value" def="87" use="146" target="147" covered="0"/><du var="value" def="87" use="146" target="148" covered="0"/><du var="value" def="87" use="148" target="148" covered="0"/><du var="value" def="87" use="148" target="155" covered="0"/><du var="value" def="87" use="155" target="156" covered="0"/><du var="value" def="87" use="155" target="165" covered="0"/><du var="value" def="87" use="148" target="149" covered="0"/><du var="value" def="87" use="148" target="155" covered="0"/><du var="value" def="87" use="141" target="141" covered="0"/><du var="value" def="87" use="141" target="142" covered="0"/><du var="value" def="87" use="141" target="141" covered="0"/><du var="value" def="87" use="141" target="142" covered="0"/><du var="value" def="87" use="141" target="142" covered="0"/><du var="value" def="87" use="141" target="144" covered="0"/><du var="value" def="87" use="125" target="125" covered="0"/><du var="value" def="87" use="125" target="127" covered="0"/><du var="value" def="87" use="127" target="128" covered="0"/><du var="value" def="87" use="127" target="139" covered="0"/><du var="value" def="87" use="128" target="128" covered="0"/><du var="value" def="87" use="128" target="129" covered="0"/><du var="value" def="87" use="128" target="128" covered="0"/><du var="value" def="87" use="128" target="129" covered="0"/><du var="value" def="87" use="128" target="129" covered="0"/><du var="value" def="87" use="128" target="139" covered="0"/><du var="value" def="87" use="125" target="126" covered="0"/><du var="value" def="87" use="125" target="127" covered="0"/><du var="value" def="87" use="97" target="98" covered="0"/><du var="value" def="87" use="97" target="124" covered="0"/><du var="value" def="87" use="98" target="99" covered="0"/><du var="value" def="87" use="98" target="101" covered="0"/><du var="value" def="87" use="102" target="103" covered="0"/><du var="value" def="87" use="102" target="105" covered="0"/><du var="value" def="87" use="106" target="107" covered="0"/><du var="value" def="87" use="106" target="109" covered="0"/><du var="value" def="87" use="110" target="111" covered="0"/><du var="value" def="87" use="110" target="113" covered="0"/><du var="value" def="87" use="92" target="93" covered="0"/><du var="value" def="87" use="92" target="95" covered="0"/><du var="canBeUTF8" def="93" use="171" target="171" covered="0"/><du var="canBeUTF8" def="93" use="171" target="174" covered="0"/><du var="canBeUTF8" def="93" use="179" target="179" covered="0"/><du var="canBeUTF8" def="93" use="179" target="183" covered="0"/><du var="canBeUTF8" def="93" use="203" target="204" covered="0"/><du var="canBeUTF8" def="93" use="203" target="207" covered="0"/><du var="canBeUTF8" def="93" use="90" target="91" covered="0"/><du var="canBeUTF8" def="93" use="90" target="124" covered="0"/><du var="canBeUTF8" def="93" use="84" target="171" covered="0"/><du var="canBeUTF8" def="93" use="84" target="87" covered="0"/><du var="utf8BytesLeft" def="95" use="171" target="172" covered="0"/><du var="utf8BytesLeft" def="95" use="171" target="174" covered="0"/><du var="utf8BytesLeft" def="95" use="91" target="92" covered="0"/><du var="utf8BytesLeft" def="95" use="91" target="97" covered="0"/><du var="utf8BytesLeft" def="95" use="101" covered="0"/><du var="utf8BytesLeft" def="95" use="95" covered="0"/><du var="canBeUTF8" def="99" use="171" target="171" covered="0"/><du var="canBeUTF8" def="99" use="171" target="174" covered="0"/><du var="canBeUTF8" def="99" use="179" target="179" covered="0"/><du var="canBeUTF8" def="99" use="179" target="183" covered="0"/><du var="canBeUTF8" def="99" use="203" target="204" covered="0"/><du var="canBeUTF8" def="99" use="203" target="207" covered="0"/><du var="canBeUTF8" def="99" use="90" target="91" covered="0"/><du var="canBeUTF8" def="99" use="90" target="124" covered="0"/><du var="canBeUTF8" def="99" use="84" target="171" covered="0"/><du var="canBeUTF8" def="99" use="84" target="87" covered="0"/><du var="utf8BytesLeft" def="101" use="105" covered="0"/><du var="utf8BytesLeft" def="101" use="171" target="172" covered="0"/><du var="utf8BytesLeft" def="101" use="171" target="174" covered="0"/><du var="utf8BytesLeft" def="101" use="91" target="92" covered="0"/><du var="utf8BytesLeft" def="101" use="91" target="97" covered="0"/><du var="utf8BytesLeft" def="101" use="101" covered="0"/><du var="utf8BytesLeft" def="101" use="95" covered="0"/><du var="utf2BytesChars" def="103" use="179" target="180" covered="0"/><du var="utf2BytesChars" def="103" use="179" target="183" covered="0"/><du var="utf2BytesChars" def="103" use="103" covered="0"/><du var="utf8BytesLeft" def="105" use="109" covered="0"/><du var="utf8BytesLeft" def="105" use="171" target="172" covered="0"/><du var="utf8BytesLeft" def="105" use="171" target="174" covered="0"/><du var="utf8BytesLeft" def="105" use="91" target="92" covered="0"/><du var="utf8BytesLeft" def="105" use="91" target="97" covered="0"/><du var="utf8BytesLeft" def="105" use="101" covered="0"/><du var="utf8BytesLeft" def="105" use="95" covered="0"/><du var="utf3BytesChars" def="107" use="179" target="180" covered="0"/><du var="utf3BytesChars" def="107" use="179" target="183" covered="0"/><du var="utf3BytesChars" def="107" use="107" covered="0"/><du var="utf8BytesLeft" def="109" use="171" target="172" covered="0"/><du var="utf8BytesLeft" def="109" use="171" target="174" covered="0"/><du var="utf8BytesLeft" def="109" use="91" target="92" covered="0"/><du var="utf8BytesLeft" def="109" use="91" target="97" covered="0"/><du var="utf8BytesLeft" def="109" use="101" covered="0"/><du var="utf8BytesLeft" def="109" use="95" covered="0"/><du var="utf4BytesChars" def="111" use="179" target="180" covered="0"/><du var="utf4BytesChars" def="111" use="179" target="183" covered="0"/><du var="utf4BytesChars" def="111" use="111" covered="0"/><du var="canBeUTF8" def="113" use="171" target="171" covered="0"/><du var="canBeUTF8" def="113" use="171" target="174" covered="0"/><du var="canBeUTF8" def="113" use="179" target="179" covered="0"/><du var="canBeUTF8" def="113" use="179" target="183" covered="0"/><du var="canBeUTF8" def="113" use="203" target="204" covered="0"/><du var="canBeUTF8" def="113" use="203" target="207" covered="0"/><du var="canBeUTF8" def="113" use="90" target="91" covered="0"/><du var="canBeUTF8" def="113" use="90" target="124" covered="0"/><du var="canBeUTF8" def="113" use="84" target="171" covered="0"/><du var="canBeUTF8" def="113" use="84" target="87" covered="0"/><du var="canBeISO88591" def="126" use="191" target="191" covered="0"/><du var="canBeISO88591" def="126" use="191" target="197" covered="0"/><du var="canBeISO88591" def="126" use="197" target="198" covered="0"/><du var="canBeISO88591" def="126" use="197" target="200" covered="0"/><du var="canBeISO88591" def="126" use="84" target="84" covered="0"/><du var="canBeISO88591" def="126" use="84" target="87" covered="0"/><du var="canBeISO88591" def="126" use="124" target="125" covered="0"/><du var="canBeISO88591" def="126" use="124" target="139" covered="0"/><du var="isoHighOther" def="129" use="192" target="193" covered="0"/><du var="isoHighOther" def="129" use="192" target="193" covered="0"/><du var="isoHighOther" def="129" use="129" covered="0"/><du var="canBeShiftJIS" def="142" use="174" target="174" covered="0"/><du var="canBeShiftJIS" def="142" use="174" target="179" covered="0"/><du var="canBeShiftJIS" def="142" use="183" target="183" covered="0"/><du var="canBeShiftJIS" def="142" use="183" target="191" covered="0"/><du var="canBeShiftJIS" def="142" use="200" target="201" covered="0"/><du var="canBeShiftJIS" def="142" use="200" target="203" covered="0"/><du var="canBeShiftJIS" def="142" use="191" target="192" covered="0"/><du var="canBeShiftJIS" def="142" use="191" target="197" covered="0"/><du var="canBeShiftJIS" def="142" use="139" target="140" covered="0"/><du var="canBeShiftJIS" def="142" use="139" target="85" covered="0"/><du var="canBeShiftJIS" def="142" use="84" target="84" covered="0"/><du var="canBeShiftJIS" def="142" use="84" target="87" covered="0"/><du var="sjisBytesLeft" def="144" use="174" target="175" covered="0"/><du var="sjisBytesLeft" def="144" use="174" target="179" covered="0"/><du var="sjisBytesLeft" def="144" use="140" target="141" covered="0"/><du var="sjisBytesLeft" def="144" use="140" target="146" covered="0"/><du var="sjisBytesLeft" def="144" use="156" covered="0"/><du var="sjisBytesLeft" def="144" use="144" covered="0"/><du var="canBeShiftJIS" def="147" use="174" target="174" covered="0"/><du var="canBeShiftJIS" def="147" use="174" target="179" covered="0"/><du var="canBeShiftJIS" def="147" use="183" target="183" covered="0"/><du var="canBeShiftJIS" def="147" use="183" target="191" covered="0"/><du var="canBeShiftJIS" def="147" use="200" target="201" covered="0"/><du var="canBeShiftJIS" def="147" use="200" target="203" covered="0"/><du var="canBeShiftJIS" def="147" use="191" target="192" covered="0"/><du var="canBeShiftJIS" def="147" use="191" target="197" covered="0"/><du var="canBeShiftJIS" def="147" use="139" target="140" covered="0"/><du var="canBeShiftJIS" def="147" use="139" target="85" covered="0"/><du var="canBeShiftJIS" def="147" use="84" target="84" covered="0"/><du var="canBeShiftJIS" def="147" use="84" target="87" covered="0"/><du var="sjisKatakanaChars" def="149" use="192" target="192" covered="0"/><du var="sjisKatakanaChars" def="149" use="192" target="193" covered="0"/><du var="sjisKatakanaChars" def="149" use="149" covered="0"/><du var="sjisCurDoubleBytesWordLength" def="150" use="159" covered="0"/><du var="sjisCurKatakanaWordLength" def="151" use="152" target="153" covered="0"/><du var="sjisCurKatakanaWordLength" def="151" use="152" target="85" covered="0"/><du var="sjisCurKatakanaWordLength" def="151" use="151" covered="0"/><du var="sjisCurKatakanaWordLength" def="151" use="153" covered="0"/><du var="sjisMaxKatakanaWordLength" def="153" use="192" target="192" covered="0"/><du var="sjisMaxKatakanaWordLength" def="153" use="192" target="192" covered="0"/><du var="sjisMaxKatakanaWordLength" def="153" use="183" target="183" covered="0"/><du var="sjisMaxKatakanaWordLength" def="153" use="183" target="184" covered="0"/><du var="sjisMaxKatakanaWordLength" def="153" use="152" target="153" covered="0"/><du var="sjisMaxKatakanaWordLength" def="153" use="152" target="85" covered="0"/><du var="sjisBytesLeft" def="156" use="174" target="175" covered="0"/><du var="sjisBytesLeft" def="156" use="174" target="179" covered="0"/><du var="sjisBytesLeft" def="156" use="140" target="141" covered="0"/><du var="sjisBytesLeft" def="156" use="140" target="146" covered="0"/><du var="sjisBytesLeft" def="156" use="156" covered="0"/><du var="sjisBytesLeft" def="156" use="144" covered="0"/><du var="sjisCurKatakanaWordLength" def="158" use="151" covered="0"/><du var="sjisCurDoubleBytesWordLength" def="159" use="160" target="161" covered="0"/><du var="sjisCurDoubleBytesWordLength" def="159" use="160" target="85" covered="0"/><du var="sjisCurDoubleBytesWordLength" def="159" use="159" covered="0"/><du var="sjisCurDoubleBytesWordLength" def="159" use="161" covered="0"/><du var="sjisMaxDoubleBytesWordLength" def="161" use="183" target="184" covered="0"/><du var="sjisMaxDoubleBytesWordLength" def="161" use="183" target="191" covered="0"/><du var="sjisMaxDoubleBytesWordLength" def="161" use="160" target="161" covered="0"/><du var="sjisMaxDoubleBytesWordLength" def="161" use="160" target="85" covered="0"/><du var="sjisCurKatakanaWordLength" def="165" use="151" covered="0"/><du var="sjisCurDoubleBytesWordLength" def="166" use="159" covered="0"/><du var="i" def="85" use="84" target="84" covered="0"/><du var="i" def="85" use="84" target="171" covered="0"/><du var="i" def="85" use="87" covered="0"/><du var="i" def="85" use="85" covered="0"/><du var="canBeUTF8" def="172" use="179" target="179" covered="0"/><du var="canBeUTF8" def="172" use="179" target="183" covered="0"/><du var="canBeUTF8" def="172" use="203" target="204" covered="0"/><du var="canBeUTF8" def="172" use="203" target="207" covered="0"/><du var="canBeShiftJIS" def="175" use="183" target="183" covered="0"/><du var="canBeShiftJIS" def="175" use="183" target="191" covered="0"/><du var="canBeShiftJIS" def="175" use="200" target="201" covered="0"/><du var="canBeShiftJIS" def="175" use="200" target="203" covered="0"/><du var="canBeShiftJIS" def="175" use="191" target="192" covered="0"/><du var="canBeShiftJIS" def="175" use="191" target="197" covered="0"/><counter type="DU" missed="293" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="293" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/common/BitMatrix"><method name="&lt;init&gt;" desc="(II)V"><du var="this" def="58" use="62" covered="1"/><du var="this" def="58" use="63" covered="1"/><du var="this" def="58" use="64" covered="1"/><du var="this" def="58" use="65" covered="1"/><du var="width" def="58" use="59" target="59" covered="1"/><du var="width" def="58" use="59" target="60" covered="0"/><du var="width" def="58" use="62" covered="1"/><du var="width" def="58" use="64" covered="1"/><du var="height" def="58" use="59" target="60" covered="0"/><du var="height" def="58" use="59" target="62" covered="1"/><du var="height" def="58" use="63" covered="1"/><du var="height" def="58" use="65" covered="1"/><counter type="DU" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="([[Z)Lcom/google/zxing/common/BitMatrix;"><du var="image" def="82" use="86" covered="0"/><du var="height" def="82" use="85" target="93" covered="0"/><du var="height" def="82" use="85" target="86" covered="0"/><du var="width" def="83" use="87" target="85" covered="0"/><du var="width" def="83" use="87" target="88" covered="0"/><du var="bits" def="84" use="89" covered="0"/><du var="bits" def="84" use="93" covered="0"/><du var="i" def="85" use="85" target="93" covered="0"/><du var="i" def="85" use="85" target="86" covered="0"/><du var="i" def="85" use="86" covered="0"/><du var="i" def="85" use="89" covered="0"/><du var="i" def="85" use="85" covered="0"/><du var="imageI" def="86" use="88" target="89" covered="0"/><du var="imageI" def="86" use="88" target="87" covered="0"/><du var="j" def="87" use="87" target="85" covered="0"/><du var="j" def="87" use="87" target="88" covered="0"/><du var="j" def="87" use="88" target="89" covered="0"/><du var="j" def="87" use="88" target="87" covered="0"/><du var="j" def="87" use="87" covered="0"/><du var="j" def="87" use="89" covered="0"/><du var="j" def="87" use="87" target="85" covered="0"/><du var="j" def="87" use="87" target="88" covered="0"/><du var="j" def="87" use="88" target="89" covered="0"/><du var="j" def="87" use="88" target="87" covered="0"/><du var="j" def="87" use="87" covered="0"/><du var="j" def="87" use="89" covered="0"/><du var="i" def="85" use="85" target="93" covered="0"/><du var="i" def="85" use="85" target="86" covered="0"/><du var="i" def="85" use="86" covered="0"/><du var="i" def="85" use="89" covered="0"/><du var="i" def="85" use="85" covered="0"/><counter type="DU" missed="31" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/google/zxing/common/BitMatrix;"><du var="stringRepresentation" def="97" use="97" target="98" covered="0"/><du var="stringRepresentation" def="97" use="97" target="101" covered="1"/><du var="stringRepresentation" def="97" use="101" covered="1"/><du var="stringRepresentation" def="97" use="107" target="135" covered="1"/><du var="stringRepresentation" def="97" use="107" target="108" covered="1"/><du var="stringRepresentation" def="97" use="108" target="109" covered="1"/><du var="stringRepresentation" def="97" use="108" target="110" covered="1"/><du var="stringRepresentation" def="97" use="109" target="110" covered="0"/><du var="stringRepresentation" def="97" use="109" target="120" covered="1"/><du var="stringRepresentation" def="97" use="120" target="121" covered="1"/><du var="stringRepresentation" def="97" use="120" target="124" covered="1"/><du var="stringRepresentation" def="97" use="124" target="125" covered="1"/><du var="stringRepresentation" def="97" use="124" target="129" covered="0"/><du var="stringRepresentation" def="97" use="129" covered="0"/><du var="setString" def="97" use="120" target="121" covered="1"/><du var="setString" def="97" use="120" target="124" covered="1"/><du var="setString" def="97" use="121" covered="1"/><du var="unsetString" def="97" use="124" target="125" covered="1"/><du var="unsetString" def="97" use="124" target="129" covered="0"/><du var="unsetString" def="97" use="125" covered="1"/><du var="bits" def="101" use="126" covered="1"/><du var="bits" def="101" use="122" covered="1"/><du var="bits" def="101" use="146" target="147" covered="1"/><du var="bits" def="101" use="146" target="145" covered="1"/><du var="bitsPos" def="102" use="110" target="111" covered="0"/><du var="bitsPos" def="102" use="110" target="119" covered="0"/><du var="bitsPos" def="102" use="113" target="114" covered="0"/><du var="bitsPos" def="102" use="113" target="116" covered="0"/><du var="bitsPos" def="102" use="116" covered="0"/><du var="bitsPos" def="102" use="112" covered="0"/><du var="bitsPos" def="102" use="126" covered="1"/><du var="bitsPos" def="102" use="127" covered="1"/><du var="bitsPos" def="102" use="122" covered="1"/><du var="bitsPos" def="102" use="123" covered="1"/><du var="bitsPos" def="102" use="135" target="136" covered="0"/><du var="bitsPos" def="102" use="135" target="144" covered="0"/><du var="bitsPos" def="102" use="145" target="150" covered="0"/><du var="bitsPos" def="102" use="145" target="146" covered="0"/><du var="bitsPos" def="102" use="138" target="139" covered="0"/><du var="bitsPos" def="102" use="138" target="141" covered="0"/><du var="bitsPos" def="102" use="137" covered="0"/><du var="rowStartPos" def="103" use="110" target="111" covered="1"/><du var="rowStartPos" def="103" use="110" target="119" covered="0"/><du var="rowStartPos" def="103" use="113" target="114" covered="0"/><du var="rowStartPos" def="103" use="113" target="116" covered="0"/><du var="rowStartPos" def="103" use="112" covered="1"/><du var="rowStartPos" def="103" use="135" target="136" covered="0"/><du var="rowStartPos" def="103" use="135" target="144" covered="0"/><du var="rowStartPos" def="103" use="138" target="139" covered="0"/><du var="rowStartPos" def="103" use="138" target="141" covered="0"/><du var="rowStartPos" def="103" use="137" covered="0"/><du var="rowLength" def="104" use="111" target="112" covered="1"/><du var="rowLength" def="104" use="111" target="113" covered="0"/><du var="rowLength" def="104" use="113" target="114" covered="0"/><du var="rowLength" def="104" use="113" target="116" covered="0"/><du var="rowLength" def="104" use="144" covered="0"/><du var="rowLength" def="104" use="147" covered="0"/><du var="rowLength" def="104" use="136" target="137" covered="0"/><du var="rowLength" def="104" use="136" target="138" covered="0"/><du var="rowLength" def="104" use="138" target="139" covered="0"/><du var="rowLength" def="104" use="138" target="141" covered="0"/><du var="nRows" def="105" use="117" covered="1"/><du var="nRows" def="105" use="144" covered="0"/><du var="nRows" def="105" use="141" covered="0"/><du var="pos" def="106" use="107" target="135" covered="0"/><du var="pos" def="106" use="107" target="108" covered="1"/><du var="pos" def="106" use="108" target="109" covered="1"/><du var="pos" def="106" use="108" target="110" covered="0"/><du var="pos" def="106" use="119" covered="0"/><du var="pos" def="106" use="109" target="110" covered="0"/><du var="pos" def="106" use="109" target="120" covered="1"/><du var="pos" def="106" use="120" target="121" covered="1"/><du var="pos" def="106" use="120" target="124" covered="1"/><du var="pos" def="106" use="124" target="125" covered="1"/><du var="pos" def="106" use="124" target="129" covered="0"/><du var="pos" def="106" use="129" covered="0"/><du var="pos" def="106" use="125" covered="1"/><du var="pos" def="106" use="121" covered="1"/><du var="rowLength" def="112" use="111" target="112" covered="0"/><du var="rowLength" def="112" use="111" target="113" covered="1"/><du var="rowLength" def="112" use="113" target="114" covered="0"/><du var="rowLength" def="112" use="113" target="116" covered="1"/><du var="rowLength" def="112" use="144" covered="1"/><du var="rowLength" def="112" use="147" covered="1"/><du var="rowLength" def="112" use="136" target="137" covered="0"/><du var="rowLength" def="112" use="136" target="138" covered="0"/><du var="rowLength" def="112" use="138" target="139" covered="0"/><du var="rowLength" def="112" use="138" target="141" covered="0"/><du var="rowStartPos" def="116" use="110" target="111" covered="1"/><du var="rowStartPos" def="116" use="110" target="119" covered="0"/><du var="rowStartPos" def="116" use="113" target="114" covered="0"/><du var="rowStartPos" def="116" use="113" target="116" covered="1"/><du var="rowStartPos" def="116" use="112" covered="0"/><du var="rowStartPos" def="116" use="135" target="136" covered="0"/><du var="rowStartPos" def="116" use="135" target="144" covered="1"/><du var="rowStartPos" def="116" use="138" target="139" covered="0"/><du var="rowStartPos" def="116" use="138" target="141" covered="0"/><du var="rowStartPos" def="116" use="137" covered="0"/><du var="nRows" def="117" use="117" covered="1"/><du var="nRows" def="117" use="144" covered="1"/><du var="nRows" def="117" use="141" covered="0"/><du var="pos" def="119" use="107" target="135" covered="1"/><du var="pos" def="119" use="107" target="108" covered="1"/><du var="pos" def="119" use="108" target="109" covered="1"/><du var="pos" def="119" use="108" target="110" covered="0"/><du var="pos" def="119" use="119" covered="0"/><du var="pos" def="119" use="109" target="110" covered="0"/><du var="pos" def="119" use="109" target="120" covered="1"/><du var="pos" def="119" use="120" target="121" covered="1"/><du var="pos" def="119" use="120" target="124" covered="1"/><du var="pos" def="119" use="124" target="125" covered="1"/><du var="pos" def="119" use="124" target="129" covered="0"/><du var="pos" def="119" use="129" covered="0"/><du var="pos" def="119" use="125" covered="1"/><du var="pos" def="119" use="121" covered="1"/><du var="pos" def="121" use="107" target="135" covered="0"/><du var="pos" def="121" use="107" target="108" covered="1"/><du var="pos" def="121" use="108" target="109" covered="1"/><du var="pos" def="121" use="108" target="110" covered="1"/><du var="pos" def="121" use="119" covered="1"/><du var="pos" def="121" use="109" target="110" covered="0"/><du var="pos" def="121" use="109" target="120" covered="1"/><du var="pos" def="121" use="120" target="121" covered="1"/><du var="pos" def="121" use="120" target="124" covered="1"/><du var="pos" def="121" use="124" target="125" covered="1"/><du var="pos" def="121" use="124" target="129" covered="0"/><du var="pos" def="121" use="129" covered="0"/><du var="pos" def="121" use="125" covered="1"/><du var="pos" def="121" use="121" covered="1"/><du var="bitsPos" def="123" use="110" target="111" covered="1"/><du var="bitsPos" def="123" use="110" target="119" covered="0"/><du var="bitsPos" def="123" use="113" target="114" covered="0"/><du var="bitsPos" def="123" use="113" target="116" covered="1"/><du var="bitsPos" def="123" use="116" covered="1"/><du var="bitsPos" def="123" use="112" covered="0"/><du var="bitsPos" def="123" use="126" covered="1"/><du var="bitsPos" def="123" use="127" covered="1"/><du var="bitsPos" def="123" use="122" covered="1"/><du var="bitsPos" def="123" use="123" covered="1"/><du var="bitsPos" def="123" use="135" target="136" covered="0"/><du var="bitsPos" def="123" use="135" target="144" covered="1"/><du var="bitsPos" def="123" use="145" target="150" covered="1"/><du var="bitsPos" def="123" use="145" target="146" covered="1"/><du var="bitsPos" def="123" use="138" target="139" covered="0"/><du var="bitsPos" def="123" use="138" target="141" covered="0"/><du var="bitsPos" def="123" use="137" covered="0"/><du var="pos" def="125" use="107" target="135" covered="0"/><du var="pos" def="125" use="107" target="108" covered="1"/><du var="pos" def="125" use="108" target="109" covered="1"/><du var="pos" def="125" use="108" target="110" covered="1"/><du var="pos" def="125" use="119" covered="1"/><du var="pos" def="125" use="109" target="110" covered="0"/><du var="pos" def="125" use="109" target="120" covered="1"/><du var="pos" def="125" use="120" target="121" covered="1"/><du var="pos" def="125" use="120" target="124" covered="1"/><du var="pos" def="125" use="124" target="125" covered="1"/><du var="pos" def="125" use="124" target="129" covered="0"/><du var="pos" def="125" use="129" covered="0"/><du var="pos" def="125" use="125" covered="1"/><du var="pos" def="125" use="121" covered="1"/><du var="bitsPos" def="127" use="110" target="111" covered="1"/><du var="bitsPos" def="127" use="110" target="119" covered="0"/><du var="bitsPos" def="127" use="113" target="114" covered="0"/><du var="bitsPos" def="127" use="113" target="116" covered="1"/><du var="bitsPos" def="127" use="116" covered="1"/><du var="bitsPos" def="127" use="112" covered="1"/><du var="bitsPos" def="127" use="126" covered="1"/><du var="bitsPos" def="127" use="127" covered="1"/><du var="bitsPos" def="127" use="122" covered="1"/><du var="bitsPos" def="127" use="123" covered="1"/><du var="bitsPos" def="127" use="135" target="136" covered="0"/><du var="bitsPos" def="127" use="135" target="144" covered="1"/><du var="bitsPos" def="127" use="145" target="150" covered="1"/><du var="bitsPos" def="127" use="145" target="146" covered="1"/><du var="bitsPos" def="127" use="138" target="139" covered="0"/><du var="bitsPos" def="127" use="138" target="141" covered="0"/><du var="bitsPos" def="127" use="137" covered="0"/><du var="rowLength" def="137" use="144" covered="0"/><du var="rowLength" def="137" use="147" covered="0"/><du var="nRows" def="141" use="144" covered="0"/><du var="matrix" def="144" use="147" covered="1"/><du var="matrix" def="144" use="150" covered="1"/><du var="i" def="145" use="145" target="150" covered="0"/><du var="i" def="145" use="145" target="146" covered="1"/><du var="i" def="145" use="146" target="147" covered="1"/><du var="i" def="145" use="146" target="145" covered="1"/><du var="i" def="145" use="145" covered="1"/><du var="i" def="145" use="147" covered="1"/><du var="i" def="145" use="145" target="150" covered="1"/><du var="i" def="145" use="145" target="146" covered="1"/><du var="i" def="145" use="146" target="147" covered="1"/><du var="i" def="145" use="146" target="145" covered="1"/><du var="i" def="145" use="145" covered="1"/><du var="i" def="145" use="147" covered="1"/><counter type="DU" missed="87" covered="107"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(II)Z"><du var="this" def="161" use="162" target="162" covered="1"/><du var="this" def="161" use="162" target="162" covered="1"/><du var="x" def="161" use="162" target="162" covered="1"/><du var="x" def="161" use="162" target="162" covered="1"/><du var="this.bits" def="161" use="162" target="162" covered="1"/><du var="this.bits" def="161" use="162" target="162" covered="1"/><du var="offset" def="161" use="162" target="162" covered="1"/><du var="offset" def="161" use="162" target="162" covered="1"/><counter type="DU" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="xor" desc="(Lcom/google/zxing/common/BitMatrix;)V"><du var="this" def="199" use="199" target="199" covered="0"/><du var="this" def="199" use="199" target="201" covered="0"/><du var="this" def="199" use="199" target="200" covered="0"/><du var="this" def="199" use="199" target="201" covered="0"/><du var="this" def="199" use="200" target="201" covered="0"/><du var="this" def="199" use="200" target="203" covered="0"/><du var="this" def="199" use="203" covered="0"/><du var="this" def="199" use="204" target="211" covered="0"/><du var="this" def="199" use="204" target="205" covered="0"/><du var="this" def="199" use="205" covered="0"/><du var="this" def="199" use="207" target="204" covered="0"/><du var="this" def="199" use="207" target="208" covered="0"/><du var="this" def="199" use="208" covered="0"/><du var="mask" def="199" use="199" target="199" covered="0"/><du var="mask" def="199" use="199" target="201" covered="0"/><du var="mask" def="199" use="199" target="200" covered="0"/><du var="mask" def="199" use="199" target="201" covered="0"/><du var="mask" def="199" use="200" target="201" covered="0"/><du var="mask" def="199" use="200" target="203" covered="0"/><du var="mask" def="199" use="206" covered="0"/><du var="this.width" def="199" use="199" target="199" covered="0"/><du var="this.width" def="199" use="199" target="201" covered="0"/><du var="this.width" def="199" use="203" covered="0"/><du var="this.height" def="199" use="199" target="200" covered="0"/><du var="this.height" def="199" use="199" target="201" covered="0"/><du var="this.height" def="199" use="204" target="211" covered="0"/><du var="this.height" def="199" use="204" target="205" covered="0"/><du var="this.rowSize" def="199" use="200" target="201" covered="0"/><du var="this.rowSize" def="199" use="200" target="203" covered="0"/><du var="this.rowSize" def="199" use="205" covered="0"/><du var="this.rowSize" def="199" use="207" target="204" covered="0"/><du var="this.rowSize" def="199" use="207" target="208" covered="0"/><du var="this.bits" def="199" use="208" covered="0"/><du var="rowArray" def="203" use="206" covered="0"/><du var="y" def="204" use="204" target="211" covered="0"/><du var="y" def="204" use="204" target="205" covered="0"/><du var="y" def="204" use="205" covered="0"/><du var="y" def="204" use="206" covered="0"/><du var="y" def="204" use="204" covered="0"/><du var="offset" def="205" use="208" covered="0"/><du var="row" def="206" use="208" covered="0"/><du var="x" def="207" use="207" target="204" covered="0"/><du var="x" def="207" use="207" target="208" covered="0"/><du var="x" def="207" use="208" covered="0"/><du var="x" def="207" use="207" covered="0"/><du var="x" def="207" use="207" target="204" covered="0"/><du var="x" def="207" use="207" target="208" covered="0"/><du var="x" def="207" use="208" covered="0"/><du var="x" def="207" use="207" covered="0"/><du var="y" def="204" use="204" target="211" covered="0"/><du var="y" def="204" use="204" target="205" covered="0"/><du var="y" def="204" use="205" covered="0"/><du var="y" def="204" use="206" covered="0"/><du var="y" def="204" use="204" covered="0"/><counter type="DU" missed="54" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V"><du var="this" def="217" use="219" covered="0"/><du var="this.bits" def="217" use="219" covered="0"/><du var="max" def="217" use="218" target="221" covered="0"/><du var="max" def="217" use="218" target="219" covered="0"/><du var="i" def="218" use="218" target="221" covered="0"/><du var="i" def="218" use="218" target="219" covered="0"/><du var="i" def="218" use="219" covered="0"/><du var="i" def="218" use="218" covered="0"/><du var="i" def="218" use="218" target="221" covered="0"/><du var="i" def="218" use="218" target="219" covered="0"/><du var="i" def="218" use="219" covered="0"/><du var="i" def="218" use="218" covered="0"/><counter type="DU" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRegion" desc="(IIII)V"><du var="this" def="232" use="240" target="240" covered="1"/><du var="this" def="232" use="240" target="241" covered="0"/><du var="this" def="232" use="240" target="241" covered="0"/><du var="this" def="232" use="240" target="243" covered="1"/><du var="this" def="232" use="244" covered="1"/><du var="this" def="232" use="246" covered="1"/><du var="left" def="232" use="232" target="233" covered="0"/><du var="left" def="232" use="232" target="235" covered="1"/><du var="left" def="232" use="238" covered="1"/><du var="left" def="232" use="245" covered="1"/><du var="top" def="232" use="232" target="232" covered="1"/><du var="top" def="232" use="232" target="233" covered="0"/><du var="top" def="232" use="239" covered="1"/><du var="top" def="232" use="243" covered="1"/><du var="width" def="232" use="235" target="236" covered="0"/><du var="width" def="232" use="235" target="238" covered="1"/><du var="width" def="232" use="238" covered="1"/><du var="height" def="232" use="235" target="235" covered="1"/><du var="height" def="232" use="235" target="236" covered="0"/><du var="height" def="232" use="239" covered="1"/><du var="this.height" def="232" use="240" target="240" covered="1"/><du var="this.height" def="232" use="240" target="241" covered="0"/><du var="this.width" def="232" use="240" target="241" covered="0"/><du var="this.width" def="232" use="240" target="243" covered="1"/><du var="this.rowSize" def="232" use="244" covered="1"/><du var="this.bits" def="232" use="246" covered="1"/><du var="right" def="238" use="240" target="241" covered="0"/><du var="right" def="238" use="240" target="243" covered="1"/><du var="right" def="238" use="245" target="243" covered="1"/><du var="right" def="238" use="245" target="246" covered="1"/><du var="bottom" def="239" use="240" target="240" covered="1"/><du var="bottom" def="239" use="240" target="241" covered="0"/><du var="bottom" def="239" use="243" target="249" covered="1"/><du var="bottom" def="239" use="243" target="244" covered="1"/><du var="y" def="243" use="243" target="249" covered="0"/><du var="y" def="243" use="243" target="244" covered="1"/><du var="y" def="243" use="244" covered="1"/><du var="y" def="243" use="243" covered="1"/><du var="offset" def="244" use="246" covered="1"/><du var="x" def="245" use="245" target="243" covered="0"/><du var="x" def="245" use="245" target="246" covered="1"/><du var="x" def="245" use="246" covered="1"/><du var="x" def="245" use="245" covered="1"/><du var="x" def="245" use="245" target="243" covered="1"/><du var="x" def="245" use="245" target="246" covered="1"/><du var="x" def="245" use="246" covered="1"/><du var="x" def="245" use="245" covered="1"/><du var="y" def="243" use="243" target="249" covered="1"/><du var="y" def="243" use="243" target="244" covered="1"/><du var="y" def="243" use="244" covered="1"/><du var="y" def="243" use="243" covered="1"/><counter type="DU" missed="12" covered="39"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRow" desc="(ILcom/google/zxing/common/BitArray;)Lcom/google/zxing/common/BitArray;"><du var="this" def="260" use="261" covered="0"/><du var="this" def="260" use="265" covered="0"/><du var="this" def="260" use="266" target="269" covered="0"/><du var="this" def="260" use="266" target="267" covered="0"/><du var="this" def="260" use="267" covered="0"/><du var="this" def="260" use="260" target="261" covered="0"/><du var="this" def="260" use="260" target="263" covered="0"/><du var="y" def="260" use="265" covered="0"/><du var="row" def="260" use="260" target="260" covered="0"/><du var="row" def="260" use="260" target="261" covered="0"/><du var="row" def="260" use="260" target="261" covered="0"/><du var="row" def="260" use="260" target="263" covered="0"/><du var="row" def="260" use="263" covered="0"/><du var="row" def="260" use="267" covered="0"/><du var="row" def="260" use="269" covered="0"/><du var="this.width" def="260" use="261" covered="0"/><du var="this.width" def="260" use="260" target="261" covered="0"/><du var="this.width" def="260" use="260" target="263" covered="0"/><du var="this.rowSize" def="260" use="265" covered="0"/><du var="this.rowSize" def="260" use="266" target="269" covered="0"/><du var="this.rowSize" def="260" use="266" target="267" covered="0"/><du var="this.bits" def="260" use="267" covered="0"/><du var="row" def="261" use="267" covered="0"/><du var="row" def="261" use="269" covered="0"/><du var="offset" def="265" use="267" covered="0"/><du var="x" def="266" use="266" target="269" covered="0"/><du var="x" def="266" use="266" target="267" covered="0"/><du var="x" def="266" use="267" covered="0"/><du var="x" def="266" use="266" covered="0"/><du var="x" def="266" use="266" target="269" covered="0"/><du var="x" def="266" use="266" target="267" covered="0"/><du var="x" def="266" use="267" covered="0"/><du var="x" def="266" use="266" covered="0"/><counter type="DU" missed="33" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rotate180" desc="()V"><du var="this" def="284" use="289" covered="0"/><du var="this" def="284" use="290" covered="0"/><du var="this" def="284" use="293" covered="0"/><du var="this" def="284" use="294" covered="0"/><du var="height" def="285" use="288" target="296" covered="0"/><du var="height" def="285" use="288" target="289" covered="0"/><du var="height" def="285" use="290" covered="0"/><du var="height" def="285" use="294" covered="0"/><du var="topRow" def="286" use="289" covered="0"/><du var="bottomRow" def="287" use="290" covered="0"/><du var="i" def="288" use="288" target="296" covered="0"/><du var="i" def="288" use="288" target="289" covered="0"/><du var="i" def="288" use="289" covered="0"/><du var="i" def="288" use="290" covered="0"/><du var="i" def="288" use="293" covered="0"/><du var="i" def="288" use="294" covered="0"/><du var="i" def="288" use="288" covered="0"/><du var="topRow" def="289" use="289" covered="0"/><du var="bottomRow" def="290" use="290" covered="0"/><du var="i" def="288" use="288" target="296" covered="0"/><du var="i" def="288" use="288" target="289" covered="0"/><du var="i" def="288" use="289" covered="0"/><du var="i" def="288" use="290" covered="0"/><du var="i" def="288" use="293" covered="0"/><du var="i" def="288" use="294" covered="0"/><du var="i" def="288" use="288" covered="0"/><counter type="DU" missed="26" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEnclosingRectangle" desc="()[I"><du var="this" def="304" use="309" target="341" covered="0"/><du var="this" def="304" use="309" target="310" covered="0"/><du var="this" def="304" use="310" target="309" covered="0"/><du var="this" def="304" use="310" target="311" covered="0"/><du var="this" def="304" use="311" covered="0"/><du var="this.height" def="304" use="309" target="341" covered="0"/><du var="this.height" def="304" use="309" target="310" covered="0"/><du var="this.bits" def="304" use="311" covered="0"/><du var="this.rowSize" def="304" use="310" target="309" covered="0"/><du var="this.rowSize" def="304" use="310" target="311" covered="0"/><du var="this.rowSize" def="304" use="311" covered="0"/><du var="left" def="304" use="319" target="320" covered="0"/><du var="left" def="304" use="319" target="328" covered="0"/><du var="left" def="304" use="324" target="325" covered="0"/><du var="left" def="304" use="324" target="328" covered="0"/><du var="left" def="304" use="341" target="341" covered="0"/><du var="left" def="304" use="341" target="342" covered="0"/><du var="left" def="304" use="345" covered="0"/><du var="left" def="304" use="345" covered="0"/><du var="top" def="305" use="313" target="314" covered="0"/><du var="top" def="305" use="313" target="316" covered="0"/><du var="top" def="305" use="341" target="342" covered="0"/><du var="top" def="305" use="341" target="345" covered="0"/><du var="top" def="305" use="345" covered="0"/><du var="top" def="305" use="345" covered="0"/><du var="right" def="306" use="328" target="329" covered="0"/><du var="right" def="306" use="328" target="310" covered="0"/><du var="right" def="306" use="333" target="334" covered="0"/><du var="right" def="306" use="333" target="310" covered="0"/><du var="right" def="306" use="341" target="341" covered="0"/><du var="right" def="306" use="341" target="342" covered="0"/><du var="right" def="306" use="345" covered="0"/><du var="bottom" def="307" use="316" target="317" covered="0"/><du var="bottom" def="307" use="316" target="319" covered="0"/><du var="bottom" def="307" use="341" target="342" covered="0"/><du var="bottom" def="307" use="341" target="345" covered="0"/><du var="bottom" def="307" use="345" covered="0"/><du var="y" def="309" use="309" target="341" covered="0"/><du var="y" def="309" use="309" target="310" covered="0"/><du var="y" def="309" use="311" covered="0"/><du var="y" def="309" use="313" target="314" covered="0"/><du var="y" def="309" use="313" target="316" covered="0"/><du var="y" def="309" use="316" target="317" covered="0"/><du var="y" def="309" use="316" target="319" covered="0"/><du var="y" def="309" use="317" covered="0"/><du var="y" def="309" use="314" covered="0"/><du var="y" def="309" use="309" covered="0"/><du var="x32" def="310" use="310" target="309" covered="0"/><du var="x32" def="310" use="310" target="311" covered="0"/><du var="x32" def="310" use="311" covered="0"/><du var="x32" def="310" use="310" covered="0"/><du var="x32" def="310" use="319" target="320" covered="0"/><du var="x32" def="310" use="319" target="328" covered="0"/><du var="x32" def="310" use="328" target="329" covered="0"/><du var="x32" def="310" use="328" target="310" covered="0"/><du var="x32" def="310" use="333" target="334" covered="0"/><du var="x32" def="310" use="333" target="310" covered="0"/><du var="x32" def="310" use="334" covered="0"/><du var="x32" def="310" use="324" target="325" covered="0"/><du var="x32" def="310" use="324" target="328" covered="0"/><du var="x32" def="310" use="325" covered="0"/><du var="theBits" def="311" use="312" target="313" covered="0"/><du var="theBits" def="311" use="312" target="310" covered="0"/><du var="theBits" def="311" use="330" target="333" covered="0"/><du var="theBits" def="311" use="330" target="331" covered="0"/><du var="theBits" def="311" use="321" target="324" covered="0"/><du var="theBits" def="311" use="321" target="322" covered="0"/><du var="top" def="314" use="313" target="314" covered="0"/><du var="top" def="314" use="313" target="316" covered="0"/><du var="top" def="314" use="341" target="342" covered="0"/><du var="top" def="314" use="341" target="345" covered="0"/><du var="top" def="314" use="345" covered="0"/><du var="top" def="314" use="345" covered="0"/><du var="bottom" def="317" use="316" target="317" covered="0"/><du var="bottom" def="317" use="316" target="319" covered="0"/><du var="bottom" def="317" use="341" target="342" covered="0"/><du var="bottom" def="317" use="341" target="345" covered="0"/><du var="bottom" def="317" use="345" covered="0"/><du var="bit" def="320" use="321" target="324" covered="0"/><du var="bit" def="320" use="321" target="322" covered="0"/><du var="bit" def="320" use="322" covered="0"/><du var="bit" def="320" use="324" target="325" covered="0"/><du var="bit" def="320" use="324" target="328" covered="0"/><du var="bit" def="320" use="325" covered="0"/><du var="bit" def="322" use="321" target="324" covered="0"/><du var="bit" def="322" use="321" target="322" covered="0"/><du var="bit" def="322" use="322" covered="0"/><du var="bit" def="322" use="324" target="325" covered="0"/><du var="bit" def="322" use="324" target="328" covered="0"/><du var="bit" def="322" use="325" covered="0"/><du var="left" def="325" use="319" target="320" covered="0"/><du var="left" def="325" use="319" target="328" covered="0"/><du var="left" def="325" use="324" target="325" covered="0"/><du var="left" def="325" use="324" target="328" covered="0"/><du var="left" def="325" use="341" target="341" covered="0"/><du var="left" def="325" use="341" target="342" covered="0"/><du var="left" def="325" use="345" covered="0"/><du var="left" def="325" use="345" covered="0"/><du var="bit" def="329" use="330" target="333" covered="0"/><du var="bit" def="329" use="330" target="331" covered="0"/><du var="bit" def="329" use="331" covered="0"/><du var="bit" def="329" use="333" target="334" covered="0"/><du var="bit" def="329" use="333" target="310" covered="0"/><du var="bit" def="329" use="334" covered="0"/><du var="bit" def="331" use="330" target="333" covered="0"/><du var="bit" def="331" use="330" target="331" covered="0"/><du var="bit" def="331" use="331" covered="0"/><du var="bit" def="331" use="333" target="334" covered="0"/><du var="bit" def="331" use="333" target="310" covered="0"/><du var="bit" def="331" use="334" covered="0"/><du var="right" def="334" use="328" target="329" covered="0"/><du var="right" def="334" use="328" target="310" covered="0"/><du var="right" def="334" use="333" target="334" covered="0"/><du var="right" def="334" use="333" target="310" covered="0"/><du var="right" def="334" use="341" target="341" covered="0"/><du var="right" def="334" use="341" target="342" covered="0"/><du var="right" def="334" use="345" covered="0"/><du var="x32" def="310" use="310" target="309" covered="0"/><du var="x32" def="310" use="310" target="311" covered="0"/><du var="x32" def="310" use="311" covered="0"/><du var="x32" def="310" use="310" covered="0"/><du var="x32" def="310" use="319" target="320" covered="0"/><du var="x32" def="310" use="319" target="328" covered="0"/><du var="x32" def="310" use="328" target="329" covered="0"/><du var="x32" def="310" use="328" target="310" covered="0"/><du var="x32" def="310" use="333" target="334" covered="0"/><du var="x32" def="310" use="333" target="310" covered="0"/><du var="x32" def="310" use="334" covered="0"/><du var="x32" def="310" use="324" target="325" covered="0"/><du var="x32" def="310" use="324" target="328" covered="0"/><du var="x32" def="310" use="325" covered="0"/><du var="y" def="309" use="309" target="341" covered="0"/><du var="y" def="309" use="309" target="310" covered="0"/><du var="y" def="309" use="311" covered="0"/><du var="y" def="309" use="313" target="314" covered="0"/><du var="y" def="309" use="313" target="316" covered="0"/><du var="y" def="309" use="316" target="317" covered="0"/><du var="y" def="309" use="316" target="319" covered="0"/><du var="y" def="309" use="317" covered="0"/><du var="y" def="309" use="314" covered="0"/><du var="y" def="309" use="309" covered="0"/><counter type="DU" missed="141" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopLeftOnBit" desc="()[I"><du var="this" def="354" use="355" target="355" covered="0"/><du var="this" def="354" use="355" target="358" covered="0"/><du var="this" def="354" use="358" target="359" covered="0"/><du var="this" def="354" use="358" target="361" covered="0"/><du var="this" def="354" use="361" covered="0"/><du var="this" def="354" use="362" covered="0"/><du var="this" def="354" use="364" covered="0"/><du var="this" def="354" use="355" target="358" covered="0"/><du var="this" def="354" use="355" target="356" covered="0"/><du var="this.bits" def="354" use="355" target="355" covered="0"/><du var="this.bits" def="354" use="355" target="358" covered="0"/><du var="this.bits" def="354" use="358" target="359" covered="0"/><du var="this.bits" def="354" use="358" target="361" covered="0"/><du var="this.bits" def="354" use="364" covered="0"/><du var="this.bits" def="354" use="355" target="358" covered="0"/><du var="this.bits" def="354" use="355" target="356" covered="0"/><du var="this.rowSize" def="354" use="361" covered="0"/><du var="this.rowSize" def="354" use="362" covered="0"/><du var="bitsOffset" def="354" use="355" target="355" covered="0"/><du var="bitsOffset" def="354" use="355" target="358" covered="0"/><du var="bitsOffset" def="354" use="358" target="359" covered="0"/><du var="bitsOffset" def="354" use="358" target="361" covered="0"/><du var="bitsOffset" def="354" use="361" covered="0"/><du var="bitsOffset" def="354" use="362" covered="0"/><du var="bitsOffset" def="354" use="364" covered="0"/><du var="bitsOffset" def="354" use="355" target="358" covered="0"/><du var="bitsOffset" def="354" use="355" target="356" covered="0"/><du var="bitsOffset" def="354" use="356" covered="0"/><du var="bitsOffset" def="356" use="355" target="355" covered="0"/><du var="bitsOffset" def="356" use="355" target="358" covered="0"/><du var="bitsOffset" def="356" use="358" target="359" covered="0"/><du var="bitsOffset" def="356" use="358" target="361" covered="0"/><du var="bitsOffset" def="356" use="361" covered="0"/><du var="bitsOffset" def="356" use="362" covered="0"/><du var="bitsOffset" def="356" use="364" covered="0"/><du var="bitsOffset" def="356" use="355" target="358" covered="0"/><du var="bitsOffset" def="356" use="355" target="356" covered="0"/><du var="bitsOffset" def="356" use="356" covered="0"/><du var="y" def="361" use="370" covered="0"/><du var="x" def="362" use="369" covered="0"/><du var="theBits" def="364" use="366" target="369" covered="0"/><du var="theBits" def="364" use="366" target="367" covered="0"/><du var="bit" def="365" use="366" target="369" covered="0"/><du var="bit" def="365" use="366" target="367" covered="0"/><du var="bit" def="365" use="367" covered="0"/><du var="bit" def="365" use="369" covered="0"/><du var="bit" def="367" use="366" target="369" covered="0"/><du var="bit" def="367" use="366" target="367" covered="0"/><du var="bit" def="367" use="367" covered="0"/><du var="bit" def="367" use="369" covered="0"/><counter type="DU" missed="50" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBottomRightOnBit" desc="()[I"><du var="this" def="374" use="382" covered="0"/><du var="this" def="374" use="383" covered="0"/><du var="this" def="374" use="385" covered="0"/><du var="this" def="374" use="375" target="378" covered="0"/><du var="this" def="374" use="375" target="376" covered="0"/><du var="this.bits" def="374" use="385" covered="0"/><du var="this.bits" def="374" use="375" target="378" covered="0"/><du var="this.bits" def="374" use="375" target="376" covered="0"/><du var="this.rowSize" def="374" use="382" covered="0"/><du var="this.rowSize" def="374" use="383" covered="0"/><du var="bitsOffset" def="374" use="375" target="375" covered="0"/><du var="bitsOffset" def="374" use="375" target="378" covered="0"/><du var="bitsOffset" def="374" use="378" target="379" covered="0"/><du var="bitsOffset" def="374" use="378" target="382" covered="0"/><du var="bitsOffset" def="374" use="382" covered="0"/><du var="bitsOffset" def="374" use="383" covered="0"/><du var="bitsOffset" def="374" use="385" covered="0"/><du var="bitsOffset" def="374" use="375" target="378" covered="0"/><du var="bitsOffset" def="374" use="375" target="376" covered="0"/><du var="bitsOffset" def="374" use="376" covered="0"/><du var="bitsOffset" def="376" use="375" target="375" covered="0"/><du var="bitsOffset" def="376" use="375" target="378" covered="0"/><du var="bitsOffset" def="376" use="378" target="379" covered="0"/><du var="bitsOffset" def="376" use="378" target="382" covered="0"/><du var="bitsOffset" def="376" use="382" covered="0"/><du var="bitsOffset" def="376" use="383" covered="0"/><du var="bitsOffset" def="376" use="385" covered="0"/><du var="bitsOffset" def="376" use="375" target="378" covered="0"/><du var="bitsOffset" def="376" use="375" target="376" covered="0"/><du var="bitsOffset" def="376" use="376" covered="0"/><du var="y" def="382" use="392" covered="0"/><du var="x" def="383" use="390" covered="0"/><du var="theBits" def="385" use="387" target="390" covered="0"/><du var="theBits" def="385" use="387" target="388" covered="0"/><du var="bit" def="386" use="387" target="390" covered="0"/><du var="bit" def="386" use="387" target="388" covered="0"/><du var="bit" def="386" use="388" covered="0"/><du var="bit" def="386" use="390" covered="0"/><du var="bit" def="388" use="387" target="390" covered="0"/><du var="bit" def="388" use="387" target="388" covered="0"/><du var="bit" def="388" use="388" covered="0"/><du var="bit" def="388" use="390" covered="0"/><counter type="DU" missed="42" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><du var="this" def="418" use="422" target="422" covered="1"/><du var="this" def="418" use="422" target="422" covered="0"/><du var="this" def="418" use="422" target="422" covered="1"/><du var="this" def="418" use="422" target="422" covered="0"/><du var="this" def="418" use="422" target="423" covered="1"/><du var="this" def="418" use="422" target="422" covered="0"/><du var="this" def="418" use="423" target="422" covered="1"/><du var="this" def="418" use="423" target="422" covered="0"/><du var="o" def="418" use="418" target="419" covered="0"/><du var="o" def="418" use="418" target="421" covered="1"/><du var="o" def="418" use="421" covered="1"/><du var="this.width" def="418" use="422" target="422" covered="1"/><du var="this.width" def="418" use="422" target="422" covered="0"/><du var="this.height" def="418" use="422" target="422" covered="1"/><du var="this.height" def="418" use="422" target="422" covered="0"/><du var="this.rowSize" def="418" use="422" target="423" covered="1"/><du var="this.rowSize" def="418" use="422" target="422" covered="0"/><du var="this.bits" def="418" use="423" target="422" covered="1"/><du var="this.bits" def="418" use="423" target="422" covered="0"/><du var="other" def="421" use="422" target="422" covered="1"/><du var="other" def="421" use="422" target="422" covered="0"/><du var="other" def="421" use="422" target="422" covered="1"/><du var="other" def="421" use="422" target="422" covered="0"/><du var="other" def="421" use="422" target="423" covered="1"/><du var="other" def="421" use="422" target="422" covered="0"/><du var="other" def="421" use="423" target="422" covered="1"/><du var="other" def="421" use="423" target="422" covered="0"/><du var="other.width" def="421" use="422" target="422" covered="1"/><du var="other.width" def="421" use="422" target="422" covered="0"/><du var="other.height" def="421" use="422" target="422" covered="1"/><du var="other.height" def="421" use="422" target="422" covered="0"/><du var="other.rowSize" def="421" use="422" target="423" covered="1"/><du var="other.rowSize" def="421" use="422" target="422" covered="0"/><du var="other.bits" def="421" use="423" target="422" covered="1"/><du var="other.bits" def="421" use="423" target="422" covered="0"/><counter type="DU" missed="17" covered="18"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildToString" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><du var="this" def="466" use="467" target="473" covered="1"/><du var="this" def="466" use="467" target="468" covered="1"/><du var="this" def="466" use="468" target="471" covered="1"/><du var="this" def="466" use="468" target="469" covered="1"/><du var="this" def="466" use="469" target="469" covered="1"/><du var="this" def="466" use="469" target="469" covered="1"/><du var="unsetString" def="466" use="469" covered="1"/><du var="lineSeparator" def="466" use="471" covered="1"/><du var="this.height" def="466" use="467" target="473" covered="1"/><du var="this.height" def="466" use="467" target="468" covered="1"/><du var="this.width" def="466" use="468" target="471" covered="1"/><du var="this.width" def="466" use="468" target="469" covered="1"/><du var="result" def="466" use="469" covered="1"/><du var="result" def="466" use="471" covered="1"/><du var="result" def="466" use="473" covered="1"/><du var="y" def="467" use="467" target="473" covered="0"/><du var="y" def="467" use="467" target="468" covered="1"/><du var="y" def="467" use="469" target="469" covered="1"/><du var="y" def="467" use="469" target="469" covered="1"/><du var="y" def="467" use="467" covered="1"/><du var="x" def="468" use="468" target="471" covered="0"/><du var="x" def="468" use="468" target="469" covered="1"/><du var="x" def="468" use="469" target="469" covered="1"/><du var="x" def="468" use="469" target="469" covered="1"/><du var="x" def="468" use="468" covered="1"/><du var="x" def="468" use="468" target="471" covered="1"/><du var="x" def="468" use="468" target="469" covered="1"/><du var="x" def="468" use="469" target="469" covered="1"/><du var="x" def="468" use="469" target="469" covered="1"/><du var="x" def="468" use="468" covered="1"/><du var="y" def="467" use="467" target="473" covered="1"/><du var="y" def="467" use="467" target="468" covered="1"/><du var="y" def="467" use="469" target="469" covered="1"/><du var="y" def="467" use="469" target="469" covered="1"/><du var="y" def="467" use="467" covered="1"/><counter type="DU" missed="2" covered="33"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="509" covered="215"/><counter type="METHOD" missed="8" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/common/DefaultGridSampler"><method name="sampleGrid" desc="(Lcom/google/zxing/common/BitMatrix;IILcom/google/zxing/common/PerspectiveTransform;)Lcom/google/zxing/common/BitMatrix;"><du var="image" def="51" use="66" covered="1"/><du var="image" def="51" use="69" target="71" covered="1"/><du var="image" def="51" use="69" target="68" covered="1"/><du var="dimensionX" def="51" use="51" target="51" covered="1"/><du var="dimensionX" def="51" use="51" target="52" covered="0"/><du var="dimensionX" def="51" use="54" covered="1"/><du var="dimensionX" def="51" use="55" covered="1"/><du var="dimensionY" def="51" use="51" target="52" covered="0"/><du var="dimensionY" def="51" use="51" target="54" covered="1"/><du var="dimensionY" def="51" use="54" covered="1"/><du var="dimensionY" def="51" use="56" target="85" covered="1"/><du var="dimensionY" def="51" use="56" target="57" covered="1"/><du var="transform" def="51" use="63" covered="1"/><du var="bits" def="54" use="71" covered="1"/><du var="bits" def="54" use="85" covered="1"/><du var="points" def="55" use="57" covered="1"/><du var="points" def="55" use="60" covered="1"/><du var="points" def="55" use="61" covered="1"/><du var="points" def="55" use="63" covered="1"/><du var="points" def="55" use="66" covered="1"/><du var="points" def="55" use="69" target="71" covered="1"/><du var="points" def="55" use="69" target="68" covered="1"/><du var="y" def="56" use="56" target="85" covered="0"/><du var="y" def="56" use="56" target="57" covered="1"/><du var="y" def="56" use="58" covered="1"/><du var="y" def="56" use="71" covered="1"/><du var="y" def="56" use="56" covered="1"/><du var="max" def="57" use="59" target="63" covered="1"/><du var="max" def="57" use="59" target="60" covered="1"/><du var="max" def="57" use="68" target="74" covered="1"/><du var="max" def="57" use="68" target="69" covered="1"/><du var="iValue" def="58" use="61" covered="1"/><du var="x" def="59" use="59" target="63" covered="0"/><du var="x" def="59" use="59" target="60" covered="1"/><du var="x" def="59" use="60" covered="1"/><du var="x" def="59" use="61" covered="1"/><du var="x" def="59" use="59" covered="1"/><du var="x" def="59" use="59" target="63" covered="1"/><du var="x" def="59" use="59" target="60" covered="1"/><du var="x" def="59" use="60" covered="1"/><du var="x" def="59" use="61" covered="1"/><du var="x" def="59" use="59" covered="1"/><du var="x" def="68" use="68" target="74" covered="0"/><du var="x" def="68" use="68" target="69" covered="1"/><du var="x" def="68" use="69" target="71" covered="1"/><du var="x" def="68" use="69" target="68" covered="1"/><du var="x" def="68" use="68" covered="1"/><du var="x" def="68" use="71" covered="1"/><du var="x" def="68" use="68" target="74" covered="1"/><du var="x" def="68" use="68" target="69" covered="1"/><du var="x" def="68" use="69" target="71" covered="1"/><du var="x" def="68" use="69" target="68" covered="1"/><du var="x" def="68" use="68" covered="1"/><du var="x" def="68" use="71" covered="1"/><du var="y" def="56" use="56" target="85" covered="1"/><du var="y" def="56" use="56" target="57" covered="1"/><du var="y" def="56" use="58" covered="1"/><du var="y" def="56" use="71" covered="1"/><du var="y" def="56" use="56" covered="1"/><counter type="DU" missed="5" covered="54"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="5" covered="54"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/common/BitArray"><method name="ensureCapacity" desc="(I)V"><du var="this" def="56" use="56" target="57" covered="1"/><du var="this" def="56" use="56" target="61" covered="1"/><du var="this" def="56" use="58" covered="1"/><du var="this" def="56" use="59" covered="1"/><du var="size" def="56" use="56" target="57" covered="1"/><du var="size" def="56" use="56" target="61" covered="1"/><du var="size" def="56" use="57" covered="1"/><du var="this.bits" def="56" use="56" target="57" covered="1"/><du var="this.bits" def="56" use="56" target="61" covered="1"/><du var="this.bits" def="56" use="58" covered="1"/><counter type="DU" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Z"><du var="this" def="68" use="68" target="68" covered="1"/><du var="this" def="68" use="68" target="68" covered="1"/><du var="i" def="68" use="68" target="68" covered="1"/><du var="i" def="68" use="68" target="68" covered="1"/><du var="this.bits" def="68" use="68" target="68" covered="1"/><du var="this.bits" def="68" use="68" target="68" covered="1"/><counter type="DU" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextSet" desc="(I)I"><du var="this" def="96" use="96" target="97" covered="0"/><du var="this" def="96" use="96" target="99" covered="0"/><du var="this" def="96" use="100" covered="0"/><du var="this" def="96" use="104" target="105" covered="0"/><du var="this" def="96" use="104" target="107" covered="0"/><du var="this" def="96" use="107" covered="0"/><du var="this" def="96" use="105" covered="0"/><du var="this" def="96" use="110" target="110" covered="0"/><du var="this" def="96" use="110" target="110" covered="0"/><du var="this" def="96" use="110" covered="0"/><du var="this" def="96" use="97" covered="0"/><du var="from" def="96" use="96" target="97" covered="0"/><du var="from" def="96" use="96" target="99" covered="0"/><du var="from" def="96" use="99" covered="0"/><du var="from" def="96" use="102" covered="0"/><du var="this.size" def="96" use="96" target="97" covered="0"/><du var="this.size" def="96" use="96" target="99" covered="0"/><du var="this.size" def="96" use="105" covered="0"/><du var="this.size" def="96" use="110" target="110" covered="0"/><du var="this.size" def="96" use="110" target="110" covered="0"/><du var="this.size" def="96" use="110" covered="0"/><du var="this.size" def="96" use="97" covered="0"/><du var="this.bits" def="96" use="100" covered="0"/><du var="this.bits" def="96" use="104" target="105" covered="0"/><du var="this.bits" def="96" use="104" target="107" covered="0"/><du var="this.bits" def="96" use="107" covered="0"/><du var="bitsOffset" def="99" use="104" covered="0"/><du var="bitsOffset" def="99" use="109" covered="0"/><du var="currentBits" def="102" use="103" target="109" covered="0"/><du var="currentBits" def="102" use="103" target="104" covered="0"/><du var="currentBits" def="102" use="109" covered="0"/><du var="bitsOffset" def="104" use="104" target="105" covered="0"/><du var="bitsOffset" def="104" use="104" target="107" covered="0"/><du var="bitsOffset" def="104" use="107" covered="0"/><du var="bitsOffset" def="104" use="104" covered="0"/><du var="bitsOffset" def="104" use="109" covered="0"/><du var="currentBits" def="107" use="103" target="109" covered="0"/><du var="currentBits" def="107" use="103" target="104" covered="0"/><du var="currentBits" def="107" use="109" covered="0"/><du var="result" def="109" use="110" target="110" covered="0"/><du var="result" def="109" use="110" target="110" covered="0"/><du var="result" def="109" use="110" covered="0"/><counter type="DU" missed="42" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNextUnset" desc="(I)I"><du var="this" def="119" use="119" target="120" covered="0"/><du var="this" def="119" use="119" target="122" covered="0"/><du var="this" def="119" use="123" covered="0"/><du var="this" def="119" use="127" target="128" covered="0"/><du var="this" def="119" use="127" target="130" covered="0"/><du var="this" def="119" use="130" covered="0"/><du var="this" def="119" use="128" covered="0"/><du var="this" def="119" use="133" target="133" covered="0"/><du var="this" def="119" use="133" target="133" covered="0"/><du var="this" def="119" use="133" covered="0"/><du var="this" def="119" use="120" covered="0"/><du var="from" def="119" use="119" target="120" covered="0"/><du var="from" def="119" use="119" target="122" covered="0"/><du var="from" def="119" use="122" covered="0"/><du var="from" def="119" use="125" covered="0"/><du var="this.size" def="119" use="119" target="120" covered="0"/><du var="this.size" def="119" use="119" target="122" covered="0"/><du var="this.size" def="119" use="128" covered="0"/><du var="this.size" def="119" use="133" target="133" covered="0"/><du var="this.size" def="119" use="133" target="133" covered="0"/><du var="this.size" def="119" use="133" covered="0"/><du var="this.size" def="119" use="120" covered="0"/><du var="this.bits" def="119" use="123" covered="0"/><du var="this.bits" def="119" use="127" target="128" covered="0"/><du var="this.bits" def="119" use="127" target="130" covered="0"/><du var="this.bits" def="119" use="130" covered="0"/><du var="bitsOffset" def="122" use="127" covered="0"/><du var="bitsOffset" def="122" use="132" covered="0"/><du var="currentBits" def="125" use="126" target="132" covered="0"/><du var="currentBits" def="125" use="126" target="127" covered="0"/><du var="currentBits" def="125" use="132" covered="0"/><du var="bitsOffset" def="127" use="127" target="128" covered="0"/><du var="bitsOffset" def="127" use="127" target="130" covered="0"/><du var="bitsOffset" def="127" use="130" covered="0"/><du var="bitsOffset" def="127" use="127" covered="0"/><du var="bitsOffset" def="127" use="132" covered="0"/><du var="currentBits" def="130" use="126" target="132" covered="0"/><du var="currentBits" def="130" use="126" target="127" covered="0"/><du var="currentBits" def="130" use="132" covered="0"/><du var="result" def="132" use="133" target="133" covered="0"/><du var="result" def="132" use="133" target="133" covered="0"/><du var="result" def="132" use="133" covered="0"/><counter type="DU" missed="42" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRange" desc="(II)V"><du var="this" def="154" use="154" target="155" covered="0"/><du var="this" def="154" use="154" target="157" covered="0"/><du var="this" def="154" use="168" covered="0"/><du var="start" def="154" use="154" target="154" covered="0"/><du var="start" def="154" use="154" target="155" covered="0"/><du var="start" def="154" use="154" target="154" covered="0"/><du var="start" def="154" use="154" target="155" covered="0"/><du var="start" def="154" use="157" target="158" covered="0"/><du var="start" def="154" use="157" target="160" covered="0"/><du var="start" def="154" use="161" covered="0"/><du var="start" def="154" use="164" covered="0"/><du var="end" def="154" use="154" target="154" covered="0"/><du var="end" def="154" use="154" target="155" covered="0"/><du var="end" def="154" use="154" target="155" covered="0"/><du var="end" def="154" use="154" target="157" covered="0"/><du var="end" def="154" use="157" target="158" covered="0"/><du var="end" def="154" use="157" target="160" covered="0"/><du var="end" def="154" use="160" covered="0"/><du var="this.size" def="154" use="154" target="155" covered="0"/><du var="this.size" def="154" use="154" target="157" covered="0"/><du var="this.bits" def="154" use="168" covered="0"/><du var="end" def="160" use="165" covered="0"/><du var="firstInt" def="161" use="164" target="164" covered="0"/><du var="firstInt" def="161" use="164" target="164" covered="0"/><du var="lastInt" def="162" use="163" target="170" covered="0"/><du var="lastInt" def="162" use="163" target="164" covered="0"/><du var="lastInt" def="162" use="165" target="165" covered="0"/><du var="lastInt" def="162" use="165" target="165" covered="0"/><du var="i" def="163" use="163" target="170" covered="0"/><du var="i" def="163" use="163" target="164" covered="0"/><du var="i" def="163" use="164" target="164" covered="0"/><du var="i" def="163" use="164" target="164" covered="0"/><du var="i" def="163" use="165" target="165" covered="0"/><du var="i" def="163" use="165" target="165" covered="0"/><du var="i" def="163" use="168" covered="0"/><du var="i" def="163" use="163" covered="0"/><du var="firstBit" def="164" use="167" covered="0"/><du var="i" def="163" use="163" target="170" covered="0"/><du var="i" def="163" use="163" target="164" covered="0"/><du var="i" def="163" use="164" target="164" covered="0"/><du var="i" def="163" use="164" target="164" covered="0"/><du var="i" def="163" use="165" target="165" covered="0"/><du var="i" def="163" use="165" target="165" covered="0"/><du var="i" def="163" use="168" covered="0"/><du var="i" def="163" use="163" covered="0"/><counter type="DU" missed="45" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V"><du var="this" def="176" use="178" covered="0"/><du var="this.bits" def="176" use="178" covered="0"/><du var="max" def="176" use="177" target="180" covered="0"/><du var="max" def="176" use="177" target="178" covered="0"/><du var="i" def="177" use="177" target="180" covered="0"/><du var="i" def="177" use="177" target="178" covered="0"/><du var="i" def="177" use="178" covered="0"/><du var="i" def="177" use="177" covered="0"/><du var="i" def="177" use="177" target="180" covered="0"/><du var="i" def="177" use="177" target="178" covered="0"/><du var="i" def="177" use="178" covered="0"/><du var="i" def="177" use="177" covered="0"/><counter type="DU" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isRange" desc="(IIZ)Z"><du var="this" def="192" use="192" target="193" covered="0"/><du var="this" def="192" use="192" target="195" covered="0"/><du var="this" def="192" use="209" target="210" covered="0"/><du var="this" def="192" use="209" target="201" covered="0"/><du var="start" def="192" use="192" target="192" covered="0"/><du var="start" def="192" use="192" target="193" covered="0"/><du var="start" def="192" use="192" target="192" covered="0"/><du var="start" def="192" use="192" target="193" covered="0"/><du var="start" def="192" use="195" target="196" covered="0"/><du var="start" def="192" use="195" target="198" covered="0"/><du var="start" def="192" use="199" covered="0"/><du var="start" def="192" use="202" covered="0"/><du var="end" def="192" use="192" target="192" covered="0"/><du var="end" def="192" use="192" target="193" covered="0"/><du var="end" def="192" use="192" target="193" covered="0"/><du var="end" def="192" use="192" target="195" covered="0"/><du var="end" def="192" use="195" target="196" covered="0"/><du var="end" def="192" use="195" target="198" covered="0"/><du var="end" def="192" use="198" covered="0"/><du var="value" def="192" use="209" target="209" covered="0"/><du var="value" def="192" use="209" target="209" covered="0"/><du var="this.size" def="192" use="192" target="193" covered="0"/><du var="this.size" def="192" use="192" target="195" covered="0"/><du var="this.bits" def="192" use="209" target="210" covered="0"/><du var="this.bits" def="192" use="209" target="201" covered="0"/><du var="end" def="198" use="203" covered="0"/><du var="firstInt" def="199" use="202" target="202" covered="0"/><du var="firstInt" def="199" use="202" target="202" covered="0"/><du var="lastInt" def="200" use="201" target="213" covered="0"/><du var="lastInt" def="200" use="201" target="202" covered="0"/><du var="lastInt" def="200" use="203" target="203" covered="0"/><du var="lastInt" def="200" use="203" target="203" covered="0"/><du var="i" def="201" use="201" target="213" covered="0"/><du var="i" def="201" use="201" target="202" covered="0"/><du var="i" def="201" use="202" target="202" covered="0"/><du var="i" def="201" use="202" target="202" covered="0"/><du var="i" def="201" use="203" target="203" covered="0"/><du var="i" def="201" use="203" target="203" covered="0"/><du var="i" def="201" use="209" target="210" covered="0"/><du var="i" def="201" use="209" target="201" covered="0"/><du var="i" def="201" use="201" covered="0"/><du var="firstBit" def="202" use="205" covered="0"/><du var="mask" def="205" use="209" target="210" covered="0"/><du var="mask" def="205" use="209" target="201" covered="0"/><du var="i" def="201" use="201" target="213" covered="0"/><du var="i" def="201" use="201" target="202" covered="0"/><du var="i" def="201" use="202" target="202" covered="0"/><du var="i" def="201" use="202" target="202" covered="0"/><du var="i" def="201" use="203" target="203" covered="0"/><du var="i" def="201" use="203" target="203" covered="0"/><du var="i" def="201" use="209" target="210" covered="0"/><du var="i" def="201" use="209" target="201" covered="0"/><du var="i" def="201" use="201" covered="0"/><counter type="DU" missed="53" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendBit" desc="(Z)V"><du var="this" def="217" use="221" covered="1"/><du var="this" def="217" use="219" covered="1"/><du var="bit" def="217" use="218" target="219" covered="1"/><du var="bit" def="217" use="218" target="221" covered="1"/><du var="this.size" def="217" use="221" covered="1"/><du var="this.size" def="217" use="219" covered="1"/><du var="this.bits" def="217" use="219" covered="1"/><counter type="DU" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendBits" desc="(II)V"><du var="this" def="233" use="236" covered="1"/><du var="this" def="233" use="238" covered="1"/><du var="value" def="233" use="238" target="238" covered="1"/><du var="value" def="233" use="238" target="238" covered="1"/><du var="numBits" def="233" use="233" target="233" covered="1"/><du var="numBits" def="233" use="233" target="234" covered="0"/><du var="numBits" def="233" use="233" target="234" covered="0"/><du var="numBits" def="233" use="233" target="236" covered="1"/><du var="numBits" def="233" use="236" covered="1"/><du var="numBits" def="233" use="237" covered="1"/><du var="this.size" def="233" use="236" covered="1"/><du var="numBitsLeft" def="237" use="237" target="240" covered="1"/><du var="numBitsLeft" def="237" use="237" target="238" covered="1"/><du var="numBitsLeft" def="237" use="238" target="238" covered="1"/><du var="numBitsLeft" def="237" use="238" target="238" covered="1"/><du var="numBitsLeft" def="237" use="237" covered="1"/><du var="numBitsLeft" def="237" use="237" target="240" covered="1"/><du var="numBitsLeft" def="237" use="237" target="238" covered="1"/><du var="numBitsLeft" def="237" use="238" target="238" covered="1"/><du var="numBitsLeft" def="237" use="238" target="238" covered="1"/><du var="numBitsLeft" def="237" use="237" covered="1"/><counter type="DU" missed="2" covered="19"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendBitArray" desc="(Lcom/google/zxing/common/BitArray;)V"><du var="this" def="243" use="246" covered="0"/><du var="other" def="243" use="246" covered="0"/><du var="otherSize" def="243" use="245" target="248" covered="0"/><du var="otherSize" def="243" use="245" target="246" covered="0"/><du var="i" def="245" use="245" target="248" covered="0"/><du var="i" def="245" use="245" target="246" covered="0"/><du var="i" def="245" use="246" covered="0"/><du var="i" def="245" use="245" covered="0"/><du var="i" def="245" use="245" target="248" covered="0"/><du var="i" def="245" use="245" target="246" covered="0"/><du var="i" def="245" use="246" covered="0"/><du var="i" def="245" use="245" covered="0"/><counter type="DU" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="xor" desc="(Lcom/google/zxing/common/BitArray;)V"><du var="this" def="251" use="251" target="252" covered="0"/><du var="this" def="251" use="251" target="254" covered="0"/><du var="this" def="251" use="254" target="259" covered="0"/><du var="this" def="251" use="254" target="257" covered="0"/><du var="this" def="251" use="257" covered="0"/><du var="other" def="251" use="251" target="252" covered="0"/><du var="other" def="251" use="251" target="254" covered="0"/><du var="other" def="251" use="257" covered="0"/><du var="other.size" def="251" use="251" target="252" covered="0"/><du var="other.size" def="251" use="251" target="254" covered="0"/><du var="this.size" def="251" use="251" target="252" covered="0"/><du var="this.size" def="251" use="251" target="254" covered="0"/><du var="this.bits" def="251" use="254" target="259" covered="0"/><du var="this.bits" def="251" use="254" target="257" covered="0"/><du var="this.bits" def="251" use="257" covered="0"/><du var="other.bits" def="251" use="257" covered="0"/><du var="i" def="254" use="254" target="259" covered="0"/><du var="i" def="254" use="254" target="257" covered="0"/><du var="i" def="254" use="257" covered="0"/><du var="i" def="254" use="254" covered="0"/><du var="i" def="254" use="254" target="259" covered="0"/><du var="i" def="254" use="254" target="257" covered="0"/><du var="i" def="254" use="257" covered="0"/><du var="i" def="254" use="254" covered="0"/><counter type="DU" missed="24" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBytes" desc="(I[BII)V"><du var="this" def="270" use="273" target="274" covered="0"/><du var="this" def="270" use="273" target="276" covered="0"/><du var="bitOffset" def="270" use="273" target="274" covered="0"/><du var="bitOffset" def="270" use="273" target="276" covered="0"/><du var="bitOffset" def="270" use="276" covered="0"/><du var="array" def="270" use="278" covered="0"/><du var="offset" def="270" use="278" covered="0"/><du var="numBytes" def="270" use="270" target="280" covered="0"/><du var="numBytes" def="270" use="270" target="271" covered="0"/><du var="i" def="270" use="270" target="280" covered="0"/><du var="i" def="270" use="270" target="271" covered="0"/><du var="i" def="270" use="278" covered="0"/><du var="i" def="270" use="270" covered="0"/><du var="theByte" def="271" use="274" covered="0"/><du var="theByte" def="271" use="278" covered="0"/><du var="j" def="272" use="272" target="278" covered="0"/><du var="j" def="272" use="272" target="273" covered="0"/><du var="j" def="272" use="272" covered="0"/><du var="j" def="272" use="274" covered="0"/><du var="theByte" def="274" use="274" covered="0"/><du var="theByte" def="274" use="278" covered="0"/><du var="bitOffset" def="276" use="273" target="274" covered="0"/><du var="bitOffset" def="276" use="273" target="276" covered="0"/><du var="bitOffset" def="276" use="276" covered="0"/><du var="j" def="272" use="272" target="278" covered="0"/><du var="j" def="272" use="272" target="273" covered="0"/><du var="j" def="272" use="272" covered="0"/><du var="j" def="272" use="274" covered="0"/><du var="i" def="270" use="270" target="280" covered="0"/><du var="i" def="270" use="270" target="271" covered="0"/><du var="i" def="270" use="278" covered="0"/><du var="i" def="270" use="270" covered="0"/><counter type="DU" missed="32" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="()V"><du var="this" def="294" use="299" covered="0"/><du var="this" def="294" use="308" target="309" covered="0"/><du var="this" def="294" use="308" target="319" covered="0"/><du var="this" def="294" use="319" covered="0"/><du var="this" def="294" use="309" covered="0"/><du var="this.bits" def="294" use="299" covered="0"/><du var="this.size" def="294" use="308" target="309" covered="0"/><du var="this.size" def="294" use="308" target="319" covered="0"/><du var="this.size" def="294" use="309" covered="0"/><du var="newBits" def="294" use="305" covered="0"/><du var="newBits" def="294" use="319" covered="0"/><du var="newBits" def="294" use="310" covered="0"/><du var="newBits" def="294" use="312" covered="0"/><du var="newBits" def="294" use="314" covered="0"/><du var="newBits" def="294" use="317" covered="0"/><du var="len" def="296" use="305" covered="0"/><du var="oldBitsLen" def="297" use="298" target="308" covered="0"/><du var="oldBitsLen" def="297" use="298" target="299" covered="0"/><du var="oldBitsLen" def="297" use="308" target="309" covered="0"/><du var="oldBitsLen" def="297" use="308" target="319" covered="0"/><du var="oldBitsLen" def="297" use="309" covered="0"/><du var="oldBitsLen" def="297" use="311" target="317" covered="0"/><du var="oldBitsLen" def="297" use="311" target="312" covered="0"/><du var="oldBitsLen" def="297" use="317" covered="0"/><du var="i" def="298" use="298" target="308" covered="0"/><du var="i" def="298" use="298" target="299" covered="0"/><du var="i" def="298" use="299" covered="0"/><du var="i" def="298" use="305" covered="0"/><du var="i" def="298" use="298" covered="0"/><du var="i" def="298" use="298" target="308" covered="0"/><du var="i" def="298" use="298" target="299" covered="0"/><du var="i" def="298" use="299" covered="0"/><du var="i" def="298" use="305" covered="0"/><du var="i" def="298" use="298" covered="0"/><du var="leftOffset" def="309" use="313" covered="0"/><du var="leftOffset" def="309" use="315" covered="0"/><du var="currentInt" def="310" use="313" covered="0"/><du var="currentInt" def="310" use="317" covered="0"/><du var="i" def="311" use="311" target="317" covered="0"/><du var="i" def="311" use="311" target="312" covered="0"/><du var="i" def="311" use="312" covered="0"/><du var="i" def="311" use="314" covered="0"/><du var="i" def="311" use="311" covered="0"/><du var="currentInt" def="315" use="313" covered="0"/><du var="currentInt" def="315" use="317" covered="0"/><du var="i" def="311" use="311" target="317" covered="0"/><du var="i" def="311" use="311" target="312" covered="0"/><du var="i" def="311" use="312" covered="0"/><du var="i" def="311" use="314" covered="0"/><du var="i" def="311" use="311" covered="0"/><counter type="DU" missed="50" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><du var="this" def="328" use="332" target="332" covered="0"/><du var="this" def="328" use="332" target="332" covered="0"/><du var="this" def="328" use="332" target="332" covered="0"/><du var="this" def="328" use="332" target="332" covered="0"/><du var="o" def="328" use="328" target="329" covered="0"/><du var="o" def="328" use="328" target="331" covered="0"/><du var="o" def="328" use="331" covered="0"/><du var="this.size" def="328" use="332" target="332" covered="0"/><du var="this.size" def="328" use="332" target="332" covered="0"/><du var="this.bits" def="328" use="332" target="332" covered="0"/><du var="this.bits" def="328" use="332" target="332" covered="0"/><du var="other" def="331" use="332" target="332" covered="0"/><du var="other" def="331" use="332" target="332" covered="0"/><du var="other" def="331" use="332" target="332" covered="0"/><du var="other" def="331" use="332" target="332" covered="0"/><du var="other.size" def="331" use="332" target="332" covered="0"/><du var="other.size" def="331" use="332" target="332" covered="0"/><du var="other.bits" def="331" use="332" target="332" covered="0"/><du var="other.bits" def="331" use="332" target="332" covered="0"/><counter type="DU" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><du var="this" def="342" use="343" target="349" covered="1"/><du var="this" def="342" use="343" target="344" covered="1"/><du var="this" def="342" use="347" target="347" covered="1"/><du var="this" def="342" use="347" target="347" covered="1"/><du var="this.size" def="342" use="343" target="349" covered="1"/><du var="this.size" def="342" use="343" target="344" covered="1"/><du var="result" def="342" use="347" covered="1"/><du var="result" def="342" use="345" covered="1"/><du var="result" def="342" use="349" covered="1"/><du var="i" def="343" use="343" target="349" covered="0"/><du var="i" def="343" use="343" target="344" covered="1"/><du var="i" def="343" use="344" target="345" covered="1"/><du var="i" def="343" use="344" target="347" covered="0"/><du var="i" def="343" use="347" target="347" covered="1"/><du var="i" def="343" use="347" target="347" covered="1"/><du var="i" def="343" use="343" covered="1"/><du var="i" def="343" use="343" target="349" covered="1"/><du var="i" def="343" use="343" target="344" covered="1"/><du var="i" def="343" use="344" target="345" covered="1"/><du var="i" def="343" use="344" target="347" covered="1"/><du var="i" def="343" use="347" target="347" covered="1"/><du var="i" def="343" use="347" target="347" covered="1"/><du var="i" def="343" use="343" covered="1"/><counter type="DU" missed="2" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="335" covered="63"/><counter type="METHOD" missed="10" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/common/HybridBinarizer"><method name="getBlackMatrix" desc="()Lcom/google/zxing/common/BitMatrix;"><du var="this" def="63" use="63" target="64" covered="0"/><du var="this" def="63" use="63" target="66" covered="0"/><du var="this" def="63" use="66" covered="0"/><du var="this" def="63" use="86" covered="0"/><du var="this" def="63" use="88" covered="0"/><du var="this" def="63" use="83" covered="0"/><du var="this" def="63" use="64" covered="0"/><du var="this.matrix" def="63" use="63" target="64" covered="0"/><du var="this.matrix" def="63" use="63" target="66" covered="0"/><du var="this.matrix" def="63" use="64" covered="0"/><du var="source" def="66" use="70" covered="0"/><du var="width" def="67" use="69" target="69" covered="0"/><du var="width" def="67" use="69" target="86" covered="0"/><du var="width" def="67" use="71" covered="0"/><du var="width" def="67" use="72" target="73" covered="0"/><du var="width" def="67" use="72" target="75" covered="0"/><du var="width" def="67" use="79" covered="0"/><du var="width" def="67" use="81" covered="0"/><du var="width" def="67" use="82" covered="0"/><du var="height" def="68" use="69" target="70" covered="0"/><du var="height" def="68" use="69" target="86" covered="0"/><du var="height" def="68" use="75" covered="0"/><du var="height" def="68" use="76" target="77" covered="0"/><du var="height" def="68" use="76" target="79" covered="0"/><du var="height" def="68" use="79" covered="0"/><du var="height" def="68" use="81" covered="0"/><du var="height" def="68" use="82" covered="0"/><du var="luminances" def="70" use="79" covered="0"/><du var="luminances" def="70" use="82" covered="0"/><du var="subWidth" def="71" use="79" covered="0"/><du var="subWidth" def="71" use="82" covered="0"/><du var="subWidth" def="71" use="73" covered="0"/><du var="subWidth" def="73" use="79" covered="0"/><du var="subWidth" def="73" use="82" covered="0"/><du var="subHeight" def="75" use="79" covered="0"/><du var="subHeight" def="75" use="82" covered="0"/><du var="subHeight" def="75" use="77" covered="0"/><du var="subHeight" def="77" use="79" covered="0"/><du var="subHeight" def="77" use="82" covered="0"/><du var="this.matrix" def="83" use="88" covered="0"/><du var="this.matrix" def="86" use="88" covered="0"/><counter type="DU" missed="41" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateThresholdForBlock" desc="([BIIII[[ILcom/google/zxing/common/BitMatrix;)V"><du var="luminances" def="108" use="128" covered="0"/><du var="subWidth" def="108" use="116" target="110" covered="0"/><du var="subWidth" def="108" use="116" target="117" covered="0"/><du var="subWidth" def="108" use="121" covered="0"/><du var="subHeight" def="108" use="110" target="131" covered="0"/><du var="subHeight" def="108" use="110" target="111" covered="0"/><du var="subHeight" def="108" use="115" covered="0"/><du var="width" def="108" use="128" covered="0"/><du var="blackPoints" def="108" use="124" covered="0"/><du var="matrix" def="108" use="128" covered="0"/><du var="maxYOffset" def="108" use="112" target="113" covered="0"/><du var="maxYOffset" def="108" use="112" target="115" covered="0"/><du var="maxYOffset" def="108" use="113" covered="0"/><du var="maxXOffset" def="109" use="118" target="119" covered="0"/><du var="maxXOffset" def="109" use="118" target="121" covered="0"/><du var="maxXOffset" def="109" use="119" covered="0"/><du var="y" def="110" use="110" target="131" covered="0"/><du var="y" def="110" use="110" target="111" covered="0"/><du var="y" def="110" use="111" covered="0"/><du var="y" def="110" use="115" covered="0"/><du var="y" def="110" use="110" covered="0"/><du var="yoffset" def="111" use="112" target="113" covered="0"/><du var="yoffset" def="111" use="112" target="115" covered="0"/><du var="yoffset" def="111" use="128" covered="0"/><du var="yoffset" def="113" use="128" covered="0"/><du var="top" def="115" use="124" covered="0"/><du var="x" def="116" use="116" target="110" covered="0"/><du var="x" def="116" use="116" target="117" covered="0"/><du var="x" def="116" use="117" covered="0"/><du var="x" def="116" use="121" covered="0"/><du var="x" def="116" use="116" covered="0"/><du var="xoffset" def="117" use="118" target="119" covered="0"/><du var="xoffset" def="117" use="118" target="121" covered="0"/><du var="xoffset" def="117" use="128" covered="0"/><du var="xoffset" def="119" use="128" covered="0"/><du var="left" def="121" use="125" covered="0"/><du var="sum" def="122" use="125" covered="0"/><du var="sum" def="122" use="127" covered="0"/><du var="z" def="123" use="123" target="127" covered="0"/><du var="z" def="123" use="123" target="124" covered="0"/><du var="z" def="123" use="124" covered="0"/><du var="z" def="123" use="123" covered="0"/><du var="sum" def="125" use="125" covered="0"/><du var="sum" def="125" use="127" covered="0"/><du var="z" def="123" use="123" target="127" covered="0"/><du var="z" def="123" use="123" target="124" covered="0"/><du var="z" def="123" use="124" covered="0"/><du var="z" def="123" use="123" covered="0"/><du var="x" def="116" use="116" target="110" covered="0"/><du var="x" def="116" use="116" target="117" covered="0"/><du var="x" def="116" use="117" covered="0"/><du var="x" def="116" use="121" covered="0"/><du var="x" def="116" use="116" covered="0"/><du var="y" def="110" use="110" target="131" covered="0"/><du var="y" def="110" use="110" target="111" covered="0"/><du var="y" def="110" use="111" covered="0"/><du var="y" def="110" use="115" covered="0"/><du var="y" def="110" use="110" covered="0"/><counter type="DU" missed="58" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cap" desc="(III)I"><du var="value" def="134" use="134" target="134" covered="0"/><du var="value" def="134" use="134" target="134" covered="0"/><du var="value" def="134" use="134" target="134" covered="0"/><du var="value" def="134" use="134" target="134" covered="0"/><du var="value" def="134" use="134" covered="0"/><du var="min" def="134" use="134" target="134" covered="0"/><du var="min" def="134" use="134" target="134" covered="0"/><du var="max" def="134" use="134" target="134" covered="0"/><du var="max" def="134" use="134" target="134" covered="0"/><du var="max" def="134" use="134" covered="0"/><counter type="DU" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thresholdBlock" desc="([BIIIILcom/google/zxing/common/BitMatrix;)V"><du var="luminances" def="146" use="149" target="150" covered="0"/><du var="luminances" def="146" use="149" target="147" covered="0"/><du var="xoffset" def="146" use="150" covered="0"/><du var="yoffset" def="146" use="150" covered="0"/><du var="threshold" def="146" use="149" target="150" covered="0"/><du var="threshold" def="146" use="149" target="147" covered="0"/><du var="stride" def="146" use="146" covered="0"/><du var="matrix" def="146" use="150" covered="0"/><du var="y" def="146" use="146" target="154" covered="0"/><du var="y" def="146" use="146" target="147" covered="0"/><du var="y" def="146" use="150" covered="0"/><du var="y" def="146" use="146" covered="0"/><du var="offset" def="146" use="149" target="150" covered="0"/><du var="offset" def="146" use="149" target="147" covered="0"/><du var="offset" def="146" use="146" covered="0"/><du var="x" def="147" use="147" target="146" covered="0"/><du var="x" def="147" use="147" target="149" covered="0"/><du var="x" def="147" use="149" target="150" covered="0"/><du var="x" def="147" use="149" target="147" covered="0"/><du var="x" def="147" use="147" covered="0"/><du var="x" def="147" use="150" covered="0"/><du var="x" def="147" use="147" target="146" covered="0"/><du var="x" def="147" use="147" target="149" covered="0"/><du var="x" def="147" use="149" target="150" covered="0"/><du var="x" def="147" use="149" target="147" covered="0"/><du var="x" def="147" use="147" covered="0"/><du var="x" def="147" use="150" covered="0"/><du var="y" def="146" use="146" target="154" covered="0"/><du var="y" def="146" use="146" target="147" covered="0"/><du var="y" def="146" use="150" covered="0"/><du var="y" def="146" use="146" covered="0"/><du var="offset" def="146" use="149" target="150" covered="0"/><du var="offset" def="146" use="149" target="147" covered="0"/><du var="offset" def="146" use="146" covered="0"/><counter type="DU" missed="34" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateBlackPoints" desc="([BIIII)[[I"><du var="luminances" def="166" use="184" covered="0"/><du var="luminances" def="166" use="199" covered="0"/><du var="subWidth" def="166" use="174" target="169" covered="0"/><du var="subWidth" def="166" use="174" target="175" covered="0"/><du var="subHeight" def="166" use="169" target="234" covered="0"/><du var="subHeight" def="166" use="169" target="170" covered="0"/><du var="width" def="166" use="182" covered="0"/><du var="width" def="166" use="182" covered="0"/><du var="width" def="166" use="197" covered="0"/><du var="width" def="166" use="197" covered="0"/><du var="maxYOffset" def="166" use="171" target="172" covered="0"/><du var="maxYOffset" def="166" use="171" target="174" covered="0"/><du var="maxYOffset" def="166" use="172" covered="0"/><du var="maxXOffset" def="167" use="176" target="177" covered="0"/><du var="maxXOffset" def="167" use="176" target="179" covered="0"/><du var="maxXOffset" def="167" use="177" covered="0"/><du var="blackPoints" def="168" use="231" covered="0"/><du var="blackPoints" def="168" use="224" covered="0"/><du var="blackPoints" def="168" use="234" covered="0"/><du var="y" def="169" use="169" target="234" covered="0"/><du var="y" def="169" use="169" target="170" covered="0"/><du var="y" def="169" use="170" covered="0"/><du var="y" def="169" use="231" covered="0"/><du var="y" def="169" use="216" target="216" covered="0"/><du var="y" def="169" use="216" target="231" covered="0"/><du var="y" def="169" use="224" covered="0"/><du var="y" def="169" use="169" covered="0"/><du var="yoffset" def="170" use="171" target="172" covered="0"/><du var="yoffset" def="170" use="171" target="174" covered="0"/><du var="yoffset" def="170" use="182" covered="0"/><du var="yoffset" def="172" use="182" covered="0"/><du var="x" def="174" use="174" target="169" covered="0"/><du var="x" def="174" use="174" target="175" covered="0"/><du var="x" def="174" use="175" covered="0"/><du var="x" def="174" use="231" covered="0"/><du var="x" def="174" use="174" covered="0"/><du var="x" def="174" use="216" target="225" covered="0"/><du var="x" def="174" use="216" target="231" covered="0"/><du var="x" def="174" use="224" covered="0"/><du var="xoffset" def="175" use="176" target="177" covered="0"/><du var="xoffset" def="175" use="176" target="179" covered="0"/><du var="xoffset" def="175" use="182" covered="0"/><du var="xoffset" def="177" use="182" covered="0"/><du var="sum" def="179" use="185" covered="0"/><du var="sum" def="179" use="199" covered="0"/><du var="sum" def="179" use="206" covered="0"/><du var="min" def="180" use="187" target="188" covered="0"/><du var="min" def="180" use="187" target="190" covered="0"/><du var="min" def="180" use="195" target="197" covered="0"/><du var="min" def="180" use="195" target="182" covered="0"/><du var="min" def="180" use="207" target="214" covered="0"/><du var="min" def="180" use="207" target="231" covered="0"/><du var="min" def="180" use="214" covered="0"/><du var="min" def="180" use="226" target="227" covered="0"/><du var="min" def="180" use="226" target="231" covered="0"/><du var="max" def="181" use="190" target="191" covered="0"/><du var="max" def="181" use="190" target="183" covered="0"/><du var="max" def="181" use="195" target="197" covered="0"/><du var="max" def="181" use="195" target="182" covered="0"/><du var="max" def="181" use="207" target="214" covered="0"/><du var="max" def="181" use="207" target="231" covered="0"/><du var="yy" def="182" use="182" target="206" covered="0"/><du var="yy" def="182" use="182" target="183" covered="0"/><du var="yy" def="182" use="182" covered="0"/><du var="yy" def="182" use="197" covered="0"/><du var="offset" def="182" use="184" covered="0"/><du var="offset" def="182" use="182" covered="0"/><du var="offset" def="182" use="197" covered="0"/><du var="xx" def="183" use="183" target="195" covered="0"/><du var="xx" def="183" use="183" target="184" covered="0"/><du var="xx" def="183" use="184" covered="0"/><du var="xx" def="183" use="183" covered="0"/><du var="pixel" def="184" use="187" target="188" covered="0"/><du var="pixel" def="184" use="187" target="190" covered="0"/><du var="pixel" def="184" use="190" target="191" covered="0"/><du var="pixel" def="184" use="190" target="183" covered="0"/><du var="pixel" def="184" use="191" covered="0"/><du var="pixel" def="184" use="188" covered="0"/><du var="sum" def="185" use="185" covered="0"/><du var="sum" def="185" use="206" covered="0"/><du var="sum" def="185" use="199" covered="0"/><du var="min" def="188" use="187" target="188" covered="0"/><du var="min" def="188" use="187" target="190" covered="0"/><du var="min" def="188" use="195" target="197" covered="0"/><du var="min" def="188" use="195" target="182" covered="0"/><du var="min" def="188" use="207" target="214" covered="0"/><du var="min" def="188" use="207" target="231" covered="0"/><du var="min" def="188" use="214" covered="0"/><du var="min" def="188" use="226" target="227" covered="0"/><du var="min" def="188" use="226" target="231" covered="0"/><du var="max" def="191" use="190" target="191" covered="0"/><du var="max" def="191" use="190" target="183" covered="0"/><du var="max" def="191" use="195" target="197" covered="0"/><du var="max" def="191" use="195" target="182" covered="0"/><du var="max" def="191" use="207" target="214" covered="0"/><du var="max" def="191" use="207" target="231" covered="0"/><du var="xx" def="183" use="183" target="195" covered="0"/><du var="xx" def="183" use="183" target="184" covered="0"/><du var="xx" def="183" use="184" covered="0"/><du var="xx" def="183" use="183" covered="0"/><du var="yy" def="197" use="197" target="182" covered="0"/><du var="yy" def="197" use="197" target="198" covered="0"/><du var="yy" def="197" use="197" covered="0"/><du var="yy" def="197" use="182" covered="0"/><du var="offset" def="197" use="199" covered="0"/><du var="offset" def="197" use="197" covered="0"/><du var="offset" def="197" use="182" covered="0"/><du var="xx" def="198" use="198" target="197" covered="0"/><du var="xx" def="198" use="198" target="199" covered="0"/><du var="xx" def="198" use="199" covered="0"/><du var="xx" def="198" use="198" covered="0"/><du var="sum" def="199" use="199" covered="0"/><du var="sum" def="199" use="185" covered="0"/><du var="sum" def="199" use="206" covered="0"/><du var="xx" def="198" use="198" target="197" covered="0"/><du var="xx" def="198" use="198" target="199" covered="0"/><du var="xx" def="198" use="199" covered="0"/><du var="xx" def="198" use="198" covered="0"/><du var="yy" def="197" use="197" target="182" covered="0"/><du var="yy" def="197" use="197" target="198" covered="0"/><du var="yy" def="197" use="197" covered="0"/><du var="yy" def="197" use="182" covered="0"/><du var="offset" def="197" use="199" covered="0"/><du var="offset" def="197" use="197" covered="0"/><du var="offset" def="197" use="182" covered="0"/><du var="yy" def="182" use="182" target="206" covered="0"/><du var="yy" def="182" use="182" target="183" covered="0"/><du var="yy" def="182" use="182" covered="0"/><du var="yy" def="182" use="197" covered="0"/><du var="offset" def="182" use="184" covered="0"/><du var="offset" def="182" use="182" covered="0"/><du var="offset" def="182" use="197" covered="0"/><du var="average" def="206" use="231" covered="0"/><du var="average" def="214" use="231" covered="0"/><du var="averageNeighborBlackPoint" def="224" use="226" target="227" covered="0"/><du var="averageNeighborBlackPoint" def="224" use="226" target="231" covered="0"/><du var="averageNeighborBlackPoint" def="224" use="227" covered="0"/><du var="average" def="227" use="231" covered="0"/><du var="x" def="174" use="174" target="169" covered="0"/><du var="x" def="174" use="174" target="175" covered="0"/><du var="x" def="174" use="175" covered="0"/><du var="x" def="174" use="231" covered="0"/><du var="x" def="174" use="174" covered="0"/><du var="x" def="174" use="216" target="225" covered="0"/><du var="x" def="174" use="216" target="231" covered="0"/><du var="x" def="174" use="224" covered="0"/><du var="y" def="169" use="169" target="234" covered="0"/><du var="y" def="169" use="169" target="170" covered="0"/><du var="y" def="169" use="170" covered="0"/><du var="y" def="169" use="231" covered="0"/><du var="y" def="169" use="216" target="216" covered="0"/><du var="y" def="169" use="216" target="231" covered="0"/><du var="y" def="169" use="224" covered="0"/><du var="y" def="169" use="169" covered="0"/><counter type="DU" missed="154" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="297" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/common/PerspectiveTransform"><method name="transformPoints" desc="([F)V"><du var="points" def="67" use="78" covered="1"/><du var="points" def="67" use="79" covered="1"/><du var="points" def="67" use="81" covered="1"/><du var="points" def="67" use="82" covered="1"/><du var="max" def="67" use="77" target="84" covered="1"/><du var="max" def="67" use="77" target="78" covered="1"/><du var="a11" def="68" use="81" covered="1"/><du var="a12" def="69" use="82" covered="1"/><du var="a13" def="70" use="80" covered="1"/><du var="a21" def="71" use="81" covered="1"/><du var="a22" def="72" use="82" covered="1"/><du var="a23" def="73" use="80" covered="1"/><du var="a31" def="74" use="81" covered="1"/><du var="a32" def="75" use="82" covered="1"/><du var="a33" def="76" use="80" covered="1"/><du var="i" def="77" use="77" target="84" covered="0"/><du var="i" def="77" use="77" target="78" covered="1"/><du var="i" def="77" use="78" covered="1"/><du var="i" def="77" use="79" covered="1"/><du var="i" def="77" use="81" covered="1"/><du var="i" def="77" use="82" covered="1"/><du var="i" def="77" use="77" covered="1"/><du var="i" def="77" use="77" target="84" covered="1"/><du var="i" def="77" use="77" target="78" covered="1"/><du var="i" def="77" use="78" covered="1"/><du var="i" def="77" use="79" covered="1"/><du var="i" def="77" use="81" covered="1"/><du var="i" def="77" use="82" covered="1"/><du var="i" def="77" use="77" covered="1"/><counter type="DU" missed="1" covered="28"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transformPoints" desc="([F[F)V"><du var="this" def="87" use="91" covered="0"/><du var="this" def="87" use="92" covered="0"/><du var="this" def="87" use="93" covered="0"/><du var="xValues" def="87" use="89" covered="0"/><du var="xValues" def="87" use="92" covered="0"/><du var="yValues" def="87" use="90" covered="0"/><du var="yValues" def="87" use="93" covered="0"/><du var="this.a13" def="87" use="91" covered="0"/><du var="this.a23" def="87" use="91" covered="0"/><du var="this.a33" def="87" use="91" covered="0"/><du var="this.a11" def="87" use="92" covered="0"/><du var="this.a21" def="87" use="92" covered="0"/><du var="this.a31" def="87" use="92" covered="0"/><du var="this.a12" def="87" use="93" covered="0"/><du var="this.a22" def="87" use="93" covered="0"/><du var="this.a32" def="87" use="93" covered="0"/><du var="n" def="87" use="88" target="95" covered="0"/><du var="n" def="87" use="88" target="89" covered="0"/><du var="i" def="88" use="88" target="95" covered="0"/><du var="i" def="88" use="88" target="89" covered="0"/><du var="i" def="88" use="89" covered="0"/><du var="i" def="88" use="90" covered="0"/><du var="i" def="88" use="92" covered="0"/><du var="i" def="88" use="93" covered="0"/><du var="i" def="88" use="88" covered="0"/><du var="i" def="88" use="88" target="95" covered="0"/><du var="i" def="88" use="88" target="89" covered="0"/><du var="i" def="88" use="89" covered="0"/><du var="i" def="88" use="90" covered="0"/><du var="i" def="88" use="92" covered="0"/><du var="i" def="88" use="93" covered="0"/><du var="i" def="88" use="88" covered="0"/><counter type="DU" missed="32" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="squareToQuadrilateral" desc="(FFFFFFFF)Lcom/google/zxing/common/PerspectiveTransform;"><du var="x0" def="101" use="116" covered="0"/><du var="x0" def="101" use="105" covered="1"/><du var="y0" def="101" use="116" covered="0"/><du var="y0" def="101" use="105" covered="1"/><du var="x1" def="101" use="109" covered="0"/><du var="x1" def="101" use="116" covered="0"/><du var="x1" def="101" use="105" covered="1"/><du var="y1" def="101" use="111" covered="0"/><du var="y1" def="101" use="116" covered="0"/><du var="y1" def="101" use="105" covered="1"/><du var="x2" def="101" use="109" covered="0"/><du var="x2" def="101" use="110" covered="0"/><du var="x2" def="101" use="105" covered="1"/><du var="y2" def="101" use="111" covered="0"/><du var="y2" def="101" use="112" covered="0"/><du var="y2" def="101" use="105" covered="1"/><du var="x3" def="101" use="110" covered="0"/><du var="x3" def="101" use="116" covered="0"/><du var="y3" def="101" use="112" covered="0"/><du var="y3" def="101" use="116" covered="0"/><du var="dx3" def="101" use="103" target="103" covered="1"/><du var="dx3" def="101" use="103" target="109" covered="0"/><du var="dx3" def="101" use="114" covered="0"/><du var="dx3" def="101" use="115" covered="0"/><du var="dy3" def="102" use="114" covered="0"/><du var="dy3" def="102" use="115" covered="0"/><du var="dy3" def="102" use="103" target="105" covered="1"/><du var="dy3" def="102" use="103" target="109" covered="0"/><counter type="DU" missed="20" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="53" covered="36"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/common/CharacterSetECI"><method name="getCharacterSetECIByValue" desc="(I)Lcom/google/zxing/common/CharacterSetECI;"><du var="value" def="103" use="103" target="103" covered="0"/><du var="value" def="103" use="103" target="104" covered="0"/><du var="value" def="103" use="103" target="104" covered="0"/><du var="value" def="103" use="103" target="106" covered="0"/><du var="value" def="103" use="106" covered="0"/><du var="VALUE_TO_ECI" def="103" use="106" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/common/detector/WhiteRectangleDetector"><method name="&lt;init&gt;" desc="(Lcom/google/zxing/common/BitMatrix;III)V"><du var="this" def="57" use="66" target="66" covered="1"/><du var="this" def="57" use="66" target="67" covered="0"/><du var="this" def="57" use="66" target="66" covered="1"/><du var="this" def="57" use="66" target="67" covered="0"/><du var="this" def="57" use="66" target="66" covered="1"/><du var="this" def="57" use="66" target="67" covered="0"/><du var="this" def="57" use="66" target="67" covered="0"/><du var="this" def="57" use="66" target="69" covered="1"/><du var="this.height" def="59" use="66" target="66" covered="1"/><du var="this.height" def="59" use="66" target="67" covered="0"/><du var="this.width" def="60" use="66" target="67" covered="0"/><du var="this.width" def="60" use="66" target="69" covered="1"/><du var="this.leftInit" def="62" use="66" target="66" covered="1"/><du var="this.leftInit" def="62" use="66" target="67" covered="0"/><du var="this.rightInit" def="63" use="66" target="67" covered="0"/><du var="this.rightInit" def="63" use="66" target="69" covered="1"/><du var="this.upInit" def="64" use="66" target="66" covered="1"/><du var="this.upInit" def="64" use="66" target="67" covered="0"/><du var="this.downInit" def="65" use="66" target="66" covered="1"/><du var="this.downInit" def="65" use="66" target="67" covered="0"/><counter type="DU" missed="10" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detect" desc="()[Lcom/google/zxing/ResultPoint;"><du var="this" def="87" use="108" target="119" covered="0"/><du var="this" def="87" use="108" target="109" covered="1"/><du var="this" def="87" use="109" covered="1"/><du var="this" def="87" use="119" target="120" covered="0"/><du var="this" def="87" use="119" target="127" covered="1"/><du var="this" def="87" use="128" target="139" covered="0"/><du var="this" def="87" use="128" target="129" covered="1"/><du var="this" def="87" use="129" covered="1"/><du var="this" def="87" use="139" target="140" covered="0"/><du var="this" def="87" use="139" target="147" covered="1"/><du var="this" def="87" use="149" covered="1"/><du var="this" def="87" use="169" covered="1"/><du var="this" def="87" use="233" covered="1"/><du var="this" def="87" use="226" covered="1"/><du var="this" def="87" use="216" covered="1"/><du var="this" def="87" use="206" covered="1"/><du var="this" def="87" use="196" covered="1"/><du var="this.width" def="87" use="108" target="119" covered="0"/><du var="this.width" def="87" use="108" target="109" covered="1"/><du var="this.width" def="87" use="119" target="120" covered="0"/><du var="this.width" def="87" use="119" target="127" covered="1"/><du var="this.height" def="87" use="128" target="139" covered="0"/><du var="this.height" def="87" use="128" target="129" covered="1"/><du var="this.height" def="87" use="139" target="140" covered="0"/><du var="this.height" def="87" use="139" target="147" covered="1"/><du var="left" def="87" use="129" covered="1"/><du var="left" def="87" use="148" target="159" covered="0"/><du var="left" def="87" use="148" target="149" covered="1"/><du var="left" def="87" use="149" covered="1"/><du var="left" def="87" use="155" covered="0"/><du var="left" def="87" use="151" covered="1"/><du var="left" def="87" use="159" target="160" covered="0"/><du var="left" def="87" use="159" target="167" covered="0"/><du var="left" def="87" use="169" covered="0"/><du var="left" def="87" use="192" covered="0"/><du var="left" def="87" use="206" covered="0"/><du var="left" def="87" use="196" covered="0"/><du var="right" def="88" use="108" target="119" covered="0"/><du var="right" def="88" use="108" target="109" covered="1"/><du var="right" def="88" use="109" covered="1"/><du var="right" def="88" use="115" covered="0"/><du var="right" def="88" use="111" covered="1"/><du var="right" def="88" use="119" target="120" covered="0"/><du var="right" def="88" use="119" target="127" covered="0"/><du var="right" def="88" use="129" covered="0"/><du var="right" def="88" use="169" covered="0"/><du var="right" def="88" use="192" covered="0"/><du var="right" def="88" use="226" covered="0"/><du var="right" def="88" use="216" covered="0"/><du var="up" def="89" use="109" covered="1"/><du var="up" def="89" use="149" covered="1"/><du var="up" def="89" use="168" target="179" covered="0"/><du var="up" def="89" use="168" target="169" covered="1"/><du var="up" def="89" use="169" covered="1"/><du var="up" def="89" use="175" covered="0"/><du var="up" def="89" use="171" covered="1"/><du var="up" def="89" use="179" target="180" covered="0"/><du var="up" def="89" use="179" target="184" covered="0"/><du var="up" def="89" use="216" covered="0"/><du var="up" def="89" use="206" covered="0"/><du var="down" def="90" use="109" covered="1"/><du var="down" def="90" use="128" target="139" covered="0"/><du var="down" def="90" use="128" target="129" covered="1"/><du var="down" def="90" use="129" covered="1"/><du var="down" def="90" use="135" covered="0"/><du var="down" def="90" use="131" covered="1"/><du var="down" def="90" use="139" target="140" covered="0"/><du var="down" def="90" use="139" target="147" covered="0"/><du var="down" def="90" use="149" covered="0"/><du var="down" def="90" use="226" covered="0"/><du var="down" def="90" use="196" covered="0"/><du var="sizeExceeded" def="91" use="190" target="190" covered="1"/><du var="sizeExceeded" def="91" use="190" target="236" covered="0"/><du var="aBlackPointFoundOnBorder" def="92" use="100" target="190" covered="0"/><du var="aBlackPointFoundOnBorder" def="92" use="100" target="102" covered="1"/><du var="atLeastOneBlackPointFoundOnBorder" def="93" use="190" target="192" covered="0"/><du var="atLeastOneBlackPointFoundOnBorder" def="93" use="190" target="236" covered="0"/><du var="atLeastOneBlackPointFoundOnRight" def="95" use="114" target="115" covered="0"/><du var="atLeastOneBlackPointFoundOnRight" def="95" use="114" target="108" covered="0"/><du var="atLeastOneBlackPointFoundOnRight" def="95" use="108" target="108" covered="0"/><du var="atLeastOneBlackPointFoundOnRight" def="95" use="108" target="119" covered="0"/><du var="atLeastOneBlackPointFoundOnBottom" def="96" use="134" target="135" covered="0"/><du var="atLeastOneBlackPointFoundOnBottom" def="96" use="134" target="128" covered="0"/><du var="atLeastOneBlackPointFoundOnBottom" def="96" use="128" target="128" covered="0"/><du var="atLeastOneBlackPointFoundOnBottom" def="96" use="128" target="139" covered="0"/><du var="atLeastOneBlackPointFoundOnLeft" def="97" use="154" target="155" covered="0"/><du var="atLeastOneBlackPointFoundOnLeft" def="97" use="154" target="148" covered="0"/><du var="atLeastOneBlackPointFoundOnLeft" def="97" use="148" target="148" covered="0"/><du var="atLeastOneBlackPointFoundOnLeft" def="97" use="148" target="159" covered="0"/><du var="atLeastOneBlackPointFoundOnTop" def="98" use="174" target="175" covered="0"/><du var="atLeastOneBlackPointFoundOnTop" def="98" use="174" target="168" covered="0"/><du var="atLeastOneBlackPointFoundOnTop" def="98" use="168" target="168" covered="0"/><du var="atLeastOneBlackPointFoundOnTop" def="98" use="168" target="179" covered="0"/><du var="aBlackPointFoundOnBorder" def="102" use="184" target="185" covered="0"/><du var="aBlackPointFoundOnBorder" def="102" use="184" target="100" covered="1"/><du var="aBlackPointFoundOnBorder" def="102" use="100" target="190" covered="1"/><du var="aBlackPointFoundOnBorder" def="102" use="100" target="102" covered="0"/><du var="rightBorderNotWhite" def="107" use="108" target="108" covered="0"/><du var="rightBorderNotWhite" def="107" use="108" target="108" covered="1"/><du var="rightBorderNotWhite" def="109" use="110" target="111" covered="1"/><du var="rightBorderNotWhite" def="109" use="110" target="114" covered="1"/><du var="rightBorderNotWhite" def="109" use="108" target="108" covered="1"/><du var="rightBorderNotWhite" def="109" use="108" target="108" covered="1"/><du var="right" def="111" use="108" target="119" covered="0"/><du var="right" def="111" use="108" target="109" covered="1"/><du var="right" def="111" use="109" covered="1"/><du var="right" def="111" use="115" covered="0"/><du var="right" def="111" use="111" covered="1"/><du var="right" def="111" use="119" target="120" covered="0"/><du var="right" def="111" use="119" target="127" covered="1"/><du var="right" def="111" use="129" covered="1"/><du var="right" def="111" use="169" covered="1"/><du var="right" def="111" use="192" covered="1"/><du var="right" def="111" use="226" covered="1"/><du var="right" def="111" use="216" covered="1"/><du var="aBlackPointFoundOnBorder" def="112" use="184" target="185" covered="0"/><du var="aBlackPointFoundOnBorder" def="112" use="184" target="100" covered="0"/><du var="aBlackPointFoundOnBorder" def="112" use="100" target="190" covered="0"/><du var="aBlackPointFoundOnBorder" def="112" use="100" target="102" covered="0"/><du var="atLeastOneBlackPointFoundOnRight" def="113" use="114" target="115" covered="0"/><du var="atLeastOneBlackPointFoundOnRight" def="113" use="114" target="108" covered="1"/><du var="atLeastOneBlackPointFoundOnRight" def="113" use="108" target="108" covered="0"/><du var="atLeastOneBlackPointFoundOnRight" def="113" use="108" target="119" covered="1"/><du var="right" def="115" use="108" target="119" covered="0"/><du var="right" def="115" use="108" target="109" covered="0"/><du var="right" def="115" use="109" covered="0"/><du var="right" def="115" use="115" covered="0"/><du var="right" def="115" use="111" covered="0"/><du var="right" def="115" use="119" target="120" covered="0"/><du var="right" def="115" use="119" target="127" covered="0"/><du var="right" def="115" use="129" covered="0"/><du var="right" def="115" use="169" covered="0"/><du var="right" def="115" use="192" covered="0"/><du var="right" def="115" use="226" covered="0"/><du var="right" def="115" use="216" covered="0"/><du var="sizeExceeded" def="120" use="190" target="190" covered="0"/><du var="sizeExceeded" def="120" use="190" target="236" covered="0"/><du var="bottomBorderNotWhite" def="127" use="128" target="128" covered="0"/><du var="bottomBorderNotWhite" def="127" use="128" target="128" covered="1"/><du var="bottomBorderNotWhite" def="129" use="130" target="131" covered="1"/><du var="bottomBorderNotWhite" def="129" use="130" target="134" covered="1"/><du var="bottomBorderNotWhite" def="129" use="128" target="128" covered="1"/><du var="bottomBorderNotWhite" def="129" use="128" target="128" covered="1"/><du var="down" def="131" use="128" target="139" covered="0"/><du var="down" def="131" use="128" target="129" covered="1"/><du var="down" def="131" use="129" covered="1"/><du var="down" def="131" use="135" covered="0"/><du var="down" def="131" use="131" covered="1"/><du var="down" def="131" use="139" target="140" covered="0"/><du var="down" def="131" use="139" target="147" covered="1"/><du var="down" def="131" use="149" covered="1"/><du var="down" def="131" use="109" covered="1"/><du var="down" def="131" use="226" covered="1"/><du var="down" def="131" use="196" covered="1"/><du var="aBlackPointFoundOnBorder" def="132" use="184" target="185" covered="0"/><du var="aBlackPointFoundOnBorder" def="132" use="184" target="100" covered="0"/><du var="aBlackPointFoundOnBorder" def="132" use="100" target="190" covered="0"/><du var="aBlackPointFoundOnBorder" def="132" use="100" target="102" covered="0"/><du var="atLeastOneBlackPointFoundOnBottom" def="133" use="134" target="135" covered="0"/><du var="atLeastOneBlackPointFoundOnBottom" def="133" use="134" target="128" covered="1"/><du var="atLeastOneBlackPointFoundOnBottom" def="133" use="128" target="128" covered="0"/><du var="atLeastOneBlackPointFoundOnBottom" def="133" use="128" target="139" covered="1"/><du var="down" def="135" use="128" target="139" covered="0"/><du var="down" def="135" use="128" target="129" covered="0"/><du var="down" def="135" use="129" covered="0"/><du var="down" def="135" use="135" covered="0"/><du var="down" def="135" use="131" covered="0"/><du var="down" def="135" use="139" target="140" covered="0"/><du var="down" def="135" use="139" target="147" covered="0"/><du var="down" def="135" use="149" covered="0"/><du var="down" def="135" use="109" covered="0"/><du var="down" def="135" use="226" covered="0"/><du var="down" def="135" use="196" covered="0"/><du var="sizeExceeded" def="140" use="190" target="190" covered="0"/><du var="sizeExceeded" def="140" use="190" target="236" covered="0"/><du var="leftBorderNotWhite" def="147" use="148" target="148" covered="0"/><du var="leftBorderNotWhite" def="147" use="148" target="148" covered="1"/><du var="leftBorderNotWhite" def="149" use="150" target="151" covered="1"/><du var="leftBorderNotWhite" def="149" use="150" target="154" covered="1"/><du var="leftBorderNotWhite" def="149" use="148" target="148" covered="1"/><du var="leftBorderNotWhite" def="149" use="148" target="148" covered="1"/><du var="left" def="151" use="148" target="159" covered="0"/><du var="left" def="151" use="148" target="149" covered="1"/><du var="left" def="151" use="149" covered="1"/><du var="left" def="151" use="155" covered="0"/><du var="left" def="151" use="151" covered="1"/><du var="left" def="151" use="159" target="160" covered="0"/><du var="left" def="151" use="159" target="167" covered="1"/><du var="left" def="151" use="169" covered="1"/><du var="left" def="151" use="129" covered="1"/><du var="left" def="151" use="192" covered="1"/><du var="left" def="151" use="206" covered="1"/><du var="left" def="151" use="196" covered="1"/><du var="aBlackPointFoundOnBorder" def="152" use="184" target="185" covered="0"/><du var="aBlackPointFoundOnBorder" def="152" use="184" target="100" covered="0"/><du var="aBlackPointFoundOnBorder" def="152" use="100" target="190" covered="0"/><du var="aBlackPointFoundOnBorder" def="152" use="100" target="102" covered="0"/><du var="atLeastOneBlackPointFoundOnLeft" def="153" use="154" target="155" covered="0"/><du var="atLeastOneBlackPointFoundOnLeft" def="153" use="154" target="148" covered="1"/><du var="atLeastOneBlackPointFoundOnLeft" def="153" use="148" target="148" covered="0"/><du var="atLeastOneBlackPointFoundOnLeft" def="153" use="148" target="159" covered="1"/><du var="left" def="155" use="148" target="159" covered="0"/><du var="left" def="155" use="148" target="149" covered="0"/><du var="left" def="155" use="149" covered="0"/><du var="left" def="155" use="155" covered="0"/><du var="left" def="155" use="151" covered="0"/><du var="left" def="155" use="159" target="160" covered="0"/><du var="left" def="155" use="159" target="167" covered="0"/><du var="left" def="155" use="169" covered="0"/><du var="left" def="155" use="129" covered="0"/><du var="left" def="155" use="192" covered="0"/><du var="left" def="155" use="206" covered="0"/><du var="left" def="155" use="196" covered="0"/><du var="sizeExceeded" def="160" use="190" target="190" covered="0"/><du var="sizeExceeded" def="160" use="190" target="236" covered="0"/><du var="topBorderNotWhite" def="167" use="168" target="168" covered="0"/><du var="topBorderNotWhite" def="167" use="168" target="168" covered="1"/><du var="topBorderNotWhite" def="169" use="170" target="171" covered="1"/><du var="topBorderNotWhite" def="169" use="170" target="174" covered="1"/><du var="topBorderNotWhite" def="169" use="168" target="168" covered="1"/><du var="topBorderNotWhite" def="169" use="168" target="168" covered="1"/><du var="up" def="171" use="168" target="179" covered="0"/><du var="up" def="171" use="168" target="169" covered="1"/><du var="up" def="171" use="169" covered="1"/><du var="up" def="171" use="175" covered="0"/><du var="up" def="171" use="171" covered="1"/><du var="up" def="171" use="179" target="180" covered="0"/><du var="up" def="171" use="179" target="184" covered="1"/><du var="up" def="171" use="109" covered="1"/><du var="up" def="171" use="149" covered="1"/><du var="up" def="171" use="216" covered="1"/><du var="up" def="171" use="206" covered="1"/><du var="aBlackPointFoundOnBorder" def="172" use="184" target="185" covered="1"/><du var="aBlackPointFoundOnBorder" def="172" use="184" target="100" covered="0"/><du var="aBlackPointFoundOnBorder" def="172" use="100" target="190" covered="0"/><du var="aBlackPointFoundOnBorder" def="172" use="100" target="102" covered="1"/><du var="atLeastOneBlackPointFoundOnTop" def="173" use="174" target="175" covered="0"/><du var="atLeastOneBlackPointFoundOnTop" def="173" use="174" target="168" covered="1"/><du var="atLeastOneBlackPointFoundOnTop" def="173" use="168" target="168" covered="0"/><du var="atLeastOneBlackPointFoundOnTop" def="173" use="168" target="179" covered="1"/><du var="up" def="175" use="168" target="179" covered="0"/><du var="up" def="175" use="168" target="169" covered="0"/><du var="up" def="175" use="169" covered="0"/><du var="up" def="175" use="175" covered="0"/><du var="up" def="175" use="171" covered="0"/><du var="up" def="175" use="179" target="180" covered="0"/><du var="up" def="175" use="179" target="184" covered="0"/><du var="up" def="175" use="109" covered="0"/><du var="up" def="175" use="149" covered="0"/><du var="up" def="175" use="216" covered="0"/><du var="up" def="175" use="206" covered="0"/><du var="sizeExceeded" def="180" use="190" target="190" covered="0"/><du var="sizeExceeded" def="180" use="190" target="236" covered="0"/><du var="atLeastOneBlackPointFoundOnBorder" def="185" use="190" target="192" covered="1"/><du var="atLeastOneBlackPointFoundOnBorder" def="185" use="190" target="236" covered="0"/><du var="maxSize" def="192" use="225" target="229" covered="0"/><du var="maxSize" def="192" use="225" target="226" covered="1"/><du var="maxSize" def="192" use="215" target="219" covered="0"/><du var="maxSize" def="192" use="215" target="216" covered="1"/><du var="maxSize" def="192" use="205" target="209" covered="0"/><du var="maxSize" def="192" use="205" target="206" covered="1"/><du var="maxSize" def="192" use="195" target="199" covered="0"/><du var="maxSize" def="192" use="195" target="196" covered="1"/><du var="z" def="194" use="195" target="195" covered="1"/><du var="z" def="194" use="195" target="199" covered="0"/><du var="z" def="194" use="199" target="200" covered="0"/><du var="z" def="194" use="199" target="203" covered="0"/><du var="z" def="194" use="233" covered="0"/><du var="i" def="195" use="195" target="199" covered="0"/><du var="i" def="195" use="195" target="196" covered="1"/><du var="i" def="195" use="196" covered="1"/><du var="i" def="195" use="195" covered="1"/><du var="z" def="196" use="195" target="195" covered="1"/><du var="z" def="196" use="195" target="199" covered="1"/><du var="z" def="196" use="199" target="200" covered="0"/><du var="z" def="196" use="199" target="203" covered="1"/><du var="z" def="196" use="233" covered="1"/><du var="i" def="195" use="195" target="199" covered="0"/><du var="i" def="195" use="195" target="196" covered="1"/><du var="i" def="195" use="196" covered="1"/><du var="i" def="195" use="195" covered="1"/><du var="t" def="203" use="205" target="205" covered="1"/><du var="t" def="203" use="205" target="209" covered="0"/><du var="t" def="203" use="209" target="210" covered="0"/><du var="t" def="203" use="209" target="213" covered="0"/><du var="t" def="203" use="233" covered="0"/><du var="i" def="205" use="205" target="209" covered="0"/><du var="i" def="205" use="205" target="206" covered="1"/><du var="i" def="205" use="206" covered="1"/><du var="i" def="205" use="205" covered="1"/><du var="t" def="206" use="205" target="205" covered="1"/><du var="t" def="206" use="205" target="209" covered="1"/><du var="t" def="206" use="209" target="210" covered="0"/><du var="t" def="206" use="209" target="213" covered="1"/><du var="t" def="206" use="233" covered="1"/><du var="i" def="205" use="205" target="209" covered="0"/><du var="i" def="205" use="205" target="206" covered="1"/><du var="i" def="205" use="206" covered="1"/><du var="i" def="205" use="205" covered="1"/><du var="x" def="213" use="215" target="215" covered="1"/><du var="x" def="213" use="215" target="219" covered="0"/><du var="x" def="213" use="219" target="220" covered="0"/><du var="x" def="213" use="219" target="223" covered="0"/><du var="x" def="213" use="233" covered="0"/><du var="i" def="215" use="215" target="219" covered="0"/><du var="i" def="215" use="215" target="216" covered="1"/><du var="i" def="215" use="216" covered="1"/><du var="i" def="215" use="215" covered="1"/><du var="x" def="216" use="215" target="215" covered="1"/><du var="x" def="216" use="215" target="219" covered="1"/><du var="x" def="216" use="219" target="220" covered="0"/><du var="x" def="216" use="219" target="223" covered="1"/><du var="x" def="216" use="233" covered="1"/><du var="i" def="215" use="215" target="219" covered="0"/><du var="i" def="215" use="215" target="216" covered="1"/><du var="i" def="215" use="216" covered="1"/><du var="i" def="215" use="215" covered="1"/><du var="y" def="223" use="225" target="225" covered="1"/><du var="y" def="223" use="225" target="229" covered="0"/><du var="y" def="223" use="229" target="230" covered="0"/><du var="y" def="223" use="229" target="233" covered="0"/><du var="y" def="223" use="233" covered="0"/><du var="i" def="225" use="225" target="229" covered="0"/><du var="i" def="225" use="225" target="226" covered="1"/><du var="i" def="225" use="226" covered="1"/><du var="i" def="225" use="225" covered="1"/><du var="y" def="226" use="225" target="225" covered="1"/><du var="y" def="226" use="225" target="229" covered="1"/><du var="y" def="226" use="229" target="230" covered="0"/><du var="y" def="226" use="229" target="233" covered="1"/><du var="y" def="226" use="233" covered="1"/><du var="i" def="225" use="225" target="229" covered="0"/><du var="i" def="225" use="225" target="226" covered="1"/><du var="i" def="225" use="226" covered="1"/><du var="i" def="225" use="225" covered="1"/><counter type="DU" missed="185" covered="150"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBlackPointOnSegment" desc="(FFFF)Lcom/google/zxing/ResultPoint;"><du var="this" def="241" use="248" target="249" covered="1"/><du var="this" def="241" use="248" target="245" covered="1"/><du var="aX" def="241" use="246" covered="1"/><du var="aY" def="241" use="247" covered="1"/><du var="this.image" def="241" use="248" target="249" covered="1"/><du var="this.image" def="241" use="248" target="245" covered="1"/><du var="dist" def="241" use="245" target="252" covered="1"/><du var="dist" def="241" use="245" target="246" covered="1"/><du var="xStep" def="242" use="246" covered="1"/><du var="yStep" def="243" use="247" covered="1"/><du var="i" def="245" use="245" target="252" covered="0"/><du var="i" def="245" use="245" target="246" covered="1"/><du var="i" def="245" use="246" covered="1"/><du var="i" def="245" use="247" covered="1"/><du var="i" def="245" use="245" covered="1"/><du var="x" def="246" use="248" target="249" covered="1"/><du var="x" def="246" use="248" target="245" covered="1"/><du var="x" def="246" use="249" covered="1"/><du var="y" def="247" use="248" target="249" covered="1"/><du var="y" def="247" use="248" target="245" covered="1"/><du var="y" def="247" use="249" covered="1"/><du var="i" def="245" use="245" target="252" covered="1"/><du var="i" def="245" use="245" target="246" covered="1"/><du var="i" def="245" use="246" covered="1"/><du var="i" def="245" use="247" covered="1"/><du var="i" def="245" use="245" covered="0"/><counter type="DU" missed="2" covered="24"/><counter type="METHOD" missed="0" covered="1"/></method><method name="centerEdges" desc="(Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;)[Lcom/google/zxing/ResultPoint;"><du var="this" def="278" use="287" target="288" covered="0"/><du var="this" def="278" use="287" target="294" covered="1"/><du var="this.width" def="278" use="287" target="288" covered="0"/><du var="this.width" def="278" use="287" target="294" covered="1"/><du var="yi" def="278" use="287" target="288" covered="0"/><du var="yi" def="278" use="287" target="294" covered="1"/><du var="yi" def="278" use="298" covered="1"/><du var="yi" def="278" use="292" covered="0"/><du var="yj" def="279" use="298" covered="1"/><du var="yj" def="279" use="292" covered="0"/><du var="zi" def="280" use="296" covered="1"/><du var="zi" def="280" use="290" covered="0"/><du var="zj" def="281" use="296" covered="1"/><du var="zj" def="281" use="290" covered="0"/><du var="xi" def="282" use="297" covered="1"/><du var="xi" def="282" use="291" covered="0"/><du var="xj" def="283" use="297" covered="1"/><du var="xj" def="283" use="291" covered="0"/><du var="ti" def="284" use="295" covered="1"/><du var="ti" def="284" use="289" covered="0"/><du var="tj" def="285" use="295" covered="1"/><du var="tj" def="285" use="289" covered="0"/><counter type="DU" missed="11" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsBlackPoint" desc="(IIIZ)Z"><du var="this" def="313" use="321" target="322" covered="1"/><du var="this" def="313" use="321" target="320" covered="1"/><du var="this" def="313" use="315" target="316" covered="1"/><du var="this" def="313" use="315" target="314" covered="1"/><du var="a" def="313" use="320" covered="1"/><du var="a" def="313" use="314" covered="1"/><du var="b" def="313" use="320" target="327" covered="1"/><du var="b" def="313" use="320" target="321" covered="1"/><du var="b" def="313" use="314" target="319" covered="1"/><du var="b" def="313" use="314" target="315" covered="1"/><du var="fixed" def="313" use="321" target="322" covered="1"/><du var="fixed" def="313" use="321" target="320" covered="1"/><du var="fixed" def="313" use="315" target="316" covered="1"/><du var="fixed" def="313" use="315" target="314" covered="1"/><du var="horizontal" def="313" use="313" target="314" covered="1"/><du var="horizontal" def="313" use="313" target="320" covered="1"/><du var="this.image" def="313" use="321" target="322" covered="1"/><du var="this.image" def="313" use="321" target="320" covered="1"/><du var="this.image" def="313" use="315" target="316" covered="1"/><du var="this.image" def="313" use="315" target="314" covered="1"/><du var="x" def="314" use="314" target="319" covered="0"/><du var="x" def="314" use="314" target="315" covered="1"/><du var="x" def="314" use="315" target="316" covered="1"/><du var="x" def="314" use="315" target="314" covered="1"/><du var="x" def="314" use="314" covered="1"/><du var="x" def="314" use="314" target="319" covered="1"/><du var="x" def="314" use="314" target="315" covered="1"/><du var="x" def="314" use="315" target="316" covered="1"/><du var="x" def="314" use="315" target="314" covered="1"/><du var="x" def="314" use="314" covered="1"/><du var="y" def="320" use="320" target="327" covered="0"/><du var="y" def="320" use="320" target="321" covered="1"/><du var="y" def="320" use="321" target="322" covered="1"/><du var="y" def="320" use="321" target="320" covered="1"/><du var="y" def="320" use="320" covered="1"/><du var="y" def="320" use="320" target="327" covered="1"/><du var="y" def="320" use="320" target="321" covered="1"/><du var="y" def="320" use="321" target="322" covered="0"/><du var="y" def="320" use="321" target="320" covered="1"/><du var="y" def="320" use="320" covered="1"/><counter type="DU" missed="3" covered="37"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="211" covered="232"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/common/detector/MonochromeRectangleDetector"><method name="findCornerFromCenter" desc="(IIIIIIIII)Lcom/google/zxing/ResultPoint;"><du var="this" def="111" use="121" covered="0"/><du var="this" def="111" use="118" covered="0"/><du var="centerX" def="111" use="130" target="131" covered="0"/><du var="centerX" def="111" use="130" target="137" covered="0"/><du var="centerX" def="111" use="131" target="133" covered="0"/><du var="centerX" def="111" use="131" target="135" covered="0"/><du var="deltaX" def="111" use="116" target="118" covered="0"/><du var="deltaX" def="111" use="116" target="121" covered="0"/><du var="deltaX" def="111" use="114" covered="0"/><du var="deltaX" def="111" use="128" target="129" covered="0"/><du var="deltaX" def="111" use="128" target="140" covered="0"/><du var="deltaX" def="111" use="140" covered="0"/><du var="deltaX" def="111" use="143" target="143" covered="0"/><du var="deltaX" def="111" use="143" target="143" covered="0"/><du var="left" def="111" use="112" target="153" covered="0"/><du var="left" def="111" use="112" target="116" covered="0"/><du var="left" def="111" use="118" covered="0"/><du var="right" def="111" use="113" target="113" covered="0"/><du var="right" def="111" use="113" target="153" covered="0"/><du var="right" def="111" use="118" covered="0"/><du var="centerY" def="111" use="141" target="142" covered="0"/><du var="centerY" def="111" use="141" target="147" covered="0"/><du var="centerY" def="111" use="142" target="143" covered="0"/><du var="centerY" def="111" use="142" target="145" covered="0"/><du var="deltaY" def="111" use="114" covered="0"/><du var="deltaY" def="111" use="129" covered="0"/><du var="deltaY" def="111" use="133" target="133" covered="0"/><du var="deltaY" def="111" use="133" target="133" covered="0"/><du var="top" def="111" use="113" target="113" covered="0"/><du var="top" def="111" use="113" target="153" covered="0"/><du var="top" def="111" use="121" covered="0"/><du var="bottom" def="111" use="113" target="113" covered="0"/><du var="bottom" def="111" use="113" target="153" covered="0"/><du var="bottom" def="111" use="121" covered="0"/><du var="maxWhiteRun" def="111" use="121" covered="0"/><du var="maxWhiteRun" def="111" use="118" covered="0"/><du var="lastRange" def="111" use="124" target="125" covered="0"/><du var="lastRange" def="111" use="124" target="128" covered="0"/><du var="lastRange" def="111" use="141" target="142" covered="0"/><du var="lastRange" def="111" use="141" target="147" covered="0"/><du var="lastRange" def="111" use="147" covered="0"/><du var="lastRange" def="111" use="142" target="143" covered="0"/><du var="lastRange" def="111" use="142" target="145" covered="0"/><du var="lastRange" def="111" use="145" covered="0"/><du var="lastRange" def="111" use="143" covered="0"/><du var="lastRange" def="111" use="130" target="131" covered="0"/><du var="lastRange" def="111" use="130" target="137" covered="0"/><du var="lastRange" def="111" use="137" covered="0"/><du var="lastRange" def="111" use="131" target="133" covered="0"/><du var="lastRange" def="111" use="131" target="135" covered="0"/><du var="lastRange" def="111" use="135" covered="0"/><du var="lastRange" def="111" use="133" covered="0"/><du var="y" def="112" use="113" target="113" covered="0"/><du var="y" def="112" use="113" target="153" covered="0"/><du var="y" def="112" use="113" target="113" covered="0"/><du var="y" def="112" use="113" target="153" covered="0"/><du var="y" def="112" use="114" covered="0"/><du var="y" def="112" use="129" covered="0"/><du var="y" def="112" use="118" covered="0"/><du var="x" def="112" use="113" target="113" covered="0"/><du var="x" def="112" use="113" target="153" covered="0"/><du var="x" def="112" use="112" target="153" covered="0"/><du var="x" def="112" use="112" target="116" covered="0"/><du var="x" def="112" use="121" covered="0"/><du var="x" def="112" use="114" covered="0"/><du var="x" def="112" use="140" covered="0"/><du var="range" def="118" use="123" target="124" covered="0"/><du var="range" def="118" use="123" target="151" covered="0"/><du var="range" def="118" use="151" covered="0"/><du var="range" def="121" use="123" target="124" covered="0"/><du var="range" def="121" use="123" target="151" covered="0"/><du var="range" def="121" use="151" covered="0"/><du var="lastY" def="129" use="137" covered="0"/><du var="lastY" def="129" use="135" covered="0"/><du var="lastY" def="129" use="133" covered="0"/><du var="lastX" def="140" use="147" covered="0"/><du var="lastX" def="140" use="145" covered="0"/><du var="lastX" def="140" use="143" covered="0"/><du var="lastRange" def="151" use="124" target="125" covered="0"/><du var="lastRange" def="151" use="124" target="128" covered="0"/><du var="lastRange" def="151" use="141" target="142" covered="0"/><du var="lastRange" def="151" use="141" target="147" covered="0"/><du var="lastRange" def="151" use="147" covered="0"/><du var="lastRange" def="151" use="142" target="143" covered="0"/><du var="lastRange" def="151" use="142" target="145" covered="0"/><du var="lastRange" def="151" use="145" covered="0"/><du var="lastRange" def="151" use="143" covered="0"/><du var="lastRange" def="151" use="130" target="131" covered="0"/><du var="lastRange" def="151" use="130" target="137" covered="0"/><du var="lastRange" def="151" use="137" covered="0"/><du var="lastRange" def="151" use="131" target="133" covered="0"/><du var="lastRange" def="151" use="131" target="135" covered="0"/><du var="lastRange" def="151" use="135" covered="0"/><du var="lastRange" def="151" use="133" covered="0"/><du var="y" def="114" use="113" target="113" covered="0"/><du var="y" def="114" use="113" target="153" covered="0"/><du var="y" def="114" use="113" target="113" covered="0"/><du var="y" def="114" use="113" target="153" covered="0"/><du var="y" def="114" use="114" covered="0"/><du var="y" def="114" use="129" covered="0"/><du var="y" def="114" use="118" covered="0"/><du var="x" def="114" use="113" target="113" covered="0"/><du var="x" def="114" use="113" target="153" covered="0"/><du var="x" def="114" use="112" target="153" covered="0"/><du var="x" def="114" use="112" target="116" covered="0"/><du var="x" def="114" use="121" covered="0"/><du var="x" def="114" use="114" covered="0"/><du var="x" def="114" use="140" covered="0"/><counter type="DU" missed="108" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="blackWhiteRange" desc="(IIIIZ)[I"><du var="this" def="172" use="177" target="178" covered="0"/><du var="this" def="172" use="177" target="180" covered="0"/><du var="this" def="172" use="184" target="185" covered="0"/><du var="this" def="172" use="184" target="182" covered="0"/><du var="this" def="172" use="184" target="184" covered="0"/><du var="this" def="172" use="184" target="182" covered="0"/><du var="this" def="172" use="177" target="177" covered="0"/><du var="this" def="172" use="177" target="180" covered="0"/><du var="this" def="172" use="197" target="198" covered="0"/><du var="this" def="172" use="197" target="200" covered="0"/><du var="this" def="172" use="204" target="205" covered="0"/><du var="this" def="172" use="204" target="202" covered="0"/><du var="this" def="172" use="204" target="204" covered="0"/><du var="this" def="172" use="204" target="202" covered="0"/><du var="this" def="172" use="197" target="197" covered="0"/><du var="this" def="172" use="197" target="200" covered="0"/><du var="fixedDimension" def="172" use="177" target="178" covered="0"/><du var="fixedDimension" def="172" use="177" target="180" covered="0"/><du var="fixedDimension" def="172" use="184" target="185" covered="0"/><du var="fixedDimension" def="172" use="184" target="182" covered="0"/><du var="fixedDimension" def="172" use="184" target="184" covered="0"/><du var="fixedDimension" def="172" use="184" target="182" covered="0"/><du var="fixedDimension" def="172" use="177" target="177" covered="0"/><du var="fixedDimension" def="172" use="177" target="180" covered="0"/><du var="fixedDimension" def="172" use="197" target="198" covered="0"/><du var="fixedDimension" def="172" use="197" target="200" covered="0"/><du var="fixedDimension" def="172" use="204" target="205" covered="0"/><du var="fixedDimension" def="172" use="204" target="202" covered="0"/><du var="fixedDimension" def="172" use="204" target="204" covered="0"/><du var="fixedDimension" def="172" use="204" target="202" covered="0"/><du var="fixedDimension" def="172" use="197" target="197" covered="0"/><du var="fixedDimension" def="172" use="197" target="200" covered="0"/><du var="maxWhiteRun" def="172" use="186" target="187" covered="0"/><du var="maxWhiteRun" def="172" use="186" target="176" covered="0"/><du var="maxWhiteRun" def="172" use="206" target="207" covered="0"/><du var="maxWhiteRun" def="172" use="206" target="196" covered="0"/><du var="minDim" def="172" use="176" target="192" covered="0"/><du var="minDim" def="172" use="176" target="177" covered="0"/><du var="minDim" def="172" use="183" target="184" covered="0"/><du var="minDim" def="172" use="183" target="185" covered="0"/><du var="minDim" def="172" use="186" target="186" covered="0"/><du var="minDim" def="172" use="186" target="187" covered="0"/><du var="maxDim" def="172" use="196" target="212" covered="0"/><du var="maxDim" def="172" use="196" target="197" covered="0"/><du var="maxDim" def="172" use="203" target="204" covered="0"/><du var="maxDim" def="172" use="203" target="205" covered="0"/><du var="maxDim" def="172" use="206" target="206" covered="0"/><du var="maxDim" def="172" use="206" target="207" covered="0"/><du var="horizontal" def="172" use="177" target="177" covered="0"/><du var="horizontal" def="172" use="177" target="177" covered="0"/><du var="horizontal" def="172" use="184" target="184" covered="0"/><du var="horizontal" def="172" use="184" target="184" covered="0"/><du var="horizontal" def="172" use="197" target="197" covered="0"/><du var="horizontal" def="172" use="197" target="197" covered="0"/><du var="horizontal" def="172" use="204" target="204" covered="0"/><du var="horizontal" def="172" use="204" target="204" covered="0"/><du var="this.image" def="172" use="177" target="178" covered="0"/><du var="this.image" def="172" use="177" target="180" covered="0"/><du var="this.image" def="172" use="184" target="185" covered="0"/><du var="this.image" def="172" use="184" target="182" covered="0"/><du var="this.image" def="172" use="184" target="184" covered="0"/><du var="this.image" def="172" use="184" target="182" covered="0"/><du var="this.image" def="172" use="177" target="177" covered="0"/><du var="this.image" def="172" use="177" target="180" covered="0"/><du var="this.image" def="172" use="197" target="198" covered="0"/><du var="this.image" def="172" use="197" target="200" covered="0"/><du var="this.image" def="172" use="204" target="205" covered="0"/><du var="this.image" def="172" use="204" target="202" covered="0"/><du var="this.image" def="172" use="204" target="204" covered="0"/><du var="this.image" def="172" use="204" target="202" covered="0"/><du var="this.image" def="172" use="197" target="197" covered="0"/><du var="this.image" def="172" use="197" target="200" covered="0"/><du var="center" def="172" use="195" covered="0"/><du var="start" def="175" use="176" target="192" covered="0"/><du var="start" def="175" use="176" target="177" covered="0"/><du var="start" def="175" use="177" target="178" covered="0"/><du var="start" def="175" use="177" target="180" covered="0"/><du var="start" def="175" use="180" covered="0"/><du var="start" def="175" use="182" covered="0"/><du var="start" def="175" use="178" covered="0"/><du var="start" def="175" use="177" target="177" covered="0"/><du var="start" def="175" use="177" target="180" covered="0"/><du var="start" def="175" use="192" covered="0"/><du var="start" def="178" use="176" target="192" covered="0"/><du var="start" def="178" use="176" target="177" covered="0"/><du var="start" def="178" use="177" target="178" covered="0"/><du var="start" def="178" use="177" target="180" covered="0"/><du var="start" def="178" use="180" covered="0"/><du var="start" def="178" use="182" covered="0"/><du var="start" def="178" use="178" covered="0"/><du var="start" def="178" use="177" target="177" covered="0"/><du var="start" def="178" use="177" target="180" covered="0"/><du var="start" def="178" use="192" covered="0"/><du var="whiteRunStart" def="180" use="185" covered="0"/><du var="whiteRunStart" def="180" use="187" covered="0"/><du var="start" def="182" use="183" target="184" covered="0"/><du var="start" def="182" use="183" target="185" covered="0"/><du var="start" def="182" use="185" covered="0"/><du var="start" def="182" use="186" target="186" covered="0"/><du var="start" def="182" use="186" target="187" covered="0"/><du var="start" def="182" use="176" target="192" covered="0"/><du var="start" def="182" use="176" target="177" covered="0"/><du var="start" def="182" use="177" target="178" covered="0"/><du var="start" def="182" use="177" target="180" covered="0"/><du var="start" def="182" use="180" covered="0"/><du var="start" def="182" use="182" covered="0"/><du var="start" def="182" use="178" covered="0"/><du var="start" def="182" use="177" target="177" covered="0"/><du var="start" def="182" use="177" target="180" covered="0"/><du var="start" def="182" use="192" covered="0"/><du var="start" def="182" use="184" target="185" covered="0"/><du var="start" def="182" use="184" target="182" covered="0"/><du var="start" def="182" use="184" target="184" covered="0"/><du var="start" def="182" use="184" target="182" covered="0"/><du var="whiteRunSize" def="185" use="186" target="187" covered="0"/><du var="whiteRunSize" def="185" use="186" target="176" covered="0"/><du var="start" def="187" use="192" covered="0"/><du var="start" def="192" use="214" target="214" covered="0"/><du var="start" def="192" use="214" target="214" covered="0"/><du var="start" def="192" use="214" covered="0"/><du var="end" def="195" use="196" target="212" covered="0"/><du var="end" def="195" use="196" target="197" covered="0"/><du var="end" def="195" use="197" target="198" covered="0"/><du var="end" def="195" use="197" target="200" covered="0"/><du var="end" def="195" use="200" covered="0"/><du var="end" def="195" use="202" covered="0"/><du var="end" def="195" use="198" covered="0"/><du var="end" def="195" use="197" target="197" covered="0"/><du var="end" def="195" use="197" target="200" covered="0"/><du var="end" def="195" use="212" covered="0"/><du var="end" def="198" use="196" target="212" covered="0"/><du var="end" def="198" use="196" target="197" covered="0"/><du var="end" def="198" use="197" target="198" covered="0"/><du var="end" def="198" use="197" target="200" covered="0"/><du var="end" def="198" use="200" covered="0"/><du var="end" def="198" use="202" covered="0"/><du var="end" def="198" use="198" covered="0"/><du var="end" def="198" use="197" target="197" covered="0"/><du var="end" def="198" use="197" target="200" covered="0"/><du var="end" def="198" use="212" covered="0"/><du var="whiteRunStart" def="200" use="205" covered="0"/><du var="whiteRunStart" def="200" use="207" covered="0"/><du var="end" def="202" use="203" target="204" covered="0"/><du var="end" def="202" use="203" target="205" covered="0"/><du var="end" def="202" use="205" covered="0"/><du var="end" def="202" use="206" target="206" covered="0"/><du var="end" def="202" use="206" target="207" covered="0"/><du var="end" def="202" use="196" target="212" covered="0"/><du var="end" def="202" use="196" target="197" covered="0"/><du var="end" def="202" use="197" target="198" covered="0"/><du var="end" def="202" use="197" target="200" covered="0"/><du var="end" def="202" use="200" covered="0"/><du var="end" def="202" use="202" covered="0"/><du var="end" def="202" use="198" covered="0"/><du var="end" def="202" use="197" target="197" covered="0"/><du var="end" def="202" use="197" target="200" covered="0"/><du var="end" def="202" use="212" covered="0"/><du var="end" def="202" use="204" target="205" covered="0"/><du var="end" def="202" use="204" target="202" covered="0"/><du var="end" def="202" use="204" target="204" covered="0"/><du var="end" def="202" use="204" target="202" covered="0"/><du var="whiteRunSize" def="205" use="206" target="207" covered="0"/><du var="whiteRunSize" def="205" use="206" target="196" covered="0"/><du var="end" def="207" use="212" covered="0"/><du var="end" def="212" use="214" target="214" covered="0"/><du var="end" def="212" use="214" target="214" covered="0"/><du var="end" def="212" use="214" covered="0"/><counter type="DU" missed="167" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="275" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/common/detector/MathUtils"><method name="round" desc="(F)I"><du var="d" def="37" use="37" target="37" covered="0"/><du var="d" def="37" use="37" target="37" covered="1"/><du var="d" def="37" use="37" covered="1"/><counter type="DU" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sum" desc="([I)I"><du var="count" def="71" use="73" covered="0"/><du var="count" def="71" use="75" covered="0"/><du var="count" def="73" use="73" covered="0"/><du var="count" def="73" use="75" covered="0"/><counter type="DU" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="16" covered="2"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/common/reedsolomon/ReedSolomonDecoder"><method name="decode" desc="([II)V"><du var="this" def="59" use="63" covered="1"/><du var="this" def="59" use="72" covered="1"/><du var="this" def="59" use="73" covered="1"/><du var="this" def="59" use="77" covered="1"/><du var="this" def="59" use="78" covered="1"/><du var="this" def="59" use="80" covered="1"/><du var="received" def="59" use="80" covered="1"/><du var="received" def="59" use="84" covered="1"/><du var="twoS" def="59" use="62" target="69" covered="1"/><du var="twoS" def="59" use="62" target="63" covered="1"/><du var="twoS" def="59" use="73" covered="1"/><du var="this.field" def="59" use="63" covered="1"/><du var="this.field" def="59" use="72" covered="1"/><du var="this.field" def="59" use="73" covered="1"/><du var="this.field" def="59" use="80" covered="1"/><du var="poly" def="59" use="63" covered="1"/><du var="syndromeCoefficients" def="60" use="64" covered="1"/><du var="syndromeCoefficients" def="60" use="72" covered="1"/><du var="noError" def="61" use="69" target="70" covered="1"/><du var="noError" def="61" use="69" target="72" covered="0"/><du var="i" def="62" use="62" target="69" covered="0"/><du var="i" def="62" use="62" target="63" covered="1"/><du var="i" def="62" use="63" covered="1"/><du var="i" def="62" use="64" covered="1"/><du var="i" def="62" use="62" covered="1"/><du var="eval" def="63" use="65" target="66" covered="1"/><du var="eval" def="63" use="65" target="62" covered="1"/><du var="noError" def="66" use="69" target="70" covered="0"/><du var="noError" def="66" use="69" target="72" covered="1"/><du var="i" def="62" use="62" target="69" covered="1"/><du var="i" def="62" use="62" target="63" covered="1"/><du var="i" def="62" use="63" covered="1"/><du var="i" def="62" use="64" covered="1"/><du var="i" def="62" use="62" covered="1"/><du var="errorLocations" def="77" use="79" target="86" covered="1"/><du var="errorLocations" def="77" use="79" target="80" covered="1"/><du var="errorLocations" def="77" use="80" covered="1"/><du var="errorMagnitudes" def="78" use="84" covered="1"/><du var="i" def="79" use="79" target="86" covered="0"/><du var="i" def="79" use="79" target="80" covered="1"/><du var="i" def="79" use="80" covered="1"/><du var="i" def="79" use="84" covered="1"/><du var="i" def="79" use="79" covered="1"/><du var="position" def="80" use="81" target="82" covered="0"/><du var="position" def="80" use="81" target="84" covered="1"/><du var="position" def="80" use="84" covered="1"/><du var="i" def="79" use="79" target="86" covered="1"/><du var="i" def="79" use="79" target="80" covered="1"/><du var="i" def="79" use="80" covered="1"/><du var="i" def="79" use="84" covered="1"/><du var="i" def="79" use="79" covered="1"/><counter type="DU" missed="5" covered="46"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runEuclideanAlgorithm" desc="(Lcom/google/zxing/common/reedsolomon/GenericGFPoly;Lcom/google/zxing/common/reedsolomon/GenericGFPoly;I)[Lcom/google/zxing/common/reedsolomon/GenericGFPoly;"><du var="this" def="91" use="99" covered="1"/><du var="this" def="91" use="100" covered="1"/><du var="this" def="91" use="115" covered="1"/><du var="this" def="91" use="117" covered="1"/><du var="this" def="91" use="120" covered="1"/><du var="this" def="91" use="121" covered="1"/><du var="this" def="91" use="137" covered="1"/><du var="a" def="91" use="91" target="92" covered="0"/><du var="a" def="91" use="91" target="97" covered="1"/><du var="a" def="91" use="97" covered="1"/><du var="a" def="91" use="92" covered="0"/><du var="b" def="91" use="91" target="92" covered="0"/><du var="b" def="91" use="91" target="97" covered="1"/><du var="b" def="91" use="98" covered="1"/><du var="b" def="91" use="93" covered="0"/><du var="R" def="91" use="103" target="132" covered="1"/><du var="R" def="91" use="103" target="104" covered="1"/><du var="this.field" def="91" use="99" covered="1"/><du var="this.field" def="91" use="100" covered="1"/><du var="this.field" def="91" use="115" covered="1"/><du var="this.field" def="91" use="117" covered="1"/><du var="this.field" def="91" use="120" covered="1"/><du var="this.field" def="91" use="121" covered="1"/><du var="this.field" def="91" use="137" covered="1"/><du var="a" def="93" use="97" covered="0"/><du var="b" def="94" use="98" covered="0"/><du var="rLast" def="97" use="104" covered="1"/><du var="r" def="98" use="103" target="132" covered="0"/><du var="r" def="98" use="103" target="104" covered="1"/><du var="r" def="98" use="106" covered="1"/><du var="r" def="98" use="139" covered="0"/><du var="tLast" def="99" use="105" covered="1"/><du var="t" def="100" use="107" covered="1"/><du var="t" def="100" use="132" covered="0"/><du var="t" def="100" use="138" covered="0"/><du var="rLastLast" def="104" use="114" covered="1"/><du var="tLastLast" def="105" use="125" covered="1"/><du var="rLast" def="106" use="110" target="112" covered="0"/><du var="rLast" def="106" use="110" target="114" covered="1"/><du var="rLast" def="106" use="116" covered="1"/><du var="rLast" def="106" use="118" target="118" covered="1"/><du var="rLast" def="106" use="118" target="125" covered="1"/><du var="rLast" def="106" use="127" target="128" covered="0"/><du var="rLast" def="106" use="127" target="103" covered="1"/><du var="rLast" def="106" use="104" covered="1"/><du var="rLast" def="106" use="119" covered="1"/><du var="rLast" def="106" use="122" covered="1"/><du var="tLast" def="107" use="125" covered="1"/><du var="tLast" def="107" use="105" covered="1"/><du var="r" def="114" use="118" target="118" covered="1"/><du var="r" def="114" use="118" target="125" covered="0"/><du var="r" def="114" use="127" target="128" covered="0"/><du var="r" def="114" use="127" target="103" covered="0"/><du var="r" def="114" use="103" target="132" covered="0"/><du var="r" def="114" use="103" target="104" covered="0"/><du var="r" def="114" use="106" covered="0"/><du var="r" def="114" use="139" covered="0"/><du var="r" def="114" use="118" target="125" covered="0"/><du var="r" def="114" use="118" target="119" covered="1"/><du var="r" def="114" use="119" covered="1"/><du var="r" def="114" use="120" covered="1"/><du var="r" def="114" use="122" covered="1"/><du var="q" def="115" use="125" covered="0"/><du var="q" def="115" use="121" covered="1"/><du var="dltInverse" def="117" use="120" covered="1"/><du var="q" def="121" use="125" covered="1"/><du var="q" def="121" use="121" covered="1"/><du var="r" def="122" use="118" target="118" covered="1"/><du var="r" def="122" use="118" target="125" covered="1"/><du var="r" def="122" use="127" target="128" covered="0"/><du var="r" def="122" use="127" target="103" covered="1"/><du var="r" def="122" use="103" target="132" covered="1"/><du var="r" def="122" use="103" target="104" covered="1"/><du var="r" def="122" use="106" covered="1"/><du var="r" def="122" use="139" covered="1"/><du var="r" def="122" use="118" target="125" covered="0"/><du var="r" def="122" use="118" target="119" covered="1"/><du var="r" def="122" use="119" covered="1"/><du var="r" def="122" use="120" covered="1"/><du var="r" def="122" use="122" covered="1"/><du var="t" def="125" use="107" covered="1"/><du var="t" def="125" use="132" covered="1"/><du var="t" def="125" use="138" covered="1"/><du var="sigmaTildeAtZero" def="132" use="133" target="134" covered="0"/><du var="sigmaTildeAtZero" def="132" use="133" target="137" covered="1"/><du var="sigmaTildeAtZero" def="132" use="137" covered="1"/><counter type="DU" missed="24" covered="62"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findErrorLocations" desc="(Lcom/google/zxing/common/reedsolomon/GenericGFPoly;)[I"><du var="this" def="145" use="151" target="151" covered="1"/><du var="this" def="145" use="151" target="157" covered="1"/><du var="this" def="145" use="153" covered="1"/><du var="errorLocator" def="145" use="152" target="153" covered="1"/><du var="errorLocator" def="145" use="152" target="151" covered="1"/><du var="errorLocator" def="145" use="147" covered="0"/><du var="this.field" def="145" use="151" target="151" covered="1"/><du var="this.field" def="145" use="151" target="157" covered="1"/><du var="this.field" def="145" use="153" covered="1"/><du var="numErrors" def="145" use="146" target="147" covered="0"/><du var="numErrors" def="145" use="146" target="149" covered="1"/><du var="numErrors" def="145" use="149" covered="1"/><du var="numErrors" def="145" use="157" target="158" covered="1"/><du var="numErrors" def="145" use="157" target="160" covered="1"/><du var="numErrors" def="145" use="151" target="157" covered="1"/><du var="numErrors" def="145" use="151" target="152" covered="1"/><du var="result" def="149" use="160" covered="1"/><du var="result" def="149" use="153" covered="1"/><du var="e" def="150" use="157" target="158" covered="1"/><du var="e" def="150" use="157" target="160" covered="0"/><du var="e" def="150" use="151" target="157" covered="0"/><du var="e" def="150" use="151" target="152" covered="1"/><du var="e" def="150" use="153" covered="1"/><du var="e" def="150" use="154" covered="1"/><du var="i" def="151" use="151" target="151" covered="1"/><du var="i" def="151" use="151" target="157" covered="0"/><du var="i" def="151" use="152" target="153" covered="0"/><du var="i" def="151" use="152" target="151" covered="1"/><du var="i" def="151" use="151" covered="1"/><du var="i" def="151" use="153" covered="0"/><du var="e" def="154" use="157" target="158" covered="0"/><du var="e" def="154" use="157" target="160" covered="1"/><du var="e" def="154" use="151" target="157" covered="1"/><du var="e" def="154" use="151" target="152" covered="1"/><du var="e" def="154" use="153" covered="1"/><du var="e" def="154" use="154" covered="1"/><du var="i" def="151" use="151" target="151" covered="1"/><du var="i" def="151" use="151" target="157" covered="1"/><du var="i" def="151" use="152" target="153" covered="1"/><du var="i" def="151" use="152" target="151" covered="1"/><du var="i" def="151" use="151" covered="1"/><du var="i" def="151" use="153" covered="1"/><counter type="DU" missed="8" covered="34"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findErrorMagnitudes" desc="(Lcom/google/zxing/common/reedsolomon/GenericGFPoly;[I)[I"><du var="this" def="165" use="168" covered="1"/><du var="this" def="165" use="176" covered="1"/><du var="this" def="165" use="178" covered="1"/><du var="this" def="165" use="181" covered="1"/><du var="this" def="165" use="183" target="184" covered="1"/><du var="this" def="165" use="183" target="167" covered="0"/><du var="this" def="165" use="184" covered="1"/><du var="errorEvaluator" def="165" use="181" covered="1"/><du var="errorLocations" def="165" use="168" covered="1"/><du var="errorLocations" def="165" use="176" covered="1"/><du var="this.field" def="165" use="168" covered="1"/><du var="this.field" def="165" use="176" covered="1"/><du var="this.field" def="165" use="178" covered="1"/><du var="this.field" def="165" use="181" covered="1"/><du var="this.field" def="165" use="183" target="184" covered="1"/><du var="this.field" def="165" use="183" target="167" covered="0"/><du var="this.field" def="165" use="184" covered="1"/><du var="s" def="165" use="167" target="187" covered="1"/><du var="s" def="165" use="167" target="168" covered="1"/><du var="s" def="165" use="170" target="181" covered="1"/><du var="s" def="165" use="170" target="171" covered="1"/><du var="result" def="166" use="181" covered="1"/><du var="result" def="166" use="184" covered="1"/><du var="result" def="166" use="187" covered="1"/><du var="i" def="167" use="167" target="187" covered="0"/><du var="i" def="167" use="167" target="168" covered="1"/><du var="i" def="167" use="168" covered="1"/><du var="i" def="167" use="171" target="176" covered="1"/><du var="i" def="167" use="171" target="170" covered="1"/><du var="i" def="167" use="181" covered="1"/><du var="i" def="167" use="167" covered="1"/><du var="i" def="167" use="184" covered="1"/><du var="xiInverse" def="168" use="176" covered="1"/><du var="xiInverse" def="168" use="181" covered="1"/><du var="xiInverse" def="168" use="184" covered="1"/><du var="denominator" def="169" use="178" covered="1"/><du var="denominator" def="169" use="181" covered="0"/><du var="j" def="170" use="170" target="181" covered="0"/><du var="j" def="170" use="170" target="171" covered="1"/><du var="j" def="170" use="171" target="176" covered="1"/><du var="j" def="170" use="171" target="170" covered="1"/><du var="j" def="170" use="170" covered="1"/><du var="j" def="170" use="176" covered="1"/><du var="term" def="176" use="177" target="177" covered="1"/><du var="term" def="176" use="177" target="177" covered="1"/><du var="term" def="176" use="177" covered="1"/><du var="denominator" def="178" use="178" covered="1"/><du var="denominator" def="178" use="181" covered="1"/><du var="j" def="170" use="170" target="181" covered="1"/><du var="j" def="170" use="170" target="171" covered="1"/><du var="j" def="170" use="171" target="176" covered="1"/><du var="j" def="170" use="171" target="170" covered="1"/><du var="j" def="170" use="170" covered="1"/><du var="j" def="170" use="176" covered="1"/><du var="i" def="167" use="167" target="187" covered="1"/><du var="i" def="167" use="167" target="168" covered="1"/><du var="i" def="167" use="168" covered="1"/><du var="i" def="167" use="171" target="176" covered="1"/><du var="i" def="167" use="171" target="170" covered="1"/><du var="i" def="167" use="181" covered="1"/><du var="i" def="167" use="167" covered="1"/><du var="i" def="167" use="184" covered="1"/><counter type="DU" missed="5" covered="57"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="42" covered="199"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/common/reedsolomon/GenericGF"><method name="&lt;init&gt;" desc="(III)V"><du var="this" def="60" use="69" covered="1"/><du var="this" def="60" use="77" covered="1"/><du var="this" def="60" use="80" covered="1"/><du var="this" def="60" use="80" covered="1"/><du var="this" def="60" use="81" covered="1"/><du var="this" def="60" use="81" covered="1"/><du var="primitive" def="60" use="72" covered="1"/><du var="size" def="60" use="68" target="76" covered="1"/><du var="size" def="60" use="68" target="69" covered="1"/><du var="size" def="60" use="71" target="72" covered="1"/><du var="size" def="60" use="71" target="68" covered="1"/><du var="size" def="60" use="73" covered="1"/><du var="size" def="60" use="76" target="80" covered="1"/><du var="size" def="60" use="76" target="77" covered="1"/><du var="this.expTable" def="65" use="69" covered="1"/><du var="this.expTable" def="65" use="77" covered="1"/><du var="this.logTable" def="66" use="77" covered="1"/><du var="x" def="67" use="69" covered="1"/><du var="x" def="67" use="70" covered="1"/><du var="i" def="68" use="68" target="76" covered="0"/><du var="i" def="68" use="68" target="69" covered="1"/><du var="i" def="68" use="69" covered="1"/><du var="i" def="68" use="68" covered="1"/><du var="x" def="70" use="71" target="72" covered="1"/><du var="x" def="70" use="71" target="68" covered="1"/><du var="x" def="70" use="69" covered="1"/><du var="x" def="70" use="70" covered="1"/><du var="x" def="70" use="72" covered="1"/><du var="x" def="73" use="69" covered="1"/><du var="x" def="73" use="70" covered="1"/><du var="i" def="68" use="68" target="76" covered="1"/><du var="i" def="68" use="68" target="69" covered="1"/><du var="i" def="68" use="69" covered="1"/><du var="i" def="68" use="68" covered="1"/><du var="i" def="76" use="76" target="80" covered="0"/><du var="i" def="76" use="76" target="77" covered="1"/><du var="i" def="76" use="77" covered="1"/><du var="i" def="76" use="76" covered="1"/><du var="i" def="76" use="76" target="80" covered="1"/><du var="i" def="76" use="76" target="77" covered="1"/><du var="i" def="76" use="77" covered="1"/><du var="i" def="76" use="76" covered="1"/><counter type="DU" missed="2" covered="40"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildMonomial" desc="(II)Lcom/google/zxing/common/reedsolomon/GenericGFPoly;"><du var="this" def="96" use="104" covered="1"/><du var="this" def="96" use="100" covered="0"/><du var="degree" def="96" use="96" target="97" covered="0"/><du var="degree" def="96" use="96" target="99" covered="1"/><du var="degree" def="96" use="102" covered="1"/><du var="coefficient" def="96" use="99" target="100" covered="0"/><du var="coefficient" def="96" use="99" target="102" covered="1"/><du var="coefficient" def="96" use="103" covered="1"/><du var="this.zero" def="96" use="100" covered="0"/><counter type="DU" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="log" desc="(I)I"><du var="this" def="127" use="130" covered="1"/><du var="a" def="127" use="127" target="128" covered="0"/><du var="a" def="127" use="127" target="130" covered="1"/><du var="a" def="127" use="130" covered="1"/><du var="this.logTable" def="127" use="130" covered="1"/><counter type="DU" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inverse" desc="(I)I"><du var="this" def="137" use="140" covered="1"/><du var="a" def="137" use="137" target="138" covered="0"/><du var="a" def="137" use="137" target="140" covered="1"/><du var="a" def="137" use="140" covered="1"/><du var="this.expTable" def="137" use="140" covered="1"/><du var="this.size" def="137" use="140" covered="1"/><du var="this.logTable" def="137" use="140" covered="1"/><counter type="DU" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(II)I"><du var="this" def="147" use="150" covered="1"/><du var="a" def="147" use="147" target="147" covered="1"/><du var="a" def="147" use="147" target="148" covered="1"/><du var="a" def="147" use="150" covered="1"/><du var="b" def="147" use="147" target="148" covered="1"/><du var="b" def="147" use="147" target="150" covered="1"/><du var="b" def="147" use="150" covered="1"/><du var="this.expTable" def="147" use="150" covered="1"/><du var="this.logTable" def="147" use="150" covered="1"/><du var="this.size" def="147" use="150" covered="1"/><counter type="DU" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="8" covered="65"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/common/reedsolomon/ReedSolomonEncoder"><method name="buildGenerator" desc="(I)Lcom/google/zxing/common/reedsolomon/GenericGFPoly;"><du var="this" def="40" use="40" target="41" covered="1"/><du var="this" def="40" use="40" target="49" covered="0"/><du var="this" def="40" use="49" covered="1"/><du var="this" def="40" use="41" covered="1"/><du var="this" def="40" use="42" covered="1"/><du var="this" def="40" use="44" covered="1"/><du var="this" def="40" use="44" covered="1"/><du var="this" def="40" use="45" covered="1"/><du var="degree" def="40" use="40" target="41" covered="1"/><du var="degree" def="40" use="40" target="49" covered="0"/><du var="degree" def="40" use="49" covered="1"/><du var="degree" def="40" use="42" target="49" covered="1"/><du var="degree" def="40" use="42" target="43" covered="1"/><du var="this.cachedGenerators" def="40" use="40" target="41" covered="1"/><du var="this.cachedGenerators" def="40" use="40" target="49" covered="0"/><du var="this.cachedGenerators" def="40" use="49" covered="1"/><du var="this.cachedGenerators" def="40" use="41" covered="1"/><du var="this.cachedGenerators" def="40" use="42" covered="1"/><du var="this.cachedGenerators" def="40" use="45" covered="1"/><du var="this.field" def="40" use="44" covered="1"/><du var="this.field" def="40" use="44" covered="1"/><du var="lastGenerator" def="41" use="43" covered="1"/><du var="d" def="42" use="42" target="49" covered="0"/><du var="d" def="42" use="42" target="43" covered="1"/><du var="d" def="42" use="44" covered="1"/><du var="d" def="42" use="42" covered="1"/><du var="lastGenerator" def="46" use="43" covered="1"/><du var="d" def="42" use="42" target="49" covered="1"/><du var="d" def="42" use="42" target="43" covered="1"/><du var="d" def="42" use="44" covered="1"/><du var="d" def="42" use="42" covered="1"/><counter type="DU" missed="4" covered="27"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="([II)V"><du var="this" def="53" use="60" covered="1"/><du var="this" def="53" use="63" covered="1"/><du var="toEncode" def="53" use="56" covered="1"/><du var="toEncode" def="53" use="62" covered="1"/><du var="toEncode" def="53" use="69" covered="1"/><du var="toEncode" def="53" use="71" covered="1"/><du var="ecBytes" def="53" use="53" target="54" covered="0"/><du var="ecBytes" def="53" use="53" target="56" covered="1"/><du var="ecBytes" def="53" use="56" covered="1"/><du var="ecBytes" def="53" use="60" covered="1"/><du var="ecBytes" def="53" use="64" covered="1"/><du var="ecBytes" def="53" use="67" covered="1"/><du var="this.field" def="53" use="63" covered="1"/><du var="dataBytes" def="56" use="57" target="58" covered="0"/><du var="dataBytes" def="56" use="57" target="60" covered="1"/><du var="dataBytes" def="56" use="61" covered="1"/><du var="dataBytes" def="56" use="62" covered="1"/><du var="dataBytes" def="56" use="69" covered="1"/><du var="dataBytes" def="56" use="71" covered="1"/><du var="coefficients" def="66" use="71" covered="1"/><du var="numZeroCoefficients" def="67" use="68" target="71" covered="1"/><du var="numZeroCoefficients" def="67" use="68" target="69" covered="1"/><du var="numZeroCoefficients" def="67" use="71" covered="1"/><du var="i" def="68" use="68" target="71" covered="1"/><du var="i" def="68" use="68" target="69" covered="1"/><du var="i" def="68" use="69" covered="1"/><du var="i" def="68" use="68" covered="1"/><du var="i" def="68" use="68" target="71" covered="1"/><du var="i" def="68" use="68" target="69" covered="1"/><du var="i" def="68" use="69" covered="1"/><du var="i" def="68" use="68" covered="1"/><counter type="DU" missed="2" covered="29"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="DU" missed="6" covered="56"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/common/reedsolomon/GenericGFPoly"><method name="&lt;init&gt;" desc="(Lcom/google/zxing/common/reedsolomon/GenericGF;[I)V"><du var="this" def="42" use="46" covered="1"/><du var="this" def="42" use="65" covered="1"/><du var="this" def="42" use="57" covered="1"/><du var="this" def="42" use="58" covered="1"/><du var="this" def="42" use="55" covered="1"/><du var="field" def="42" use="46" covered="1"/><du var="coefficients" def="42" use="43" target="44" covered="0"/><du var="coefficients" def="42" use="43" target="46" covered="1"/><du var="coefficients" def="42" use="47" covered="1"/><du var="coefficients" def="42" use="65" covered="1"/><du var="coefficients" def="42" use="48" target="50" covered="1"/><du var="coefficients" def="42" use="48" target="65" covered="1"/><du var="coefficients" def="42" use="58" covered="1"/><du var="coefficients" def="42" use="51" target="54" covered="1"/><du var="coefficients" def="42" use="51" target="52" covered="1"/><du var="coefficientsLength" def="47" use="48" target="48" covered="1"/><du var="coefficientsLength" def="47" use="48" target="65" covered="1"/><du var="coefficientsLength" def="47" use="51" target="51" covered="1"/><du var="coefficientsLength" def="47" use="51" target="54" covered="1"/><du var="coefficientsLength" def="47" use="54" target="55" covered="1"/><du var="coefficientsLength" def="47" use="54" target="57" covered="1"/><du var="coefficientsLength" def="47" use="57" covered="1"/><du var="firstNonZero" def="50" use="51" target="51" covered="1"/><du var="firstNonZero" def="50" use="51" target="54" covered="0"/><du var="firstNonZero" def="50" use="54" target="55" covered="0"/><du var="firstNonZero" def="50" use="54" target="57" covered="1"/><du var="firstNonZero" def="50" use="57" covered="1"/><du var="firstNonZero" def="50" use="58" covered="1"/><du var="firstNonZero" def="50" use="51" target="54" covered="1"/><du var="firstNonZero" def="50" use="51" target="52" covered="1"/><du var="firstNonZero" def="50" use="52" covered="1"/><du var="firstNonZero" def="52" use="51" target="51" covered="1"/><du var="firstNonZero" def="52" use="51" target="54" covered="1"/><du var="firstNonZero" def="52" use="54" target="55" covered="1"/><du var="firstNonZero" def="52" use="54" target="57" covered="1"/><du var="firstNonZero" def="52" use="57" covered="1"/><du var="firstNonZero" def="52" use="58" covered="1"/><du var="firstNonZero" def="52" use="51" target="54" covered="1"/><du var="firstNonZero" def="52" use="51" target="52" covered="1"/><du var="firstNonZero" def="52" use="52" covered="1"/><counter type="DU" missed="3" covered="37"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isZero" desc="()Z"><du var="this" def="84" use="84" target="84" covered="1"/><du var="this" def="84" use="84" target="84" covered="1"/><du var="this.coefficients" def="84" use="84" target="84" covered="1"/><du var="this.coefficients" def="84" use="84" target="84" covered="1"/><counter type="DU" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateAt" desc="(I)I"><du var="this" def="98" use="110" covered="1"/><du var="this" def="98" use="111" covered="1"/><du var="this" def="98" use="113" covered="1"/><du var="this" def="98" use="105" covered="1"/><du var="this" def="98" use="105" covered="1"/><du var="this" def="98" use="100" covered="0"/><du var="a" def="98" use="98" target="100" covered="0"/><du var="a" def="98" use="98" target="102" covered="1"/><du var="a" def="98" use="102" target="104" covered="1"/><du var="a" def="98" use="102" target="110" covered="1"/><du var="a" def="98" use="113" covered="1"/><du var="this.coefficients" def="98" use="110" covered="1"/><du var="this.coefficients" def="98" use="111" covered="1"/><du var="this.coefficients" def="98" use="113" covered="1"/><du var="this.coefficients" def="98" use="105" covered="1"/><du var="this.coefficients" def="98" use="105" covered="1"/><du var="this.field" def="98" use="113" covered="1"/><du var="result" def="104" use="106" covered="1"/><du var="result" def="104" use="108" covered="0"/><du var="result" def="106" use="106" covered="1"/><du var="result" def="106" use="108" covered="1"/><du var="result" def="110" use="113" covered="1"/><du var="result" def="110" use="115" covered="1"/><du var="size" def="111" use="112" target="115" covered="1"/><du var="size" def="111" use="112" target="113" covered="1"/><du var="i" def="112" use="112" target="115" covered="1"/><du var="i" def="112" use="112" target="113" covered="1"/><du var="i" def="112" use="113" covered="1"/><du var="i" def="112" use="112" covered="1"/><du var="result" def="113" use="113" covered="1"/><du var="result" def="113" use="115" covered="1"/><du var="i" def="112" use="112" target="115" covered="1"/><du var="i" def="112" use="112" target="113" covered="1"/><du var="i" def="112" use="113" covered="1"/><du var="i" def="112" use="112" covered="1"/><counter type="DU" missed="4" covered="42"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addOrSubtract" desc="(Lcom/google/zxing/common/reedsolomon/GenericGFPoly;)Lcom/google/zxing/common/reedsolomon/GenericGFPoly;"><du var="this" def="119" use="119" target="120" covered="0"/><du var="this" def="119" use="119" target="122" covered="1"/><du var="this" def="119" use="122" target="123" covered="1"/><du var="this" def="119" use="122" target="125" covered="1"/><du var="this" def="119" use="129" covered="1"/><du var="this" def="119" use="145" covered="1"/><du var="this" def="119" use="126" covered="1"/><du var="other" def="119" use="119" target="120" covered="0"/><du var="other" def="119" use="119" target="122" covered="1"/><du var="other" def="119" use="125" target="126" covered="1"/><du var="other" def="119" use="125" target="129" covered="1"/><du var="other" def="119" use="130" covered="1"/><du var="other" def="119" use="123" covered="1"/><du var="this.field" def="119" use="119" target="120" covered="0"/><du var="this.field" def="119" use="119" target="122" covered="1"/><du var="this.field" def="119" use="145" covered="1"/><du var="other.field" def="119" use="119" target="120" covered="0"/><du var="other.field" def="119" use="119" target="122" covered="1"/><du var="this.coefficients" def="119" use="129" covered="1"/><du var="other.coefficients" def="119" use="130" covered="1"/><du var="smallerCoefficients" def="129" use="131" target="132" covered="1"/><du var="smallerCoefficients" def="129" use="131" target="136" covered="1"/><du var="smallerCoefficients" def="129" use="137" covered="1"/><du var="smallerCoefficients" def="129" use="142" covered="1"/><du var="smallerCoefficients" def="129" use="132" covered="1"/><du var="largerCoefficients" def="130" use="131" target="132" covered="1"/><du var="largerCoefficients" def="130" use="131" target="136" covered="1"/><du var="largerCoefficients" def="130" use="136" covered="1"/><du var="largerCoefficients" def="130" use="137" covered="1"/><du var="largerCoefficients" def="130" use="139" covered="1"/><du var="largerCoefficients" def="130" use="141" target="145" covered="1"/><du var="largerCoefficients" def="130" use="141" target="142" covered="1"/><du var="largerCoefficients" def="130" use="142" covered="1"/><du var="largerCoefficients" def="130" use="133" covered="1"/><du var="smallerCoefficients" def="133" use="137" covered="1"/><du var="smallerCoefficients" def="133" use="142" covered="1"/><du var="largerCoefficients" def="134" use="136" covered="1"/><du var="largerCoefficients" def="134" use="137" covered="1"/><du var="largerCoefficients" def="134" use="139" covered="1"/><du var="largerCoefficients" def="134" use="141" target="145" covered="1"/><du var="largerCoefficients" def="134" use="141" target="142" covered="1"/><du var="largerCoefficients" def="134" use="142" covered="1"/><du var="sumDiff" def="136" use="142" covered="1"/><du var="sumDiff" def="136" use="145" covered="1"/><du var="lengthDiff" def="137" use="142" covered="1"/><du var="i" def="141" use="141" target="145" covered="0"/><du var="i" def="141" use="141" target="142" covered="1"/><du var="i" def="141" use="142" covered="1"/><du var="i" def="141" use="141" covered="1"/><du var="i" def="141" use="141" target="145" covered="1"/><du var="i" def="141" use="141" target="142" covered="1"/><du var="i" def="141" use="142" covered="1"/><du var="i" def="141" use="141" covered="1"/><counter type="DU" missed="5" covered="48"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lcom/google/zxing/common/reedsolomon/GenericGFPoly;)Lcom/google/zxing/common/reedsolomon/GenericGFPoly;"><du var="this" def="149" use="149" target="150" covered="0"/><du var="this" def="149" use="149" target="152" covered="1"/><du var="this" def="149" use="152" target="152" covered="1"/><du var="this" def="149" use="152" target="153" covered="0"/><du var="this" def="149" use="153" covered="0"/><du var="this" def="149" use="155" covered="1"/><du var="this" def="149" use="163" covered="1"/><du var="this" def="149" use="167" covered="1"/><du var="other" def="149" use="149" target="150" covered="0"/><du var="other" def="149" use="149" target="152" covered="1"/><du var="other" def="149" use="152" target="153" covered="0"/><du var="other" def="149" use="152" target="155" covered="1"/><du var="other" def="149" use="157" covered="1"/><du var="this.field" def="149" use="149" target="150" covered="0"/><du var="this.field" def="149" use="149" target="152" covered="1"/><du var="this.field" def="149" use="153" covered="0"/><du var="this.field" def="149" use="163" covered="1"/><du var="this.field" def="149" use="167" covered="1"/><du var="other.field" def="149" use="149" target="150" covered="0"/><du var="other.field" def="149" use="149" target="152" covered="1"/><du var="this.coefficients" def="149" use="155" covered="1"/><du var="other.coefficients" def="149" use="157" covered="1"/><du var="aCoefficients" def="155" use="161" covered="1"/><du var="aLength" def="156" use="160" target="167" covered="1"/><du var="aLength" def="156" use="160" target="161" covered="1"/><du var="bCoefficients" def="157" use="163" covered="1"/><du var="bLength" def="158" use="162" target="160" covered="1"/><du var="bLength" def="158" use="162" target="163" covered="1"/><du var="product" def="159" use="163" covered="1"/><du var="product" def="159" use="167" covered="1"/><du var="i" def="160" use="160" target="167" covered="0"/><du var="i" def="160" use="160" target="161" covered="1"/><du var="i" def="160" use="161" covered="1"/><du var="i" def="160" use="163" covered="1"/><du var="i" def="160" use="160" covered="1"/><du var="aCoeff" def="161" use="163" covered="1"/><du var="j" def="162" use="162" target="160" covered="0"/><du var="j" def="162" use="162" target="163" covered="1"/><du var="j" def="162" use="163" covered="1"/><du var="j" def="162" use="162" covered="1"/><du var="j" def="162" use="162" target="160" covered="1"/><du var="j" def="162" use="162" target="163" covered="1"/><du var="j" def="162" use="163" covered="1"/><du var="j" def="162" use="162" covered="1"/><du var="i" def="160" use="160" target="167" covered="1"/><du var="i" def="160" use="160" target="161" covered="1"/><du var="i" def="160" use="161" covered="1"/><du var="i" def="160" use="163" covered="1"/><du var="i" def="160" use="160" covered="1"/><counter type="DU" missed="10" covered="39"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(I)Lcom/google/zxing/common/reedsolomon/GenericGFPoly;"><du var="this" def="171" use="177" covered="1"/><du var="this" def="171" use="180" covered="1"/><du var="this" def="171" use="182" covered="1"/><du var="this" def="171" use="175" covered="0"/><du var="this" def="171" use="172" covered="0"/><du var="scalar" def="171" use="171" target="172" covered="0"/><du var="scalar" def="171" use="171" target="174" covered="1"/><du var="scalar" def="171" use="174" target="175" covered="0"/><du var="scalar" def="171" use="174" target="177" covered="1"/><du var="scalar" def="171" use="180" covered="1"/><du var="this.field" def="171" use="180" covered="1"/><du var="this.field" def="171" use="182" covered="1"/><du var="this.field" def="171" use="172" covered="0"/><du var="this.coefficients" def="171" use="177" covered="1"/><du var="this.coefficients" def="171" use="180" covered="1"/><du var="size" def="177" use="179" target="182" covered="1"/><du var="size" def="177" use="179" target="180" covered="1"/><du var="product" def="178" use="180" covered="1"/><du var="product" def="178" use="182" covered="1"/><du var="i" def="179" use="179" target="182" covered="0"/><du var="i" def="179" use="179" target="180" covered="1"/><du var="i" def="179" use="180" covered="1"/><du var="i" def="179" use="179" covered="1"/><du var="i" def="179" use="179" target="182" covered="1"/><du var="i" def="179" use="179" target="180" covered="1"/><du var="i" def="179" use="180" covered="1"/><du var="i" def="179" use="179" covered="1"/><counter type="DU" missed="6" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplyByMonomial" desc="(II)Lcom/google/zxing/common/reedsolomon/GenericGFPoly;"><du var="this" def="186" use="192" covered="1"/><du var="this" def="186" use="195" covered="1"/><du var="this" def="186" use="197" covered="1"/><du var="this" def="186" use="190" covered="0"/><du var="degree" def="186" use="186" target="187" covered="0"/><du var="degree" def="186" use="186" target="189" covered="1"/><du var="degree" def="186" use="193" covered="1"/><du var="coefficient" def="186" use="189" target="190" covered="0"/><du var="coefficient" def="186" use="189" target="192" covered="1"/><du var="coefficient" def="186" use="195" covered="1"/><du var="this.field" def="186" use="195" covered="1"/><du var="this.field" def="186" use="197" covered="1"/><du var="this.field" def="186" use="190" covered="0"/><du var="this.coefficients" def="186" use="192" covered="1"/><du var="this.coefficients" def="186" use="195" covered="1"/><du var="size" def="192" use="194" target="197" covered="1"/><du var="size" def="192" use="194" target="195" covered="1"/><du var="product" def="193" use="195" covered="1"/><du var="product" def="193" use="197" covered="1"/><du var="i" def="194" use="194" target="197" covered="0"/><du var="i" def="194" use="194" target="195" covered="1"/><du var="i" def="194" use="195" covered="1"/><du var="i" def="194" use="194" covered="1"/><du var="i" def="194" use="194" target="197" covered="1"/><du var="i" def="194" use="194" target="195" covered="1"/><du var="i" def="194" use="195" covered="1"/><du var="i" def="194" use="194" covered="1"/><counter type="DU" missed="5" covered="22"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divide" desc="(Lcom/google/zxing/common/reedsolomon/GenericGFPoly;)[Lcom/google/zxing/common/reedsolomon/GenericGFPoly;"><du var="this" def="201" use="201" target="202" covered="0"/><du var="this" def="201" use="201" target="204" covered="1"/><du var="this" def="201" use="208" covered="1"/><du var="this" def="201" use="209" covered="1"/><du var="this" def="201" use="212" covered="1"/><du var="this" def="201" use="216" covered="1"/><du var="this" def="201" use="218" covered="1"/><du var="other" def="201" use="201" target="202" covered="0"/><du var="other" def="201" use="201" target="204" covered="1"/><du var="other" def="201" use="204" target="205" covered="0"/><du var="other" def="201" use="204" target="208" covered="1"/><du var="other" def="201" use="211" covered="1"/><du var="other" def="201" use="214" target="214" covered="1"/><du var="other" def="201" use="214" target="223" covered="1"/><du var="other" def="201" use="215" covered="1"/><du var="other" def="201" use="217" covered="1"/><du var="this.field" def="201" use="201" target="202" covered="0"/><du var="this.field" def="201" use="201" target="204" covered="1"/><du var="this.field" def="201" use="208" covered="1"/><du var="this.field" def="201" use="212" covered="1"/><du var="this.field" def="201" use="216" covered="1"/><du var="this.field" def="201" use="218" covered="1"/><du var="other.field" def="201" use="201" target="202" covered="0"/><du var="other.field" def="201" use="201" target="204" covered="1"/><du var="quotient" def="208" use="223" covered="1"/><du var="quotient" def="208" use="219" covered="1"/><du var="remainder" def="209" use="214" target="214" covered="1"/><du var="remainder" def="209" use="214" target="223" covered="1"/><du var="remainder" def="209" use="223" covered="1"/><du var="remainder" def="209" use="214" target="223" covered="0"/><du var="remainder" def="209" use="214" target="215" covered="1"/><du var="remainder" def="209" use="215" covered="1"/><du var="remainder" def="209" use="216" covered="1"/><du var="remainder" def="209" use="220" covered="1"/><du var="inverseDenominatorLeadingTerm" def="212" use="216" covered="1"/><du var="quotient" def="219" use="223" covered="1"/><du var="quotient" def="219" use="219" covered="1"/><du var="remainder" def="220" use="214" target="214" covered="1"/><du var="remainder" def="220" use="214" target="223" covered="1"/><du var="remainder" def="220" use="223" covered="1"/><du var="remainder" def="220" use="214" target="223" covered="0"/><du var="remainder" def="220" use="214" target="215" covered="1"/><du var="remainder" def="220" use="215" covered="1"/><du var="remainder" def="220" use="216" covered="1"/><du var="remainder" def="220" use="220" covered="1"/><counter type="DU" missed="7" covered="38"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;"><du var="this" def="228" use="230" covered="0"/><du var="this" def="228" use="241" covered="0"/><du var="this.field" def="228" use="241" covered="0"/><du var="result" def="228" use="236" target="237" covered="0"/><du var="result" def="228" use="236" target="240" covered="0"/><du var="result" def="228" use="247" covered="0"/><du var="result" def="228" use="248" covered="0"/><du var="result" def="228" use="255" covered="0"/><du var="result" def="228" use="256" covered="0"/><du var="result" def="228" use="253" covered="0"/><du var="result" def="228" use="245" covered="0"/><du var="result" def="228" use="243" covered="0"/><du var="result" def="228" use="237" covered="0"/><du var="result" def="228" use="233" covered="0"/><du var="result" def="228" use="261" covered="0"/><du var="degree" def="229" use="229" target="261" covered="0"/><du var="degree" def="229" use="229" target="230" covered="0"/><du var="degree" def="229" use="230" covered="0"/><du var="degree" def="229" use="229" covered="0"/><du var="degree" def="229" use="240" target="240" covered="0"/><du var="degree" def="229" use="240" target="241" covered="0"/><du var="degree" def="229" use="251" target="252" covered="0"/><du var="degree" def="229" use="251" target="229" covered="0"/><du var="degree" def="229" use="252" target="253" covered="0"/><du var="degree" def="229" use="252" target="255" covered="0"/><du var="degree" def="229" use="256" covered="0"/><du var="coefficient" def="230" use="231" target="232" covered="0"/><du var="coefficient" def="230" use="231" target="229" covered="0"/><du var="coefficient" def="230" use="232" target="233" covered="0"/><du var="coefficient" def="230" use="232" target="236" covered="0"/><du var="coefficient" def="230" use="241" covered="0"/><du var="coefficient" def="230" use="240" target="241" covered="0"/><du var="coefficient" def="230" use="240" target="251" covered="0"/><du var="coefficient" def="230" use="234" covered="0"/><du var="coefficient" def="234" use="241" covered="0"/><du var="coefficient" def="234" use="240" target="241" covered="0"/><du var="coefficient" def="234" use="240" target="251" covered="0"/><du var="alphaPower" def="241" use="242" target="243" covered="0"/><du var="alphaPower" def="241" use="242" target="244" covered="0"/><du var="alphaPower" def="241" use="244" target="245" covered="0"/><du var="alphaPower" def="241" use="244" target="247" covered="0"/><du var="alphaPower" def="241" use="248" covered="0"/><du var="degree" def="229" use="229" target="261" covered="0"/><du var="degree" def="229" use="229" target="230" covered="0"/><du var="degree" def="229" use="230" covered="0"/><du var="degree" def="229" use="229" covered="0"/><du var="degree" def="229" use="240" target="240" covered="0"/><du var="degree" def="229" use="240" target="241" covered="0"/><du var="degree" def="229" use="251" target="252" covered="0"/><du var="degree" def="229" use="251" target="229" covered="0"/><du var="degree" def="229" use="252" target="253" covered="0"/><du var="degree" def="229" use="252" target="255" covered="0"/><du var="degree" def="229" use="256" covered="0"/><counter type="DU" missed="53" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="93" covered="251"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/qrcode/decoder/FormatInformation"><method name="decodeFormatInformation" desc="(II)Lcom/google/zxing/qrcode/decoder/FormatInformation;"><du var="maskedFormatInfo1" def="91" use="98" covered="0"/><du var="maskedFormatInfo2" def="91" use="98" covered="0"/><du var="formatInfo" def="91" use="92" target="93" covered="0"/><du var="formatInfo" def="91" use="92" target="98" covered="0"/><du var="formatInfo" def="91" use="93" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doDecodeFormatInformation" desc="(II)Lcom/google/zxing/qrcode/decoder/FormatInformation;"><du var="maskedFormatInfo1" def="104" use="108" target="108" covered="0"/><du var="maskedFormatInfo1" def="104" use="108" target="110" covered="0"/><du var="maskedFormatInfo1" def="104" use="112" covered="0"/><du var="maskedFormatInfo1" def="104" use="117" target="119" covered="0"/><du var="maskedFormatInfo1" def="104" use="117" target="106" covered="0"/><du var="maskedFormatInfo2" def="104" use="108" target="110" covered="0"/><du var="maskedFormatInfo2" def="104" use="108" target="112" covered="0"/><du var="maskedFormatInfo2" def="104" use="117" target="119" covered="0"/><du var="maskedFormatInfo2" def="104" use="117" target="106" covered="0"/><du var="maskedFormatInfo2" def="104" use="119" covered="0"/><du var="bestDifference" def="104" use="113" target="114" covered="0"/><du var="bestDifference" def="104" use="113" target="117" covered="0"/><du var="bestDifference" def="104" use="120" target="121" covered="0"/><du var="bestDifference" def="104" use="120" target="106" covered="0"/><du var="bestDifference" def="104" use="128" target="129" covered="0"/><du var="bestDifference" def="104" use="128" target="131" covered="0"/><du var="bestFormatInfo" def="105" use="129" covered="0"/><du var="decodeInfo" def="106" use="110" covered="0"/><du var="decodeInfo" def="106" use="121" covered="0"/><du var="decodeInfo" def="106" use="114" covered="0"/><du var="targetInfo" def="107" use="108" target="108" covered="0"/><du var="targetInfo" def="107" use="108" target="110" covered="0"/><du var="targetInfo" def="107" use="108" target="110" covered="0"/><du var="targetInfo" def="107" use="108" target="112" covered="0"/><du var="targetInfo" def="107" use="112" covered="0"/><du var="targetInfo" def="107" use="119" covered="0"/><du var="bitsDifference" def="112" use="113" target="114" covered="0"/><du var="bitsDifference" def="112" use="113" target="117" covered="0"/><du var="bitsDifference" def="112" use="115" covered="0"/><du var="bestFormatInfo" def="114" use="129" covered="0"/><du var="bestDifference" def="115" use="113" target="114" covered="0"/><du var="bestDifference" def="115" use="113" target="117" covered="0"/><du var="bestDifference" def="115" use="128" target="129" covered="0"/><du var="bestDifference" def="115" use="128" target="131" covered="0"/><du var="bestDifference" def="115" use="120" target="121" covered="0"/><du var="bestDifference" def="115" use="120" target="106" covered="0"/><du var="bitsDifference" def="119" use="120" target="121" covered="0"/><du var="bitsDifference" def="119" use="120" target="106" covered="0"/><du var="bitsDifference" def="119" use="122" covered="0"/><du var="bestFormatInfo" def="121" use="129" covered="0"/><du var="bestDifference" def="122" use="113" target="114" covered="0"/><du var="bestDifference" def="122" use="113" target="117" covered="0"/><du var="bestDifference" def="122" use="120" target="121" covered="0"/><du var="bestDifference" def="122" use="120" target="106" covered="0"/><du var="bestDifference" def="122" use="128" target="129" covered="0"/><du var="bestDifference" def="122" use="128" target="131" covered="0"/><counter type="DU" missed="57" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><du var="this" def="149" use="153" target="154" covered="0"/><du var="this" def="149" use="153" target="153" covered="0"/><du var="this" def="149" use="154" target="153" covered="0"/><du var="this" def="149" use="154" target="153" covered="0"/><du var="o" def="149" use="149" target="150" covered="0"/><du var="o" def="149" use="149" target="152" covered="0"/><du var="o" def="149" use="152" covered="0"/><du var="this.errorCorrectionLevel" def="149" use="153" target="154" covered="0"/><du var="this.errorCorrectionLevel" def="149" use="153" target="153" covered="0"/><du var="this.dataMask" def="149" use="154" target="153" covered="0"/><du var="this.dataMask" def="149" use="154" target="153" covered="0"/><du var="other" def="152" use="153" target="154" covered="0"/><du var="other" def="152" use="153" target="153" covered="0"/><du var="other" def="152" use="154" target="153" covered="0"/><du var="other" def="152" use="154" target="153" covered="0"/><du var="other.errorCorrectionLevel" def="152" use="153" target="154" covered="0"/><du var="other.errorCorrectionLevel" def="152" use="153" target="153" covered="0"/><du var="other.dataMask" def="152" use="154" target="153" covered="0"/><du var="other.dataMask" def="152" use="154" target="153" covered="0"/><counter type="DU" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="81" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/decoder/DataMask$2"><method name="isMasked" desc="(II)Z"><du var="i" def="52" use="52" target="52" covered="0"/><du var="i" def="52" use="52" target="52" covered="0"/><counter type="DU" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/decoder/DataMask$8"><method name="isMasked" desc="(II)Z"><du var="i" def="115" use="115" target="115" covered="0"/><du var="i" def="115" use="115" target="115" covered="0"/><du var="j" def="115" use="115" target="115" covered="0"/><du var="j" def="115" use="115" target="115" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/decoder/Version$ECBlocks"><method name="getNumBlocks" desc="()I"><du var="total" def="198" use="200" covered="0"/><du var="total" def="198" use="202" covered="0"/><du var="total" def="200" use="200" covered="0"/><du var="total" def="200" use="202" covered="0"/><counter type="DU" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/decoder/QRCodeDecoderMetaData"><method name="applyMirroredCorrection" desc="([Lcom/google/zxing/ResultPoint;)V"><du var="this" def="48" use="48" target="48" covered="0"/><du var="this" def="48" use="48" target="49" covered="0"/><du var="points" def="48" use="48" target="48" covered="0"/><du var="points" def="48" use="48" target="49" covered="0"/><du var="points" def="48" use="48" target="49" covered="0"/><du var="points" def="48" use="48" target="51" covered="0"/><du var="points" def="48" use="51" covered="0"/><du var="points" def="48" use="52" covered="0"/><du var="points" def="48" use="53" covered="0"/><du var="this.mirrored" def="48" use="48" target="48" covered="0"/><du var="this.mirrored" def="48" use="48" target="49" covered="0"/><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/decoder/DataMask$4"><method name="isMasked" desc="(II)Z"><du var="i" def="72" use="72" target="72" covered="0"/><du var="i" def="72" use="72" target="72" covered="0"/><du var="j" def="72" use="72" target="72" covered="0"/><du var="j" def="72" use="72" target="72" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/decoder/DataMask$1"><method name="isMasked" desc="(II)Z"><du var="i" def="42" use="42" target="42" covered="0"/><du var="i" def="42" use="42" target="42" covered="0"/><du var="j" def="42" use="42" target="42" covered="0"/><du var="j" def="42" use="42" target="42" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/decoder/DataMask$6"><method name="isMasked" desc="(II)Z"><du var="i" def="93" use="93" target="93" covered="0"/><du var="i" def="93" use="93" target="93" covered="0"/><du var="j" def="93" use="93" target="93" covered="0"/><du var="j" def="93" use="93" target="93" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/decoder/DataMask$3"><method name="isMasked" desc="(II)Z"><du var="j" def="62" use="62" target="62" covered="0"/><du var="j" def="62" use="62" target="62" covered="0"/><counter type="DU" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/decoder/Decoder"><method name="decode" desc="(Lcom/google/zxing/qrcode/decoder/BitMatrixParser;Ljava/util/Map;)Lcom/google/zxing/common/DecoderResult;"><du var="this" def="136" use="156" covered="0"/><du var="hints" def="136" use="163" covered="0"/><du var="version" def="136" use="163" covered="0"/><du var="ecLevel" def="137" use="163" covered="0"/><du var="dataBlocks" def="142" use="153" covered="0"/><du var="dataBlocks" def="142" use="153" covered="0"/><du var="totalBytes" def="145" use="147" covered="0"/><du var="totalBytes" def="145" use="149" covered="0"/><du var="totalBytes" def="147" use="147" covered="0"/><du var="totalBytes" def="147" use="149" covered="0"/><du var="resultBytes" def="149" use="158" covered="0"/><du var="resultBytes" def="149" use="163" covered="0"/><du var="resultOffset" def="150" use="158" covered="0"/><du var="codewordBytes" def="154" use="158" covered="0"/><du var="numDataCodewords" def="155" use="157" target="153" covered="0"/><du var="numDataCodewords" def="155" use="157" target="158" covered="0"/><du var="i" def="157" use="157" target="153" covered="0"/><du var="i" def="157" use="157" target="158" covered="0"/><du var="i" def="157" use="158" covered="0"/><du var="i" def="157" use="157" covered="0"/><du var="resultOffset" def="158" use="158" covered="0"/><du var="i" def="157" use="157" target="153" covered="0"/><du var="i" def="157" use="157" target="158" covered="0"/><du var="i" def="157" use="158" covered="0"/><du var="i" def="157" use="157" covered="0"/><counter type="DU" missed="47" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="correctErrors" desc="([BI)V"><du var="this" def="175" use="182" covered="0"/><du var="codewordBytes" def="175" use="179" covered="0"/><du var="codewordBytes" def="175" use="182" covered="0"/><du var="codewordBytes" def="175" use="189" covered="0"/><du var="numDataCodewords" def="175" use="182" covered="0"/><du var="numDataCodewords" def="175" use="188" target="191" covered="0"/><du var="numDataCodewords" def="175" use="188" target="189" covered="0"/><du var="this.rsDecoder" def="175" use="182" covered="0"/><du var="numCodewords" def="175" use="178" target="182" covered="0"/><du var="numCodewords" def="175" use="178" target="179" covered="0"/><du var="codewordsInts" def="177" use="179" covered="0"/><du var="codewordsInts" def="177" use="182" covered="0"/><du var="codewordsInts" def="177" use="189" covered="0"/><du var="i" def="178" use="178" target="182" covered="0"/><du var="i" def="178" use="178" target="179" covered="0"/><du var="i" def="178" use="179" covered="0"/><du var="i" def="178" use="178" covered="0"/><du var="i" def="178" use="178" target="182" covered="0"/><du var="i" def="178" use="178" target="179" covered="0"/><du var="i" def="178" use="179" covered="0"/><du var="i" def="178" use="178" covered="0"/><du var="i" def="188" use="188" target="191" covered="0"/><du var="i" def="188" use="188" target="189" covered="0"/><du var="i" def="188" use="189" covered="0"/><du var="i" def="188" use="188" covered="0"/><du var="i" def="188" use="188" target="191" covered="0"/><du var="i" def="188" use="188" target="189" covered="0"/><du var="i" def="188" use="189" covered="0"/><du var="i" def="188" use="188" covered="0"/><counter type="DU" missed="29" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="76" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/decoder/ErrorCorrectionLevel"><method name="forBits" desc="(I)Lcom/google/zxing/qrcode/decoder/ErrorCorrectionLevel;"><du var="bits" def="53" use="53" target="53" covered="0"/><du var="bits" def="53" use="53" target="54" covered="0"/><du var="bits" def="53" use="53" target="54" covered="0"/><du var="bits" def="53" use="53" target="56" covered="0"/><du var="bits" def="53" use="56" covered="0"/><du var="FOR_BITS" def="53" use="53" target="54" covered="0"/><du var="FOR_BITS" def="53" use="53" target="56" covered="0"/><du var="FOR_BITS" def="53" use="56" covered="0"/><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/decoder/DataMask$7"><method name="isMasked" desc="(II)Z"><du var="i" def="104" use="104" target="104" covered="0"/><du var="i" def="104" use="104" target="104" covered="0"/><du var="j" def="104" use="104" target="104" covered="0"/><du var="j" def="104" use="104" target="104" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/decoder/DataMask$5"><method name="isMasked" desc="(II)Z"><du var="i" def="82" use="82" target="82" covered="0"/><du var="i" def="82" use="82" target="82" covered="0"/><du var="j" def="82" use="82" target="82" covered="0"/><du var="j" def="82" use="82" target="82" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/decoder/BitMatrixParser"><method name="&lt;init&gt;" desc="(Lcom/google/zxing/common/BitMatrix;)V"><du var="this" def="36" use="41" covered="0"/><du var="bitMatrix" def="36" use="41" covered="0"/><du var="dimension" def="37" use="38" target="38" covered="0"/><du var="dimension" def="37" use="38" target="39" covered="0"/><du var="dimension" def="37" use="38" target="39" covered="0"/><du var="dimension" def="37" use="38" target="41" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFormatInformation" desc="()Lcom/google/zxing/qrcode/decoder/FormatInformation;"><du var="this" def="53" use="53" target="54" covered="0"/><du var="this" def="53" use="53" target="58" covered="0"/><du var="this" def="53" use="60" covered="0"/><du var="this" def="53" use="63" covered="0"/><du var="this" def="53" use="64" covered="0"/><du var="this" def="53" use="65" covered="0"/><du var="this" def="53" use="68" covered="0"/><du var="this" def="53" use="72" covered="0"/><du var="this" def="53" use="76" covered="0"/><du var="this" def="53" use="79" covered="0"/><du var="this" def="53" use="82" covered="0"/><du var="this" def="53" use="83" target="84" covered="0"/><du var="this" def="53" use="83" target="86" covered="0"/><du var="this" def="53" use="84" covered="0"/><du var="this" def="53" use="54" covered="0"/><du var="this.parsedFormatInfo" def="53" use="53" target="54" covered="0"/><du var="this.parsedFormatInfo" def="53" use="53" target="58" covered="0"/><du var="this.parsedFormatInfo" def="53" use="54" covered="0"/><du var="this.bitMatrix" def="53" use="72" covered="0"/><du var="formatInfoBits1" def="58" use="60" covered="0"/><du var="formatInfoBits1" def="58" use="63" covered="0"/><du var="i" def="59" use="59" target="63" covered="0"/><du var="i" def="59" use="59" target="60" covered="0"/><du var="i" def="59" use="60" covered="0"/><du var="i" def="59" use="59" covered="0"/><du var="formatInfoBits1" def="60" use="60" covered="0"/><du var="formatInfoBits1" def="60" use="63" covered="0"/><du var="i" def="59" use="59" target="63" covered="0"/><du var="i" def="59" use="59" target="60" covered="0"/><du var="i" def="59" use="60" covered="0"/><du var="i" def="59" use="59" covered="0"/><du var="formatInfoBits1" def="65" use="68" covered="0"/><du var="formatInfoBits1" def="65" use="82" covered="0"/><du var="j" def="67" use="67" target="72" covered="0"/><du var="j" def="67" use="67" target="68" covered="0"/><du var="j" def="67" use="68" covered="0"/><du var="j" def="67" use="67" covered="0"/><du var="formatInfoBits1" def="68" use="68" covered="0"/><du var="formatInfoBits1" def="68" use="82" covered="0"/><du var="j" def="67" use="67" target="72" covered="0"/><du var="j" def="67" use="67" target="68" covered="0"/><du var="j" def="67" use="68" covered="0"/><du var="j" def="67" use="67" covered="0"/><du var="dimension" def="72" use="78" covered="0"/><du var="dimension" def="72" use="78" target="82" covered="0"/><du var="dimension" def="72" use="78" target="79" covered="0"/><du var="formatInfoBits2" def="73" use="76" covered="0"/><du var="formatInfoBits2" def="73" use="79" covered="0"/><du var="formatInfoBits2" def="73" use="82" covered="0"/><du var="jMin" def="74" use="75" target="78" covered="0"/><du var="jMin" def="74" use="75" target="76" covered="0"/><du var="j" def="75" use="75" target="78" covered="0"/><du var="j" def="75" use="75" target="76" covered="0"/><du var="j" def="75" use="76" covered="0"/><du var="j" def="75" use="75" covered="0"/><du var="formatInfoBits2" def="76" use="76" covered="0"/><du var="formatInfoBits2" def="76" use="79" covered="0"/><du var="formatInfoBits2" def="76" use="82" covered="0"/><du var="j" def="75" use="75" target="78" covered="0"/><du var="j" def="75" use="75" target="76" covered="0"/><du var="j" def="75" use="76" covered="0"/><du var="j" def="75" use="75" covered="0"/><du var="i" def="78" use="78" target="82" covered="0"/><du var="i" def="78" use="78" target="79" covered="0"/><du var="i" def="78" use="79" covered="0"/><du var="i" def="78" use="78" covered="0"/><du var="formatInfoBits2" def="79" use="79" covered="0"/><du var="formatInfoBits2" def="79" use="82" covered="0"/><du var="i" def="78" use="78" target="82" covered="0"/><du var="i" def="78" use="78" target="79" covered="0"/><du var="i" def="78" use="79" covered="0"/><du var="i" def="78" use="78" covered="0"/><du var="this.parsedFormatInfo" def="82" use="83" target="84" covered="0"/><du var="this.parsedFormatInfo" def="82" use="83" target="86" covered="0"/><du var="this.parsedFormatInfo" def="82" use="84" covered="0"/><counter type="DU" missed="75" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readVersion" desc="()Lcom/google/zxing/qrcode/decoder/Version;"><du var="this" def="98" use="98" target="99" covered="0"/><du var="this" def="98" use="98" target="102" covered="0"/><du var="this" def="98" use="102" covered="0"/><du var="this" def="98" use="114" covered="0"/><du var="this" def="98" use="128" covered="0"/><du var="this" def="98" use="134" covered="0"/><du var="this" def="98" use="120" covered="0"/><du var="this" def="98" use="99" covered="0"/><du var="this.parsedVersion" def="98" use="98" target="99" covered="0"/><du var="this.parsedVersion" def="98" use="98" target="102" covered="0"/><du var="this.parsedVersion" def="98" use="99" covered="0"/><du var="this.bitMatrix" def="98" use="102" covered="0"/><du var="dimension" def="102" use="111" covered="0"/><du var="dimension" def="102" use="113" covered="0"/><du var="dimension" def="102" use="127" covered="0"/><du var="dimension" def="102" use="133" target="134" covered="0"/><du var="dimension" def="102" use="133" target="137" covered="0"/><du var="dimension" def="102" use="119" target="120" covered="0"/><du var="dimension" def="102" use="119" target="125" covered="0"/><du var="provisionalVersion" def="104" use="105" target="106" covered="0"/><du var="provisionalVersion" def="104" use="105" target="110" covered="0"/><du var="provisionalVersion" def="104" use="106" covered="0"/><du var="versionBits" def="110" use="114" covered="0"/><du var="versionBits" def="110" use="118" covered="0"/><du var="ijMin" def="111" use="113" target="112" covered="0"/><du var="ijMin" def="111" use="113" target="114" covered="0"/><du var="ijMin" def="111" use="127" target="126" covered="0"/><du var="ijMin" def="111" use="127" target="128" covered="0"/><du var="j" def="112" use="112" target="118" covered="0"/><du var="j" def="112" use="112" target="113" covered="0"/><du var="j" def="112" use="114" covered="0"/><du var="j" def="112" use="112" covered="0"/><du var="i" def="113" use="113" target="112" covered="0"/><du var="i" def="113" use="113" target="114" covered="0"/><du var="i" def="113" use="114" covered="0"/><du var="i" def="113" use="113" covered="0"/><du var="versionBits" def="114" use="114" covered="0"/><du var="versionBits" def="114" use="118" covered="0"/><du var="i" def="113" use="113" target="112" covered="0"/><du var="i" def="113" use="113" target="114" covered="0"/><du var="i" def="113" use="114" covered="0"/><du var="i" def="113" use="113" covered="0"/><du var="j" def="112" use="112" target="118" covered="0"/><du var="j" def="112" use="112" target="113" covered="0"/><du var="j" def="112" use="114" covered="0"/><du var="j" def="112" use="112" covered="0"/><du var="theParsedVersion" def="118" use="119" target="119" covered="0"/><du var="theParsedVersion" def="118" use="119" target="125" covered="0"/><du var="theParsedVersion" def="118" use="119" target="120" covered="0"/><du var="theParsedVersion" def="118" use="119" target="125" covered="0"/><du var="theParsedVersion" def="118" use="120" covered="0"/><du var="theParsedVersion" def="118" use="121" covered="0"/><du var="versionBits" def="125" use="128" covered="0"/><du var="versionBits" def="125" use="132" covered="0"/><du var="i" def="126" use="126" target="132" covered="0"/><du var="i" def="126" use="126" target="127" covered="0"/><du var="i" def="126" use="128" covered="0"/><du var="i" def="126" use="126" covered="0"/><du var="j" def="127" use="127" target="126" covered="0"/><du var="j" def="127" use="127" target="128" covered="0"/><du var="j" def="127" use="128" covered="0"/><du var="j" def="127" use="127" covered="0"/><du var="versionBits" def="128" use="128" covered="0"/><du var="versionBits" def="128" use="132" covered="0"/><du var="j" def="127" use="127" target="126" covered="0"/><du var="j" def="127" use="127" target="128" covered="0"/><du var="j" def="127" use="128" covered="0"/><du var="j" def="127" use="127" covered="0"/><du var="i" def="126" use="126" target="132" covered="0"/><du var="i" def="126" use="126" target="127" covered="0"/><du var="i" def="126" use="128" covered="0"/><du var="i" def="126" use="126" covered="0"/><du var="theParsedVersion" def="132" use="133" target="133" covered="0"/><du var="theParsedVersion" def="132" use="133" target="137" covered="0"/><du var="theParsedVersion" def="132" use="133" target="134" covered="0"/><du var="theParsedVersion" def="132" use="133" target="137" covered="0"/><du var="theParsedVersion" def="132" use="134" covered="0"/><du var="theParsedVersion" def="132" use="135" covered="0"/><counter type="DU" missed="78" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyBit" desc="(III)I"><du var="this" def="141" use="141" target="141" covered="0"/><du var="this" def="141" use="141" target="141" covered="0"/><du var="this" def="141" use="141" covered="0"/><du var="i" def="141" use="141" covered="0"/><du var="j" def="141" use="141" covered="0"/><du var="versionBits" def="141" use="142" covered="0"/><du var="this.mirror" def="141" use="141" target="141" covered="0"/><du var="this.mirror" def="141" use="141" target="141" covered="0"/><du var="this.bitMatrix" def="141" use="141" covered="0"/><du var="bit" def="141" use="142" target="142" covered="0"/><du var="bit" def="141" use="142" target="142" covered="0"/><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readCodewords" desc="()[B"><du var="this" def="155" use="187" target="188" covered="0"/><du var="this" def="155" use="187" target="191" covered="0"/><du var="this.bitMatrix" def="155" use="187" target="188" covered="0"/><du var="this.bitMatrix" def="155" use="187" target="191" covered="0"/><du var="version" def="156" use="201" target="202" covered="0"/><du var="version" def="156" use="201" target="204" covered="0"/><du var="dimension" def="161" use="179" target="199" covered="0"/><du var="dimension" def="161" use="179" target="180" covered="0"/><du var="dimension" def="161" use="180" covered="0"/><du var="functionPattern" def="164" use="183" target="185" covered="0"/><du var="functionPattern" def="164" use="183" target="181" covered="0"/><du var="readingUp" def="166" use="180" target="180" covered="0"/><du var="readingUp" def="166" use="180" target="180" covered="0"/><du var="readingUp" def="166" use="199" covered="0"/><du var="result" def="167" use="192" covered="0"/><du var="result" def="167" use="204" covered="0"/><du var="resultOffset" def="168" use="192" covered="0"/><du var="resultOffset" def="168" use="201" target="202" covered="0"/><du var="resultOffset" def="168" use="201" target="204" covered="0"/><du var="currentByte" def="169" use="186" covered="0"/><du var="bitsRead" def="170" use="185" covered="0"/><du var="j" def="172" use="172" target="201" covered="0"/><du var="j" def="172" use="172" target="173" covered="0"/><du var="j" def="172" use="173" target="176" covered="0"/><du var="j" def="172" use="173" target="179" covered="0"/><du var="j" def="172" use="183" target="185" covered="0"/><du var="j" def="172" use="183" target="181" covered="0"/><du var="j" def="172" use="187" target="188" covered="0"/><du var="j" def="172" use="187" target="191" covered="0"/><du var="j" def="172" use="172" covered="0"/><du var="j" def="172" use="176" covered="0"/><du var="j" def="176" use="183" target="185" covered="0"/><du var="j" def="176" use="183" target="181" covered="0"/><du var="j" def="176" use="187" target="188" covered="0"/><du var="j" def="176" use="187" target="191" covered="0"/><du var="j" def="176" use="172" covered="0"/><du var="count" def="179" use="179" target="199" covered="0"/><du var="count" def="179" use="179" target="180" covered="0"/><du var="count" def="179" use="180" covered="0"/><du var="count" def="179" use="179" covered="0"/><du var="i" def="180" use="183" target="185" covered="0"/><du var="i" def="180" use="183" target="181" covered="0"/><du var="i" def="180" use="187" target="188" covered="0"/><du var="i" def="180" use="187" target="191" covered="0"/><du var="col" def="181" use="181" target="179" covered="0"/><du var="col" def="181" use="181" target="183" covered="0"/><du var="col" def="181" use="183" target="185" covered="0"/><du var="col" def="181" use="183" target="181" covered="0"/><du var="col" def="181" use="181" covered="0"/><du var="col" def="181" use="187" target="188" covered="0"/><du var="col" def="181" use="187" target="191" covered="0"/><du var="bitsRead" def="185" use="191" target="192" covered="0"/><du var="bitsRead" def="185" use="191" target="181" covered="0"/><du var="bitsRead" def="185" use="185" covered="0"/><du var="currentByte" def="186" use="186" covered="0"/><du var="currentByte" def="186" use="192" covered="0"/><du var="currentByte" def="186" use="188" covered="0"/><du var="currentByte" def="188" use="186" covered="0"/><du var="currentByte" def="188" use="192" covered="0"/><du var="resultOffset" def="192" use="192" covered="0"/><du var="resultOffset" def="192" use="201" target="202" covered="0"/><du var="resultOffset" def="192" use="201" target="204" covered="0"/><du var="bitsRead" def="193" use="185" covered="0"/><du var="currentByte" def="194" use="186" covered="0"/><du var="col" def="181" use="181" target="179" covered="0"/><du var="col" def="181" use="181" target="183" covered="0"/><du var="col" def="181" use="183" target="185" covered="0"/><du var="col" def="181" use="183" target="181" covered="0"/><du var="col" def="181" use="181" covered="0"/><du var="col" def="181" use="187" target="188" covered="0"/><du var="col" def="181" use="187" target="191" covered="0"/><du var="count" def="179" use="179" target="199" covered="0"/><du var="count" def="179" use="179" target="180" covered="0"/><du var="count" def="179" use="180" covered="0"/><du var="count" def="179" use="179" covered="0"/><du var="readingUp" def="199" use="180" target="180" covered="0"/><du var="readingUp" def="199" use="180" target="180" covered="0"/><du var="readingUp" def="199" use="199" covered="0"/><du var="j" def="172" use="172" target="201" covered="0"/><du var="j" def="172" use="172" target="173" covered="0"/><du var="j" def="172" use="173" target="176" covered="0"/><du var="j" def="172" use="173" target="179" covered="0"/><du var="j" def="172" use="183" target="185" covered="0"/><du var="j" def="172" use="183" target="181" covered="0"/><du var="j" def="172" use="187" target="188" covered="0"/><du var="j" def="172" use="187" target="191" covered="0"/><du var="j" def="172" use="172" covered="0"/><du var="j" def="172" use="176" covered="0"/><counter type="DU" missed="88" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remask" desc="()V"><du var="this" def="211" use="211" target="212" covered="0"/><du var="this" def="211" use="211" target="214" covered="0"/><du var="this" def="211" use="214" covered="0"/><du var="this" def="211" use="215" covered="0"/><du var="this" def="211" use="216" covered="0"/><du var="this.parsedFormatInfo" def="211" use="211" target="212" covered="0"/><du var="this.parsedFormatInfo" def="211" use="211" target="214" covered="0"/><du var="this.parsedFormatInfo" def="211" use="214" covered="0"/><du var="this.bitMatrix" def="211" use="215" covered="0"/><du var="this.bitMatrix" def="211" use="216" covered="0"/><counter type="DU" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mirror" desc="()V"><du var="this" def="235" use="235" target="243" covered="0"/><du var="this" def="235" use="235" target="236" covered="0"/><du var="this" def="235" use="236" target="235" covered="0"/><du var="this" def="235" use="236" target="237" covered="0"/><du var="this" def="235" use="237" target="238" covered="0"/><du var="this" def="235" use="237" target="236" covered="0"/><du var="this" def="235" use="238" covered="0"/><du var="this" def="235" use="239" covered="0"/><du var="this.bitMatrix" def="235" use="235" target="243" covered="0"/><du var="this.bitMatrix" def="235" use="235" target="236" covered="0"/><du var="this.bitMatrix" def="235" use="236" target="235" covered="0"/><du var="this.bitMatrix" def="235" use="236" target="237" covered="0"/><du var="this.bitMatrix" def="235" use="237" target="238" covered="0"/><du var="this.bitMatrix" def="235" use="237" target="236" covered="0"/><du var="this.bitMatrix" def="235" use="238" covered="0"/><du var="this.bitMatrix" def="235" use="239" covered="0"/><du var="x" def="235" use="235" target="243" covered="0"/><du var="x" def="235" use="235" target="236" covered="0"/><du var="x" def="235" use="236" covered="0"/><du var="x" def="235" use="237" target="238" covered="0"/><du var="x" def="235" use="237" target="236" covered="0"/><du var="x" def="235" use="238" covered="0"/><du var="x" def="235" use="239" covered="0"/><du var="x" def="235" use="235" covered="0"/><du var="y" def="236" use="236" target="235" covered="0"/><du var="y" def="236" use="236" target="237" covered="0"/><du var="y" def="236" use="237" target="238" covered="0"/><du var="y" def="236" use="237" target="236" covered="0"/><du var="y" def="236" use="236" covered="0"/><du var="y" def="236" use="238" covered="0"/><du var="y" def="236" use="239" covered="0"/><du var="y" def="236" use="236" target="235" covered="0"/><du var="y" def="236" use="236" target="237" covered="0"/><du var="y" def="236" use="237" target="238" covered="0"/><du var="y" def="236" use="237" target="236" covered="0"/><du var="y" def="236" use="236" covered="0"/><du var="y" def="236" use="238" covered="0"/><du var="y" def="236" use="239" covered="0"/><du var="x" def="235" use="235" target="243" covered="0"/><du var="x" def="235" use="235" target="236" covered="0"/><du var="x" def="235" use="236" covered="0"/><du var="x" def="235" use="237" target="238" covered="0"/><du var="x" def="235" use="237" target="236" covered="0"/><du var="x" def="235" use="238" covered="0"/><du var="x" def="235" use="239" covered="0"/><du var="x" def="235" use="235" covered="0"/><counter type="DU" missed="46" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="314" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/decoder/DataMask"><method name="unmaskBitMatrix" desc="(Lcom/google/zxing/common/BitMatrix;I)V"><du var="this" def="130" use="132" target="133" covered="0"/><du var="this" def="130" use="132" target="131" covered="0"/><du var="bits" def="130" use="133" covered="0"/><du var="dimension" def="130" use="130" target="137" covered="0"/><du var="dimension" def="130" use="130" target="131" covered="0"/><du var="dimension" def="130" use="131" target="130" covered="0"/><du var="dimension" def="130" use="131" target="132" covered="0"/><du var="i" def="130" use="130" target="137" covered="0"/><du var="i" def="130" use="130" target="131" covered="0"/><du var="i" def="130" use="132" target="133" covered="0"/><du var="i" def="130" use="132" target="131" covered="0"/><du var="i" def="130" use="133" covered="0"/><du var="i" def="130" use="130" covered="0"/><du var="j" def="131" use="131" target="130" covered="0"/><du var="j" def="131" use="131" target="132" covered="0"/><du var="j" def="131" use="132" target="133" covered="0"/><du var="j" def="131" use="132" target="131" covered="0"/><du var="j" def="131" use="131" covered="0"/><du var="j" def="131" use="133" covered="0"/><du var="j" def="131" use="131" target="130" covered="0"/><du var="j" def="131" use="131" target="132" covered="0"/><du var="j" def="131" use="132" target="133" covered="0"/><du var="j" def="131" use="132" target="131" covered="0"/><du var="j" def="131" use="131" covered="0"/><du var="j" def="131" use="133" covered="0"/><du var="i" def="130" use="130" target="137" covered="0"/><du var="i" def="130" use="130" target="131" covered="0"/><du var="i" def="130" use="132" target="133" covered="0"/><du var="i" def="130" use="132" target="131" covered="0"/><du var="i" def="130" use="133" covered="0"/><du var="i" def="130" use="130" covered="0"/><counter type="DU" missed="31" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="31" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/decoder/DecodedBitStreamParser"><method name="decode" desc="([BLcom/google/zxing/qrcode/decoder/Version;Lcom/google/zxing/qrcode/decoder/ErrorCorrectionLevel;Ljava/util/Map;)Lcom/google/zxing/common/DecoderResult;"><du var="bytes" def="56" use="136" covered="0"/><du var="version" def="56" use="103" covered="0"/><du var="version" def="56" use="111" covered="0"/><du var="ecLevel" def="56" use="139" target="139" covered="0"/><du var="ecLevel" def="56" use="139" target="139" covered="0"/><du var="ecLevel" def="56" use="136" covered="0"/><du var="hints" def="56" use="120" covered="0"/><du var="TERMINATOR" def="56" use="130" target="131" covered="0"/><du var="TERMINATOR" def="56" use="130" target="68" covered="0"/><du var="TERMINATOR" def="56" use="70" covered="0"/><du var="bits" def="56" use="68" target="70" covered="0"/><du var="bits" def="56" use="68" target="72" covered="0"/><du var="bits" def="56" use="72" covered="0"/><du var="bits" def="56" use="102" covered="0"/><du var="bits" def="56" use="103" covered="0"/><du var="bits" def="56" use="105" covered="0"/><du var="bits" def="56" use="93" covered="0"/><du var="bits" def="56" use="83" target="84" covered="0"/><du var="bits" def="56" use="83" target="88" covered="0"/><du var="bits" def="56" use="88" covered="0"/><du var="bits" def="56" use="89" covered="0"/><du var="bits" def="56" use="111" covered="0"/><du var="bits" def="56" use="123" covered="0"/><du var="bits" def="56" use="120" covered="0"/><du var="bits" def="56" use="117" covered="0"/><du var="bits" def="56" use="114" covered="0"/><du var="result" def="57" use="136" covered="0"/><du var="result" def="57" use="105" covered="0"/><du var="result" def="57" use="123" covered="0"/><du var="result" def="57" use="120" covered="0"/><du var="result" def="57" use="117" covered="0"/><du var="result" def="57" use="114" covered="0"/><du var="byteSegments" def="58" use="138" target="138" covered="0"/><du var="byteSegments" def="58" use="138" target="138" covered="0"/><du var="byteSegments" def="58" use="136" covered="0"/><du var="byteSegments" def="58" use="120" covered="0"/><du var="symbolSequence" def="59" use="136" covered="0"/><du var="parityData" def="60" use="136" covered="0"/><du var="currentCharacterSetECI" def="63" use="120" covered="0"/><du var="fc1InEffect" def="64" use="117" covered="0"/><du var="mode" def="70" use="74" target="111" covered="0"/><du var="mode" def="70" use="74" target="76" covered="0"/><du var="mode" def="70" use="74" target="83" covered="0"/><du var="mode" def="70" use="74" target="93" covered="0"/><du var="mode" def="70" use="74" target="80" covered="0"/><du var="mode" def="70" use="74" target="102" covered="0"/><du var="mode" def="70" use="103" covered="0"/><du var="mode" def="70" use="130" target="131" covered="0"/><du var="mode" def="70" use="130" target="68" covered="0"/><du var="mode" def="70" use="111" covered="0"/><du var="mode" def="70" use="112" target="126" covered="0"/><du var="mode" def="70" use="112" target="114" covered="0"/><du var="mode" def="70" use="112" target="117" covered="0"/><du var="mode" def="70" use="112" target="120" covered="0"/><du var="mode" def="70" use="112" target="123" covered="0"/><du var="mode" def="72" use="74" target="111" covered="0"/><du var="mode" def="72" use="74" target="76" covered="0"/><du var="mode" def="72" use="74" target="83" covered="0"/><du var="mode" def="72" use="74" target="93" covered="0"/><du var="mode" def="72" use="74" target="80" covered="0"/><du var="mode" def="72" use="74" target="102" covered="0"/><du var="mode" def="72" use="103" covered="0"/><du var="mode" def="72" use="130" target="131" covered="0"/><du var="mode" def="72" use="130" target="68" covered="0"/><du var="mode" def="72" use="111" covered="0"/><du var="mode" def="72" use="112" target="126" covered="0"/><du var="mode" def="72" use="112" target="114" covered="0"/><du var="mode" def="72" use="112" target="117" covered="0"/><du var="mode" def="72" use="112" target="120" covered="0"/><du var="mode" def="72" use="112" target="123" covered="0"/><du var="fc1InEffect" def="80" use="117" covered="0"/><du var="symbolSequence" def="88" use="136" covered="0"/><du var="parityData" def="89" use="136" covered="0"/><du var="currentCharacterSetECI" def="94" use="95" target="96" covered="0"/><du var="currentCharacterSetECI" def="94" use="95" target="130" covered="0"/><du var="currentCharacterSetECI" def="94" use="120" covered="0"/><du var="subset" def="102" use="104" target="105" covered="0"/><du var="subset" def="102" use="104" target="130" covered="0"/><du var="countHanzi" def="103" use="105" covered="0"/><du var="count" def="111" use="123" covered="0"/><du var="count" def="111" use="120" covered="0"/><du var="count" def="111" use="117" covered="0"/><du var="count" def="111" use="114" covered="0"/><counter type="DU" missed="83" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeHanziSegment" desc="(Lcom/google/zxing/common/BitSource;Ljava/lang/StringBuilder;I)V"><du var="bits" def="151" use="151" target="152" covered="0"/><du var="bits" def="151" use="151" target="157" covered="0"/><du var="bits" def="151" use="161" covered="0"/><du var="result" def="151" use="177" covered="0"/><du var="count" def="151" use="151" target="152" covered="0"/><du var="count" def="151" use="151" target="157" covered="0"/><du var="count" def="151" use="157" covered="0"/><du var="count" def="151" use="159" target="177" covered="0"/><du var="count" def="151" use="159" target="161" covered="0"/><du var="count" def="151" use="173" covered="0"/><du var="buffer" def="157" use="170" covered="0"/><du var="buffer" def="157" use="171" covered="0"/><du var="buffer" def="157" use="177" covered="0"/><du var="offset" def="158" use="170" covered="0"/><du var="offset" def="158" use="171" covered="0"/><du var="offset" def="158" use="172" covered="0"/><du var="assembledTwoBytes" def="162" use="163" target="165" covered="0"/><du var="assembledTwoBytes" def="162" use="163" target="168" covered="0"/><du var="assembledTwoBytes" def="162" use="168" covered="0"/><du var="assembledTwoBytes" def="162" use="165" covered="0"/><du var="assembledTwoBytes" def="165" use="170" covered="0"/><du var="assembledTwoBytes" def="165" use="171" covered="0"/><du var="assembledTwoBytes" def="168" use="170" covered="0"/><du var="assembledTwoBytes" def="168" use="171" covered="0"/><du var="offset" def="172" use="170" covered="0"/><du var="offset" def="172" use="171" covered="0"/><du var="offset" def="172" use="172" covered="0"/><du var="count" def="173" use="159" target="177" covered="0"/><du var="count" def="173" use="159" target="161" covered="0"/><du var="count" def="173" use="173" covered="0"/><counter type="DU" missed="30" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeKanjiSegment" desc="(Lcom/google/zxing/common/BitSource;Ljava/lang/StringBuilder;I)V"><du var="bits" def="187" use="187" target="188" covered="0"/><du var="bits" def="187" use="187" target="193" covered="0"/><du var="bits" def="187" use="197" covered="0"/><du var="result" def="187" use="213" covered="0"/><du var="count" def="187" use="187" target="188" covered="0"/><du var="count" def="187" use="187" target="193" covered="0"/><du var="count" def="187" use="193" covered="0"/><du var="count" def="187" use="195" target="213" covered="0"/><du var="count" def="187" use="195" target="197" covered="0"/><du var="count" def="187" use="209" covered="0"/><du var="buffer" def="193" use="206" covered="0"/><du var="buffer" def="193" use="207" covered="0"/><du var="buffer" def="193" use="213" covered="0"/><du var="offset" def="194" use="206" covered="0"/><du var="offset" def="194" use="207" covered="0"/><du var="offset" def="194" use="208" covered="0"/><du var="assembledTwoBytes" def="198" use="199" target="201" covered="0"/><du var="assembledTwoBytes" def="198" use="199" target="204" covered="0"/><du var="assembledTwoBytes" def="198" use="204" covered="0"/><du var="assembledTwoBytes" def="198" use="201" covered="0"/><du var="assembledTwoBytes" def="201" use="206" covered="0"/><du var="assembledTwoBytes" def="201" use="207" covered="0"/><du var="assembledTwoBytes" def="204" use="206" covered="0"/><du var="assembledTwoBytes" def="204" use="207" covered="0"/><du var="offset" def="208" use="206" covered="0"/><du var="offset" def="208" use="207" covered="0"/><du var="offset" def="208" use="208" covered="0"/><du var="count" def="209" use="195" target="213" covered="0"/><du var="count" def="209" use="195" target="197" covered="0"/><du var="count" def="209" use="209" covered="0"/><counter type="DU" missed="30" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeByteSegment" desc="(Lcom/google/zxing/common/BitSource;Ljava/lang/StringBuilder;ILcom/google/zxing/common/CharacterSetECI;Ljava/util/Collection;Ljava/util/Map;)V"><du var="bits" def="226" use="226" target="227" covered="0"/><du var="bits" def="226" use="226" target="230" covered="0"/><du var="bits" def="226" use="232" covered="0"/><du var="result" def="226" use="246" covered="0"/><du var="count" def="226" use="226" target="227" covered="0"/><du var="count" def="226" use="226" target="230" covered="0"/><du var="count" def="226" use="230" covered="0"/><du var="count" def="226" use="231" target="235" covered="0"/><du var="count" def="226" use="231" target="232" covered="0"/><du var="currentCharacterSetECI" def="226" use="235" target="241" covered="0"/><du var="currentCharacterSetECI" def="226" use="235" target="243" covered="0"/><du var="currentCharacterSetECI" def="226" use="243" covered="0"/><du var="byteSegments" def="226" use="250" covered="0"/><du var="hints" def="226" use="241" covered="0"/><du var="readBytes" def="230" use="232" covered="0"/><du var="readBytes" def="230" use="246" covered="0"/><du var="readBytes" def="230" use="250" covered="0"/><du var="readBytes" def="230" use="241" covered="0"/><du var="i" def="231" use="231" target="235" covered="0"/><du var="i" def="231" use="231" target="232" covered="0"/><du var="i" def="231" use="232" covered="0"/><du var="i" def="231" use="231" covered="0"/><du var="i" def="231" use="231" target="235" covered="0"/><du var="i" def="231" use="231" target="232" covered="0"/><du var="i" def="231" use="232" covered="0"/><du var="i" def="231" use="231" covered="0"/><du var="encoding" def="241" use="246" covered="0"/><du var="encoding" def="243" use="246" covered="0"/><counter type="DU" missed="28" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toAlphaNumericChar" desc="(I)C"><du var="value" def="254" use="254" target="255" covered="0"/><du var="value" def="254" use="254" target="257" covered="0"/><du var="value" def="254" use="257" covered="0"/><du var="ALPHANUMERIC_CHARS" def="254" use="254" target="255" covered="0"/><du var="ALPHANUMERIC_CHARS" def="254" use="254" target="257" covered="0"/><du var="ALPHANUMERIC_CHARS" def="254" use="257" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeAlphanumericSegment" desc="(Lcom/google/zxing/common/BitSource;Ljava/lang/StringBuilder;IZ)V"><du var="bits" def="265" use="267" target="268" covered="0"/><du var="bits" def="265" use="267" target="270" covered="0"/><du var="bits" def="265" use="270" covered="0"/><du var="bits" def="265" use="277" target="278" covered="0"/><du var="bits" def="265" use="277" target="280" covered="0"/><du var="bits" def="265" use="280" covered="0"/><du var="result" def="265" use="271" covered="0"/><du var="result" def="265" use="272" covered="0"/><du var="result" def="265" use="285" target="297" covered="0"/><du var="result" def="265" use="285" target="286" covered="0"/><du var="result" def="265" use="286" target="287" covered="0"/><du var="result" def="265" use="286" target="285" covered="0"/><du var="result" def="265" use="287" target="287" covered="0"/><du var="result" def="265" use="287" target="292" covered="0"/><du var="result" def="265" use="292" covered="0"/><du var="result" def="265" use="287" target="289" covered="0"/><du var="result" def="265" use="287" target="292" covered="0"/><du var="result" def="265" use="289" covered="0"/><du var="result" def="265" use="280" covered="0"/><du var="count" def="265" use="266" target="275" covered="0"/><du var="count" def="265" use="266" target="267" covered="0"/><du var="count" def="265" use="273" covered="0"/><du var="count" def="265" use="275" target="277" covered="0"/><du var="count" def="265" use="275" target="283" covered="0"/><du var="fc1InEffect" def="265" use="283" target="285" covered="0"/><du var="fc1InEffect" def="265" use="283" target="297" covered="0"/><du var="start" def="265" use="285" covered="0"/><du var="count" def="273" use="266" target="275" covered="0"/><du var="count" def="273" use="266" target="267" covered="0"/><du var="count" def="273" use="273" covered="0"/><du var="count" def="273" use="275" target="277" covered="0"/><du var="count" def="273" use="275" target="283" covered="0"/><du var="i" def="285" use="285" target="297" covered="0"/><du var="i" def="285" use="285" target="286" covered="0"/><du var="i" def="285" use="286" target="287" covered="0"/><du var="i" def="285" use="286" target="285" covered="0"/><du var="i" def="285" use="285" covered="0"/><du var="i" def="285" use="287" target="287" covered="0"/><du var="i" def="285" use="287" target="292" covered="0"/><du var="i" def="285" use="292" covered="0"/><du var="i" def="285" use="287" target="289" covered="0"/><du var="i" def="285" use="287" target="292" covered="0"/><du var="i" def="285" use="289" covered="0"/><du var="i" def="285" use="285" target="297" covered="0"/><du var="i" def="285" use="285" target="286" covered="0"/><du var="i" def="285" use="286" target="287" covered="0"/><du var="i" def="285" use="286" target="285" covered="0"/><du var="i" def="285" use="285" covered="0"/><du var="i" def="285" use="287" target="287" covered="0"/><du var="i" def="285" use="287" target="292" covered="0"/><du var="i" def="285" use="292" covered="0"/><du var="i" def="285" use="287" target="289" covered="0"/><du var="i" def="285" use="287" target="292" covered="0"/><du var="i" def="285" use="289" covered="0"/><counter type="DU" missed="54" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeNumericSegment" desc="(Lcom/google/zxing/common/BitSource;Ljava/lang/StringBuilder;I)V"><du var="bits" def="303" use="305" target="306" covered="0"/><du var="bits" def="303" use="305" target="308" covered="0"/><du var="bits" def="303" use="308" covered="0"/><du var="bits" def="303" use="330" target="331" covered="0"/><du var="bits" def="303" use="330" target="333" covered="0"/><du var="bits" def="303" use="333" covered="0"/><du var="bits" def="303" use="319" target="320" covered="0"/><du var="bits" def="303" use="319" target="322" covered="0"/><du var="bits" def="303" use="322" covered="0"/><du var="result" def="303" use="312" covered="0"/><du var="result" def="303" use="313" covered="0"/><du var="result" def="303" use="314" covered="0"/><du var="result" def="303" use="337" covered="0"/><du var="result" def="303" use="326" covered="0"/><du var="result" def="303" use="327" covered="0"/><du var="count" def="303" use="303" target="317" covered="0"/><du var="count" def="303" use="303" target="305" covered="0"/><du var="count" def="303" use="315" covered="0"/><du var="count" def="303" use="317" target="319" covered="0"/><du var="count" def="303" use="317" target="328" covered="0"/><du var="count" def="303" use="328" target="330" covered="0"/><du var="count" def="303" use="328" target="339" covered="0"/><du var="threeDigitsBits" def="308" use="309" target="310" covered="0"/><du var="threeDigitsBits" def="308" use="309" target="312" covered="0"/><du var="threeDigitsBits" def="308" use="312" covered="0"/><du var="threeDigitsBits" def="308" use="313" covered="0"/><du var="threeDigitsBits" def="308" use="314" covered="0"/><du var="count" def="315" use="303" target="317" covered="0"/><du var="count" def="315" use="303" target="305" covered="0"/><du var="count" def="315" use="315" covered="0"/><du var="count" def="315" use="317" target="319" covered="0"/><du var="count" def="315" use="317" target="328" covered="0"/><du var="count" def="315" use="328" target="330" covered="0"/><du var="count" def="315" use="328" target="339" covered="0"/><du var="twoDigitsBits" def="322" use="323" target="324" covered="0"/><du var="twoDigitsBits" def="322" use="323" target="326" covered="0"/><du var="twoDigitsBits" def="322" use="326" covered="0"/><du var="twoDigitsBits" def="322" use="327" covered="0"/><du var="digitBits" def="333" use="334" target="335" covered="0"/><du var="digitBits" def="333" use="334" target="337" covered="0"/><du var="digitBits" def="333" use="337" covered="0"/><counter type="DU" missed="41" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseECIValue" desc="(Lcom/google/zxing/common/BitSource;)I"><du var="bits" def="342" use="354" covered="0"/><du var="bits" def="342" use="349" covered="0"/><du var="firstByte" def="342" use="343" target="345" covered="0"/><du var="firstByte" def="342" use="343" target="347" covered="0"/><du var="firstByte" def="342" use="347" target="349" covered="0"/><du var="firstByte" def="342" use="347" target="352" covered="0"/><du var="firstByte" def="342" use="352" target="354" covered="0"/><du var="firstByte" def="342" use="352" target="357" covered="0"/><du var="firstByte" def="342" use="355" covered="0"/><du var="firstByte" def="342" use="350" covered="0"/><du var="firstByte" def="342" use="345" covered="0"/><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="$SWITCH_TABLE$com$google$zxing$qrcode$decoder$Mode" desc="()[I"><du var="$SWITCH_TABLE$com$google$zxing$qrcode$decoder$Mode" def="40" use="40" target="40" covered="0"/><du var="$SWITCH_TABLE$com$google$zxing$qrcode$decoder$Mode" def="40" use="40" target="40" covered="0"/><du var="$SWITCH_TABLE$com$google$zxing$qrcode$decoder$Mode" def="40" use="40" covered="0"/><du var="ALPHANUMERIC" def="40" use="40" covered="0"/><du var="BYTE" def="40" use="40" covered="0"/><du var="ECI" def="40" use="40" covered="0"/><du var="FNC1_FIRST_POSITION" def="40" use="40" covered="0"/><du var="FNC1_SECOND_POSITION" def="40" use="40" covered="0"/><du var="HANZI" def="40" use="40" covered="0"/><du var="KANJI" def="40" use="40" covered="0"/><du var="NUMERIC" def="40" use="40" covered="0"/><du var="STRUCTURED_APPEND" def="40" use="40" covered="0"/><du var="TERMINATOR" def="40" use="40" covered="0"/><counter type="DU" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="296" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/decoder/DataBlock"><method name="getDataBlocks" desc="([BLcom/google/zxing/qrcode/decoder/Version;Lcom/google/zxing/qrcode/decoder/ErrorCorrectionLevel;)[Lcom/google/zxing/qrcode/decoder/DataBlock;"><du var="rawCodewords" def="51" use="51" target="52" covered="0"/><du var="rawCodewords" def="51" use="51" target="57" covered="0"/><du var="rawCodewords" def="51" use="96" covered="0"/><du var="rawCodewords" def="51" use="101" covered="0"/><du var="rawCodewords" def="51" use="108" covered="0"/><du var="version" def="51" use="51" target="52" covered="0"/><du var="version" def="51" use="51" target="57" covered="0"/><du var="version" def="51" use="57" covered="0"/><du var="ecLevel" def="51" use="57" covered="0"/><du var="ecBlocks" def="57" use="72" covered="0"/><du var="ecBlocks" def="57" use="90" covered="0"/><du var="totalBlocks" def="60" use="63" covered="0"/><du var="totalBlocks" def="60" use="67" covered="0"/><du var="ecBlockArray" def="61" use="69" covered="0"/><du var="ecBlockArray" def="61" use="69" covered="0"/><du var="totalBlocks" def="63" use="63" covered="0"/><du var="totalBlocks" def="63" use="67" covered="0"/><du var="result" def="67" use="73" covered="0"/><du var="result" def="67" use="79" covered="0"/><du var="result" def="67" use="80" covered="0"/><du var="result" def="67" use="82" covered="0"/><du var="result" def="67" use="96" covered="0"/><du var="result" def="67" use="101" covered="0"/><du var="result" def="67" use="104" covered="0"/><du var="result" def="67" use="108" covered="0"/><du var="result" def="67" use="111" covered="0"/><du var="numResultBlocks" def="68" use="73" covered="0"/><du var="numResultBlocks" def="68" use="95" target="94" covered="0"/><du var="numResultBlocks" def="68" use="95" target="96" covered="0"/><du var="numResultBlocks" def="68" use="100" target="104" covered="0"/><du var="numResultBlocks" def="68" use="100" target="101" covered="0"/><du var="numResultBlocks" def="68" use="106" target="105" covered="0"/><du var="numResultBlocks" def="68" use="106" target="107" covered="0"/><du var="ecBlock" def="69" use="70" target="69" covered="0"/><du var="ecBlock" def="69" use="70" target="71" covered="0"/><du var="ecBlock" def="69" use="71" covered="0"/><du var="i" def="70" use="70" target="69" covered="0"/><du var="i" def="70" use="70" target="71" covered="0"/><du var="i" def="70" use="70" covered="0"/><du var="numResultBlocks" def="73" use="73" covered="0"/><du var="numResultBlocks" def="73" use="95" target="94" covered="0"/><du var="numResultBlocks" def="73" use="95" target="96" covered="0"/><du var="numResultBlocks" def="73" use="100" target="104" covered="0"/><du var="numResultBlocks" def="73" use="100" target="101" covered="0"/><du var="numResultBlocks" def="73" use="106" target="105" covered="0"/><du var="numResultBlocks" def="73" use="106" target="107" covered="0"/><du var="i" def="70" use="70" target="69" covered="0"/><du var="i" def="70" use="70" target="71" covered="0"/><du var="i" def="70" use="70" covered="0"/><du var="shorterBlocksTotalCodewords" def="79" use="83" target="84" covered="0"/><du var="shorterBlocksTotalCodewords" def="79" use="83" target="86" covered="0"/><du var="shorterBlocksTotalCodewords" def="79" use="90" covered="0"/><du var="longerBlocksStartAt" def="80" use="81" target="88" covered="0"/><du var="longerBlocksStartAt" def="80" use="81" target="82" covered="0"/><du var="longerBlocksStartAt" def="80" use="82" covered="0"/><du var="longerBlocksStartAt" def="80" use="86" covered="0"/><du var="longerBlocksStartAt" def="80" use="88" covered="0"/><du var="numCodewords" def="82" use="83" target="84" covered="0"/><du var="numCodewords" def="82" use="83" target="86" covered="0"/><du var="longerBlocksStartAt" def="86" use="81" target="88" covered="0"/><du var="longerBlocksStartAt" def="86" use="81" target="82" covered="0"/><du var="longerBlocksStartAt" def="86" use="82" covered="0"/><du var="longerBlocksStartAt" def="86" use="86" covered="0"/><du var="longerBlocksStartAt" def="86" use="88" covered="0"/><du var="longerBlocksStartAt" def="88" use="100" covered="0"/><du var="longerBlocksStartAt" def="88" use="107" target="107" covered="0"/><du var="longerBlocksStartAt" def="88" use="107" target="107" covered="0"/><du var="shorterBlocksNumDataCodewords" def="90" use="94" target="100" covered="0"/><du var="shorterBlocksNumDataCodewords" def="90" use="94" target="95" covered="0"/><du var="shorterBlocksNumDataCodewords" def="90" use="101" covered="0"/><du var="shorterBlocksNumDataCodewords" def="90" use="105" covered="0"/><du var="rawCodewordsOffset" def="93" use="96" covered="0"/><du var="rawCodewordsOffset" def="93" use="101" covered="0"/><du var="rawCodewordsOffset" def="93" use="108" covered="0"/><du var="i" def="94" use="94" target="100" covered="0"/><du var="i" def="94" use="94" target="95" covered="0"/><du var="i" def="94" use="96" covered="0"/><du var="i" def="94" use="94" covered="0"/><du var="j" def="95" use="95" target="94" covered="0"/><du var="j" def="95" use="95" target="96" covered="0"/><du var="j" def="95" use="96" covered="0"/><du var="j" def="95" use="95" covered="0"/><du var="rawCodewordsOffset" def="96" use="96" covered="0"/><du var="rawCodewordsOffset" def="96" use="101" covered="0"/><du var="rawCodewordsOffset" def="96" use="108" covered="0"/><du var="j" def="95" use="95" target="94" covered="0"/><du var="j" def="95" use="95" target="96" covered="0"/><du var="j" def="95" use="96" covered="0"/><du var="j" def="95" use="95" covered="0"/><du var="i" def="94" use="94" target="100" covered="0"/><du var="i" def="94" use="94" target="95" covered="0"/><du var="i" def="94" use="96" covered="0"/><du var="i" def="94" use="94" covered="0"/><du var="j" def="100" use="100" target="104" covered="0"/><du var="j" def="100" use="100" target="101" covered="0"/><du var="j" def="100" use="101" covered="0"/><du var="j" def="100" use="100" covered="0"/><du var="rawCodewordsOffset" def="101" use="101" covered="0"/><du var="rawCodewordsOffset" def="101" use="108" covered="0"/><du var="j" def="100" use="100" target="104" covered="0"/><du var="j" def="100" use="100" target="101" covered="0"/><du var="j" def="100" use="101" covered="0"/><du var="j" def="100" use="100" covered="0"/><du var="max" def="104" use="105" target="111" covered="0"/><du var="max" def="104" use="105" target="106" covered="0"/><du var="i" def="105" use="105" target="111" covered="0"/><du var="i" def="105" use="105" target="106" covered="0"/><du var="i" def="105" use="107" covered="0"/><du var="i" def="105" use="105" covered="0"/><du var="j" def="106" use="106" target="105" covered="0"/><du var="j" def="106" use="106" target="107" covered="0"/><du var="j" def="106" use="107" target="107" covered="0"/><du var="j" def="106" use="107" target="107" covered="0"/><du var="j" def="106" use="108" covered="0"/><du var="j" def="106" use="106" covered="0"/><du var="rawCodewordsOffset" def="108" use="108" covered="0"/><du var="j" def="106" use="106" target="105" covered="0"/><du var="j" def="106" use="106" target="107" covered="0"/><du var="j" def="106" use="107" target="107" covered="0"/><du var="j" def="106" use="107" target="107" covered="0"/><du var="j" def="106" use="108" covered="0"/><du var="j" def="106" use="106" covered="0"/><du var="i" def="105" use="105" target="111" covered="0"/><du var="i" def="105" use="105" target="106" covered="0"/><du var="i" def="105" use="107" covered="0"/><du var="i" def="105" use="105" covered="0"/><counter type="DU" missed="148" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="148" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/decoder/Version"><method name="&lt;init&gt;" desc="(I[I[Lcom/google/zxing/qrcode/decoder/Version$ECBlocks;)V"><du var="this" def="50" use="62" covered="1"/><du var="total" def="56" use="60" covered="1"/><du var="total" def="56" use="62" covered="0"/><du var="ecCodewords" def="57" use="60" covered="1"/><du var="total" def="60" use="60" covered="1"/><du var="total" def="60" use="62" covered="1"/><counter type="DU" missed="2" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProvisionalVersionForDimension" desc="(I)Lcom/google/zxing/qrcode/decoder/Version;"><du var="dimension" def="93" use="93" target="94" covered="0"/><du var="dimension" def="93" use="93" target="97" covered="0"/><du var="dimension" def="93" use="97" covered="0"/><counter type="DU" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVersionForNumber" desc="(I)Lcom/google/zxing/qrcode/decoder/Version;"><du var="versionNumber" def="104" use="104" target="104" covered="0"/><du var="versionNumber" def="104" use="104" target="105" covered="0"/><du var="versionNumber" def="104" use="104" target="105" covered="0"/><du var="versionNumber" def="104" use="104" target="107" covered="0"/><du var="versionNumber" def="104" use="107" covered="0"/><du var="VERSIONS" def="104" use="107" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeVersionInformation" desc="(I)Lcom/google/zxing/qrcode/decoder/Version;"><du var="versionBits" def="111" use="116" target="117" covered="0"/><du var="versionBits" def="111" use="116" target="121" covered="0"/><du var="versionBits" def="111" use="121" covered="0"/><du var="VERSION_DECODE_INFO" def="111" use="113" target="129" covered="0"/><du var="VERSION_DECODE_INFO" def="111" use="113" target="114" covered="0"/><du var="VERSION_DECODE_INFO" def="111" use="114" covered="0"/><du var="bestDifference" def="111" use="122" target="123" covered="0"/><du var="bestDifference" def="111" use="122" target="113" covered="0"/><du var="bestDifference" def="111" use="129" target="130" covered="0"/><du var="bestDifference" def="111" use="129" target="133" covered="0"/><du var="bestVersion" def="112" use="130" covered="0"/><du var="i" def="113" use="113" target="129" covered="0"/><du var="i" def="113" use="113" target="114" covered="0"/><du var="i" def="113" use="114" covered="0"/><du var="i" def="113" use="113" covered="0"/><du var="i" def="113" use="123" covered="0"/><du var="i" def="113" use="117" covered="0"/><du var="targetVersion" def="114" use="116" target="117" covered="0"/><du var="targetVersion" def="114" use="116" target="121" covered="0"/><du var="targetVersion" def="114" use="121" covered="0"/><du var="bitsDifference" def="121" use="122" target="123" covered="0"/><du var="bitsDifference" def="121" use="122" target="113" covered="0"/><du var="bitsDifference" def="121" use="124" covered="0"/><du var="bestVersion" def="123" use="130" covered="0"/><du var="bestDifference" def="124" use="122" target="123" covered="0"/><du var="bestDifference" def="124" use="122" target="113" covered="0"/><du var="bestDifference" def="124" use="129" target="130" covered="0"/><du var="bestDifference" def="124" use="129" target="133" covered="0"/><du var="i" def="113" use="113" target="129" covered="0"/><du var="i" def="113" use="113" target="114" covered="0"/><du var="i" def="113" use="114" covered="0"/><du var="i" def="113" use="113" covered="0"/><du var="i" def="113" use="123" covered="0"/><du var="i" def="113" use="117" covered="0"/><counter type="DU" missed="34" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildFunctionPattern" desc="()Lcom/google/zxing/common/BitMatrix;"><du var="this" def="140" use="153" covered="0"/><du var="this" def="140" use="159" covered="0"/><du var="this" def="140" use="168" target="170" covered="0"/><du var="this" def="140" use="168" target="175" covered="0"/><du var="this.alignmentPatternCenters" def="140" use="153" covered="0"/><du var="this.alignmentPatternCenters" def="140" use="159" covered="0"/><du var="this.versionNumber" def="140" use="168" target="170" covered="0"/><du var="this.versionNumber" def="140" use="168" target="175" covered="0"/><du var="dimension" def="140" use="164" covered="0"/><du var="dimension" def="140" use="166" covered="0"/><du var="dimension" def="140" use="170" covered="0"/><du var="dimension" def="140" use="172" covered="0"/><du var="bitMatrix" def="141" use="159" covered="0"/><du var="bitMatrix" def="141" use="164" covered="0"/><du var="bitMatrix" def="141" use="166" covered="0"/><du var="bitMatrix" def="141" use="175" covered="0"/><du var="bitMatrix" def="141" use="170" covered="0"/><du var="bitMatrix" def="141" use="172" covered="0"/><du var="max" def="151" use="152" target="164" covered="0"/><du var="max" def="151" use="152" target="153" covered="0"/><du var="max" def="151" use="154" target="152" covered="0"/><du var="max" def="151" use="154" target="155" covered="0"/><du var="max" def="151" use="155" target="155" covered="0"/><du var="max" def="151" use="155" target="159" covered="0"/><du var="max" def="151" use="155" target="155" covered="0"/><du var="max" def="151" use="155" target="154" covered="0"/><du var="x" def="152" use="152" target="164" covered="0"/><du var="x" def="152" use="152" target="153" covered="0"/><du var="x" def="152" use="153" covered="0"/><du var="x" def="152" use="155" target="155" covered="0"/><du var="x" def="152" use="155" target="155" covered="0"/><du var="x" def="152" use="155" target="155" covered="0"/><du var="x" def="152" use="155" target="159" covered="0"/><du var="x" def="152" use="152" covered="0"/><du var="i" def="153" use="159" covered="0"/><du var="y" def="154" use="154" target="152" covered="0"/><du var="y" def="154" use="154" target="155" covered="0"/><du var="y" def="154" use="159" covered="0"/><du var="y" def="154" use="154" covered="0"/><du var="y" def="154" use="155" target="157" covered="0"/><du var="y" def="154" use="155" target="159" covered="0"/><du var="y" def="154" use="155" target="155" covered="0"/><du var="y" def="154" use="155" target="154" covered="0"/><du var="y" def="154" use="155" target="155" covered="0"/><du var="y" def="154" use="155" target="154" covered="0"/><du var="y" def="154" use="154" target="152" covered="0"/><du var="y" def="154" use="154" target="155" covered="0"/><du var="y" def="154" use="159" covered="0"/><du var="y" def="154" use="154" covered="0"/><du var="y" def="154" use="155" target="157" covered="0"/><du var="y" def="154" use="155" target="159" covered="0"/><du var="y" def="154" use="155" target="155" covered="0"/><du var="y" def="154" use="155" target="154" covered="0"/><du var="y" def="154" use="155" target="155" covered="0"/><du var="y" def="154" use="155" target="154" covered="0"/><du var="x" def="152" use="152" target="164" covered="0"/><du var="x" def="152" use="152" target="153" covered="0"/><du var="x" def="152" use="153" covered="0"/><du var="x" def="152" use="155" target="155" covered="0"/><du var="x" def="152" use="155" target="155" covered="0"/><du var="x" def="152" use="155" target="155" covered="0"/><du var="x" def="152" use="155" target="159" covered="0"/><du var="x" def="152" use="152" covered="0"/><counter type="DU" missed="63" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="108" covered="15"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/qrcode/decoder/Mode"><method name="forBits" desc="(I)Lcom/google/zxing/qrcode/decoder/Mode;"><du var="bits" def="53" use="53" target="76" covered="0"/><du var="bits" def="53" use="53" target="55" covered="0"/><du var="bits" def="53" use="53" target="57" covered="0"/><du var="bits" def="53" use="53" target="59" covered="0"/><du var="bits" def="53" use="53" target="61" covered="0"/><du var="bits" def="53" use="53" target="63" covered="0"/><du var="bits" def="53" use="53" target="65" covered="0"/><du var="bits" def="53" use="53" target="67" covered="0"/><du var="bits" def="53" use="53" target="69" covered="0"/><du var="bits" def="53" use="53" target="71" covered="0"/><du var="bits" def="53" use="53" target="74" covered="0"/><du var="TERMINATOR" def="53" use="55" covered="0"/><du var="NUMERIC" def="53" use="57" covered="0"/><du var="ALPHANUMERIC" def="53" use="59" covered="0"/><du var="STRUCTURED_APPEND" def="53" use="61" covered="0"/><du var="BYTE" def="53" use="63" covered="0"/><du var="FNC1_FIRST_POSITION" def="53" use="65" covered="0"/><du var="ECI" def="53" use="67" covered="0"/><du var="KANJI" def="53" use="69" covered="0"/><du var="FNC1_SECOND_POSITION" def="53" use="71" covered="0"/><du var="HANZI" def="53" use="74" covered="0"/><counter type="DU" missed="21" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCharacterCountBits" desc="(Lcom/google/zxing/qrcode/decoder/Version;)I"><du var="this" def="86" use="95" covered="0"/><du var="this.characterCountBitsForVersions" def="86" use="95" covered="0"/><du var="number" def="86" use="88" target="89" covered="0"/><du var="number" def="86" use="88" target="90" covered="0"/><du var="number" def="86" use="90" target="91" covered="0"/><du var="number" def="86" use="90" target="93" covered="0"/><du var="offset" def="89" use="95" covered="0"/><du var="offset" def="91" use="95" covered="0"/><du var="offset" def="93" use="95" covered="0"/><counter type="DU" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="30" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/QRCodeReader"><method name="decode" desc="(Lcom/google/zxing/BinaryBitmap;Ljava/util/Map;)Lcom/google/zxing/Result;"><du var="this" def="72" use="78" covered="0"/><du var="this" def="72" use="74" covered="0"/><du var="image" def="72" use="77" covered="0"/><du var="image" def="72" use="73" covered="0"/><du var="hints" def="72" use="72" target="72" covered="0"/><du var="hints" def="72" use="72" target="77" covered="0"/><du var="hints" def="72" use="77" covered="0"/><du var="hints" def="72" use="78" covered="0"/><du var="hints" def="72" use="72" target="73" covered="0"/><du var="hints" def="72" use="72" target="77" covered="0"/><du var="hints" def="72" use="74" covered="0"/><du var="PURE_BARCODE" def="72" use="72" target="73" covered="0"/><du var="PURE_BARCODE" def="72" use="72" target="77" covered="0"/><du var="this.decoder" def="72" use="78" covered="0"/><du var="this.decoder" def="72" use="74" covered="0"/><du var="NO_POINTS" def="72" use="75" covered="0"/><du var="QR_CODE" def="72" use="87" covered="0"/><du var="BYTE_SEGMENTS" def="72" use="90" covered="0"/><du var="ERROR_CORRECTION_LEVEL" def="72" use="94" covered="0"/><du var="STRUCTURED_APPEND_SEQUENCE" def="72" use="97" covered="0"/><du var="STRUCTURED_APPEND_PARITY" def="72" use="99" covered="0"/><du var="decoderResult" def="74" use="83" target="84" covered="0"/><du var="decoderResult" def="74" use="83" target="87" covered="0"/><du var="decoderResult" def="74" use="87" covered="0"/><du var="decoderResult" def="74" use="88" covered="0"/><du var="decoderResult" def="74" use="92" covered="0"/><du var="decoderResult" def="74" use="96" target="97" covered="0"/><du var="decoderResult" def="74" use="96" target="102" covered="0"/><du var="decoderResult" def="74" use="97" covered="0"/><du var="decoderResult" def="74" use="99" covered="0"/><du var="decoderResult" def="74" use="84" covered="0"/><du var="points" def="75" use="87" covered="0"/><du var="points" def="75" use="84" covered="0"/><du var="decoderResult" def="78" use="83" target="84" covered="0"/><du var="decoderResult" def="78" use="83" target="87" covered="0"/><du var="decoderResult" def="78" use="87" covered="0"/><du var="decoderResult" def="78" use="88" covered="0"/><du var="decoderResult" def="78" use="92" covered="0"/><du var="decoderResult" def="78" use="96" target="97" covered="0"/><du var="decoderResult" def="78" use="96" target="102" covered="0"/><du var="decoderResult" def="78" use="97" covered="0"/><du var="decoderResult" def="78" use="99" covered="0"/><du var="decoderResult" def="78" use="84" covered="0"/><du var="points" def="79" use="87" covered="0"/><du var="points" def="79" use="84" covered="0"/><du var="result" def="87" use="102" covered="0"/><du var="result" def="87" use="97" covered="0"/><du var="result" def="87" use="99" covered="0"/><du var="result" def="87" use="94" covered="0"/><du var="result" def="87" use="90" covered="0"/><du var="byteSegments" def="88" use="89" target="90" covered="0"/><du var="byteSegments" def="88" use="89" target="92" covered="0"/><du var="byteSegments" def="88" use="90" covered="0"/><du var="ecLevel" def="92" use="93" target="94" covered="0"/><du var="ecLevel" def="92" use="93" target="96" covered="0"/><du var="ecLevel" def="92" use="94" covered="0"/><counter type="DU" missed="56" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractPureBits" desc="(Lcom/google/zxing/common/BitMatrix;)Lcom/google/zxing/common/BitMatrix;"><du var="image" def="120" use="126" covered="0"/><du var="image" def="120" use="191" target="192" covered="0"/><du var="image" def="120" use="191" target="190" covered="0"/><du var="image" def="120" use="142" target="144" covered="0"/><du var="image" def="120" use="142" target="148" covered="0"/><du var="leftTopBlack" def="120" use="122" target="122" covered="0"/><du var="leftTopBlack" def="120" use="122" target="123" covered="0"/><du var="leftTopBlack" def="120" use="126" covered="0"/><du var="leftTopBlack" def="120" use="128" covered="0"/><du var="leftTopBlack" def="120" use="130" covered="0"/><du var="rightBottomBlack" def="121" use="122" target="123" covered="0"/><du var="rightBottomBlack" def="121" use="122" target="126" covered="0"/><du var="rightBottomBlack" def="121" use="129" covered="0"/><du var="rightBottomBlack" def="121" use="131" covered="0"/><du var="moduleSize" def="126" use="148" covered="0"/><du var="moduleSize" def="126" use="149" covered="0"/><du var="moduleSize" def="126" use="161" covered="0"/><du var="moduleSize" def="126" use="168" covered="0"/><du var="moduleSize" def="126" use="177" covered="0"/><du var="moduleSize" def="126" use="189" covered="0"/><du var="moduleSize" def="126" use="191" target="192" covered="0"/><du var="moduleSize" def="126" use="191" target="190" covered="0"/><du var="top" def="128" use="134" target="135" covered="0"/><du var="top" def="128" use="134" target="138" covered="0"/><du var="top" def="128" use="138" target="141" covered="0"/><du var="top" def="128" use="138" target="148" covered="0"/><du var="top" def="128" use="149" covered="0"/><du var="top" def="128" use="162" covered="0"/><du var="top" def="128" use="141" covered="0"/><du var="bottom" def="129" use="134" target="135" covered="0"/><du var="bottom" def="129" use="134" target="138" covered="0"/><du var="bottom" def="129" use="138" target="141" covered="0"/><du var="bottom" def="129" use="138" target="148" covered="0"/><du var="bottom" def="129" use="149" covered="0"/><du var="bottom" def="129" use="177" covered="0"/><du var="bottom" def="129" use="141" covered="0"/><du var="left" def="130" use="134" target="134" covered="0"/><du var="left" def="130" use="134" target="135" covered="0"/><du var="left" def="130" use="138" target="141" covered="0"/><du var="left" def="130" use="138" target="148" covered="0"/><du var="left" def="130" use="148" covered="0"/><du var="left" def="130" use="163" covered="0"/><du var="left" def="130" use="141" covered="0"/><du var="right" def="131" use="134" target="134" covered="0"/><du var="right" def="131" use="134" target="135" covered="0"/><du var="right" def="131" use="138" target="141" covered="0"/><du var="right" def="131" use="138" target="148" covered="0"/><du var="right" def="131" use="148" covered="0"/><du var="right" def="131" use="168" covered="0"/><du var="right" def="141" use="142" target="144" covered="0"/><du var="right" def="141" use="142" target="148" covered="0"/><du var="right" def="141" use="148" covered="0"/><du var="right" def="141" use="168" covered="0"/><du var="matrixWidth" def="148" use="150" target="150" covered="0"/><du var="matrixWidth" def="148" use="150" target="151" covered="0"/><du var="matrixWidth" def="148" use="153" target="155" covered="0"/><du var="matrixWidth" def="148" use="153" target="161" covered="0"/><du var="matrixWidth" def="148" use="168" covered="0"/><du var="matrixWidth" def="148" use="187" covered="0"/><du var="matrixWidth" def="148" use="190" target="188" covered="0"/><du var="matrixWidth" def="148" use="190" target="191" covered="0"/><du var="matrixHeight" def="149" use="150" target="151" covered="0"/><du var="matrixHeight" def="149" use="150" target="153" covered="0"/><du var="matrixHeight" def="149" use="153" target="155" covered="0"/><du var="matrixHeight" def="149" use="153" target="161" covered="0"/><du var="matrixHeight" def="149" use="177" covered="0"/><du var="matrixHeight" def="149" use="187" covered="0"/><du var="matrixHeight" def="149" use="188" target="196" covered="0"/><du var="matrixHeight" def="149" use="188" target="189" covered="0"/><du var="nudge" def="161" use="179" target="181" covered="0"/><du var="nudge" def="161" use="179" target="183" covered="0"/><du var="nudge" def="161" use="170" target="172" covered="0"/><du var="nudge" def="161" use="170" target="174" covered="0"/><du var="top" def="162" use="177" covered="0"/><du var="top" def="162" use="189" covered="0"/><du var="top" def="162" use="183" covered="0"/><du var="left" def="163" use="191" target="192" covered="0"/><du var="left" def="163" use="191" target="190" covered="0"/><du var="left" def="163" use="174" covered="0"/><du var="nudgedTooFarRight" def="168" use="169" target="170" covered="0"/><du var="nudgedTooFarRight" def="168" use="169" target="177" covered="0"/><du var="nudgedTooFarRight" def="168" use="170" target="172" covered="0"/><du var="nudgedTooFarRight" def="168" use="170" target="174" covered="0"/><du var="nudgedTooFarRight" def="168" use="174" covered="0"/><du var="left" def="174" use="191" target="192" covered="0"/><du var="left" def="174" use="191" target="190" covered="0"/><du var="nudgedTooFarDown" def="177" use="178" target="179" covered="0"/><du var="nudgedTooFarDown" def="177" use="178" target="187" covered="0"/><du var="nudgedTooFarDown" def="177" use="179" target="181" covered="0"/><du var="nudgedTooFarDown" def="177" use="179" target="183" covered="0"/><du var="nudgedTooFarDown" def="177" use="183" covered="0"/><du var="top" def="183" use="189" covered="0"/><du var="bits" def="187" use="192" covered="0"/><du var="bits" def="187" use="196" covered="0"/><du var="y" def="188" use="188" target="196" covered="0"/><du var="y" def="188" use="188" target="189" covered="0"/><du var="y" def="188" use="189" covered="0"/><du var="y" def="188" use="192" covered="0"/><du var="y" def="188" use="188" covered="0"/><du var="iOffset" def="189" use="191" target="192" covered="0"/><du var="iOffset" def="189" use="191" target="190" covered="0"/><du var="x" def="190" use="190" target="188" covered="0"/><du var="x" def="190" use="190" target="191" covered="0"/><du var="x" def="190" use="191" target="192" covered="0"/><du var="x" def="190" use="191" target="190" covered="0"/><du var="x" def="190" use="190" covered="0"/><du var="x" def="190" use="192" covered="0"/><du var="x" def="190" use="190" target="188" covered="0"/><du var="x" def="190" use="190" target="191" covered="0"/><du var="x" def="190" use="191" target="192" covered="0"/><du var="x" def="190" use="191" target="190" covered="0"/><du var="x" def="190" use="190" covered="0"/><du var="x" def="190" use="192" covered="0"/><du var="y" def="188" use="188" target="196" covered="0"/><du var="y" def="188" use="188" target="189" covered="0"/><du var="y" def="188" use="189" covered="0"/><du var="y" def="188" use="192" covered="0"/><du var="y" def="188" use="188" covered="0"/><counter type="DU" missed="118" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="moduleSize" desc="([ILcom/google/zxing/common/BitMatrix;)F"><du var="leftTopBlack" def="200" use="219" covered="0"/><du var="image" def="200" use="207" target="208" covered="0"/><du var="image" def="200" use="207" target="213" covered="0"/><du var="height" def="200" use="216" target="217" covered="0"/><du var="height" def="200" use="216" target="219" covered="0"/><du var="height" def="200" use="206" target="216" covered="0"/><du var="height" def="200" use="206" target="207" covered="0"/><du var="width" def="201" use="206" target="206" covered="0"/><du var="width" def="201" use="206" target="216" covered="0"/><du var="width" def="201" use="216" target="216" covered="0"/><du var="width" def="201" use="216" target="217" covered="0"/><du var="x" def="202" use="206" target="206" covered="0"/><du var="x" def="202" use="206" target="216" covered="0"/><du var="x" def="202" use="216" target="216" covered="0"/><du var="x" def="202" use="216" target="217" covered="0"/><du var="x" def="202" use="219" covered="0"/><du var="x" def="202" use="207" target="208" covered="0"/><du var="x" def="202" use="207" target="213" covered="0"/><du var="x" def="202" use="213" covered="0"/><du var="y" def="203" use="216" target="217" covered="0"/><du var="y" def="203" use="216" target="219" covered="0"/><du var="y" def="203" use="206" target="216" covered="0"/><du var="y" def="203" use="206" target="207" covered="0"/><du var="y" def="203" use="207" target="208" covered="0"/><du var="y" def="203" use="207" target="213" covered="0"/><du var="y" def="203" use="214" covered="0"/><du var="inBlack" def="204" use="207" target="208" covered="0"/><du var="inBlack" def="204" use="207" target="213" covered="0"/><du var="inBlack" def="204" use="211" target="211" covered="0"/><du var="inBlack" def="204" use="211" target="211" covered="0"/><du var="transitions" def="205" use="208" covered="0"/><du var="transitions" def="208" use="208" target="209" covered="0"/><du var="transitions" def="208" use="208" target="211" covered="0"/><du var="transitions" def="208" use="208" covered="0"/><du var="inBlack" def="211" use="207" target="208" covered="0"/><du var="inBlack" def="211" use="207" target="213" covered="0"/><du var="inBlack" def="211" use="211" target="211" covered="0"/><du var="inBlack" def="211" use="211" target="211" covered="0"/><du var="x" def="213" use="206" target="206" covered="0"/><du var="x" def="213" use="206" target="216" covered="0"/><du var="x" def="213" use="216" target="216" covered="0"/><du var="x" def="213" use="216" target="217" covered="0"/><du var="x" def="213" use="219" covered="0"/><du var="x" def="213" use="207" target="208" covered="0"/><du var="x" def="213" use="207" target="213" covered="0"/><du var="x" def="213" use="213" covered="0"/><du var="y" def="214" use="216" target="217" covered="0"/><du var="y" def="214" use="216" target="219" covered="0"/><du var="y" def="214" use="206" target="216" covered="0"/><du var="y" def="214" use="206" target="207" covered="0"/><du var="y" def="214" use="207" target="208" covered="0"/><du var="y" def="214" use="207" target="213" covered="0"/><du var="y" def="214" use="214" covered="0"/><counter type="DU" missed="53" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="227" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/detector/AlignmentPatternFinder"><method name="find" desc="()Lcom/google/zxing/qrcode/detector/AlignmentPattern;"><du var="this" def="88" use="110" target="112" covered="0"/><du var="this" def="88" use="110" target="131" covered="0"/><du var="this" def="88" use="116" target="117" covered="0"/><du var="this" def="88" use="116" target="122" covered="0"/><du var="this" def="88" use="117" covered="0"/><du var="this" def="88" use="138" target="139" covered="0"/><du var="this" def="88" use="138" target="95" covered="0"/><du var="this" def="88" use="139" covered="0"/><du var="this" def="88" use="105" target="108" covered="0"/><du var="this" def="88" use="105" target="106" covered="0"/><du var="this" def="88" use="149" target="150" covered="0"/><du var="this" def="88" use="149" target="153" covered="0"/><du var="this" def="88" use="150" covered="0"/><du var="this.image" def="88" use="110" target="112" covered="0"/><du var="this.image" def="88" use="110" target="131" covered="0"/><du var="this.image" def="88" use="105" target="108" covered="0"/><du var="this.image" def="88" use="105" target="106" covered="0"/><du var="this.possibleCenters" def="88" use="149" target="150" covered="0"/><du var="this.possibleCenters" def="88" use="149" target="153" covered="0"/><du var="this.possibleCenters" def="88" use="150" covered="0"/><du var="startX" def="88" use="101" covered="0"/><du var="height" def="89" use="95" target="149" covered="0"/><du var="height" def="89" use="95" target="97" covered="0"/><du var="maxJ" def="90" use="105" target="105" covered="0"/><du var="maxJ" def="90" use="105" target="108" covered="0"/><du var="maxJ" def="90" use="109" target="138" covered="0"/><du var="maxJ" def="90" use="109" target="110" covered="0"/><du var="maxJ" def="90" use="139" covered="0"/><du var="middleI" def="91" use="97" covered="0"/><du var="stateCount" def="94" use="98" covered="0"/><du var="stateCount" def="94" use="99" covered="0"/><du var="stateCount" def="94" use="100" covered="0"/><du var="stateCount" def="94" use="134" covered="0"/><du var="stateCount" def="94" use="127" covered="0"/><du var="stateCount" def="94" use="116" target="117" covered="0"/><du var="stateCount" def="94" use="116" target="122" covered="0"/><du var="stateCount" def="94" use="122" covered="0"/><du var="stateCount" def="94" use="123" covered="0"/><du var="stateCount" def="94" use="124" covered="0"/><du var="stateCount" def="94" use="117" covered="0"/><du var="stateCount" def="94" use="113" covered="0"/><du var="stateCount" def="94" use="138" target="139" covered="0"/><du var="stateCount" def="94" use="138" target="95" covered="0"/><du var="stateCount" def="94" use="139" covered="0"/><du var="iGen" def="95" use="95" target="149" covered="0"/><du var="iGen" def="95" use="95" target="97" covered="0"/><du var="iGen" def="95" use="97" target="97" covered="0"/><du var="iGen" def="95" use="97" target="97" covered="0"/><du var="iGen" def="95" use="97" covered="0"/><du var="iGen" def="95" use="95" covered="0"/><du var="i" def="97" use="110" target="112" covered="0"/><du var="i" def="97" use="110" target="131" covered="0"/><du var="i" def="97" use="117" covered="0"/><du var="i" def="97" use="139" covered="0"/><du var="i" def="97" use="105" target="108" covered="0"/><du var="i" def="97" use="105" target="106" covered="0"/><du var="j" def="101" use="105" target="105" covered="0"/><du var="j" def="101" use="105" target="108" covered="0"/><du var="j" def="101" use="109" target="138" covered="0"/><du var="j" def="101" use="109" target="110" covered="0"/><du var="j" def="101" use="110" target="112" covered="0"/><du var="j" def="101" use="110" target="131" covered="0"/><du var="j" def="101" use="136" covered="0"/><du var="j" def="101" use="117" covered="0"/><du var="j" def="101" use="105" target="108" covered="0"/><du var="j" def="101" use="105" target="106" covered="0"/><du var="j" def="101" use="106" covered="0"/><du var="j" def="106" use="105" target="105" covered="0"/><du var="j" def="106" use="105" target="108" covered="0"/><du var="j" def="106" use="109" target="138" covered="0"/><du var="j" def="106" use="109" target="110" covered="0"/><du var="j" def="106" use="110" target="112" covered="0"/><du var="j" def="106" use="110" target="131" covered="0"/><du var="j" def="106" use="136" covered="0"/><du var="j" def="106" use="117" covered="0"/><du var="j" def="106" use="105" target="108" covered="0"/><du var="j" def="106" use="105" target="106" covered="0"/><du var="j" def="106" use="106" covered="0"/><du var="currentState" def="108" use="131" target="132" covered="0"/><du var="currentState" def="108" use="131" target="134" covered="0"/><du var="currentState" def="108" use="134" covered="0"/><du var="currentState" def="108" use="132" covered="0"/><du var="currentState" def="108" use="112" target="113" covered="0"/><du var="currentState" def="108" use="112" target="115" covered="0"/><du var="currentState" def="108" use="115" target="116" covered="0"/><du var="currentState" def="108" use="115" target="127" covered="0"/><du var="currentState" def="108" use="127" covered="0"/><du var="confirmed" def="117" use="118" target="119" covered="0"/><du var="confirmed" def="117" use="118" target="122" covered="0"/><du var="confirmed" def="117" use="119" covered="0"/><du var="currentState" def="125" use="131" target="132" covered="0"/><du var="currentState" def="125" use="131" target="134" covered="0"/><du var="currentState" def="125" use="134" covered="0"/><du var="currentState" def="125" use="132" covered="0"/><du var="currentState" def="125" use="112" target="113" covered="0"/><du var="currentState" def="125" use="112" target="115" covered="0"/><du var="currentState" def="125" use="115" target="116" covered="0"/><du var="currentState" def="125" use="115" target="127" covered="0"/><du var="currentState" def="125" use="127" covered="0"/><du var="currentState" def="127" use="131" target="132" covered="0"/><du var="currentState" def="127" use="131" target="134" covered="0"/><du var="currentState" def="127" use="134" covered="0"/><du var="currentState" def="127" use="132" covered="0"/><du var="currentState" def="127" use="112" target="113" covered="0"/><du var="currentState" def="127" use="112" target="115" covered="0"/><du var="currentState" def="127" use="115" target="116" covered="0"/><du var="currentState" def="127" use="115" target="127" covered="0"/><du var="currentState" def="127" use="127" covered="0"/><du var="currentState" def="132" use="134" covered="0"/><du var="currentState" def="132" use="131" target="132" covered="0"/><du var="currentState" def="132" use="131" target="134" covered="0"/><du var="currentState" def="132" use="132" covered="0"/><du var="currentState" def="132" use="112" target="113" covered="0"/><du var="currentState" def="132" use="112" target="115" covered="0"/><du var="currentState" def="132" use="115" target="116" covered="0"/><du var="currentState" def="132" use="115" target="127" covered="0"/><du var="currentState" def="132" use="127" covered="0"/><du var="j" def="136" use="109" target="138" covered="0"/><du var="j" def="136" use="109" target="110" covered="0"/><du var="j" def="136" use="110" target="112" covered="0"/><du var="j" def="136" use="110" target="131" covered="0"/><du var="j" def="136" use="136" covered="0"/><du var="j" def="136" use="117" covered="0"/><du var="confirmed" def="139" use="140" target="141" covered="0"/><du var="confirmed" def="139" use="140" target="95" covered="0"/><du var="confirmed" def="139" use="141" covered="0"/><du var="iGen" def="95" use="95" target="149" covered="0"/><du var="iGen" def="95" use="95" target="97" covered="0"/><du var="iGen" def="95" use="97" target="97" covered="0"/><du var="iGen" def="95" use="97" target="97" covered="0"/><du var="iGen" def="95" use="97" covered="0"/><du var="iGen" def="95" use="95" covered="0"/><counter type="DU" missed="132" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="foundPatternCross" desc="([I)Z"><du var="stateCount" def="170" use="173" target="174" covered="0"/><du var="stateCount" def="170" use="173" target="172" covered="0"/><du var="moduleSize" def="170" use="173" target="174" covered="0"/><du var="moduleSize" def="170" use="173" target="172" covered="0"/><du var="maxVariance" def="171" use="173" target="174" covered="0"/><du var="maxVariance" def="171" use="173" target="172" covered="0"/><du var="i" def="172" use="172" target="177" covered="0"/><du var="i" def="172" use="172" target="173" covered="0"/><du var="i" def="172" use="173" target="174" covered="0"/><du var="i" def="172" use="173" target="172" covered="0"/><du var="i" def="172" use="172" covered="0"/><du var="i" def="172" use="172" target="177" covered="0"/><du var="i" def="172" use="172" target="173" covered="0"/><du var="i" def="172" use="173" target="174" covered="0"/><du var="i" def="172" use="173" target="172" covered="0"/><du var="i" def="172" use="172" covered="0"/><counter type="DU" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="crossCheckVertical" desc="(IIII)F"><du var="this" def="193" use="241" target="241" covered="0"/><du var="this" def="193" use="241" target="241" covered="0"/><du var="startI" def="193" use="220" covered="0"/><du var="centerJ" def="193" use="228" target="228" covered="0"/><du var="centerJ" def="193" use="228" target="232" covered="0"/><du var="centerJ" def="193" use="221" target="221" covered="0"/><du var="centerJ" def="193" use="221" target="225" covered="0"/><du var="centerJ" def="193" use="211" target="211" covered="0"/><du var="centerJ" def="193" use="211" target="215" covered="0"/><du var="centerJ" def="193" use="203" target="203" covered="0"/><du var="centerJ" def="193" use="203" target="208" covered="0"/><du var="maxCount" def="193" use="208" target="209" covered="0"/><du var="maxCount" def="193" use="208" target="211" covered="0"/><du var="maxCount" def="193" use="215" target="216" covered="0"/><du var="maxCount" def="193" use="215" target="220" covered="0"/><du var="maxCount" def="193" use="225" target="226" covered="0"/><du var="maxCount" def="193" use="225" target="228" covered="0"/><du var="maxCount" def="193" use="232" target="233" covered="0"/><du var="maxCount" def="193" use="232" target="236" covered="0"/><du var="maxCount" def="193" use="228" target="232" covered="0"/><du var="maxCount" def="193" use="228" target="229" covered="0"/><du var="maxCount" def="193" use="221" target="225" covered="0"/><du var="maxCount" def="193" use="221" target="222" covered="0"/><du var="maxCount" def="193" use="211" target="215" covered="0"/><du var="maxCount" def="193" use="211" target="212" covered="0"/><du var="maxCount" def="193" use="203" target="208" covered="0"/><du var="maxCount" def="193" use="203" target="204" covered="0"/><du var="originalStateCountTotal" def="193" use="237" target="238" covered="0"/><du var="originalStateCountTotal" def="193" use="237" target="241" covered="0"/><du var="image" def="193" use="228" target="228" covered="0"/><du var="image" def="193" use="228" target="232" covered="0"/><du var="image" def="193" use="221" target="221" covered="0"/><du var="image" def="193" use="221" target="225" covered="0"/><du var="image" def="193" use="211" target="211" covered="0"/><du var="image" def="193" use="211" target="215" covered="0"/><du var="image" def="193" use="203" target="203" covered="0"/><du var="image" def="193" use="203" target="208" covered="0"/><du var="maxI" def="195" use="221" target="221" covered="0"/><du var="maxI" def="195" use="221" target="225" covered="0"/><du var="maxI" def="195" use="225" target="225" covered="0"/><du var="maxI" def="195" use="225" target="226" covered="0"/><du var="maxI" def="195" use="228" target="228" covered="0"/><du var="maxI" def="195" use="228" target="232" covered="0"/><du var="stateCount" def="196" use="208" target="209" covered="0"/><du var="stateCount" def="196" use="208" target="211" covered="0"/><du var="stateCount" def="196" use="215" target="216" covered="0"/><du var="stateCount" def="196" use="215" target="220" covered="0"/><du var="stateCount" def="196" use="225" target="226" covered="0"/><du var="stateCount" def="196" use="225" target="228" covered="0"/><du var="stateCount" def="196" use="232" target="233" covered="0"/><du var="stateCount" def="196" use="232" target="236" covered="0"/><du var="stateCount" def="196" use="236" covered="0"/><du var="stateCount" def="196" use="241" target="241" covered="0"/><du var="stateCount" def="196" use="241" target="241" covered="0"/><du var="stateCount" def="196" use="241" covered="0"/><du var="stateCount" def="196" use="228" target="232" covered="0"/><du var="stateCount" def="196" use="228" target="229" covered="0"/><du var="stateCount" def="196" use="229" covered="0"/><du var="stateCount" def="196" use="221" target="225" covered="0"/><du var="stateCount" def="196" use="221" target="222" covered="0"/><du var="stateCount" def="196" use="222" covered="0"/><du var="stateCount" def="196" use="211" target="215" covered="0"/><du var="stateCount" def="196" use="211" target="212" covered="0"/><du var="stateCount" def="196" use="212" covered="0"/><du var="stateCount" def="196" use="203" target="208" covered="0"/><du var="stateCount" def="196" use="203" target="204" covered="0"/><du var="stateCount" def="196" use="204" covered="0"/><du var="i" def="202" use="203" target="203" covered="0"/><du var="i" def="202" use="203" target="208" covered="0"/><du var="i" def="202" use="208" target="208" covered="0"/><du var="i" def="202" use="208" target="209" covered="0"/><du var="i" def="202" use="211" target="211" covered="0"/><du var="i" def="202" use="211" target="215" covered="0"/><du var="i" def="202" use="211" target="211" covered="0"/><du var="i" def="202" use="211" target="215" covered="0"/><du var="i" def="202" use="213" covered="0"/><du var="i" def="202" use="203" target="203" covered="0"/><du var="i" def="202" use="203" target="208" covered="0"/><du var="i" def="202" use="205" covered="0"/><du var="i" def="205" use="203" target="203" covered="0"/><du var="i" def="205" use="203" target="208" covered="0"/><du var="i" def="205" use="208" target="208" covered="0"/><du var="i" def="205" use="208" target="209" covered="0"/><du var="i" def="205" use="211" target="211" covered="0"/><du var="i" def="205" use="211" target="215" covered="0"/><du var="i" def="205" use="211" target="211" covered="0"/><du var="i" def="205" use="211" target="215" covered="0"/><du var="i" def="205" use="213" covered="0"/><du var="i" def="205" use="203" target="203" covered="0"/><du var="i" def="205" use="203" target="208" covered="0"/><du var="i" def="205" use="205" covered="0"/><du var="i" def="213" use="211" target="211" covered="0"/><du var="i" def="213" use="211" target="215" covered="0"/><du var="i" def="213" use="211" target="211" covered="0"/><du var="i" def="213" use="211" target="215" covered="0"/><du var="i" def="213" use="213" covered="0"/><du var="i" def="220" use="221" target="221" covered="0"/><du var="i" def="220" use="221" target="225" covered="0"/><du var="i" def="220" use="225" target="225" covered="0"/><du var="i" def="220" use="225" target="226" covered="0"/><du var="i" def="220" use="228" target="228" covered="0"/><du var="i" def="220" use="228" target="232" covered="0"/><du var="i" def="220" use="241" covered="0"/><du var="i" def="220" use="228" target="228" covered="0"/><du var="i" def="220" use="228" target="232" covered="0"/><du var="i" def="220" use="230" covered="0"/><du var="i" def="220" use="221" target="221" covered="0"/><du var="i" def="220" use="221" target="225" covered="0"/><du var="i" def="220" use="223" covered="0"/><du var="i" def="223" use="221" target="221" covered="0"/><du var="i" def="223" use="221" target="225" covered="0"/><du var="i" def="223" use="225" target="225" covered="0"/><du var="i" def="223" use="225" target="226" covered="0"/><du var="i" def="223" use="228" target="228" covered="0"/><du var="i" def="223" use="228" target="232" covered="0"/><du var="i" def="223" use="241" covered="0"/><du var="i" def="223" use="228" target="228" covered="0"/><du var="i" def="223" use="228" target="232" covered="0"/><du var="i" def="223" use="230" covered="0"/><du var="i" def="223" use="221" target="221" covered="0"/><du var="i" def="223" use="221" target="225" covered="0"/><du var="i" def="223" use="223" covered="0"/><du var="i" def="230" use="228" target="228" covered="0"/><du var="i" def="230" use="228" target="232" covered="0"/><du var="i" def="230" use="241" covered="0"/><du var="i" def="230" use="228" target="228" covered="0"/><du var="i" def="230" use="228" target="232" covered="0"/><du var="i" def="230" use="230" covered="0"/><du var="stateCountTotal" def="236" use="237" target="238" covered="0"/><du var="stateCountTotal" def="236" use="237" target="241" covered="0"/><counter type="DU" missed="130" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handlePossibleCenter" desc="([III)Lcom/google/zxing/qrcode/detector/AlignmentPattern;"><du var="this" def="256" use="261" covered="0"/><du var="this" def="256" use="269" covered="0"/><du var="this" def="256" use="270" target="271" covered="0"/><du var="this" def="256" use="270" target="274" covered="0"/><du var="this" def="256" use="271" covered="0"/><du var="stateCount" def="256" use="260" covered="0"/><du var="this.possibleCenters" def="256" use="261" covered="0"/><du var="this.possibleCenters" def="256" use="269" covered="0"/><du var="this.resultPointCallback" def="256" use="270" target="271" covered="0"/><du var="this.resultPointCallback" def="256" use="270" target="274" covered="0"/><du var="this.resultPointCallback" def="256" use="271" covered="0"/><du var="centerJ" def="257" use="263" target="264" covered="0"/><du var="centerJ" def="257" use="263" target="261" covered="0"/><du var="centerJ" def="257" use="264" covered="0"/><du var="centerJ" def="257" use="268" covered="0"/><du var="centerI" def="258" use="259" target="260" covered="0"/><du var="centerI" def="258" use="259" target="274" covered="0"/><du var="centerI" def="258" use="263" target="264" covered="0"/><du var="centerI" def="258" use="263" target="261" covered="0"/><du var="centerI" def="258" use="264" covered="0"/><du var="centerI" def="258" use="268" covered="0"/><du var="estimatedModuleSize" def="260" use="263" target="264" covered="0"/><du var="estimatedModuleSize" def="260" use="263" target="261" covered="0"/><du var="estimatedModuleSize" def="260" use="264" covered="0"/><du var="estimatedModuleSize" def="260" use="268" covered="0"/><du var="center" def="261" use="263" target="264" covered="0"/><du var="center" def="261" use="263" target="261" covered="0"/><du var="center" def="261" use="264" covered="0"/><du var="point" def="268" use="271" covered="0"/><counter type="DU" missed="32" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="310" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/detector/Detector"><method name="detect" desc="(Ljava/util/Map;)Lcom/google/zxing/common/DetectorResult;"><du var="this" def="77" use="77" covered="0"/><du var="this" def="77" use="80" covered="0"/><du var="this" def="77" use="83" covered="0"/><du var="hints" def="77" use="77" target="77" covered="0"/><du var="hints" def="77" use="77" target="78" covered="0"/><du var="hints" def="77" use="77" covered="0"/><du var="hints" def="77" use="81" covered="0"/><du var="NEED_RESULT_POINT_CALLBACK" def="77" use="77" covered="0"/><du var="this.image" def="77" use="80" covered="0"/><counter type="DU" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processFinderPatternInfo" desc="(Lcom/google/zxing/qrcode/detector/FinderPatternInfo;)Lcom/google/zxing/common/DetectorResult;"><du var="this" def="89" use="133" covered="0"/><du var="this" def="89" use="118" covered="0"/><du var="this.image" def="89" use="133" covered="0"/><du var="topLeft" def="89" use="97" covered="0"/><du var="topLeft" def="89" use="130" covered="0"/><du var="topLeft" def="89" use="139" covered="0"/><du var="topLeft" def="89" use="137" covered="0"/><du var="topLeft" def="89" use="106" covered="0"/><du var="topLeft" def="89" use="107" covered="0"/><du var="topLeft" def="89" use="112" covered="0"/><du var="topLeft" def="89" use="113" covered="0"/><du var="topRight" def="90" use="97" covered="0"/><du var="topRight" def="90" use="130" covered="0"/><du var="topRight" def="90" use="139" covered="0"/><du var="topRight" def="90" use="137" covered="0"/><du var="topRight" def="90" use="106" covered="0"/><du var="topRight" def="90" use="107" covered="0"/><du var="bottomLeft" def="91" use="97" covered="0"/><du var="bottomLeft" def="91" use="130" covered="0"/><du var="bottomLeft" def="91" use="139" covered="0"/><du var="bottomLeft" def="91" use="137" covered="0"/><du var="bottomLeft" def="91" use="106" covered="0"/><du var="bottomLeft" def="91" use="107" covered="0"/><du var="moduleSize" def="93" use="94" target="95" covered="0"/><du var="moduleSize" def="93" use="94" target="97" covered="0"/><du var="moduleSize" def="93" use="97" covered="0"/><du var="moduleSize" def="93" use="118" covered="0"/><du var="dimension" def="97" use="130" covered="0"/><du var="dimension" def="97" use="133" covered="0"/><du var="provisionalVersion" def="98" use="103" target="106" covered="0"/><du var="provisionalVersion" def="98" use="103" target="131" covered="0"/><du var="modulesBetweenFPCenters" def="99" use="111" covered="0"/><du var="alignmentPattern" def="101" use="130" covered="0"/><du var="alignmentPattern" def="101" use="136" target="137" covered="0"/><du var="alignmentPattern" def="101" use="136" target="139" covered="0"/><du var="alignmentPattern" def="101" use="139" covered="0"/><du var="estAlignmentX" def="112" use="118" covered="0"/><du var="estAlignmentY" def="113" use="118" covered="0"/><du var="i" def="116" use="116" target="131" covered="0"/><du var="i" def="116" use="116" target="118" covered="0"/><du var="i" def="116" use="118" covered="0"/><du var="alignmentPattern" def="118" use="130" covered="0"/><du var="alignmentPattern" def="118" use="136" target="137" covered="0"/><du var="alignmentPattern" def="118" use="136" target="139" covered="0"/><du var="alignmentPattern" def="118" use="139" covered="0"/><du var="bits" def="133" use="141" covered="0"/><du var="points" def="137" use="141" covered="0"/><du var="points" def="139" use="141" covered="0"/><counter type="DU" missed="48" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createTransform" desc="(Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;I)Lcom/google/zxing/common/PerspectiveTransform;"><du var="topLeft" def="149" use="161" covered="0"/><du var="topLeft" def="149" use="162" covered="0"/><du var="topLeft" def="149" use="167" covered="0"/><du var="topRight" def="149" use="161" covered="0"/><du var="topRight" def="149" use="162" covered="0"/><du var="topRight" def="149" use="167" covered="0"/><du var="bottomLeft" def="149" use="161" covered="0"/><du var="bottomLeft" def="149" use="162" covered="0"/><du var="bottomLeft" def="149" use="167" covered="0"/><du var="alignmentPattern" def="149" use="154" target="155" covered="0"/><du var="alignmentPattern" def="149" use="154" target="161" covered="0"/><du var="alignmentPattern" def="149" use="155" covered="0"/><du var="alignmentPattern" def="149" use="156" covered="0"/><du var="dimMinusThree" def="149" use="163" covered="0"/><du var="dimMinusThree" def="149" use="164" covered="0"/><du var="dimMinusThree" def="149" use="167" covered="0"/><du var="dimMinusThree" def="149" use="157" covered="0"/><du var="bottomRightX" def="155" use="167" covered="0"/><du var="bottomRightY" def="156" use="167" covered="0"/><du var="sourceBottomRightX" def="157" use="167" covered="0"/><du var="sourceBottomRightY" def="158" use="167" covered="0"/><du var="bottomRightX" def="161" use="167" covered="0"/><du var="bottomRightY" def="162" use="167" covered="0"/><du var="sourceBottomRightX" def="163" use="167" covered="0"/><du var="sourceBottomRightY" def="164" use="167" covered="0"/><counter type="DU" missed="25" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeDimension" desc="(Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;F)I"><du var="dimension" def="204" use="205" target="216" covered="0"/><du var="dimension" def="204" use="205" target="207" covered="0"/><du var="dimension" def="204" use="205" target="211" covered="0"/><du var="dimension" def="204" use="205" target="214" covered="0"/><du var="dimension" def="204" use="211" covered="0"/><du var="dimension" def="204" use="207" covered="0"/><du var="dimension" def="204" use="216" covered="0"/><du var="dimension" def="207" use="216" covered="0"/><du var="dimension" def="211" use="216" covered="0"/><counter type="DU" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateModuleSizeOneWay" desc="(Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;)F"><du var="moduleSizeEst1" def="242" use="250" target="251" covered="0"/><du var="moduleSizeEst1" def="242" use="250" target="253" covered="0"/><du var="moduleSizeEst1" def="242" use="258" covered="0"/><du var="moduleSizeEst1" def="242" use="254" covered="0"/><du var="moduleSizeEst2" def="246" use="253" target="254" covered="0"/><du var="moduleSizeEst2" def="246" use="253" target="258" covered="0"/><du var="moduleSizeEst2" def="246" use="258" covered="0"/><du var="moduleSizeEst2" def="246" use="251" covered="0"/><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeOfBlackWhiteBlackRunBothWays" desc="(IIII)F"><du var="this" def="268" use="276" target="277" covered="0"/><du var="this" def="268" use="276" target="280" covered="0"/><du var="this" def="268" use="286" target="287" covered="0"/><du var="this" def="268" use="286" target="290" covered="0"/><du var="this" def="268" use="292" covered="0"/><du var="this" def="268" use="287" covered="0"/><du var="this" def="268" use="288" covered="0"/><du var="this" def="268" use="277" covered="0"/><du var="this" def="268" use="278" covered="0"/><du var="fromX" def="268" use="290" covered="0"/><du var="fromX" def="268" use="292" covered="0"/><du var="fromX" def="268" use="277" covered="0"/><du var="fromX" def="268" use="274" covered="0"/><du var="fromY" def="268" use="280" covered="0"/><du var="fromY" def="268" use="292" covered="0"/><du var="fromY" def="268" use="287" covered="0"/><du var="fromY" def="268" use="284" covered="0"/><du var="toY" def="268" use="280" covered="0"/><du var="this.image" def="268" use="276" target="277" covered="0"/><du var="this.image" def="268" use="276" target="280" covered="0"/><du var="this.image" def="268" use="286" target="287" covered="0"/><du var="this.image" def="268" use="286" target="290" covered="0"/><du var="this.image" def="268" use="287" covered="0"/><du var="this.image" def="268" use="288" covered="0"/><du var="this.image" def="268" use="277" covered="0"/><du var="this.image" def="268" use="278" covered="0"/><du var="result" def="268" use="292" covered="0"/><du var="scale" def="271" use="280" covered="0"/><du var="otherToX" def="272" use="273" target="274" covered="0"/><du var="otherToX" def="272" use="273" target="276" covered="0"/><du var="otherToX" def="272" use="276" target="277" covered="0"/><du var="otherToX" def="272" use="276" target="280" covered="0"/><du var="otherToX" def="272" use="290" covered="0"/><du var="otherToX" def="272" use="277" covered="0"/><du var="otherToX" def="272" use="274" covered="0"/><du var="scale" def="274" use="280" covered="0"/><du var="otherToX" def="275" use="290" covered="0"/><du var="scale" def="277" use="280" covered="0"/><du var="otherToX" def="278" use="290" covered="0"/><du var="otherToY" def="280" use="283" target="284" covered="0"/><du var="otherToY" def="280" use="283" target="286" covered="0"/><du var="otherToY" def="280" use="286" target="287" covered="0"/><du var="otherToY" def="280" use="286" target="290" covered="0"/><du var="otherToY" def="280" use="292" covered="0"/><du var="otherToY" def="280" use="287" covered="0"/><du var="otherToY" def="280" use="284" covered="0"/><du var="scale" def="282" use="290" covered="0"/><du var="scale" def="284" use="290" covered="0"/><du var="otherToY" def="285" use="292" covered="0"/><du var="scale" def="287" use="290" covered="0"/><du var="otherToY" def="288" use="292" covered="0"/><counter type="DU" missed="51" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeOfBlackWhiteBlackRun" desc="(IIII)F"><du var="this" def="309" use="336" target="337" covered="0"/><du var="this" def="309" use="336" target="343" covered="0"/><du var="fromX" def="309" use="309" target="309" covered="0"/><du var="fromX" def="309" use="309" target="309" covered="0"/><du var="fromX" def="309" use="319" covered="0"/><du var="fromX" def="309" use="322" target="322" covered="0"/><du var="fromX" def="309" use="322" target="322" covered="0"/><du var="fromX" def="309" use="329" covered="0"/><du var="fromX" def="309" use="338" covered="0"/><du var="fromX" def="309" use="356" covered="0"/><du var="fromX" def="309" use="311" covered="0"/><du var="fromY" def="309" use="309" target="309" covered="0"/><du var="fromY" def="309" use="309" target="309" covered="0"/><du var="fromY" def="309" use="320" covered="0"/><du var="fromY" def="309" use="323" target="323" covered="0"/><du var="fromY" def="309" use="323" target="323" covered="0"/><du var="fromY" def="309" use="329" covered="0"/><du var="fromY" def="309" use="338" covered="0"/><du var="fromY" def="309" use="356" covered="0"/><du var="fromY" def="309" use="312" covered="0"/><du var="toX" def="309" use="309" target="309" covered="0"/><du var="toX" def="309" use="309" target="309" covered="0"/><du var="toX" def="309" use="319" covered="0"/><du var="toX" def="309" use="322" target="322" covered="0"/><du var="toX" def="309" use="322" target="322" covered="0"/><du var="toX" def="309" use="328" covered="0"/><du var="toX" def="309" use="356" covered="0"/><du var="toX" def="309" use="314" covered="0"/><du var="toY" def="309" use="309" target="309" covered="0"/><du var="toY" def="309" use="309" target="309" covered="0"/><du var="toY" def="309" use="320" covered="0"/><du var="toY" def="309" use="323" target="323" covered="0"/><du var="toY" def="309" use="323" target="323" covered="0"/><du var="toY" def="309" use="345" target="346" covered="0"/><du var="toY" def="309" use="345" target="348" covered="0"/><du var="toY" def="309" use="356" covered="0"/><du var="toY" def="309" use="315" covered="0"/><du var="this.image" def="309" use="336" target="337" covered="0"/><du var="this.image" def="309" use="336" target="343" covered="0"/><du var="steep" def="309" use="310" target="311" covered="0"/><du var="steep" def="309" use="310" target="319" covered="0"/><du var="steep" def="309" use="330" target="330" covered="0"/><du var="steep" def="309" use="330" target="330" covered="0"/><du var="steep" def="309" use="331" target="331" covered="0"/><du var="steep" def="309" use="331" target="331" covered="0"/><du var="fromX" def="312" use="319" covered="0"/><du var="fromX" def="312" use="322" target="322" covered="0"/><du var="fromX" def="312" use="322" target="322" covered="0"/><du var="fromX" def="312" use="329" covered="0"/><du var="fromX" def="312" use="338" covered="0"/><du var="fromX" def="312" use="356" covered="0"/><du var="fromY" def="313" use="320" covered="0"/><du var="fromY" def="313" use="323" target="323" covered="0"/><du var="fromY" def="313" use="323" target="323" covered="0"/><du var="fromY" def="313" use="329" covered="0"/><du var="fromY" def="313" use="338" covered="0"/><du var="fromY" def="313" use="356" covered="0"/><du var="toX" def="315" use="319" covered="0"/><du var="toX" def="315" use="322" target="322" covered="0"/><du var="toX" def="315" use="322" target="322" covered="0"/><du var="toX" def="315" use="328" covered="0"/><du var="toX" def="315" use="356" covered="0"/><du var="toY" def="316" use="320" covered="0"/><du var="toY" def="316" use="323" target="323" covered="0"/><du var="toY" def="316" use="323" target="323" covered="0"/><du var="toY" def="316" use="345" target="346" covered="0"/><du var="toY" def="316" use="345" target="348" covered="0"/><du var="toY" def="316" use="356" covered="0"/><du var="dx" def="319" use="349" covered="0"/><du var="dy" def="320" use="343" covered="0"/><du var="error" def="321" use="343" covered="0"/><du var="xstep" def="322" use="328" covered="0"/><du var="xstep" def="322" use="329" covered="0"/><du var="xstep" def="322" use="356" covered="0"/><du var="ystep" def="323" use="348" covered="0"/><du var="state" def="326" use="336" target="336" covered="0"/><du var="state" def="326" use="336" target="336" covered="0"/><du var="state" def="326" use="337" target="338" covered="0"/><du var="state" def="326" use="337" target="340" covered="0"/><du var="state" def="326" use="340" covered="0"/><du var="state" def="326" use="355" target="356" covered="0"/><du var="state" def="326" use="355" target="359" covered="0"/><du var="xLimit" def="328" use="329" target="355" covered="0"/><du var="xLimit" def="328" use="329" target="330" covered="0"/><du var="x" def="329" use="329" target="355" covered="0"/><du var="x" def="329" use="329" target="330" covered="0"/><du var="x" def="329" use="330" covered="0"/><du var="x" def="329" use="331" covered="0"/><du var="x" def="329" use="329" covered="0"/><du var="x" def="329" use="338" covered="0"/><du var="y" def="329" use="330" covered="0"/><du var="y" def="329" use="331" covered="0"/><du var="y" def="329" use="345" target="346" covered="0"/><du var="y" def="329" use="345" target="348" covered="0"/><du var="y" def="329" use="348" covered="0"/><du var="y" def="329" use="338" covered="0"/><du var="realX" def="330" use="336" target="337" covered="0"/><du var="realX" def="330" use="336" target="343" covered="0"/><du var="realY" def="331" use="336" target="337" covered="0"/><du var="realY" def="331" use="336" target="343" covered="0"/><du var="state" def="340" use="336" target="336" covered="0"/><du var="state" def="340" use="336" target="336" covered="0"/><du var="state" def="340" use="337" target="338" covered="0"/><du var="state" def="340" use="337" target="340" covered="0"/><du var="state" def="340" use="340" covered="0"/><du var="state" def="340" use="355" target="356" covered="0"/><du var="state" def="340" use="355" target="359" covered="0"/><du var="error" def="343" use="344" target="345" covered="0"/><du var="error" def="343" use="344" target="329" covered="0"/><du var="error" def="343" use="343" covered="0"/><du var="error" def="343" use="349" covered="0"/><du var="y" def="348" use="330" covered="0"/><du var="y" def="348" use="331" covered="0"/><du var="y" def="348" use="345" target="346" covered="0"/><du var="y" def="348" use="345" target="348" covered="0"/><du var="y" def="348" use="348" covered="0"/><du var="y" def="348" use="338" covered="0"/><du var="error" def="349" use="343" covered="0"/><du var="x" def="329" use="329" target="355" covered="0"/><du var="x" def="329" use="329" target="330" covered="0"/><du var="x" def="329" use="330" covered="0"/><du var="x" def="329" use="331" covered="0"/><du var="x" def="329" use="329" covered="0"/><du var="x" def="329" use="338" covered="0"/><counter type="DU" missed="124" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findAlignmentInRegion" desc="(FIIF)Lcom/google/zxing/qrcode/detector/AlignmentPattern;"><du var="this" def="380" use="388" covered="0"/><du var="this" def="380" use="394" covered="0"/><du var="overallEstModuleSize" def="380" use="383" target="384" covered="0"/><du var="overallEstModuleSize" def="380" use="383" target="387" covered="0"/><du var="overallEstModuleSize" def="380" use="389" target="390" covered="0"/><du var="overallEstModuleSize" def="380" use="389" target="394" covered="0"/><du var="overallEstModuleSize" def="380" use="394" covered="0"/><du var="estAlignmentY" def="380" use="387" covered="0"/><du var="estAlignmentY" def="380" use="388" covered="0"/><du var="this.image" def="380" use="388" covered="0"/><du var="this.image" def="380" use="394" covered="0"/><du var="this.resultPointCallback" def="380" use="394" covered="0"/><du var="allowance" def="380" use="387" covered="0"/><du var="allowance" def="380" use="388" covered="0"/><du var="alignmentAreaLeftX" def="381" use="383" target="384" covered="0"/><du var="alignmentAreaLeftX" def="381" use="383" target="387" covered="0"/><du var="alignmentAreaLeftX" def="381" use="394" covered="0"/><du var="alignmentAreaRightX" def="382" use="383" target="384" covered="0"/><du var="alignmentAreaRightX" def="382" use="383" target="387" covered="0"/><du var="alignmentAreaRightX" def="382" use="394" covered="0"/><du var="alignmentAreaTopY" def="387" use="389" target="390" covered="0"/><du var="alignmentAreaTopY" def="387" use="389" target="394" covered="0"/><du var="alignmentAreaTopY" def="387" use="394" covered="0"/><du var="alignmentAreaBottomY" def="388" use="389" target="390" covered="0"/><du var="alignmentAreaBottomY" def="388" use="389" target="394" covered="0"/><du var="alignmentAreaBottomY" def="388" use="394" covered="0"/><counter type="DU" missed="26" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="300" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/detector/FinderPatternFinder$FurthestFromAverageComparator"><method name="compare" desc="(Lcom/google/zxing/qrcode/detector/FinderPattern;Lcom/google/zxing/qrcode/detector/FinderPattern;)I"><du var="dA" def="654" use="656" target="656" covered="0"/><du var="dA" def="654" use="656" target="656" covered="0"/><du var="dA" def="654" use="656" target="656" covered="0"/><du var="dA" def="654" use="656" target="656" covered="0"/><du var="dB" def="655" use="656" target="656" covered="0"/><du var="dB" def="655" use="656" target="656" covered="0"/><du var="dB" def="655" use="656" target="656" covered="0"/><du var="dB" def="655" use="656" target="656" covered="0"/><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/detector/FinderPatternFinder$CenterComparator"><method name="compare" desc="(Lcom/google/zxing/qrcode/detector/FinderPattern;Lcom/google/zxing/qrcode/detector/FinderPattern;)I"><du var="this" def="670" use="671" covered="0"/><du var="this" def="670" use="672" covered="0"/><du var="center1" def="670" use="670" target="671" covered="0"/><du var="center1" def="670" use="670" target="675" covered="0"/><du var="center1" def="670" use="675" covered="0"/><du var="center1" def="670" use="672" covered="0"/><du var="center2" def="670" use="670" target="671" covered="0"/><du var="center2" def="670" use="670" target="675" covered="0"/><du var="center2" def="670" use="675" covered="0"/><du var="center2" def="670" use="671" covered="0"/><du var="this.average" def="670" use="671" covered="0"/><du var="this.average" def="670" use="672" covered="0"/><du var="dA" def="671" use="673" target="673" covered="0"/><du var="dA" def="671" use="673" target="673" covered="0"/><du var="dA" def="671" use="673" target="673" covered="0"/><du var="dA" def="671" use="673" target="673" covered="0"/><du var="dB" def="672" use="673" target="673" covered="0"/><du var="dB" def="672" use="673" target="673" covered="0"/><du var="dB" def="672" use="673" target="673" covered="0"/><du var="dB" def="672" use="673" target="673" covered="0"/><counter type="DU" missed="20" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="20" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/detector/FinderPatternFinder"><method name="find" desc="(Ljava/util/Map;)Lcom/google/zxing/qrcode/detector/FinderPatternInfo;"><du var="this" def="77" use="79" covered="0"/><du var="this" def="77" use="80" covered="0"/><du var="this" def="77" use="180" covered="0"/><du var="this" def="77" use="104" target="106" covered="0"/><du var="this" def="77" use="104" target="111" covered="0"/><du var="this" def="77" use="114" covered="0"/><du var="this" def="77" use="119" target="120" covered="0"/><du var="this" def="77" use="119" target="122" covered="0"/><du var="this" def="77" use="122" covered="0"/><du var="this" def="77" use="120" covered="0"/><du var="this" def="77" use="169" covered="0"/><du var="this" def="77" use="172" target="174" covered="0"/><du var="this" def="77" use="172" target="95" covered="0"/><du var="this" def="77" use="174" covered="0"/><du var="hints" def="77" use="77" target="77" covered="0"/><du var="hints" def="77" use="77" target="77" covered="0"/><du var="hints" def="77" use="78" target="78" covered="0"/><du var="hints" def="77" use="78" target="78" covered="0"/><du var="hints" def="77" use="78" target="78" covered="0"/><du var="hints" def="77" use="78" target="78" covered="0"/><du var="hints" def="77" use="77" target="77" covered="0"/><du var="hints" def="77" use="77" target="77" covered="0"/><du var="TRY_HARDER" def="77" use="77" target="77" covered="0"/><du var="TRY_HARDER" def="77" use="77" target="77" covered="0"/><du var="PURE_BARCODE" def="77" use="78" target="78" covered="0"/><du var="PURE_BARCODE" def="77" use="78" target="78" covered="0"/><du var="this.image" def="77" use="79" covered="0"/><du var="this.image" def="77" use="80" covered="0"/><du var="this.image" def="77" use="104" target="106" covered="0"/><du var="this.image" def="77" use="104" target="111" covered="0"/><du var="this.hasSkipped" def="77" use="119" target="120" covered="0"/><du var="this.hasSkipped" def="77" use="119" target="122" covered="0"/><du var="this.hasSkipped" def="77" use="172" target="174" covered="0"/><du var="this.hasSkipped" def="77" use="172" target="95" covered="0"/><du var="tryHarder" def="77" use="89" target="90" covered="0"/><du var="tryHarder" def="77" use="89" target="93" covered="0"/><du var="pureBarcode" def="78" use="114" covered="0"/><du var="pureBarcode" def="78" use="169" covered="0"/><du var="maxI" def="79" use="95" target="95" covered="0"/><du var="maxI" def="79" use="95" target="180" covered="0"/><du var="maxJ" def="80" use="103" target="168" covered="0"/><du var="maxJ" def="80" use="103" target="104" covered="0"/><du var="maxJ" def="80" use="133" covered="0"/><du var="maxJ" def="80" use="169" covered="0"/><du var="iSkip" def="88" use="89" target="89" covered="0"/><du var="iSkip" def="88" use="89" target="90" covered="0"/><du var="iSkip" def="88" use="95" covered="0"/><du var="iSkip" def="88" use="95" covered="0"/><du var="iSkip" def="90" use="95" covered="0"/><du var="iSkip" def="90" use="95" covered="0"/><du var="done" def="93" use="95" target="180" covered="0"/><du var="done" def="93" use="95" target="97" covered="0"/><du var="stateCount" def="94" use="97" covered="0"/><du var="stateCount" def="94" use="98" covered="0"/><du var="stateCount" def="94" use="99" covered="0"/><du var="stateCount" def="94" use="100" covered="0"/><du var="stateCount" def="94" use="101" covered="0"/><du var="stateCount" def="94" use="164" covered="0"/><du var="stateCount" def="94" use="161" covered="0"/><du var="stateCount" def="94" use="113" target="114" covered="0"/><du var="stateCount" def="94" use="113" target="153" covered="0"/><du var="stateCount" def="94" use="153" covered="0"/><du var="stateCount" def="94" use="154" covered="0"/><du var="stateCount" def="94" use="155" covered="0"/><du var="stateCount" def="94" use="156" covered="0"/><du var="stateCount" def="94" use="157" covered="0"/><du var="stateCount" def="94" use="114" covered="0"/><du var="stateCount" def="94" use="137" covered="0"/><du var="stateCount" def="94" use="138" covered="0"/><du var="stateCount" def="94" use="139" covered="0"/><du var="stateCount" def="94" use="140" covered="0"/><du var="stateCount" def="94" use="141" covered="0"/><du var="stateCount" def="94" use="123" target="132" covered="0"/><du var="stateCount" def="94" use="123" target="146" covered="0"/><du var="stateCount" def="94" use="147" covered="0"/><du var="stateCount" def="94" use="148" covered="0"/><du var="stateCount" def="94" use="149" covered="0"/><du var="stateCount" def="94" use="150" covered="0"/><du var="stateCount" def="94" use="151" covered="0"/><du var="stateCount" def="94" use="132" covered="0"/><du var="stateCount" def="94" use="109" covered="0"/><du var="stateCount" def="94" use="168" target="169" covered="0"/><du var="stateCount" def="94" use="168" target="95" covered="0"/><du var="stateCount" def="94" use="169" covered="0"/><du var="stateCount" def="94" use="171" covered="0"/><du var="i" def="95" use="95" target="95" covered="0"/><du var="i" def="95" use="95" target="180" covered="0"/><du var="i" def="95" use="104" target="106" covered="0"/><du var="i" def="95" use="104" target="111" covered="0"/><du var="i" def="95" use="114" covered="0"/><du var="i" def="95" use="132" covered="0"/><du var="i" def="95" use="95" covered="0"/><du var="i" def="95" use="169" covered="0"/><du var="currentState" def="102" use="111" target="112" covered="0"/><du var="currentState" def="102" use="111" target="164" covered="0"/><du var="currentState" def="102" use="164" covered="0"/><du var="currentState" def="102" use="112" target="113" covered="0"/><du var="currentState" def="102" use="112" target="161" covered="0"/><du var="currentState" def="102" use="161" covered="0"/><du var="currentState" def="102" use="106" target="107" covered="0"/><du var="currentState" def="102" use="106" target="109" covered="0"/><du var="currentState" def="102" use="109" covered="0"/><du var="currentState" def="102" use="107" covered="0"/><du var="j" def="103" use="103" target="168" covered="0"/><du var="j" def="103" use="103" target="104" covered="0"/><du var="j" def="103" use="104" target="106" covered="0"/><du var="j" def="103" use="104" target="111" covered="0"/><du var="j" def="103" use="103" covered="0"/><du var="j" def="103" use="114" covered="0"/><du var="currentState" def="107" use="109" covered="0"/><du var="currentState" def="107" use="111" target="112" covered="0"/><du var="currentState" def="107" use="111" target="164" covered="0"/><du var="currentState" def="107" use="164" covered="0"/><du var="currentState" def="107" use="112" target="113" covered="0"/><du var="currentState" def="107" use="112" target="161" covered="0"/><du var="currentState" def="107" use="161" covered="0"/><du var="currentState" def="107" use="106" target="107" covered="0"/><du var="currentState" def="107" use="106" target="109" covered="0"/><du var="currentState" def="107" use="107" covered="0"/><du var="confirmed" def="114" use="115" target="118" covered="0"/><du var="confirmed" def="114" use="115" target="137" covered="0"/><du var="iSkip" def="118" use="95" covered="0"/><du var="iSkip" def="118" use="132" covered="0"/><du var="done" def="120" use="95" target="180" covered="0"/><du var="done" def="120" use="95" target="97" covered="0"/><du var="rowSkip" def="122" use="123" target="132" covered="0"/><du var="rowSkip" def="122" use="123" target="146" covered="0"/><du var="rowSkip" def="122" use="132" covered="0"/><du var="i" def="132" use="104" target="106" covered="0"/><du var="i" def="132" use="104" target="111" covered="0"/><du var="i" def="132" use="114" covered="0"/><du var="i" def="132" use="132" covered="0"/><du var="i" def="132" use="95" covered="0"/><du var="i" def="132" use="169" covered="0"/><du var="j" def="133" use="103" covered="0"/><du var="currentState" def="142" use="111" target="112" covered="0"/><du var="currentState" def="142" use="111" target="164" covered="0"/><du var="currentState" def="142" use="164" covered="0"/><du var="currentState" def="142" use="112" target="113" covered="0"/><du var="currentState" def="142" use="112" target="161" covered="0"/><du var="currentState" def="142" use="161" covered="0"/><du var="currentState" def="142" use="106" target="107" covered="0"/><du var="currentState" def="142" use="106" target="109" covered="0"/><du var="currentState" def="142" use="109" covered="0"/><du var="currentState" def="142" use="107" covered="0"/><du var="currentState" def="146" use="111" target="112" covered="0"/><du var="currentState" def="146" use="111" target="164" covered="0"/><du var="currentState" def="146" use="164" covered="0"/><du var="currentState" def="146" use="112" target="113" covered="0"/><du var="currentState" def="146" use="112" target="161" covered="0"/><du var="currentState" def="146" use="161" covered="0"/><du var="currentState" def="146" use="106" target="107" covered="0"/><du var="currentState" def="146" use="106" target="109" covered="0"/><du var="currentState" def="146" use="109" covered="0"/><du var="currentState" def="146" use="107" covered="0"/><du var="currentState" def="158" use="111" target="112" covered="0"/><du var="currentState" def="158" use="111" target="164" covered="0"/><du var="currentState" def="158" use="164" covered="0"/><du var="currentState" def="158" use="112" target="113" covered="0"/><du var="currentState" def="158" use="112" target="161" covered="0"/><du var="currentState" def="158" use="161" covered="0"/><du var="currentState" def="158" use="106" target="107" covered="0"/><du var="currentState" def="158" use="106" target="109" covered="0"/><du var="currentState" def="158" use="109" covered="0"/><du var="currentState" def="158" use="107" covered="0"/><du var="currentState" def="161" use="111" target="112" covered="0"/><du var="currentState" def="161" use="111" target="164" covered="0"/><du var="currentState" def="161" use="164" covered="0"/><du var="currentState" def="161" use="112" target="113" covered="0"/><du var="currentState" def="161" use="112" target="161" covered="0"/><du var="currentState" def="161" use="161" covered="0"/><du var="currentState" def="161" use="106" target="107" covered="0"/><du var="currentState" def="161" use="106" target="109" covered="0"/><du var="currentState" def="161" use="109" covered="0"/><du var="currentState" def="161" use="107" covered="0"/><du var="j" def="103" use="103" target="168" covered="0"/><du var="j" def="103" use="103" target="104" covered="0"/><du var="j" def="103" use="104" target="106" covered="0"/><du var="j" def="103" use="104" target="111" covered="0"/><du var="j" def="103" use="103" covered="0"/><du var="j" def="103" use="114" covered="0"/><du var="confirmed" def="169" use="170" target="171" covered="0"/><du var="confirmed" def="169" use="170" target="95" covered="0"/><du var="iSkip" def="171" use="95" covered="0"/><du var="done" def="174" use="95" target="180" covered="0"/><du var="done" def="174" use="95" target="97" covered="0"/><du var="i" def="95" use="95" target="95" covered="0"/><du var="i" def="95" use="95" target="180" covered="0"/><du var="i" def="95" use="104" target="106" covered="0"/><du var="i" def="95" use="104" target="111" covered="0"/><du var="i" def="95" use="114" covered="0"/><du var="i" def="95" use="132" covered="0"/><du var="i" def="95" use="95" covered="0"/><du var="i" def="95" use="169" covered="0"/><counter type="DU" missed="194" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="foundPatternCross" desc="([I)Z"><du var="stateCount" def="200" use="202" covered="0"/><du var="stateCount" def="200" use="215" target="216" covered="0"/><du var="stateCount" def="200" use="215" target="214" covered="0"/><du var="stateCount" def="200" use="216" target="217" covered="0"/><du var="stateCount" def="200" use="216" target="214" covered="0"/><du var="stateCount" def="200" use="217" target="218" covered="0"/><du var="stateCount" def="200" use="217" target="214" covered="0"/><du var="stateCount" def="200" use="218" target="219" covered="0"/><du var="stateCount" def="200" use="218" target="214" covered="0"/><du var="stateCount" def="200" use="214" target="214" covered="0"/><du var="stateCount" def="200" use="214" target="214" covered="0"/><du var="totalModuleSize" def="200" use="206" covered="0"/><du var="totalModuleSize" def="200" use="208" target="209" covered="0"/><du var="totalModuleSize" def="200" use="208" target="211" covered="0"/><du var="totalModuleSize" def="200" use="211" covered="0"/><du var="i" def="201" use="201" target="208" covered="0"/><du var="i" def="201" use="201" target="202" covered="0"/><du var="i" def="201" use="202" covered="0"/><du var="i" def="201" use="201" covered="0"/><du var="count" def="202" use="203" target="204" covered="0"/><du var="count" def="202" use="203" target="206" covered="0"/><du var="count" def="202" use="206" covered="0"/><du var="totalModuleSize" def="206" use="206" covered="0"/><du var="totalModuleSize" def="206" use="208" target="209" covered="0"/><du var="totalModuleSize" def="206" use="208" target="211" covered="0"/><du var="totalModuleSize" def="206" use="211" covered="0"/><du var="i" def="201" use="201" target="208" covered="0"/><du var="i" def="201" use="201" target="202" covered="0"/><du var="i" def="201" use="202" covered="0"/><du var="i" def="201" use="201" covered="0"/><du var="moduleSize" def="211" use="215" target="216" covered="0"/><du var="moduleSize" def="211" use="215" target="214" covered="0"/><du var="moduleSize" def="211" use="216" target="217" covered="0"/><du var="moduleSize" def="211" use="216" target="214" covered="0"/><du var="moduleSize" def="211" use="217" target="218" covered="0"/><du var="moduleSize" def="211" use="217" target="214" covered="0"/><du var="moduleSize" def="211" use="218" target="219" covered="0"/><du var="moduleSize" def="211" use="218" target="214" covered="0"/><du var="moduleSize" def="211" use="214" target="214" covered="0"/><du var="moduleSize" def="211" use="214" target="214" covered="0"/><du var="maxVariance" def="212" use="215" target="216" covered="0"/><du var="maxVariance" def="212" use="215" target="214" covered="0"/><du var="maxVariance" def="212" use="216" target="217" covered="0"/><du var="maxVariance" def="212" use="216" target="214" covered="0"/><du var="maxVariance" def="212" use="217" target="218" covered="0"/><du var="maxVariance" def="212" use="217" target="214" covered="0"/><du var="maxVariance" def="212" use="218" target="219" covered="0"/><du var="maxVariance" def="212" use="218" target="214" covered="0"/><du var="maxVariance" def="212" use="214" target="214" covered="0"/><du var="maxVariance" def="212" use="214" target="214" covered="0"/><counter type="DU" missed="50" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="crossCheckDiagonal" desc="(IIII)Z"><du var="this" def="244" use="279" covered="0"/><du var="this" def="244" use="280" covered="0"/><du var="this" def="244" use="304" target="305" covered="0"/><du var="this" def="244" use="304" target="310" covered="0"/><du var="this" def="244" use="294" target="295" covered="0"/><du var="this" def="244" use="294" target="300" covered="0"/><du var="this" def="244" use="284" target="290" covered="0"/><du var="this" def="244" use="284" target="285" covered="0"/><du var="this" def="244" use="270" target="271" covered="0"/><du var="this" def="244" use="270" target="275" covered="0"/><du var="this" def="244" use="258" target="259" covered="0"/><du var="this" def="244" use="258" target="265" covered="0"/><du var="this" def="244" use="248" target="253" covered="0"/><du var="this" def="244" use="248" target="249" covered="0"/><du var="startI" def="244" use="248" target="248" covered="0"/><du var="startI" def="244" use="248" target="253" covered="0"/><du var="startI" def="244" use="253" target="253" covered="0"/><du var="startI" def="244" use="253" target="254" covered="0"/><du var="startI" def="244" use="258" target="258" covered="0"/><du var="startI" def="244" use="258" target="265" covered="0"/><du var="startI" def="244" use="265" target="265" covered="0"/><du var="startI" def="244" use="265" target="266" covered="0"/><du var="startI" def="244" use="270" target="270" covered="0"/><du var="startI" def="244" use="270" target="275" covered="0"/><du var="startI" def="244" use="284" target="284" covered="0"/><du var="startI" def="244" use="284" target="290" covered="0"/><du var="startI" def="244" use="290" target="290" covered="0"/><du var="startI" def="244" use="290" target="291" covered="0"/><du var="startI" def="244" use="294" target="294" covered="0"/><du var="startI" def="244" use="294" target="300" covered="0"/><du var="startI" def="244" use="300" target="300" covered="0"/><du var="startI" def="244" use="300" target="301" covered="0"/><du var="startI" def="244" use="304" target="304" covered="0"/><du var="startI" def="244" use="304" target="310" covered="0"/><du var="startI" def="244" use="304" target="305" covered="0"/><du var="startI" def="244" use="304" target="310" covered="0"/><du var="startI" def="244" use="294" target="295" covered="0"/><du var="startI" def="244" use="294" target="300" covered="0"/><du var="startI" def="244" use="284" target="290" covered="0"/><du var="startI" def="244" use="284" target="285" covered="0"/><du var="startI" def="244" use="270" target="271" covered="0"/><du var="startI" def="244" use="270" target="275" covered="0"/><du var="startI" def="244" use="258" target="259" covered="0"/><du var="startI" def="244" use="258" target="265" covered="0"/><du var="startI" def="244" use="248" target="253" covered="0"/><du var="startI" def="244" use="248" target="249" covered="0"/><du var="centerJ" def="244" use="253" target="254" covered="0"/><du var="centerJ" def="244" use="253" target="258" covered="0"/><du var="centerJ" def="244" use="265" target="265" covered="0"/><du var="centerJ" def="244" use="265" target="266" covered="0"/><du var="centerJ" def="244" use="290" target="291" covered="0"/><du var="centerJ" def="244" use="290" target="294" covered="0"/><du var="centerJ" def="244" use="300" target="300" covered="0"/><du var="centerJ" def="244" use="300" target="301" covered="0"/><du var="centerJ" def="244" use="304" target="304" covered="0"/><du var="centerJ" def="244" use="304" target="310" covered="0"/><du var="centerJ" def="244" use="304" target="305" covered="0"/><du var="centerJ" def="244" use="304" target="310" covered="0"/><du var="centerJ" def="244" use="294" target="294" covered="0"/><du var="centerJ" def="244" use="294" target="300" covered="0"/><du var="centerJ" def="244" use="294" target="295" covered="0"/><du var="centerJ" def="244" use="294" target="300" covered="0"/><du var="centerJ" def="244" use="284" target="284" covered="0"/><du var="centerJ" def="244" use="284" target="290" covered="0"/><du var="centerJ" def="244" use="284" target="290" covered="0"/><du var="centerJ" def="244" use="284" target="285" covered="0"/><du var="centerJ" def="244" use="270" target="270" covered="0"/><du var="centerJ" def="244" use="270" target="275" covered="0"/><du var="centerJ" def="244" use="270" target="271" covered="0"/><du var="centerJ" def="244" use="270" target="275" covered="0"/><du var="centerJ" def="244" use="258" target="258" covered="0"/><du var="centerJ" def="244" use="258" target="265" covered="0"/><du var="centerJ" def="244" use="258" target="259" covered="0"/><du var="centerJ" def="244" use="258" target="265" covered="0"/><du var="centerJ" def="244" use="248" target="248" covered="0"/><du var="centerJ" def="244" use="248" target="253" covered="0"/><du var="centerJ" def="244" use="248" target="253" covered="0"/><du var="centerJ" def="244" use="248" target="249" covered="0"/><du var="maxCount" def="244" use="265" target="266" covered="0"/><du var="maxCount" def="244" use="265" target="270" covered="0"/><du var="maxCount" def="244" use="275" target="276" covered="0"/><du var="maxCount" def="244" use="275" target="279" covered="0"/><du var="maxCount" def="244" use="300" target="301" covered="0"/><du var="maxCount" def="244" use="300" target="304" covered="0"/><du var="maxCount" def="244" use="310" target="311" covered="0"/><du var="maxCount" def="244" use="310" target="316" covered="0"/><du var="maxCount" def="244" use="304" target="310" covered="0"/><du var="maxCount" def="244" use="304" target="306" covered="0"/><du var="maxCount" def="244" use="294" target="300" covered="0"/><du var="maxCount" def="244" use="294" target="296" covered="0"/><du var="maxCount" def="244" use="270" target="275" covered="0"/><du var="maxCount" def="244" use="270" target="272" covered="0"/><du var="maxCount" def="244" use="258" target="265" covered="0"/><du var="maxCount" def="244" use="258" target="260" covered="0"/><du var="originalStateCountTotal" def="244" use="318" target="319" covered="0"/><du var="originalStateCountTotal" def="244" use="318" target="317" covered="0"/><du var="this.image" def="244" use="279" covered="0"/><du var="this.image" def="244" use="280" covered="0"/><du var="this.image" def="244" use="304" target="305" covered="0"/><du var="this.image" def="244" use="304" target="310" covered="0"/><du var="this.image" def="244" use="294" target="295" covered="0"/><du var="this.image" def="244" use="294" target="300" covered="0"/><du var="this.image" def="244" use="284" target="290" covered="0"/><du var="this.image" def="244" use="284" target="285" covered="0"/><du var="this.image" def="244" use="270" target="271" covered="0"/><du var="this.image" def="244" use="270" target="275" covered="0"/><du var="this.image" def="244" use="258" target="259" covered="0"/><du var="this.image" def="244" use="258" target="265" covered="0"/><du var="this.image" def="244" use="248" target="253" covered="0"/><du var="this.image" def="244" use="248" target="249" covered="0"/><du var="stateCount" def="244" use="265" target="266" covered="0"/><du var="stateCount" def="244" use="265" target="270" covered="0"/><du var="stateCount" def="244" use="275" target="276" covered="0"/><du var="stateCount" def="244" use="275" target="279" covered="0"/><du var="stateCount" def="244" use="300" target="301" covered="0"/><du var="stateCount" def="244" use="300" target="304" covered="0"/><du var="stateCount" def="244" use="310" target="311" covered="0"/><du var="stateCount" def="244" use="310" target="316" covered="0"/><du var="stateCount" def="244" use="316" covered="0"/><du var="stateCount" def="244" use="319" target="317" covered="0"/><du var="stateCount" def="244" use="319" target="317" covered="0"/><du var="stateCount" def="244" use="304" target="310" covered="0"/><du var="stateCount" def="244" use="304" target="306" covered="0"/><du var="stateCount" def="244" use="306" covered="0"/><du var="stateCount" def="244" use="294" target="300" covered="0"/><du var="stateCount" def="244" use="294" target="296" covered="0"/><du var="stateCount" def="244" use="296" covered="0"/><du var="stateCount" def="244" use="285" covered="0"/><du var="stateCount" def="244" use="270" target="275" covered="0"/><du var="stateCount" def="244" use="270" target="272" covered="0"/><du var="stateCount" def="244" use="272" covered="0"/><du var="stateCount" def="244" use="258" target="265" covered="0"/><du var="stateCount" def="244" use="258" target="260" covered="0"/><du var="stateCount" def="244" use="260" covered="0"/><du var="stateCount" def="244" use="249" covered="0"/><du var="i" def="247" use="248" target="248" covered="0"/><du var="i" def="247" use="248" target="253" covered="0"/><du var="i" def="247" use="253" target="253" covered="0"/><du var="i" def="247" use="253" target="254" covered="0"/><du var="i" def="247" use="253" target="254" covered="0"/><du var="i" def="247" use="253" target="258" covered="0"/><du var="i" def="247" use="258" target="258" covered="0"/><du var="i" def="247" use="258" target="265" covered="0"/><du var="i" def="247" use="265" target="265" covered="0"/><du var="i" def="247" use="265" target="266" covered="0"/><du var="i" def="247" use="265" target="265" covered="0"/><du var="i" def="247" use="265" target="266" covered="0"/><du var="i" def="247" use="270" target="270" covered="0"/><du var="i" def="247" use="270" target="275" covered="0"/><du var="i" def="247" use="270" target="270" covered="0"/><du var="i" def="247" use="270" target="275" covered="0"/><du var="i" def="247" use="270" target="271" covered="0"/><du var="i" def="247" use="270" target="275" covered="0"/><du var="i" def="247" use="273" covered="0"/><du var="i" def="247" use="258" target="258" covered="0"/><du var="i" def="247" use="258" target="265" covered="0"/><du var="i" def="247" use="258" target="259" covered="0"/><du var="i" def="247" use="258" target="265" covered="0"/><du var="i" def="247" use="261" covered="0"/><du var="i" def="247" use="248" target="248" covered="0"/><du var="i" def="247" use="248" target="253" covered="0"/><du var="i" def="247" use="248" target="253" covered="0"/><du var="i" def="247" use="248" target="249" covered="0"/><du var="i" def="247" use="250" covered="0"/><du var="i" def="250" use="248" target="248" covered="0"/><du var="i" def="250" use="248" target="253" covered="0"/><du var="i" def="250" use="253" target="253" covered="0"/><du var="i" def="250" use="253" target="254" covered="0"/><du var="i" def="250" use="253" target="254" covered="0"/><du var="i" def="250" use="253" target="258" covered="0"/><du var="i" def="250" use="258" target="258" covered="0"/><du var="i" def="250" use="258" target="265" covered="0"/><du var="i" def="250" use="265" target="265" covered="0"/><du var="i" def="250" use="265" target="266" covered="0"/><du var="i" def="250" use="265" target="265" covered="0"/><du var="i" def="250" use="265" target="266" covered="0"/><du var="i" def="250" use="270" target="270" covered="0"/><du var="i" def="250" use="270" target="275" covered="0"/><du var="i" def="250" use="270" target="270" covered="0"/><du var="i" def="250" use="270" target="275" covered="0"/><du var="i" def="250" use="270" target="271" covered="0"/><du var="i" def="250" use="270" target="275" covered="0"/><du var="i" def="250" use="273" covered="0"/><du var="i" def="250" use="258" target="258" covered="0"/><du var="i" def="250" use="258" target="265" covered="0"/><du var="i" def="250" use="258" target="259" covered="0"/><du var="i" def="250" use="258" target="265" covered="0"/><du var="i" def="250" use="261" covered="0"/><du var="i" def="250" use="248" target="248" covered="0"/><du var="i" def="250" use="248" target="253" covered="0"/><du var="i" def="250" use="248" target="253" covered="0"/><du var="i" def="250" use="248" target="249" covered="0"/><du var="i" def="250" use="250" covered="0"/><du var="i" def="261" use="258" target="258" covered="0"/><du var="i" def="261" use="258" target="265" covered="0"/><du var="i" def="261" use="265" target="265" covered="0"/><du var="i" def="261" use="265" target="266" covered="0"/><du var="i" def="261" use="265" target="265" covered="0"/><du var="i" def="261" use="265" target="266" covered="0"/><du var="i" def="261" use="270" target="270" covered="0"/><du var="i" def="261" use="270" target="275" covered="0"/><du var="i" def="261" use="270" target="270" covered="0"/><du var="i" def="261" use="270" target="275" covered="0"/><du var="i" def="261" use="270" target="271" covered="0"/><du var="i" def="261" use="270" target="275" covered="0"/><du var="i" def="261" use="273" covered="0"/><du var="i" def="261" use="258" target="258" covered="0"/><du var="i" def="261" use="258" target="265" covered="0"/><du var="i" def="261" use="258" target="259" covered="0"/><du var="i" def="261" use="258" target="265" covered="0"/><du var="i" def="261" use="261" covered="0"/><du var="i" def="273" use="270" target="270" covered="0"/><du var="i" def="273" use="270" target="275" covered="0"/><du var="i" def="273" use="270" target="270" covered="0"/><du var="i" def="273" use="270" target="275" covered="0"/><du var="i" def="273" use="270" target="271" covered="0"/><du var="i" def="273" use="270" target="275" covered="0"/><du var="i" def="273" use="273" covered="0"/><du var="maxI" def="279" use="284" target="284" covered="0"/><du var="maxI" def="279" use="284" target="290" covered="0"/><du var="maxI" def="279" use="290" target="290" covered="0"/><du var="maxI" def="279" use="290" target="291" covered="0"/><du var="maxI" def="279" use="294" target="294" covered="0"/><du var="maxI" def="279" use="294" target="300" covered="0"/><du var="maxI" def="279" use="300" target="300" covered="0"/><du var="maxI" def="279" use="300" target="301" covered="0"/><du var="maxI" def="279" use="304" target="304" covered="0"/><du var="maxI" def="279" use="304" target="310" covered="0"/><du var="maxJ" def="280" use="290" target="291" covered="0"/><du var="maxJ" def="280" use="290" target="294" covered="0"/><du var="maxJ" def="280" use="300" target="300" covered="0"/><du var="maxJ" def="280" use="300" target="301" covered="0"/><du var="maxJ" def="280" use="304" target="304" covered="0"/><du var="maxJ" def="280" use="304" target="310" covered="0"/><du var="maxJ" def="280" use="294" target="294" covered="0"/><du var="maxJ" def="280" use="294" target="300" covered="0"/><du var="maxJ" def="280" use="284" target="284" covered="0"/><du var="maxJ" def="280" use="284" target="290" covered="0"/><du var="i" def="283" use="284" target="284" covered="0"/><du var="i" def="283" use="284" target="290" covered="0"/><du var="i" def="283" use="290" target="290" covered="0"/><du var="i" def="283" use="290" target="291" covered="0"/><du var="i" def="283" use="290" target="291" covered="0"/><du var="i" def="283" use="290" target="294" covered="0"/><du var="i" def="283" use="294" target="294" covered="0"/><du var="i" def="283" use="294" target="300" covered="0"/><du var="i" def="283" use="300" target="300" covered="0"/><du var="i" def="283" use="300" target="301" covered="0"/><du var="i" def="283" use="300" target="300" covered="0"/><du var="i" def="283" use="300" target="301" covered="0"/><du var="i" def="283" use="304" target="304" covered="0"/><du var="i" def="283" use="304" target="310" covered="0"/><du var="i" def="283" use="304" target="304" covered="0"/><du var="i" def="283" use="304" target="310" covered="0"/><du var="i" def="283" use="304" target="305" covered="0"/><du var="i" def="283" use="304" target="310" covered="0"/><du var="i" def="283" use="307" covered="0"/><du var="i" def="283" use="294" target="294" covered="0"/><du var="i" def="283" use="294" target="300" covered="0"/><du var="i" def="283" use="294" target="295" covered="0"/><du var="i" def="283" use="294" target="300" covered="0"/><du var="i" def="283" use="297" covered="0"/><du var="i" def="283" use="284" target="284" covered="0"/><du var="i" def="283" use="284" target="290" covered="0"/><du var="i" def="283" use="284" target="290" covered="0"/><du var="i" def="283" use="284" target="285" covered="0"/><du var="i" def="283" use="286" covered="0"/><du var="i" def="286" use="284" target="284" covered="0"/><du var="i" def="286" use="284" target="290" covered="0"/><du var="i" def="286" use="290" target="290" covered="0"/><du var="i" def="286" use="290" target="291" covered="0"/><du var="i" def="286" use="290" target="291" covered="0"/><du var="i" def="286" use="290" target="294" covered="0"/><du var="i" def="286" use="294" target="294" covered="0"/><du var="i" def="286" use="294" target="300" covered="0"/><du var="i" def="286" use="300" target="300" covered="0"/><du var="i" def="286" use="300" target="301" covered="0"/><du var="i" def="286" use="300" target="300" covered="0"/><du var="i" def="286" use="300" target="301" covered="0"/><du var="i" def="286" use="304" target="304" covered="0"/><du var="i" def="286" use="304" target="310" covered="0"/><du var="i" def="286" use="304" target="304" covered="0"/><du var="i" def="286" use="304" target="310" covered="0"/><du var="i" def="286" use="304" target="305" covered="0"/><du var="i" def="286" use="304" target="310" covered="0"/><du var="i" def="286" use="307" covered="0"/><du var="i" def="286" use="294" target="294" covered="0"/><du var="i" def="286" use="294" target="300" covered="0"/><du var="i" def="286" use="294" target="295" covered="0"/><du var="i" def="286" use="294" target="300" covered="0"/><du var="i" def="286" use="297" covered="0"/><du var="i" def="286" use="284" target="284" covered="0"/><du var="i" def="286" use="284" target="290" covered="0"/><du var="i" def="286" use="284" target="290" covered="0"/><du var="i" def="286" use="284" target="285" covered="0"/><du var="i" def="286" use="286" covered="0"/><du var="i" def="297" use="294" target="294" covered="0"/><du var="i" def="297" use="294" target="300" covered="0"/><du var="i" def="297" use="300" target="300" covered="0"/><du var="i" def="297" use="300" target="301" covered="0"/><du var="i" def="297" use="300" target="300" covered="0"/><du var="i" def="297" use="300" target="301" covered="0"/><du var="i" def="297" use="304" target="304" covered="0"/><du var="i" def="297" use="304" target="310" covered="0"/><du var="i" def="297" use="304" target="304" covered="0"/><du var="i" def="297" use="304" target="310" covered="0"/><du var="i" def="297" use="304" target="305" covered="0"/><du var="i" def="297" use="304" target="310" covered="0"/><du var="i" def="297" use="307" covered="0"/><du var="i" def="297" use="294" target="294" covered="0"/><du var="i" def="297" use="294" target="300" covered="0"/><du var="i" def="297" use="294" target="295" covered="0"/><du var="i" def="297" use="294" target="300" covered="0"/><du var="i" def="297" use="297" covered="0"/><du var="i" def="307" use="304" target="304" covered="0"/><du var="i" def="307" use="304" target="310" covered="0"/><du var="i" def="307" use="304" target="304" covered="0"/><du var="i" def="307" use="304" target="310" covered="0"/><du var="i" def="307" use="304" target="305" covered="0"/><du var="i" def="307" use="304" target="310" covered="0"/><du var="i" def="307" use="307" covered="0"/><du var="stateCountTotal" def="316" use="318" target="319" covered="0"/><du var="stateCountTotal" def="316" use="318" target="317" covered="0"/><counter type="DU" missed="323" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="crossCheckVertical" desc="(IIII)F"><du var="startI" def="335" use="366" covered="0"/><du var="centerJ" def="335" use="381" target="381" covered="0"/><du var="centerJ" def="335" use="381" target="385" covered="0"/><du var="centerJ" def="335" use="374" target="374" covered="0"/><du var="centerJ" def="335" use="374" target="378" covered="0"/><du var="centerJ" def="335" use="367" target="371" covered="0"/><du var="centerJ" def="335" use="367" target="368" covered="0"/><du var="centerJ" def="335" use="357" target="357" covered="0"/><du var="centerJ" def="335" use="357" target="361" covered="0"/><du var="centerJ" def="335" use="349" target="349" covered="0"/><du var="centerJ" def="335" use="349" target="354" covered="0"/><du var="centerJ" def="335" use="342" target="346" covered="0"/><du var="centerJ" def="335" use="342" target="343" covered="0"/><du var="maxCount" def="335" use="354" target="355" covered="0"/><du var="maxCount" def="335" use="354" target="357" covered="0"/><du var="maxCount" def="335" use="361" target="362" covered="0"/><du var="maxCount" def="335" use="361" target="366" covered="0"/><du var="maxCount" def="335" use="378" target="379" covered="0"/><du var="maxCount" def="335" use="378" target="381" covered="0"/><du var="maxCount" def="335" use="385" target="386" covered="0"/><du var="maxCount" def="335" use="385" target="391" covered="0"/><du var="maxCount" def="335" use="381" target="385" covered="0"/><du var="maxCount" def="335" use="381" target="382" covered="0"/><du var="maxCount" def="335" use="374" target="378" covered="0"/><du var="maxCount" def="335" use="374" target="375" covered="0"/><du var="maxCount" def="335" use="357" target="361" covered="0"/><du var="maxCount" def="335" use="357" target="358" covered="0"/><du var="maxCount" def="335" use="349" target="354" covered="0"/><du var="maxCount" def="335" use="349" target="350" covered="0"/><du var="originalStateCountTotal" def="335" use="393" target="394" covered="0"/><du var="originalStateCountTotal" def="335" use="393" target="397" covered="0"/><du var="image" def="335" use="381" target="381" covered="0"/><du var="image" def="335" use="381" target="385" covered="0"/><du var="image" def="335" use="374" target="374" covered="0"/><du var="image" def="335" use="374" target="378" covered="0"/><du var="image" def="335" use="367" target="371" covered="0"/><du var="image" def="335" use="367" target="368" covered="0"/><du var="image" def="335" use="357" target="357" covered="0"/><du var="image" def="335" use="357" target="361" covered="0"/><du var="image" def="335" use="349" target="349" covered="0"/><du var="image" def="335" use="349" target="354" covered="0"/><du var="image" def="335" use="342" target="346" covered="0"/><du var="image" def="335" use="342" target="343" covered="0"/><du var="maxI" def="337" use="367" target="367" covered="0"/><du var="maxI" def="337" use="367" target="371" covered="0"/><du var="maxI" def="337" use="371" target="372" covered="0"/><du var="maxI" def="337" use="371" target="374" covered="0"/><du var="maxI" def="337" use="374" target="374" covered="0"/><du var="maxI" def="337" use="374" target="378" covered="0"/><du var="maxI" def="337" use="378" target="378" covered="0"/><du var="maxI" def="337" use="378" target="379" covered="0"/><du var="maxI" def="337" use="381" target="381" covered="0"/><du var="maxI" def="337" use="381" target="385" covered="0"/><du var="stateCount" def="338" use="354" target="355" covered="0"/><du var="stateCount" def="338" use="354" target="357" covered="0"/><du var="stateCount" def="338" use="361" target="362" covered="0"/><du var="stateCount" def="338" use="361" target="366" covered="0"/><du var="stateCount" def="338" use="378" target="379" covered="0"/><du var="stateCount" def="338" use="378" target="381" covered="0"/><du var="stateCount" def="338" use="385" target="386" covered="0"/><du var="stateCount" def="338" use="385" target="391" covered="0"/><du var="stateCount" def="338" use="391" covered="0"/><du var="stateCount" def="338" use="397" target="397" covered="0"/><du var="stateCount" def="338" use="397" target="397" covered="0"/><du var="stateCount" def="338" use="397" covered="0"/><du var="stateCount" def="338" use="381" target="385" covered="0"/><du var="stateCount" def="338" use="381" target="382" covered="0"/><du var="stateCount" def="338" use="382" covered="0"/><du var="stateCount" def="338" use="374" target="378" covered="0"/><du var="stateCount" def="338" use="374" target="375" covered="0"/><du var="stateCount" def="338" use="375" covered="0"/><du var="stateCount" def="338" use="368" covered="0"/><du var="stateCount" def="338" use="357" target="361" covered="0"/><du var="stateCount" def="338" use="357" target="358" covered="0"/><du var="stateCount" def="338" use="358" covered="0"/><du var="stateCount" def="338" use="349" target="354" covered="0"/><du var="stateCount" def="338" use="349" target="350" covered="0"/><du var="stateCount" def="338" use="350" covered="0"/><du var="stateCount" def="338" use="343" covered="0"/><du var="i" def="341" use="342" target="342" covered="0"/><du var="i" def="341" use="342" target="346" covered="0"/><du var="i" def="341" use="346" target="347" covered="0"/><du var="i" def="341" use="346" target="349" covered="0"/><du var="i" def="341" use="349" target="349" covered="0"/><du var="i" def="341" use="349" target="354" covered="0"/><du var="i" def="341" use="354" target="354" covered="0"/><du var="i" def="341" use="354" target="355" covered="0"/><du var="i" def="341" use="357" target="357" covered="0"/><du var="i" def="341" use="357" target="361" covered="0"/><du var="i" def="341" use="357" target="357" covered="0"/><du var="i" def="341" use="357" target="361" covered="0"/><du var="i" def="341" use="359" covered="0"/><du var="i" def="341" use="349" target="349" covered="0"/><du var="i" def="341" use="349" target="354" covered="0"/><du var="i" def="341" use="351" covered="0"/><du var="i" def="341" use="342" target="346" covered="0"/><du var="i" def="341" use="342" target="343" covered="0"/><du var="i" def="341" use="344" covered="0"/><du var="i" def="344" use="342" target="342" covered="0"/><du var="i" def="344" use="342" target="346" covered="0"/><du var="i" def="344" use="346" target="347" covered="0"/><du var="i" def="344" use="346" target="349" covered="0"/><du var="i" def="344" use="349" target="349" covered="0"/><du var="i" def="344" use="349" target="354" covered="0"/><du var="i" def="344" use="354" target="354" covered="0"/><du var="i" def="344" use="354" target="355" covered="0"/><du var="i" def="344" use="357" target="357" covered="0"/><du var="i" def="344" use="357" target="361" covered="0"/><du var="i" def="344" use="357" target="357" covered="0"/><du var="i" def="344" use="357" target="361" covered="0"/><du var="i" def="344" use="359" covered="0"/><du var="i" def="344" use="349" target="349" covered="0"/><du var="i" def="344" use="349" target="354" covered="0"/><du var="i" def="344" use="351" covered="0"/><du var="i" def="344" use="342" target="346" covered="0"/><du var="i" def="344" use="342" target="343" covered="0"/><du var="i" def="344" use="344" covered="0"/><du var="i" def="351" use="349" target="349" covered="0"/><du var="i" def="351" use="349" target="354" covered="0"/><du var="i" def="351" use="354" target="354" covered="0"/><du var="i" def="351" use="354" target="355" covered="0"/><du var="i" def="351" use="357" target="357" covered="0"/><du var="i" def="351" use="357" target="361" covered="0"/><du var="i" def="351" use="357" target="357" covered="0"/><du var="i" def="351" use="357" target="361" covered="0"/><du var="i" def="351" use="359" covered="0"/><du var="i" def="351" use="349" target="349" covered="0"/><du var="i" def="351" use="349" target="354" covered="0"/><du var="i" def="351" use="351" covered="0"/><du var="i" def="359" use="357" target="357" covered="0"/><du var="i" def="359" use="357" target="361" covered="0"/><du var="i" def="359" use="357" target="357" covered="0"/><du var="i" def="359" use="357" target="361" covered="0"/><du var="i" def="359" use="359" covered="0"/><du var="i" def="366" use="367" target="367" covered="0"/><du var="i" def="366" use="367" target="371" covered="0"/><du var="i" def="366" use="371" target="372" covered="0"/><du var="i" def="366" use="371" target="374" covered="0"/><du var="i" def="366" use="374" target="374" covered="0"/><du var="i" def="366" use="374" target="378" covered="0"/><du var="i" def="366" use="378" target="378" covered="0"/><du var="i" def="366" use="378" target="379" covered="0"/><du var="i" def="366" use="381" target="381" covered="0"/><du var="i" def="366" use="381" target="385" covered="0"/><du var="i" def="366" use="397" covered="0"/><du var="i" def="366" use="381" target="381" covered="0"/><du var="i" def="366" use="381" target="385" covered="0"/><du var="i" def="366" use="383" covered="0"/><du var="i" def="366" use="374" target="374" covered="0"/><du var="i" def="366" use="374" target="378" covered="0"/><du var="i" def="366" use="376" covered="0"/><du var="i" def="366" use="367" target="371" covered="0"/><du var="i" def="366" use="367" target="368" covered="0"/><du var="i" def="366" use="369" covered="0"/><du var="i" def="369" use="367" target="367" covered="0"/><du var="i" def="369" use="367" target="371" covered="0"/><du var="i" def="369" use="371" target="372" covered="0"/><du var="i" def="369" use="371" target="374" covered="0"/><du var="i" def="369" use="374" target="374" covered="0"/><du var="i" def="369" use="374" target="378" covered="0"/><du var="i" def="369" use="378" target="378" covered="0"/><du var="i" def="369" use="378" target="379" covered="0"/><du var="i" def="369" use="381" target="381" covered="0"/><du var="i" def="369" use="381" target="385" covered="0"/><du var="i" def="369" use="397" covered="0"/><du var="i" def="369" use="381" target="381" covered="0"/><du var="i" def="369" use="381" target="385" covered="0"/><du var="i" def="369" use="383" covered="0"/><du var="i" def="369" use="374" target="374" covered="0"/><du var="i" def="369" use="374" target="378" covered="0"/><du var="i" def="369" use="376" covered="0"/><du var="i" def="369" use="367" target="371" covered="0"/><du var="i" def="369" use="367" target="368" covered="0"/><du var="i" def="369" use="369" covered="0"/><du var="i" def="376" use="374" target="374" covered="0"/><du var="i" def="376" use="374" target="378" covered="0"/><du var="i" def="376" use="378" target="378" covered="0"/><du var="i" def="376" use="378" target="379" covered="0"/><du var="i" def="376" use="381" target="381" covered="0"/><du var="i" def="376" use="381" target="385" covered="0"/><du var="i" def="376" use="397" covered="0"/><du var="i" def="376" use="381" target="381" covered="0"/><du var="i" def="376" use="381" target="385" covered="0"/><du var="i" def="376" use="383" covered="0"/><du var="i" def="376" use="374" target="374" covered="0"/><du var="i" def="376" use="374" target="378" covered="0"/><du var="i" def="376" use="376" covered="0"/><du var="i" def="383" use="381" target="381" covered="0"/><du var="i" def="383" use="381" target="385" covered="0"/><du var="i" def="383" use="397" covered="0"/><du var="i" def="383" use="381" target="381" covered="0"/><du var="i" def="383" use="381" target="385" covered="0"/><du var="i" def="383" use="383" covered="0"/><du var="stateCountTotal" def="391" use="393" target="394" covered="0"/><du var="stateCountTotal" def="391" use="393" target="397" covered="0"/><counter type="DU" missed="195" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="crossCheckHorizontal" desc="(IIII)F"><du var="startJ" def="407" use="435" covered="0"/><du var="centerI" def="407" use="450" target="450" covered="0"/><du var="centerI" def="407" use="450" target="454" covered="0"/><du var="centerI" def="407" use="443" target="443" covered="0"/><du var="centerI" def="407" use="443" target="447" covered="0"/><du var="centerI" def="407" use="436" target="440" covered="0"/><du var="centerI" def="407" use="436" target="437" covered="0"/><du var="centerI" def="407" use="427" target="427" covered="0"/><du var="centerI" def="407" use="427" target="431" covered="0"/><du var="centerI" def="407" use="420" target="420" covered="0"/><du var="centerI" def="407" use="420" target="424" covered="0"/><du var="centerI" def="407" use="413" target="417" covered="0"/><du var="centerI" def="407" use="413" target="414" covered="0"/><du var="maxCount" def="407" use="424" target="425" covered="0"/><du var="maxCount" def="407" use="424" target="427" covered="0"/><du var="maxCount" def="407" use="431" target="432" covered="0"/><du var="maxCount" def="407" use="431" target="435" covered="0"/><du var="maxCount" def="407" use="447" target="448" covered="0"/><du var="maxCount" def="407" use="447" target="450" covered="0"/><du var="maxCount" def="407" use="454" target="455" covered="0"/><du var="maxCount" def="407" use="454" target="460" covered="0"/><du var="maxCount" def="407" use="450" target="454" covered="0"/><du var="maxCount" def="407" use="450" target="451" covered="0"/><du var="maxCount" def="407" use="443" target="447" covered="0"/><du var="maxCount" def="407" use="443" target="444" covered="0"/><du var="maxCount" def="407" use="427" target="431" covered="0"/><du var="maxCount" def="407" use="427" target="428" covered="0"/><du var="maxCount" def="407" use="420" target="424" covered="0"/><du var="maxCount" def="407" use="420" target="421" covered="0"/><du var="originalStateCountTotal" def="407" use="462" target="463" covered="0"/><du var="originalStateCountTotal" def="407" use="462" target="466" covered="0"/><du var="image" def="407" use="450" target="450" covered="0"/><du var="image" def="407" use="450" target="454" covered="0"/><du var="image" def="407" use="443" target="443" covered="0"/><du var="image" def="407" use="443" target="447" covered="0"/><du var="image" def="407" use="436" target="440" covered="0"/><du var="image" def="407" use="436" target="437" covered="0"/><du var="image" def="407" use="427" target="427" covered="0"/><du var="image" def="407" use="427" target="431" covered="0"/><du var="image" def="407" use="420" target="420" covered="0"/><du var="image" def="407" use="420" target="424" covered="0"/><du var="image" def="407" use="413" target="417" covered="0"/><du var="image" def="407" use="413" target="414" covered="0"/><du var="maxJ" def="409" use="436" target="436" covered="0"/><du var="maxJ" def="409" use="436" target="440" covered="0"/><du var="maxJ" def="409" use="440" target="441" covered="0"/><du var="maxJ" def="409" use="440" target="443" covered="0"/><du var="maxJ" def="409" use="443" target="443" covered="0"/><du var="maxJ" def="409" use="443" target="447" covered="0"/><du var="maxJ" def="409" use="447" target="447" covered="0"/><du var="maxJ" def="409" use="447" target="448" covered="0"/><du var="maxJ" def="409" use="450" target="450" covered="0"/><du var="maxJ" def="409" use="450" target="454" covered="0"/><du var="stateCount" def="410" use="424" target="425" covered="0"/><du var="stateCount" def="410" use="424" target="427" covered="0"/><du var="stateCount" def="410" use="431" target="432" covered="0"/><du var="stateCount" def="410" use="431" target="435" covered="0"/><du var="stateCount" def="410" use="447" target="448" covered="0"/><du var="stateCount" def="410" use="447" target="450" covered="0"/><du var="stateCount" def="410" use="454" target="455" covered="0"/><du var="stateCount" def="410" use="454" target="460" covered="0"/><du var="stateCount" def="410" use="460" covered="0"/><du var="stateCount" def="410" use="466" target="466" covered="0"/><du var="stateCount" def="410" use="466" target="466" covered="0"/><du var="stateCount" def="410" use="466" covered="0"/><du var="stateCount" def="410" use="450" target="454" covered="0"/><du var="stateCount" def="410" use="450" target="451" covered="0"/><du var="stateCount" def="410" use="451" covered="0"/><du var="stateCount" def="410" use="443" target="447" covered="0"/><du var="stateCount" def="410" use="443" target="444" covered="0"/><du var="stateCount" def="410" use="444" covered="0"/><du var="stateCount" def="410" use="437" covered="0"/><du var="stateCount" def="410" use="427" target="431" covered="0"/><du var="stateCount" def="410" use="427" target="428" covered="0"/><du var="stateCount" def="410" use="428" covered="0"/><du var="stateCount" def="410" use="420" target="424" covered="0"/><du var="stateCount" def="410" use="420" target="421" covered="0"/><du var="stateCount" def="410" use="421" covered="0"/><du var="stateCount" def="410" use="414" covered="0"/><du var="j" def="412" use="413" target="413" covered="0"/><du var="j" def="412" use="413" target="417" covered="0"/><du var="j" def="412" use="417" target="418" covered="0"/><du var="j" def="412" use="417" target="420" covered="0"/><du var="j" def="412" use="420" target="420" covered="0"/><du var="j" def="412" use="420" target="424" covered="0"/><du var="j" def="412" use="424" target="424" covered="0"/><du var="j" def="412" use="424" target="425" covered="0"/><du var="j" def="412" use="427" target="427" covered="0"/><du var="j" def="412" use="427" target="431" covered="0"/><du var="j" def="412" use="427" target="427" covered="0"/><du var="j" def="412" use="427" target="431" covered="0"/><du var="j" def="412" use="429" covered="0"/><du var="j" def="412" use="420" target="420" covered="0"/><du var="j" def="412" use="420" target="424" covered="0"/><du var="j" def="412" use="422" covered="0"/><du var="j" def="412" use="413" target="417" covered="0"/><du var="j" def="412" use="413" target="414" covered="0"/><du var="j" def="412" use="415" covered="0"/><du var="j" def="415" use="413" target="413" covered="0"/><du var="j" def="415" use="413" target="417" covered="0"/><du var="j" def="415" use="417" target="418" covered="0"/><du var="j" def="415" use="417" target="420" covered="0"/><du var="j" def="415" use="420" target="420" covered="0"/><du var="j" def="415" use="420" target="424" covered="0"/><du var="j" def="415" use="424" target="424" covered="0"/><du var="j" def="415" use="424" target="425" covered="0"/><du var="j" def="415" use="427" target="427" covered="0"/><du var="j" def="415" use="427" target="431" covered="0"/><du var="j" def="415" use="427" target="427" covered="0"/><du var="j" def="415" use="427" target="431" covered="0"/><du var="j" def="415" use="429" covered="0"/><du var="j" def="415" use="420" target="420" covered="0"/><du var="j" def="415" use="420" target="424" covered="0"/><du var="j" def="415" use="422" covered="0"/><du var="j" def="415" use="413" target="417" covered="0"/><du var="j" def="415" use="413" target="414" covered="0"/><du var="j" def="415" use="415" covered="0"/><du var="j" def="422" use="420" target="420" covered="0"/><du var="j" def="422" use="420" target="424" covered="0"/><du var="j" def="422" use="424" target="424" covered="0"/><du var="j" def="422" use="424" target="425" covered="0"/><du var="j" def="422" use="427" target="427" covered="0"/><du var="j" def="422" use="427" target="431" covered="0"/><du var="j" def="422" use="427" target="427" covered="0"/><du var="j" def="422" use="427" target="431" covered="0"/><du var="j" def="422" use="429" covered="0"/><du var="j" def="422" use="420" target="420" covered="0"/><du var="j" def="422" use="420" target="424" covered="0"/><du var="j" def="422" use="422" covered="0"/><du var="j" def="429" use="427" target="427" covered="0"/><du var="j" def="429" use="427" target="431" covered="0"/><du var="j" def="429" use="427" target="427" covered="0"/><du var="j" def="429" use="427" target="431" covered="0"/><du var="j" def="429" use="429" covered="0"/><du var="j" def="435" use="436" target="436" covered="0"/><du var="j" def="435" use="436" target="440" covered="0"/><du var="j" def="435" use="440" target="441" covered="0"/><du var="j" def="435" use="440" target="443" covered="0"/><du var="j" def="435" use="443" target="443" covered="0"/><du var="j" def="435" use="443" target="447" covered="0"/><du var="j" def="435" use="447" target="447" covered="0"/><du var="j" def="435" use="447" target="448" covered="0"/><du var="j" def="435" use="450" target="450" covered="0"/><du var="j" def="435" use="450" target="454" covered="0"/><du var="j" def="435" use="466" covered="0"/><du var="j" def="435" use="450" target="450" covered="0"/><du var="j" def="435" use="450" target="454" covered="0"/><du var="j" def="435" use="452" covered="0"/><du var="j" def="435" use="443" target="443" covered="0"/><du var="j" def="435" use="443" target="447" covered="0"/><du var="j" def="435" use="445" covered="0"/><du var="j" def="435" use="436" target="440" covered="0"/><du var="j" def="435" use="436" target="437" covered="0"/><du var="j" def="435" use="438" covered="0"/><du var="j" def="438" use="436" target="436" covered="0"/><du var="j" def="438" use="436" target="440" covered="0"/><du var="j" def="438" use="440" target="441" covered="0"/><du var="j" def="438" use="440" target="443" covered="0"/><du var="j" def="438" use="443" target="443" covered="0"/><du var="j" def="438" use="443" target="447" covered="0"/><du var="j" def="438" use="447" target="447" covered="0"/><du var="j" def="438" use="447" target="448" covered="0"/><du var="j" def="438" use="450" target="450" covered="0"/><du var="j" def="438" use="450" target="454" covered="0"/><du var="j" def="438" use="466" covered="0"/><du var="j" def="438" use="450" target="450" covered="0"/><du var="j" def="438" use="450" target="454" covered="0"/><du var="j" def="438" use="452" covered="0"/><du var="j" def="438" use="443" target="443" covered="0"/><du var="j" def="438" use="443" target="447" covered="0"/><du var="j" def="438" use="445" covered="0"/><du var="j" def="438" use="436" target="440" covered="0"/><du var="j" def="438" use="436" target="437" covered="0"/><du var="j" def="438" use="438" covered="0"/><du var="j" def="445" use="443" target="443" covered="0"/><du var="j" def="445" use="443" target="447" covered="0"/><du var="j" def="445" use="447" target="447" covered="0"/><du var="j" def="445" use="447" target="448" covered="0"/><du var="j" def="445" use="450" target="450" covered="0"/><du var="j" def="445" use="450" target="454" covered="0"/><du var="j" def="445" use="466" covered="0"/><du var="j" def="445" use="450" target="450" covered="0"/><du var="j" def="445" use="450" target="454" covered="0"/><du var="j" def="445" use="452" covered="0"/><du var="j" def="445" use="443" target="443" covered="0"/><du var="j" def="445" use="443" target="447" covered="0"/><du var="j" def="445" use="445" covered="0"/><du var="j" def="452" use="450" target="450" covered="0"/><du var="j" def="452" use="450" target="454" covered="0"/><du var="j" def="452" use="466" covered="0"/><du var="j" def="452" use="450" target="450" covered="0"/><du var="j" def="452" use="450" target="454" covered="0"/><du var="j" def="452" use="452" covered="0"/><du var="stateCountTotal" def="460" use="462" target="463" covered="0"/><du var="stateCountTotal" def="460" use="462" target="466" covered="0"/><counter type="DU" missed="195" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handlePossibleCenter" desc="([IIIZ)Z"><du var="this" def="488" use="494" covered="0"/><du var="this" def="488" use="499" target="508" covered="0"/><du var="this" def="488" use="499" target="500" covered="0"/><du var="this" def="488" use="500" covered="0"/><du var="this" def="488" use="503" covered="0"/><du var="this" def="488" use="510" covered="0"/><du var="this" def="488" use="511" target="512" covered="0"/><du var="this" def="488" use="511" target="515" covered="0"/><du var="this" def="488" use="512" covered="0"/><du var="this" def="488" use="496" target="497" covered="0"/><du var="this" def="488" use="496" target="518" covered="0"/><du var="stateCount" def="488" use="494" covered="0"/><du var="stateCount" def="488" use="496" target="497" covered="0"/><du var="stateCount" def="488" use="496" target="518" covered="0"/><du var="pureBarcode" def="488" use="496" target="496" covered="0"/><du var="pureBarcode" def="488" use="496" target="497" covered="0"/><du var="this.possibleCenters" def="488" use="499" target="508" covered="0"/><du var="this.possibleCenters" def="488" use="499" target="500" covered="0"/><du var="this.possibleCenters" def="488" use="500" covered="0"/><du var="this.possibleCenters" def="488" use="503" covered="0"/><du var="this.possibleCenters" def="488" use="510" covered="0"/><du var="this.resultPointCallback" def="488" use="511" target="512" covered="0"/><du var="this.resultPointCallback" def="488" use="511" target="515" covered="0"/><du var="this.resultPointCallback" def="488" use="512" covered="0"/><du var="stateCountTotal" def="488" use="494" covered="0"/><du var="stateCountTotal" def="488" use="497" covered="0"/><du var="stateCountTotal" def="488" use="496" target="497" covered="0"/><du var="stateCountTotal" def="488" use="496" target="518" covered="0"/><du var="centerJ" def="490" use="494" covered="0"/><du var="centerI" def="491" use="492" target="494" covered="0"/><du var="centerI" def="491" use="492" target="518" covered="0"/><du var="centerI" def="491" use="494" covered="0"/><du var="centerI" def="491" use="502" target="503" covered="0"/><du var="centerI" def="491" use="502" target="499" covered="0"/><du var="centerI" def="491" use="503" covered="0"/><du var="centerI" def="491" use="509" covered="0"/><du var="centerI" def="491" use="496" target="497" covered="0"/><du var="centerI" def="491" use="496" target="518" covered="0"/><du var="centerJ" def="494" use="495" target="496" covered="0"/><du var="centerJ" def="494" use="495" target="518" covered="0"/><du var="centerJ" def="494" use="502" target="503" covered="0"/><du var="centerJ" def="494" use="502" target="499" covered="0"/><du var="centerJ" def="494" use="503" covered="0"/><du var="centerJ" def="494" use="509" covered="0"/><du var="centerJ" def="494" use="496" target="497" covered="0"/><du var="centerJ" def="494" use="496" target="518" covered="0"/><du var="estimatedModuleSize" def="497" use="502" target="503" covered="0"/><du var="estimatedModuleSize" def="497" use="502" target="499" covered="0"/><du var="estimatedModuleSize" def="497" use="503" covered="0"/><du var="estimatedModuleSize" def="497" use="509" covered="0"/><du var="found" def="498" use="508" target="509" covered="0"/><du var="found" def="498" use="508" target="515" covered="0"/><du var="index" def="499" use="499" target="508" covered="0"/><du var="index" def="499" use="499" target="500" covered="0"/><du var="index" def="499" use="500" covered="0"/><du var="index" def="499" use="499" covered="0"/><du var="index" def="499" use="503" covered="0"/><du var="center" def="500" use="502" target="503" covered="0"/><du var="center" def="500" use="502" target="499" covered="0"/><du var="center" def="500" use="503" covered="0"/><du var="found" def="504" use="508" target="509" covered="0"/><du var="found" def="504" use="508" target="515" covered="0"/><du var="index" def="499" use="499" target="508" covered="0"/><du var="index" def="499" use="499" target="500" covered="0"/><du var="index" def="499" use="500" covered="0"/><du var="index" def="499" use="499" covered="0"/><du var="index" def="499" use="503" covered="0"/><du var="point" def="509" use="512" covered="0"/><counter type="DU" missed="68" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findRowSkip" desc="()I"><du var="this" def="528" use="533" covered="0"/><du var="this" def="528" use="543" covered="0"/><du var="this.possibleCenters" def="528" use="533" covered="0"/><du var="max" def="528" use="529" target="530" covered="0"/><du var="max" def="528" use="529" target="532" covered="0"/><du var="firstConfirmedCenter" def="532" use="535" target="536" covered="0"/><du var="firstConfirmedCenter" def="532" use="535" target="543" covered="0"/><du var="firstConfirmedCenter" def="532" use="544" covered="0"/><du var="center" def="533" use="534" target="535" covered="0"/><du var="center" def="533" use="534" target="533" covered="0"/><du var="center" def="533" use="544" covered="0"/><du var="center" def="533" use="536" covered="0"/><du var="firstConfirmedCenter" def="536" use="535" target="536" covered="0"/><du var="firstConfirmedCenter" def="536" use="535" target="543" covered="0"/><du var="firstConfirmedCenter" def="536" use="544" covered="0"/><counter type="DU" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="haveMultiplyConfirmedCenters" desc="()Z"><du var="this" def="558" use="576" covered="0"/><du var="this.possibleCenters" def="558" use="576" covered="0"/><du var="confirmedCount" def="558" use="563" covered="0"/><du var="confirmedCount" def="558" use="567" target="568" covered="0"/><du var="confirmedCount" def="558" use="567" target="574" covered="0"/><du var="totalModuleSize" def="559" use="564" covered="0"/><du var="totalModuleSize" def="559" use="574" covered="0"/><du var="totalModuleSize" def="559" use="579" target="579" covered="0"/><du var="totalModuleSize" def="559" use="579" target="579" covered="0"/><du var="max" def="560" use="574" covered="0"/><du var="pattern" def="561" use="562" target="563" covered="0"/><du var="pattern" def="561" use="562" target="561" covered="0"/><du var="pattern" def="561" use="564" covered="0"/><du var="confirmedCount" def="563" use="563" covered="0"/><du var="confirmedCount" def="563" use="567" target="568" covered="0"/><du var="confirmedCount" def="563" use="567" target="574" covered="0"/><du var="totalModuleSize" def="564" use="564" covered="0"/><du var="totalModuleSize" def="564" use="574" covered="0"/><du var="totalModuleSize" def="564" use="579" target="579" covered="0"/><du var="totalModuleSize" def="564" use="579" target="579" covered="0"/><du var="average" def="574" use="577" covered="0"/><du var="totalDeviation" def="575" use="577" covered="0"/><du var="totalDeviation" def="575" use="579" target="579" covered="0"/><du var="totalDeviation" def="575" use="579" target="579" covered="0"/><du var="totalDeviation" def="577" use="577" covered="0"/><du var="totalDeviation" def="577" use="579" target="579" covered="0"/><du var="totalDeviation" def="577" use="579" target="579" covered="0"/><counter type="DU" missed="33" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="selectBestPatterns" desc="()[Lcom/google/zxing/qrcode/detector/FinderPattern;"><du var="this" def="590" use="622" target="625" covered="0"/><du var="this" def="590" use="622" target="637" covered="0"/><du var="this" def="590" use="638" covered="0"/><du var="this" def="590" use="639" covered="0"/><du var="this" def="590" use="640" covered="0"/><du var="this" def="590" use="626" covered="0"/><du var="this" def="590" use="630" covered="0"/><du var="this" def="590" use="632" covered="0"/><du var="this" def="590" use="634" covered="0"/><du var="this" def="590" use="601" covered="0"/><du var="this" def="590" use="609" covered="0"/><du var="this" def="590" use="613" target="613" covered="0"/><du var="this" def="590" use="613" target="622" covered="0"/><du var="this" def="590" use="613" target="622" covered="0"/><du var="this" def="590" use="613" target="614" covered="0"/><du var="this" def="590" use="614" covered="0"/><du var="this" def="590" use="616" covered="0"/><du var="this.possibleCenters" def="590" use="622" target="625" covered="0"/><du var="this.possibleCenters" def="590" use="622" target="637" covered="0"/><du var="this.possibleCenters" def="590" use="638" covered="0"/><du var="this.possibleCenters" def="590" use="639" covered="0"/><du var="this.possibleCenters" def="590" use="640" covered="0"/><du var="this.possibleCenters" def="590" use="626" covered="0"/><du var="this.possibleCenters" def="590" use="630" covered="0"/><du var="this.possibleCenters" def="590" use="632" covered="0"/><du var="this.possibleCenters" def="590" use="634" covered="0"/><du var="this.possibleCenters" def="590" use="601" covered="0"/><du var="this.possibleCenters" def="590" use="609" covered="0"/><du var="this.possibleCenters" def="590" use="613" target="613" covered="0"/><du var="this.possibleCenters" def="590" use="613" target="622" covered="0"/><du var="this.possibleCenters" def="590" use="613" target="622" covered="0"/><du var="this.possibleCenters" def="590" use="613" target="614" covered="0"/><du var="this.possibleCenters" def="590" use="614" covered="0"/><du var="this.possibleCenters" def="590" use="616" covered="0"/><du var="startSize" def="590" use="591" target="593" covered="0"/><du var="startSize" def="590" use="591" target="597" covered="0"/><du var="startSize" def="590" use="597" target="599" covered="0"/><du var="startSize" def="590" use="597" target="622" covered="0"/><du var="startSize" def="590" use="606" covered="0"/><du var="startSize" def="590" use="607" covered="0"/><du var="totalModuleSize" def="599" use="603" covered="0"/><du var="totalModuleSize" def="599" use="606" covered="0"/><du var="square" def="600" use="604" covered="0"/><du var="square" def="600" use="607" covered="0"/><du var="totalModuleSize" def="603" use="603" covered="0"/><du var="totalModuleSize" def="603" use="606" covered="0"/><du var="square" def="604" use="604" covered="0"/><du var="square" def="604" use="607" covered="0"/><du var="average" def="606" use="615" target="616" covered="0"/><du var="average" def="606" use="615" target="613" covered="0"/><du var="limit" def="611" use="615" target="616" covered="0"/><du var="limit" def="611" use="615" target="613" covered="0"/><du var="i" def="613" use="613" target="613" covered="0"/><du var="i" def="613" use="613" target="622" covered="0"/><du var="i" def="613" use="614" covered="0"/><du var="i" def="613" use="613" covered="0"/><du var="i" def="613" use="616" covered="0"/><du var="i" def="613" use="617" covered="0"/><du var="pattern" def="614" use="615" target="616" covered="0"/><du var="pattern" def="614" use="615" target="613" covered="0"/><du var="i" def="617" use="613" covered="0"/><du var="i" def="613" use="613" target="613" covered="0"/><du var="i" def="613" use="613" target="622" covered="0"/><du var="i" def="613" use="614" covered="0"/><du var="i" def="613" use="613" covered="0"/><du var="i" def="613" use="616" covered="0"/><du var="i" def="613" use="617" covered="0"/><du var="totalModuleSize" def="625" use="627" covered="0"/><du var="totalModuleSize" def="625" use="630" covered="0"/><du var="totalModuleSize" def="627" use="627" covered="0"/><du var="totalModuleSize" def="627" use="630" covered="0"/><counter type="DU" missed="77" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="1153" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/detector/FinderPattern"><method name="aboutEquals" desc="(FFF)Z"><du var="this" def="62" use="62" target="62" covered="0"/><du var="this" def="62" use="62" target="66" covered="0"/><du var="this" def="62" use="62" target="63" covered="0"/><du var="this" def="62" use="62" target="66" covered="0"/><du var="this" def="62" use="63" covered="0"/><du var="this" def="62" use="64" target="64" covered="0"/><du var="this" def="62" use="64" target="64" covered="0"/><du var="moduleSize" def="62" use="62" target="62" covered="0"/><du var="moduleSize" def="62" use="62" target="66" covered="0"/><du var="moduleSize" def="62" use="62" target="63" covered="0"/><du var="moduleSize" def="62" use="62" target="66" covered="0"/><du var="moduleSize" def="62" use="63" covered="0"/><du var="i" def="62" use="62" target="62" covered="0"/><du var="i" def="62" use="62" target="66" covered="0"/><du var="j" def="62" use="62" target="63" covered="0"/><du var="j" def="62" use="62" target="66" covered="0"/><du var="this.estimatedModuleSize" def="62" use="63" covered="0"/><du var="this.estimatedModuleSize" def="62" use="64" target="64" covered="0"/><du var="this.estimatedModuleSize" def="62" use="64" target="64" covered="0"/><du var="moduleSizeDiff" def="63" use="64" target="64" covered="0"/><du var="moduleSizeDiff" def="63" use="64" target="64" covered="0"/><du var="moduleSizeDiff" def="63" use="64" target="64" covered="0"/><du var="moduleSizeDiff" def="63" use="64" target="64" covered="0"/><counter type="DU" missed="23" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="23" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/detector/AlignmentPattern"><method name="aboutEquals" desc="(FFF)Z"><du var="this" def="41" use="41" target="41" covered="0"/><du var="this" def="41" use="41" target="45" covered="0"/><du var="this" def="41" use="41" target="42" covered="0"/><du var="this" def="41" use="41" target="45" covered="0"/><du var="this" def="41" use="42" covered="0"/><du var="this" def="41" use="43" target="43" covered="0"/><du var="this" def="41" use="43" target="43" covered="0"/><du var="moduleSize" def="41" use="41" target="41" covered="0"/><du var="moduleSize" def="41" use="41" target="45" covered="0"/><du var="moduleSize" def="41" use="41" target="42" covered="0"/><du var="moduleSize" def="41" use="41" target="45" covered="0"/><du var="moduleSize" def="41" use="42" covered="0"/><du var="i" def="41" use="41" target="41" covered="0"/><du var="i" def="41" use="41" target="45" covered="0"/><du var="j" def="41" use="41" target="42" covered="0"/><du var="j" def="41" use="41" target="45" covered="0"/><du var="this.estimatedModuleSize" def="41" use="42" covered="0"/><du var="this.estimatedModuleSize" def="41" use="43" target="43" covered="0"/><du var="this.estimatedModuleSize" def="41" use="43" target="43" covered="0"/><du var="moduleSizeDiff" def="42" use="43" target="43" covered="0"/><du var="moduleSizeDiff" def="42" use="43" target="43" covered="0"/><du var="moduleSizeDiff" def="42" use="43" target="43" covered="0"/><du var="moduleSizeDiff" def="42" use="43" target="43" covered="0"/><counter type="DU" missed="23" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="23" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/QRCodeWriter"><method name="encode" desc="(Ljava/lang/String;Lcom/google/zxing/BarcodeFormat;IILjava/util/Map;)Lcom/google/zxing/common/BitMatrix;"><du var="contents" def="54" use="54" target="55" covered="0"/><du var="contents" def="54" use="54" target="58" covered="0"/><du var="contents" def="54" use="78" covered="0"/><du var="format" def="54" use="58" target="59" covered="0"/><du var="format" def="54" use="58" target="62" covered="0"/><du var="format" def="54" use="59" covered="0"/><du var="width" def="54" use="62" target="62" covered="0"/><du var="width" def="54" use="62" target="63" covered="0"/><du var="width" def="54" use="63" covered="0"/><du var="width" def="54" use="79" covered="0"/><du var="height" def="54" use="63" covered="0"/><du var="height" def="54" use="62" target="63" covered="0"/><du var="height" def="54" use="62" target="67" covered="0"/><du var="height" def="54" use="79" covered="0"/><du var="hints" def="54" use="69" target="70" covered="0"/><du var="hints" def="54" use="69" target="78" covered="0"/><du var="hints" def="54" use="78" covered="0"/><du var="hints" def="54" use="70" target="71" covered="0"/><du var="hints" def="54" use="70" target="73" covered="0"/><du var="hints" def="54" use="73" target="74" covered="0"/><du var="hints" def="54" use="73" target="78" covered="0"/><du var="hints" def="54" use="74" covered="0"/><du var="hints" def="54" use="71" covered="0"/><du var="QR_CODE" def="54" use="58" target="59" covered="0"/><du var="QR_CODE" def="54" use="58" target="62" covered="0"/><du var="L" def="54" use="67" covered="0"/><du var="ERROR_CORRECTION" def="54" use="70" target="71" covered="0"/><du var="ERROR_CORRECTION" def="54" use="70" target="73" covered="0"/><du var="ERROR_CORRECTION" def="54" use="71" covered="0"/><du var="MARGIN" def="54" use="73" target="74" covered="0"/><du var="MARGIN" def="54" use="73" target="78" covered="0"/><du var="MARGIN" def="54" use="74" covered="0"/><du var="errorCorrectionLevel" def="67" use="78" covered="0"/><du var="quietZone" def="68" use="79" covered="0"/><du var="errorCorrectionLevel" def="71" use="78" covered="0"/><du var="quietZone" def="74" use="79" covered="0"/><counter type="DU" missed="36" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="renderResult" desc="(Lcom/google/zxing/qrcode/encoder/QRCode;III)Lcom/google/zxing/common/BitMatrix;"><du var="width" def="85" use="93" covered="0"/><du var="height" def="85" use="94" covered="0"/><du var="quietZone" def="85" use="91" covered="0"/><du var="quietZone" def="85" use="92" covered="0"/><du var="input" def="85" use="86" target="87" covered="0"/><du var="input" def="85" use="86" target="89" covered="0"/><du var="input" def="85" use="89" covered="0"/><du var="input" def="85" use="90" covered="0"/><du var="input" def="85" use="109" target="110" covered="0"/><du var="input" def="85" use="109" target="108" covered="0"/><du var="inputWidth" def="89" use="108" target="106" covered="0"/><du var="inputWidth" def="89" use="108" target="109" covered="0"/><du var="inputHeight" def="90" use="106" target="115" covered="0"/><du var="inputHeight" def="90" use="106" target="108" covered="0"/><du var="multiple" def="96" use="108" covered="0"/><du var="multiple" def="96" use="110" covered="0"/><du var="multiple" def="96" use="106" covered="0"/><du var="leftPadding" def="101" use="108" covered="0"/><du var="output" def="104" use="110" covered="0"/><du var="output" def="104" use="115" covered="0"/><du var="inputY" def="106" use="106" target="115" covered="0"/><du var="inputY" def="106" use="106" target="108" covered="0"/><du var="inputY" def="106" use="109" target="110" covered="0"/><du var="inputY" def="106" use="109" target="108" covered="0"/><du var="inputY" def="106" use="106" covered="0"/><du var="outputY" def="106" use="110" covered="0"/><du var="outputY" def="106" use="106" covered="0"/><du var="inputX" def="108" use="108" target="106" covered="0"/><du var="inputX" def="108" use="108" target="109" covered="0"/><du var="inputX" def="108" use="109" target="110" covered="0"/><du var="inputX" def="108" use="109" target="108" covered="0"/><du var="inputX" def="108" use="108" covered="0"/><du var="outputX" def="108" use="108" covered="0"/><du var="outputX" def="108" use="110" covered="0"/><du var="inputX" def="108" use="108" target="106" covered="0"/><du var="inputX" def="108" use="108" target="109" covered="0"/><du var="inputX" def="108" use="109" target="110" covered="0"/><du var="inputX" def="108" use="109" target="108" covered="0"/><du var="inputX" def="108" use="108" covered="0"/><du var="outputX" def="108" use="108" covered="0"/><du var="outputX" def="108" use="110" covered="0"/><du var="inputY" def="106" use="106" target="115" covered="0"/><du var="inputY" def="106" use="106" target="108" covered="0"/><du var="inputY" def="106" use="109" target="110" covered="0"/><du var="inputY" def="106" use="109" target="108" covered="0"/><du var="inputY" def="106" use="106" covered="0"/><du var="outputY" def="106" use="110" covered="0"/><du var="outputY" def="106" use="106" covered="0"/><counter type="DU" missed="48" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="84" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/encoder/MatrixUtil"><method name="embedTypeInfo" desc="(Lcom/google/zxing/qrcode/decoder/ErrorCorrectionLevel;ILcom/google/zxing/qrcode/encoder/ByteMatrix;)V"><du var="matrix" def="168" use="180" covered="0"/><du var="matrix" def="168" use="190" covered="0"/><du var="matrix" def="168" use="191" covered="0"/><du var="matrix" def="168" use="184" covered="0"/><du var="matrix" def="168" use="186" covered="0"/><du var="TYPE_INFO_COORDINATES" def="168" use="177" covered="0"/><du var="typeInfoBits" def="168" use="171" target="194" covered="0"/><du var="typeInfoBits" def="168" use="171" target="174" covered="0"/><du var="typeInfoBits" def="168" use="174" covered="0"/><du var="i" def="171" use="171" target="194" covered="0"/><du var="i" def="171" use="171" target="174" covered="0"/><du var="i" def="171" use="174" covered="0"/><du var="i" def="171" use="177" covered="0"/><du var="i" def="171" use="182" target="184" covered="0"/><du var="i" def="171" use="182" target="189" covered="0"/><du var="i" def="171" use="190" covered="0"/><du var="i" def="171" use="171" covered="0"/><du var="i" def="171" use="184" covered="0"/><du var="bit" def="174" use="191" covered="0"/><du var="bit" def="174" use="186" covered="0"/><du var="i" def="171" use="171" target="194" covered="0"/><du var="i" def="171" use="171" target="174" covered="0"/><du var="i" def="171" use="174" covered="0"/><du var="i" def="171" use="177" covered="0"/><du var="i" def="171" use="182" target="184" covered="0"/><du var="i" def="171" use="182" target="189" covered="0"/><du var="i" def="171" use="190" covered="0"/><du var="i" def="171" use="171" covered="0"/><du var="i" def="171" use="184" covered="0"/><counter type="DU" missed="29" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maybeEmbedVersionInfo" desc="(Lcom/google/zxing/qrcode/decoder/Version;Lcom/google/zxing/qrcode/encoder/ByteMatrix;)V"><du var="version" def="199" use="199" target="200" covered="0"/><du var="version" def="199" use="199" target="202" covered="0"/><du var="version" def="199" use="203" covered="0"/><du var="matrix" def="199" use="212" covered="0"/><du var="matrix" def="199" use="214" covered="0"/><du var="versionInfoBits" def="202" use="209" covered="0"/><du var="bitIndex" def="205" use="209" covered="0"/><du var="bitIndex" def="205" use="210" covered="0"/><du var="i" def="206" use="206" target="217" covered="0"/><du var="i" def="206" use="206" target="207" covered="0"/><du var="i" def="206" use="212" covered="0"/><du var="i" def="206" use="214" covered="0"/><du var="i" def="206" use="206" covered="0"/><du var="j" def="207" use="207" target="206" covered="0"/><du var="j" def="207" use="207" target="209" covered="0"/><du var="j" def="207" use="212" covered="0"/><du var="j" def="207" use="214" covered="0"/><du var="j" def="207" use="207" covered="0"/><du var="bitIndex" def="210" use="209" covered="0"/><du var="bitIndex" def="210" use="210" covered="0"/><du var="j" def="207" use="207" target="206" covered="0"/><du var="j" def="207" use="207" target="209" covered="0"/><du var="j" def="207" use="212" covered="0"/><du var="j" def="207" use="214" covered="0"/><du var="j" def="207" use="207" covered="0"/><du var="i" def="206" use="206" target="217" covered="0"/><du var="i" def="206" use="206" target="207" covered="0"/><du var="i" def="206" use="212" covered="0"/><du var="i" def="206" use="214" covered="0"/><du var="i" def="206" use="206" covered="0"/><counter type="DU" missed="30" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="embedDataBits" desc="(Lcom/google/zxing/common/BitArray;ILcom/google/zxing/qrcode/encoder/ByteMatrix;)V"><du var="dataBits" def="224" use="242" target="243" covered="0"/><du var="dataBits" def="224" use="242" target="248" covered="0"/><du var="dataBits" def="224" use="243" covered="0"/><du var="dataBits" def="224" use="264" target="265" covered="0"/><du var="dataBits" def="224" use="264" target="267" covered="0"/><du var="dataBits" def="224" use="265" covered="0"/><du var="maskPattern" def="224" use="252" target="252" covered="0"/><du var="maskPattern" def="224" use="252" target="255" covered="0"/><du var="maskPattern" def="224" use="252" target="253" covered="0"/><du var="maskPattern" def="224" use="252" target="255" covered="0"/><du var="matrix" def="224" use="234" target="259" covered="0"/><du var="matrix" def="224" use="234" target="235" covered="0"/><du var="matrix" def="224" use="238" target="239" covered="0"/><du var="matrix" def="224" use="238" target="242" covered="0"/><du var="matrix" def="224" use="255" covered="0"/><du var="bitIndex" def="224" use="242" target="243" covered="0"/><du var="bitIndex" def="224" use="242" target="248" covered="0"/><du var="bitIndex" def="224" use="243" covered="0"/><du var="bitIndex" def="224" use="244" covered="0"/><du var="bitIndex" def="224" use="264" target="265" covered="0"/><du var="bitIndex" def="224" use="264" target="267" covered="0"/><du var="bitIndex" def="224" use="265" covered="0"/><du var="direction" def="225" use="259" covered="0"/><du var="direction" def="225" use="257" covered="0"/><du var="x" def="227" use="229" target="264" covered="0"/><du var="x" def="227" use="229" target="231" covered="0"/><du var="x" def="227" use="231" target="232" covered="0"/><du var="x" def="227" use="231" target="234" covered="0"/><du var="x" def="227" use="261" covered="0"/><du var="x" def="227" use="236" covered="0"/><du var="x" def="227" use="232" covered="0"/><du var="y" def="228" use="234" target="234" covered="0"/><du var="y" def="228" use="234" target="259" covered="0"/><du var="y" def="228" use="260" covered="0"/><du var="y" def="228" use="234" target="259" covered="0"/><du var="y" def="228" use="234" target="235" covered="0"/><du var="y" def="228" use="238" target="239" covered="0"/><du var="y" def="228" use="238" target="242" covered="0"/><du var="y" def="228" use="255" covered="0"/><du var="y" def="228" use="252" target="253" covered="0"/><du var="y" def="228" use="252" target="255" covered="0"/><du var="y" def="228" use="257" covered="0"/><du var="x" def="232" use="261" covered="0"/><du var="x" def="232" use="236" covered="0"/><du var="i" def="235" use="235" target="257" covered="0"/><du var="i" def="235" use="235" target="236" covered="0"/><du var="i" def="235" use="236" covered="0"/><du var="i" def="235" use="235" covered="0"/><du var="xx" def="236" use="238" target="239" covered="0"/><du var="xx" def="236" use="238" target="242" covered="0"/><du var="xx" def="236" use="255" covered="0"/><du var="xx" def="236" use="252" target="253" covered="0"/><du var="xx" def="236" use="252" target="255" covered="0"/><du var="bit" def="243" use="255" covered="0"/><du var="bit" def="243" use="253" target="253" covered="0"/><du var="bit" def="243" use="253" target="253" covered="0"/><du var="bitIndex" def="244" use="242" target="243" covered="0"/><du var="bitIndex" def="244" use="242" target="248" covered="0"/><du var="bitIndex" def="244" use="243" covered="0"/><du var="bitIndex" def="244" use="244" covered="0"/><du var="bitIndex" def="244" use="264" target="265" covered="0"/><du var="bitIndex" def="244" use="264" target="267" covered="0"/><du var="bitIndex" def="244" use="265" covered="0"/><du var="bit" def="248" use="255" covered="0"/><du var="bit" def="248" use="253" target="253" covered="0"/><du var="bit" def="248" use="253" target="253" covered="0"/><du var="bit" def="253" use="255" covered="0"/><du var="i" def="235" use="235" target="257" covered="0"/><du var="i" def="235" use="235" target="236" covered="0"/><du var="i" def="235" use="236" covered="0"/><du var="i" def="235" use="235" covered="0"/><du var="y" def="257" use="234" target="234" covered="0"/><du var="y" def="257" use="234" target="259" covered="0"/><du var="y" def="257" use="260" covered="0"/><du var="y" def="257" use="234" target="259" covered="0"/><du var="y" def="257" use="234" target="235" covered="0"/><du var="y" def="257" use="238" target="239" covered="0"/><du var="y" def="257" use="238" target="242" covered="0"/><du var="y" def="257" use="255" covered="0"/><du var="y" def="257" use="252" target="253" covered="0"/><du var="y" def="257" use="252" target="255" covered="0"/><du var="y" def="257" use="257" covered="0"/><du var="direction" def="259" use="259" covered="0"/><du var="direction" def="259" use="257" covered="0"/><du var="y" def="260" use="234" target="234" covered="0"/><du var="y" def="260" use="234" target="259" covered="0"/><du var="y" def="260" use="260" covered="0"/><du var="y" def="260" use="234" target="259" covered="0"/><du var="y" def="260" use="234" target="235" covered="0"/><du var="y" def="260" use="238" target="239" covered="0"/><du var="y" def="260" use="238" target="242" covered="0"/><du var="y" def="260" use="255" covered="0"/><du var="y" def="260" use="252" target="253" covered="0"/><du var="y" def="260" use="252" target="255" covered="0"/><du var="y" def="260" use="257" covered="0"/><du var="x" def="261" use="229" target="264" covered="0"/><du var="x" def="261" use="229" target="231" covered="0"/><du var="x" def="261" use="231" target="232" covered="0"/><du var="x" def="261" use="231" target="234" covered="0"/><du var="x" def="261" use="261" covered="0"/><du var="x" def="261" use="236" covered="0"/><du var="x" def="261" use="232" covered="0"/><counter type="DU" missed="102" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateBCHCode" desc="(II)I"><du var="value" def="304" use="310" covered="0"/><du var="poly" def="304" use="304" target="305" covered="0"/><du var="poly" def="304" use="304" target="309" covered="0"/><du var="poly" def="304" use="309" covered="0"/><du var="poly" def="304" use="313" covered="0"/><du var="msbSetInPoly" def="309" use="312" target="316" covered="0"/><du var="msbSetInPoly" def="309" use="312" target="313" covered="0"/><du var="msbSetInPoly" def="309" use="313" covered="0"/><du var="value" def="310" use="312" target="316" covered="0"/><du var="value" def="310" use="312" target="313" covered="0"/><du var="value" def="310" use="313" covered="0"/><du var="value" def="310" use="316" covered="0"/><du var="value" def="313" use="312" target="316" covered="0"/><du var="value" def="313" use="312" target="313" covered="0"/><du var="value" def="313" use="313" covered="0"/><du var="value" def="313" use="316" covered="0"/><counter type="DU" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeTypeInfoBits" desc="(Lcom/google/zxing/qrcode/decoder/ErrorCorrectionLevel;ILcom/google/zxing/common/BitArray;)V"><du var="ecLevel" def="324" use="327" covered="0"/><du var="maskPattern" def="324" use="324" target="325" covered="0"/><du var="maskPattern" def="324" use="324" target="327" covered="0"/><du var="maskPattern" def="324" use="327" covered="0"/><du var="bits" def="324" use="328" covered="0"/><du var="bits" def="324" use="331" covered="0"/><du var="bits" def="324" use="335" covered="0"/><du var="bits" def="324" use="337" target="338" covered="0"/><du var="bits" def="324" use="337" target="340" covered="0"/><du var="bits" def="324" use="338" covered="0"/><counter type="DU" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeVersionInfoBits" desc="(Lcom/google/zxing/qrcode/decoder/Version;Lcom/google/zxing/common/BitArray;)V"><du var="bits" def="345" use="349" target="350" covered="0"/><du var="bits" def="345" use="349" target="352" covered="0"/><du var="bits" def="345" use="350" covered="0"/><counter type="DU" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="(I)Z"><du var="value" def="356" use="356" target="356" covered="0"/><du var="value" def="356" use="356" target="356" covered="0"/><counter type="DU" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="embedTimingPatterns" desc="(Lcom/google/zxing/qrcode/encoder/ByteMatrix;)V"><du var="matrix" def="362" use="362" target="373" covered="0"/><du var="matrix" def="362" use="362" target="363" covered="0"/><du var="matrix" def="362" use="365" target="366" covered="0"/><du var="matrix" def="362" use="365" target="369" covered="0"/><du var="matrix" def="362" use="369" target="370" covered="0"/><du var="matrix" def="362" use="369" target="362" covered="0"/><du var="matrix" def="362" use="370" covered="0"/><du var="matrix" def="362" use="366" covered="0"/><du var="i" def="362" use="362" target="373" covered="0"/><du var="i" def="362" use="362" target="363" covered="0"/><du var="i" def="362" use="363" covered="0"/><du var="i" def="362" use="365" target="366" covered="0"/><du var="i" def="362" use="365" target="369" covered="0"/><du var="i" def="362" use="369" target="370" covered="0"/><du var="i" def="362" use="369" target="362" covered="0"/><du var="i" def="362" use="362" covered="0"/><du var="i" def="362" use="370" covered="0"/><du var="i" def="362" use="366" covered="0"/><du var="bit" def="363" use="370" covered="0"/><du var="bit" def="363" use="366" covered="0"/><du var="i" def="362" use="362" target="373" covered="0"/><du var="i" def="362" use="362" target="363" covered="0"/><du var="i" def="362" use="363" covered="0"/><du var="i" def="362" use="365" target="366" covered="0"/><du var="i" def="362" use="365" target="369" covered="0"/><du var="i" def="362" use="369" target="370" covered="0"/><du var="i" def="362" use="369" target="362" covered="0"/><du var="i" def="362" use="362" covered="0"/><du var="i" def="362" use="370" covered="0"/><du var="i" def="362" use="366" covered="0"/><counter type="DU" missed="30" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="embedDarkDotAtLeftBottomCorner" desc="(Lcom/google/zxing/qrcode/encoder/ByteMatrix;)V"><du var="matrix" def="377" use="377" target="378" covered="0"/><du var="matrix" def="377" use="377" target="380" covered="0"/><du var="matrix" def="377" use="380" covered="0"/><counter type="DU" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="embedHorizontalSeparationPattern" desc="(IILcom/google/zxing/qrcode/encoder/ByteMatrix;)V"><du var="xStart" def="386" use="387" target="388" covered="0"/><du var="xStart" def="386" use="387" target="390" covered="0"/><du var="xStart" def="386" use="390" covered="0"/><du var="yStart" def="386" use="387" target="388" covered="0"/><du var="yStart" def="386" use="387" target="390" covered="0"/><du var="yStart" def="386" use="390" covered="0"/><du var="matrix" def="386" use="387" target="388" covered="0"/><du var="matrix" def="386" use="387" target="390" covered="0"/><du var="matrix" def="386" use="390" covered="0"/><du var="x" def="386" use="386" target="392" covered="0"/><du var="x" def="386" use="386" target="387" covered="0"/><du var="x" def="386" use="387" target="388" covered="0"/><du var="x" def="386" use="387" target="390" covered="0"/><du var="x" def="386" use="390" covered="0"/><du var="x" def="386" use="386" covered="0"/><du var="x" def="386" use="386" target="392" covered="0"/><du var="x" def="386" use="386" target="387" covered="0"/><du var="x" def="386" use="387" target="388" covered="0"/><du var="x" def="386" use="387" target="390" covered="0"/><du var="x" def="386" use="390" covered="0"/><du var="x" def="386" use="386" covered="0"/><counter type="DU" missed="21" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="embedVerticalSeparationPattern" desc="(IILcom/google/zxing/qrcode/encoder/ByteMatrix;)V"><du var="xStart" def="397" use="398" target="399" covered="0"/><du var="xStart" def="397" use="398" target="401" covered="0"/><du var="xStart" def="397" use="401" covered="0"/><du var="yStart" def="397" use="398" target="399" covered="0"/><du var="yStart" def="397" use="398" target="401" covered="0"/><du var="yStart" def="397" use="401" covered="0"/><du var="matrix" def="397" use="398" target="399" covered="0"/><du var="matrix" def="397" use="398" target="401" covered="0"/><du var="matrix" def="397" use="401" covered="0"/><du var="y" def="397" use="397" target="403" covered="0"/><du var="y" def="397" use="397" target="398" covered="0"/><du var="y" def="397" use="398" target="399" covered="0"/><du var="y" def="397" use="398" target="401" covered="0"/><du var="y" def="397" use="401" covered="0"/><du var="y" def="397" use="397" covered="0"/><du var="y" def="397" use="397" target="403" covered="0"/><du var="y" def="397" use="397" target="398" covered="0"/><du var="y" def="397" use="398" target="399" covered="0"/><du var="y" def="397" use="398" target="401" covered="0"/><du var="y" def="397" use="401" covered="0"/><du var="y" def="397" use="397" covered="0"/><counter type="DU" missed="21" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="embedPositionAdjustmentPattern" desc="(IILcom/google/zxing/qrcode/encoder/ByteMatrix;)V"><du var="xStart" def="406" use="409" covered="0"/><du var="yStart" def="406" use="409" covered="0"/><du var="matrix" def="406" use="409" covered="0"/><du var="POSITION_ADJUSTMENT_PATTERN" def="406" use="407" covered="0"/><du var="y" def="406" use="406" target="412" covered="0"/><du var="y" def="406" use="406" target="407" covered="0"/><du var="y" def="406" use="407" covered="0"/><du var="y" def="406" use="409" covered="0"/><du var="y" def="406" use="406" covered="0"/><du var="patternY" def="407" use="409" covered="0"/><du var="x" def="408" use="408" target="406" covered="0"/><du var="x" def="408" use="408" target="409" covered="0"/><du var="x" def="408" use="409" covered="0"/><du var="x" def="408" use="408" covered="0"/><du var="x" def="408" use="408" target="406" covered="0"/><du var="x" def="408" use="408" target="409" covered="0"/><du var="x" def="408" use="409" covered="0"/><du var="x" def="408" use="408" covered="0"/><du var="y" def="406" use="406" target="412" covered="0"/><du var="y" def="406" use="406" target="407" covered="0"/><du var="y" def="406" use="407" covered="0"/><du var="y" def="406" use="409" covered="0"/><du var="y" def="406" use="406" covered="0"/><counter type="DU" missed="23" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="embedPositionDetectionPattern" desc="(IILcom/google/zxing/qrcode/encoder/ByteMatrix;)V"><du var="xStart" def="415" use="418" covered="0"/><du var="yStart" def="415" use="418" covered="0"/><du var="matrix" def="415" use="418" covered="0"/><du var="POSITION_DETECTION_PATTERN" def="415" use="416" covered="0"/><du var="y" def="415" use="415" target="421" covered="0"/><du var="y" def="415" use="415" target="416" covered="0"/><du var="y" def="415" use="416" covered="0"/><du var="y" def="415" use="418" covered="0"/><du var="y" def="415" use="415" covered="0"/><du var="patternY" def="416" use="418" covered="0"/><du var="x" def="417" use="417" target="415" covered="0"/><du var="x" def="417" use="417" target="418" covered="0"/><du var="x" def="417" use="418" covered="0"/><du var="x" def="417" use="417" covered="0"/><du var="x" def="417" use="417" target="415" covered="0"/><du var="x" def="417" use="417" target="418" covered="0"/><du var="x" def="417" use="418" covered="0"/><du var="x" def="417" use="417" covered="0"/><du var="y" def="415" use="415" target="421" covered="0"/><du var="y" def="415" use="415" target="416" covered="0"/><du var="y" def="415" use="416" covered="0"/><du var="y" def="415" use="418" covered="0"/><du var="y" def="415" use="415" covered="0"/><counter type="DU" missed="23" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maybeEmbedPositionAdjustmentPatterns" desc="(Lcom/google/zxing/qrcode/decoder/Version;Lcom/google/zxing/qrcode/encoder/ByteMatrix;)V"><du var="version" def="457" use="457" target="458" covered="0"/><du var="version" def="457" use="457" target="460" covered="0"/><du var="version" def="457" use="460" covered="0"/><du var="matrix" def="457" use="465" target="469" covered="0"/><du var="matrix" def="457" use="465" target="464" covered="0"/><du var="matrix" def="457" use="469" covered="0"/><du var="POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE" def="457" use="461" covered="0"/><du var="coordinates" def="461" use="464" covered="0"/><du var="coordinates" def="461" use="464" covered="0"/><du var="y" def="462" use="463" target="464" covered="0"/><du var="y" def="462" use="463" target="462" covered="0"/><du var="y" def="462" use="465" target="469" covered="0"/><du var="y" def="462" use="465" target="464" covered="0"/><du var="y" def="462" use="469" covered="0"/><du var="x" def="464" use="465" target="465" covered="0"/><du var="x" def="464" use="465" target="464" covered="0"/><du var="x" def="464" use="465" target="469" covered="0"/><du var="x" def="464" use="465" target="464" covered="0"/><du var="x" def="464" use="469" covered="0"/><counter type="DU" missed="41" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="354" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/encoder/MaskUtil"><method name="applyMaskPenaltyRule2" desc="(Lcom/google/zxing/qrcode/encoder/ByteMatrix;)I"><du var="penalty" def="50" use="59" covered="0"/><du var="penalty" def="50" use="63" covered="0"/><du var="array" def="51" use="55" covered="0"/><du var="array" def="51" use="58" target="58" covered="0"/><du var="array" def="51" use="58" target="56" covered="0"/><du var="array" def="51" use="58" target="59" covered="0"/><du var="array" def="51" use="58" target="56" covered="0"/><du var="width" def="52" use="56" target="54" covered="0"/><du var="width" def="52" use="56" target="57" covered="0"/><du var="height" def="53" use="54" target="63" covered="0"/><du var="height" def="53" use="54" target="55" covered="0"/><du var="y" def="54" use="54" target="63" covered="0"/><du var="y" def="54" use="54" target="55" covered="0"/><du var="y" def="54" use="55" covered="0"/><du var="y" def="54" use="58" target="58" covered="0"/><du var="y" def="54" use="58" target="56" covered="0"/><du var="y" def="54" use="58" target="59" covered="0"/><du var="y" def="54" use="58" target="56" covered="0"/><du var="y" def="54" use="54" covered="0"/><du var="arrayY" def="55" use="57" covered="0"/><du var="arrayY" def="55" use="58" target="58" covered="0"/><du var="arrayY" def="55" use="58" target="56" covered="0"/><du var="x" def="56" use="56" target="54" covered="0"/><du var="x" def="56" use="56" target="57" covered="0"/><du var="x" def="56" use="57" covered="0"/><du var="x" def="56" use="58" target="58" covered="0"/><du var="x" def="56" use="58" target="56" covered="0"/><du var="x" def="56" use="56" covered="0"/><du var="x" def="56" use="58" target="58" covered="0"/><du var="x" def="56" use="58" target="56" covered="0"/><du var="x" def="56" use="58" target="59" covered="0"/><du var="x" def="56" use="58" target="56" covered="0"/><du var="value" def="57" use="58" target="58" covered="0"/><du var="value" def="57" use="58" target="56" covered="0"/><du var="value" def="57" use="58" target="58" covered="0"/><du var="value" def="57" use="58" target="56" covered="0"/><du var="value" def="57" use="58" target="59" covered="0"/><du var="value" def="57" use="58" target="56" covered="0"/><du var="penalty" def="59" use="59" covered="0"/><du var="penalty" def="59" use="63" covered="0"/><du var="x" def="56" use="56" target="54" covered="0"/><du var="x" def="56" use="56" target="57" covered="0"/><du var="x" def="56" use="57" covered="0"/><du var="x" def="56" use="58" target="58" covered="0"/><du var="x" def="56" use="58" target="56" covered="0"/><du var="x" def="56" use="56" covered="0"/><du var="x" def="56" use="58" target="58" covered="0"/><du var="x" def="56" use="58" target="56" covered="0"/><du var="x" def="56" use="58" target="59" covered="0"/><du var="x" def="56" use="58" target="56" covered="0"/><du var="y" def="54" use="54" target="63" covered="0"/><du var="y" def="54" use="54" target="55" covered="0"/><du var="y" def="54" use="55" covered="0"/><du var="y" def="54" use="58" target="58" covered="0"/><du var="y" def="54" use="58" target="56" covered="0"/><du var="y" def="54" use="58" target="59" covered="0"/><du var="y" def="54" use="58" target="56" covered="0"/><du var="y" def="54" use="54" covered="0"/><counter type="DU" missed="58" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyMaskPenaltyRule3" desc="(Lcom/google/zxing/qrcode/encoder/ByteMatrix;)I"><du var="numPenalties" def="72" use="99" covered="0"/><du var="numPenalties" def="72" use="88" covered="0"/><du var="numPenalties" def="72" use="103" covered="0"/><du var="array" def="73" use="78" covered="0"/><du var="array" def="73" use="91" target="92" covered="0"/><du var="array" def="73" use="91" target="77" covered="0"/><du var="array" def="73" use="92" target="93" covered="0"/><du var="array" def="73" use="92" target="77" covered="0"/><du var="array" def="73" use="93" target="94" covered="0"/><du var="array" def="73" use="93" target="77" covered="0"/><du var="array" def="73" use="94" target="95" covered="0"/><du var="array" def="73" use="94" target="77" covered="0"/><du var="array" def="73" use="95" target="96" covered="0"/><du var="array" def="73" use="95" target="77" covered="0"/><du var="array" def="73" use="96" target="97" covered="0"/><du var="array" def="73" use="96" target="77" covered="0"/><du var="array" def="73" use="97" target="98" covered="0"/><du var="array" def="73" use="97" target="77" covered="0"/><du var="array" def="73" use="98" target="98" covered="0"/><du var="array" def="73" use="98" target="99" covered="0"/><du var="array" def="73" use="98" target="99" covered="0"/><du var="array" def="73" use="98" target="77" covered="0"/><du var="width" def="74" use="77" target="76" covered="0"/><du var="width" def="74" use="77" target="78" covered="0"/><du var="width" def="74" use="79" target="80" covered="0"/><du var="width" def="74" use="79" target="90" covered="0"/><du var="height" def="75" use="76" target="103" covered="0"/><du var="height" def="75" use="76" target="77" covered="0"/><du var="height" def="75" use="90" target="91" covered="0"/><du var="height" def="75" use="90" target="77" covered="0"/><du var="y" def="76" use="76" target="103" covered="0"/><du var="y" def="76" use="76" target="77" covered="0"/><du var="y" def="76" use="78" covered="0"/><du var="y" def="76" use="90" target="91" covered="0"/><du var="y" def="76" use="90" target="77" covered="0"/><du var="y" def="76" use="91" target="92" covered="0"/><du var="y" def="76" use="91" target="77" covered="0"/><du var="y" def="76" use="92" target="93" covered="0"/><du var="y" def="76" use="92" target="77" covered="0"/><du var="y" def="76" use="93" target="94" covered="0"/><du var="y" def="76" use="93" target="77" covered="0"/><du var="y" def="76" use="94" target="95" covered="0"/><du var="y" def="76" use="94" target="77" covered="0"/><du var="y" def="76" use="95" target="96" covered="0"/><du var="y" def="76" use="95" target="77" covered="0"/><du var="y" def="76" use="96" target="97" covered="0"/><du var="y" def="76" use="96" target="77" covered="0"/><du var="y" def="76" use="97" target="98" covered="0"/><du var="y" def="76" use="97" target="77" covered="0"/><du var="y" def="76" use="98" target="98" covered="0"/><du var="y" def="76" use="98" target="99" covered="0"/><du var="y" def="76" use="98" target="99" covered="0"/><du var="y" def="76" use="98" target="77" covered="0"/><du var="y" def="76" use="76" covered="0"/><du var="x" def="77" use="77" target="76" covered="0"/><du var="x" def="77" use="77" target="78" covered="0"/><du var="x" def="77" use="79" target="80" covered="0"/><du var="x" def="77" use="79" target="90" covered="0"/><du var="x" def="77" use="77" covered="0"/><du var="x" def="77" use="91" target="92" covered="0"/><du var="x" def="77" use="91" target="77" covered="0"/><du var="x" def="77" use="92" target="93" covered="0"/><du var="x" def="77" use="92" target="77" covered="0"/><du var="x" def="77" use="93" target="94" covered="0"/><du var="x" def="77" use="93" target="77" covered="0"/><du var="x" def="77" use="94" target="95" covered="0"/><du var="x" def="77" use="94" target="77" covered="0"/><du var="x" def="77" use="95" target="96" covered="0"/><du var="x" def="77" use="95" target="77" covered="0"/><du var="x" def="77" use="96" target="97" covered="0"/><du var="x" def="77" use="96" target="77" covered="0"/><du var="x" def="77" use="97" target="98" covered="0"/><du var="x" def="77" use="97" target="77" covered="0"/><du var="x" def="77" use="98" target="98" covered="0"/><du var="x" def="77" use="98" target="99" covered="0"/><du var="x" def="77" use="98" target="99" covered="0"/><du var="x" def="77" use="98" target="77" covered="0"/><du var="x" def="77" use="80" target="81" covered="0"/><du var="x" def="77" use="80" target="90" covered="0"/><du var="x" def="77" use="81" target="82" covered="0"/><du var="x" def="77" use="81" target="90" covered="0"/><du var="x" def="77" use="82" target="83" covered="0"/><du var="x" def="77" use="82" target="90" covered="0"/><du var="x" def="77" use="83" target="84" covered="0"/><du var="x" def="77" use="83" target="90" covered="0"/><du var="x" def="77" use="84" target="85" covered="0"/><du var="x" def="77" use="84" target="90" covered="0"/><du var="x" def="77" use="85" target="86" covered="0"/><du var="x" def="77" use="85" target="90" covered="0"/><du var="x" def="77" use="86" target="87" covered="0"/><du var="x" def="77" use="86" target="90" covered="0"/><du var="x" def="77" use="87" target="87" covered="0"/><du var="x" def="77" use="87" target="88" covered="0"/><du var="x" def="77" use="87" target="88" covered="0"/><du var="x" def="77" use="87" target="90" covered="0"/><du var="arrayY" def="78" use="80" target="81" covered="0"/><du var="arrayY" def="78" use="80" target="90" covered="0"/><du var="arrayY" def="78" use="81" target="82" covered="0"/><du var="arrayY" def="78" use="81" target="90" covered="0"/><du var="arrayY" def="78" use="82" target="83" covered="0"/><du var="arrayY" def="78" use="82" target="90" covered="0"/><du var="arrayY" def="78" use="83" target="84" covered="0"/><du var="arrayY" def="78" use="83" target="90" covered="0"/><du var="arrayY" def="78" use="84" target="85" covered="0"/><du var="arrayY" def="78" use="84" target="90" covered="0"/><du var="arrayY" def="78" use="85" target="86" covered="0"/><du var="arrayY" def="78" use="85" target="90" covered="0"/><du var="arrayY" def="78" use="86" target="87" covered="0"/><du var="arrayY" def="78" use="86" target="90" covered="0"/><du var="arrayY" def="78" use="87" target="87" covered="0"/><du var="arrayY" def="78" use="87" target="88" covered="0"/><du var="arrayY" def="78" use="87" target="88" covered="0"/><du var="arrayY" def="78" use="87" target="90" covered="0"/><du var="numPenalties" def="88" use="88" covered="0"/><du var="numPenalties" def="88" use="103" covered="0"/><du var="numPenalties" def="88" use="99" covered="0"/><du var="numPenalties" def="99" use="99" covered="0"/><du var="numPenalties" def="99" use="88" covered="0"/><du var="numPenalties" def="99" use="103" covered="0"/><du var="x" def="77" use="77" target="76" covered="0"/><du var="x" def="77" use="77" target="78" covered="0"/><du var="x" def="77" use="79" target="80" covered="0"/><du var="x" def="77" use="79" target="90" covered="0"/><du var="x" def="77" use="77" covered="0"/><du var="x" def="77" use="91" target="92" covered="0"/><du var="x" def="77" use="91" target="77" covered="0"/><du var="x" def="77" use="92" target="93" covered="0"/><du var="x" def="77" use="92" target="77" covered="0"/><du var="x" def="77" use="93" target="94" covered="0"/><du var="x" def="77" use="93" target="77" covered="0"/><du var="x" def="77" use="94" target="95" covered="0"/><du var="x" def="77" use="94" target="77" covered="0"/><du var="x" def="77" use="95" target="96" covered="0"/><du var="x" def="77" use="95" target="77" covered="0"/><du var="x" def="77" use="96" target="97" covered="0"/><du var="x" def="77" use="96" target="77" covered="0"/><du var="x" def="77" use="97" target="98" covered="0"/><du var="x" def="77" use="97" target="77" covered="0"/><du var="x" def="77" use="98" target="98" covered="0"/><du var="x" def="77" use="98" target="99" covered="0"/><du var="x" def="77" use="98" target="99" covered="0"/><du var="x" def="77" use="98" target="77" covered="0"/><du var="x" def="77" use="80" target="81" covered="0"/><du var="x" def="77" use="80" target="90" covered="0"/><du var="x" def="77" use="81" target="82" covered="0"/><du var="x" def="77" use="81" target="90" covered="0"/><du var="x" def="77" use="82" target="83" covered="0"/><du var="x" def="77" use="82" target="90" covered="0"/><du var="x" def="77" use="83" target="84" covered="0"/><du var="x" def="77" use="83" target="90" covered="0"/><du var="x" def="77" use="84" target="85" covered="0"/><du var="x" def="77" use="84" target="90" covered="0"/><du var="x" def="77" use="85" target="86" covered="0"/><du var="x" def="77" use="85" target="90" covered="0"/><du var="x" def="77" use="86" target="87" covered="0"/><du var="x" def="77" use="86" target="90" covered="0"/><du var="x" def="77" use="87" target="87" covered="0"/><du var="x" def="77" use="87" target="88" covered="0"/><du var="x" def="77" use="87" target="88" covered="0"/><du var="x" def="77" use="87" target="90" covered="0"/><du var="y" def="76" use="76" target="103" covered="0"/><du var="y" def="76" use="76" target="77" covered="0"/><du var="y" def="76" use="78" covered="0"/><du var="y" def="76" use="90" target="91" covered="0"/><du var="y" def="76" use="90" target="77" covered="0"/><du var="y" def="76" use="91" target="92" covered="0"/><du var="y" def="76" use="91" target="77" covered="0"/><du var="y" def="76" use="92" target="93" covered="0"/><du var="y" def="76" use="92" target="77" covered="0"/><du var="y" def="76" use="93" target="94" covered="0"/><du var="y" def="76" use="93" target="77" covered="0"/><du var="y" def="76" use="94" target="95" covered="0"/><du var="y" def="76" use="94" target="77" covered="0"/><du var="y" def="76" use="95" target="96" covered="0"/><du var="y" def="76" use="95" target="77" covered="0"/><du var="y" def="76" use="96" target="97" covered="0"/><du var="y" def="76" use="96" target="77" covered="0"/><du var="y" def="76" use="97" target="98" covered="0"/><du var="y" def="76" use="97" target="77" covered="0"/><du var="y" def="76" use="98" target="98" covered="0"/><du var="y" def="76" use="98" target="99" covered="0"/><du var="y" def="76" use="98" target="99" covered="0"/><du var="y" def="76" use="98" target="77" covered="0"/><du var="y" def="76" use="76" covered="0"/><counter type="DU" missed="184" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWhiteHorizontal" desc="([BII)Z"><du var="rowArray" def="107" use="110" target="111" covered="0"/><du var="rowArray" def="107" use="110" target="109" covered="0"/><du var="to" def="108" use="109" target="114" covered="0"/><du var="to" def="108" use="109" target="110" covered="0"/><du var="i" def="109" use="109" target="114" covered="0"/><du var="i" def="109" use="109" target="110" covered="0"/><du var="i" def="109" use="110" target="111" covered="0"/><du var="i" def="109" use="110" target="109" covered="0"/><du var="i" def="109" use="109" covered="0"/><du var="i" def="109" use="109" target="114" covered="0"/><du var="i" def="109" use="109" target="110" covered="0"/><du var="i" def="109" use="110" target="111" covered="0"/><du var="i" def="109" use="110" target="109" covered="0"/><du var="i" def="109" use="109" covered="0"/><counter type="DU" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWhiteVertical" desc="([[BIII)Z"><du var="array" def="118" use="121" target="122" covered="0"/><du var="array" def="118" use="121" target="120" covered="0"/><du var="col" def="118" use="121" target="122" covered="0"/><du var="col" def="118" use="121" target="120" covered="0"/><du var="to" def="119" use="120" target="125" covered="0"/><du var="to" def="119" use="120" target="121" covered="0"/><du var="i" def="120" use="120" target="125" covered="0"/><du var="i" def="120" use="120" target="121" covered="0"/><du var="i" def="120" use="121" target="122" covered="0"/><du var="i" def="120" use="121" target="120" covered="0"/><du var="i" def="120" use="120" covered="0"/><du var="i" def="120" use="120" target="125" covered="0"/><du var="i" def="120" use="120" target="121" covered="0"/><du var="i" def="120" use="121" target="122" covered="0"/><du var="i" def="120" use="121" target="120" covered="0"/><du var="i" def="120" use="120" covered="0"/><counter type="DU" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyMaskPenaltyRule4" desc="(Lcom/google/zxing/qrcode/encoder/ByteMatrix;)I"><du var="matrix" def="133" use="145" covered="0"/><du var="numDarkCells" def="133" use="141" covered="0"/><du var="numDarkCells" def="133" use="146" covered="0"/><du var="array" def="134" use="138" covered="0"/><du var="width" def="135" use="139" target="137" covered="0"/><du var="width" def="135" use="139" target="140" covered="0"/><du var="height" def="136" use="137" target="145" covered="0"/><du var="height" def="136" use="137" target="138" covered="0"/><du var="y" def="137" use="137" target="145" covered="0"/><du var="y" def="137" use="137" target="138" covered="0"/><du var="y" def="137" use="138" covered="0"/><du var="y" def="137" use="137" covered="0"/><du var="arrayY" def="138" use="140" target="141" covered="0"/><du var="arrayY" def="138" use="140" target="139" covered="0"/><du var="x" def="139" use="139" target="137" covered="0"/><du var="x" def="139" use="139" target="140" covered="0"/><du var="x" def="139" use="140" target="141" covered="0"/><du var="x" def="139" use="140" target="139" covered="0"/><du var="x" def="139" use="139" covered="0"/><du var="numDarkCells" def="141" use="141" covered="0"/><du var="numDarkCells" def="141" use="146" covered="0"/><du var="x" def="139" use="139" target="137" covered="0"/><du var="x" def="139" use="139" target="140" covered="0"/><du var="x" def="139" use="140" target="141" covered="0"/><du var="x" def="139" use="140" target="139" covered="0"/><du var="x" def="139" use="139" covered="0"/><du var="y" def="137" use="137" target="145" covered="0"/><du var="y" def="137" use="137" target="138" covered="0"/><du var="y" def="137" use="138" covered="0"/><du var="y" def="137" use="137" covered="0"/><counter type="DU" missed="30" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDataMaskBit" desc="(III)Z"><du var="maskPattern" def="157" use="157" target="186" covered="0"/><du var="maskPattern" def="157" use="157" target="159" covered="0"/><du var="maskPattern" def="157" use="157" target="162" covered="0"/><du var="maskPattern" def="157" use="157" target="165" covered="0"/><du var="maskPattern" def="157" use="157" target="168" covered="0"/><du var="maskPattern" def="157" use="157" target="171" covered="0"/><du var="maskPattern" def="157" use="157" target="174" covered="0"/><du var="maskPattern" def="157" use="157" target="178" covered="0"/><du var="maskPattern" def="157" use="157" target="182" covered="0"/><du var="maskPattern" def="157" use="186" covered="0"/><du var="x" def="157" use="182" covered="0"/><du var="x" def="157" use="183" covered="0"/><du var="x" def="157" use="178" covered="0"/><du var="x" def="157" use="174" covered="0"/><du var="x" def="157" use="171" covered="0"/><du var="x" def="157" use="168" covered="0"/><du var="x" def="157" use="165" covered="0"/><du var="x" def="157" use="159" covered="0"/><du var="y" def="157" use="182" covered="0"/><du var="y" def="157" use="183" covered="0"/><du var="y" def="157" use="178" covered="0"/><du var="y" def="157" use="174" covered="0"/><du var="y" def="157" use="171" covered="0"/><du var="y" def="157" use="168" covered="0"/><du var="y" def="157" use="162" covered="0"/><du var="y" def="157" use="159" covered="0"/><du var="intermediate" def="159" use="188" target="188" covered="0"/><du var="intermediate" def="159" use="188" target="188" covered="0"/><du var="intermediate" def="162" use="188" target="188" covered="0"/><du var="intermediate" def="162" use="188" target="188" covered="0"/><du var="intermediate" def="165" use="188" target="188" covered="0"/><du var="intermediate" def="165" use="188" target="188" covered="0"/><du var="intermediate" def="168" use="188" target="188" covered="0"/><du var="intermediate" def="168" use="188" target="188" covered="0"/><du var="intermediate" def="171" use="188" target="188" covered="0"/><du var="intermediate" def="171" use="188" target="188" covered="0"/><du var="intermediate" def="175" use="188" target="188" covered="0"/><du var="intermediate" def="175" use="188" target="188" covered="0"/><du var="intermediate" def="179" use="188" target="188" covered="0"/><du var="intermediate" def="179" use="188" target="188" covered="0"/><du var="intermediate" def="183" use="188" target="188" covered="0"/><du var="intermediate" def="183" use="188" target="188" covered="0"/><counter type="DU" missed="42" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyMaskPenaltyRule1Internal" desc="(Lcom/google/zxing/qrcode/encoder/ByteMatrix;Z)I"><du var="matrix" def="196" use="197" covered="0"/><du var="matrix" def="196" use="198" covered="0"/><du var="matrix" def="196" use="199" covered="0"/><du var="isHorizontal" def="196" use="197" target="197" covered="0"/><du var="isHorizontal" def="196" use="197" target="197" covered="0"/><du var="isHorizontal" def="196" use="198" target="198" covered="0"/><du var="isHorizontal" def="196" use="198" target="198" covered="0"/><du var="isHorizontal" def="196" use="204" target="204" covered="0"/><du var="isHorizontal" def="196" use="204" target="204" covered="0"/><du var="penalty" def="196" use="209" covered="0"/><du var="penalty" def="196" use="216" covered="0"/><du var="penalty" def="196" use="219" covered="0"/><du var="iLimit" def="197" use="200" target="219" covered="0"/><du var="iLimit" def="197" use="200" target="201" covered="0"/><du var="jLimit" def="198" use="203" target="215" covered="0"/><du var="jLimit" def="198" use="203" target="204" covered="0"/><du var="array" def="199" use="204" covered="0"/><du var="i" def="200" use="200" target="219" covered="0"/><du var="i" def="200" use="200" target="201" covered="0"/><du var="i" def="200" use="204" covered="0"/><du var="i" def="200" use="200" covered="0"/><du var="numSameBitCells" def="201" use="208" target="209" covered="0"/><du var="numSameBitCells" def="201" use="208" target="211" covered="0"/><du var="numSameBitCells" def="201" use="209" covered="0"/><du var="numSameBitCells" def="201" use="206" covered="0"/><du var="numSameBitCells" def="201" use="215" target="216" covered="0"/><du var="numSameBitCells" def="201" use="215" target="200" covered="0"/><du var="numSameBitCells" def="201" use="216" covered="0"/><du var="prevBit" def="202" use="205" target="206" covered="0"/><du var="prevBit" def="202" use="205" target="208" covered="0"/><du var="j" def="203" use="203" target="215" covered="0"/><du var="j" def="203" use="203" target="204" covered="0"/><du var="j" def="203" use="204" covered="0"/><du var="j" def="203" use="203" covered="0"/><du var="bit" def="204" use="205" target="206" covered="0"/><du var="bit" def="204" use="205" target="208" covered="0"/><du var="bit" def="204" use="212" covered="0"/><du var="numSameBitCells" def="206" use="208" target="209" covered="0"/><du var="numSameBitCells" def="206" use="208" target="211" covered="0"/><du var="numSameBitCells" def="206" use="209" covered="0"/><du var="numSameBitCells" def="206" use="206" covered="0"/><du var="numSameBitCells" def="206" use="215" target="216" covered="0"/><du var="numSameBitCells" def="206" use="215" target="200" covered="0"/><du var="numSameBitCells" def="206" use="216" covered="0"/><du var="penalty" def="209" use="209" covered="0"/><du var="penalty" def="209" use="219" covered="0"/><du var="penalty" def="209" use="216" covered="0"/><du var="numSameBitCells" def="211" use="208" target="209" covered="0"/><du var="numSameBitCells" def="211" use="208" target="211" covered="0"/><du var="numSameBitCells" def="211" use="209" covered="0"/><du var="numSameBitCells" def="211" use="206" covered="0"/><du var="numSameBitCells" def="211" use="215" target="216" covered="0"/><du var="numSameBitCells" def="211" use="215" target="200" covered="0"/><du var="numSameBitCells" def="211" use="216" covered="0"/><du var="prevBit" def="212" use="205" target="206" covered="0"/><du var="prevBit" def="212" use="205" target="208" covered="0"/><du var="j" def="203" use="203" target="215" covered="0"/><du var="j" def="203" use="203" target="204" covered="0"/><du var="j" def="203" use="204" covered="0"/><du var="j" def="203" use="203" covered="0"/><du var="penalty" def="216" use="209" covered="0"/><du var="penalty" def="216" use="216" covered="0"/><du var="penalty" def="216" use="219" covered="0"/><du var="i" def="200" use="200" target="219" covered="0"/><du var="i" def="200" use="200" target="201" covered="0"/><du var="i" def="200" use="204" covered="0"/><du var="i" def="200" use="200" covered="0"/><counter type="DU" missed="67" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="411" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/encoder/Encoder"><method name="encode" desc="(Ljava/lang/String;Lcom/google/zxing/qrcode/decoder/ErrorCorrectionLevel;Ljava/util/Map;)Lcom/google/zxing/qrcode/encoder/QRCode;"><du var="content" def="80" use="88" covered="0"/><du var="content" def="80" use="108" covered="0"/><du var="content" def="80" use="125" covered="0"/><du var="ecLevel" def="80" use="119" covered="0"/><du var="ecLevel" def="80" use="130" covered="0"/><du var="ecLevel" def="80" use="144" covered="0"/><du var="ecLevel" def="80" use="151" covered="0"/><du var="ecLevel" def="80" use="155" covered="0"/><du var="ecLevel" def="80" use="115" target="116" covered="0"/><du var="ecLevel" def="80" use="115" target="122" covered="0"/><du var="hints" def="80" use="81" target="81" covered="0"/><du var="hints" def="80" use="81" target="81" covered="0"/><du var="hints" def="80" use="111" target="111" covered="0"/><du var="hints" def="80" use="111" target="119" covered="0"/><du var="hints" def="80" use="111" target="112" covered="0"/><du var="hints" def="80" use="111" target="119" covered="0"/><du var="hints" def="80" use="112" covered="0"/><du var="hints" def="80" use="83" covered="0"/><du var="hints" def="80" use="81" target="81" covered="0"/><du var="hints" def="80" use="81" target="81" covered="0"/><du var="CHARACTER_SET" def="80" use="83" covered="0"/><du var="CHARACTER_SET" def="80" use="81" target="81" covered="0"/><du var="CHARACTER_SET" def="80" use="81" target="81" covered="0"/><du var="BYTE" def="80" use="95" target="95" covered="0"/><du var="BYTE" def="80" use="95" target="103" covered="0"/><du var="BYTE" def="80" use="125" target="125" covered="0"/><du var="BYTE" def="80" use="125" target="125" covered="0"/><du var="QR_VERSION" def="80" use="111" target="112" covered="0"/><du var="QR_VERSION" def="80" use="111" target="119" covered="0"/><du var="QR_VERSION" def="80" use="112" covered="0"/><du var="encoding" def="80" use="88" covered="0"/><du var="encoding" def="80" use="108" covered="0"/><du var="encoding" def="80" use="96" covered="0"/><du var="encoding" def="80" use="95" target="96" covered="0"/><du var="encoding" def="80" use="95" target="103" covered="0"/><du var="hasEncodingHint" def="81" use="82" target="83" covered="0"/><du var="hasEncodingHint" def="81" use="82" target="88" covered="0"/><du var="hasEncodingHint" def="81" use="95" target="95" covered="0"/><du var="hasEncodingHint" def="81" use="95" target="96" covered="0"/><du var="encoding" def="83" use="88" covered="0"/><du var="encoding" def="83" use="108" covered="0"/><du var="encoding" def="83" use="96" covered="0"/><du var="encoding" def="83" use="95" target="96" covered="0"/><du var="encoding" def="83" use="95" target="103" covered="0"/><du var="mode" def="88" use="95" target="95" covered="0"/><du var="mode" def="88" use="95" target="103" covered="0"/><du var="mode" def="88" use="103" covered="0"/><du var="mode" def="88" use="108" covered="0"/><du var="mode" def="88" use="119" covered="0"/><du var="mode" def="88" use="125" target="125" covered="0"/><du var="mode" def="88" use="125" target="125" covered="0"/><du var="mode" def="88" use="126" covered="0"/><du var="mode" def="88" use="145" covered="0"/><du var="mode" def="88" use="114" covered="0"/><du var="headerBits" def="92" use="103" covered="0"/><du var="headerBits" def="92" use="119" covered="0"/><du var="headerBits" def="92" use="123" covered="0"/><du var="headerBits" def="92" use="114" covered="0"/><du var="headerBits" def="92" use="98" covered="0"/><du var="eci" def="96" use="97" target="98" covered="0"/><du var="eci" def="96" use="97" target="103" covered="0"/><du var="eci" def="96" use="98" covered="0"/><du var="dataBits" def="107" use="119" covered="0"/><du var="dataBits" def="107" use="125" covered="0"/><du var="dataBits" def="107" use="128" covered="0"/><du var="dataBits" def="107" use="114" covered="0"/><du var="version" def="113" use="115" target="116" covered="0"/><du var="version" def="113" use="115" target="122" covered="0"/><du var="version" def="113" use="126" covered="0"/><du var="version" def="113" use="130" covered="0"/><du var="version" def="113" use="131" covered="0"/><du var="version" def="113" use="137" covered="0"/><du var="version" def="113" use="146" covered="0"/><du var="version" def="113" use="149" covered="0"/><du var="version" def="113" use="151" covered="0"/><du var="version" def="113" use="155" covered="0"/><du var="bitsNeeded" def="114" use="115" target="116" covered="0"/><du var="bitsNeeded" def="114" use="115" target="122" covered="0"/><du var="version" def="119" use="126" covered="0"/><du var="version" def="119" use="130" covered="0"/><du var="version" def="119" use="131" covered="0"/><du var="version" def="119" use="137" covered="0"/><du var="version" def="119" use="146" covered="0"/><du var="version" def="119" use="149" covered="0"/><du var="version" def="119" use="151" covered="0"/><du var="version" def="119" use="155" covered="0"/><du var="headerAndDataBits" def="122" use="126" covered="0"/><du var="headerAndDataBits" def="122" use="128" covered="0"/><du var="headerAndDataBits" def="122" use="134" covered="0"/><du var="headerAndDataBits" def="122" use="137" covered="0"/><counter type="DU" missed="90" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAlphanumericCode" desc="(I)I"><du var="code" def="193" use="193" target="194" covered="0"/><du var="code" def="193" use="193" target="196" covered="0"/><du var="code" def="193" use="194" covered="0"/><du var="ALPHANUMERIC_TABLE" def="193" use="193" target="194" covered="0"/><du var="ALPHANUMERIC_TABLE" def="193" use="193" target="196" covered="0"/><du var="ALPHANUMERIC_TABLE" def="193" use="194" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="chooseMode" desc="(Ljava/lang/String;Ljava/lang/String;)Lcom/google/zxing/qrcode/decoder/Mode;"><du var="content" def="208" use="214" target="224" covered="0"/><du var="content" def="208" use="214" target="215" covered="0"/><du var="content" def="208" use="215" covered="0"/><du var="content" def="208" use="208" target="210" covered="0"/><du var="content" def="208" use="208" target="212" covered="0"/><du var="encoding" def="208" use="208" target="208" covered="0"/><du var="encoding" def="208" use="208" target="212" covered="0"/><du var="KANJI" def="208" use="210" covered="0"/><du var="BYTE" def="208" use="221" covered="0"/><du var="BYTE" def="208" use="230" covered="0"/><du var="ALPHANUMERIC" def="208" use="225" covered="0"/><du var="NUMERIC" def="208" use="228" covered="0"/><du var="hasNumeric" def="212" use="227" target="228" covered="0"/><du var="hasNumeric" def="212" use="227" target="230" covered="0"/><du var="hasAlphanumeric" def="213" use="224" target="225" covered="0"/><du var="hasAlphanumeric" def="213" use="224" target="227" covered="0"/><du var="i" def="214" use="214" target="224" covered="0"/><du var="i" def="214" use="214" target="215" covered="0"/><du var="i" def="214" use="215" covered="0"/><du var="i" def="214" use="214" covered="0"/><du var="c" def="215" use="216" target="216" covered="0"/><du var="c" def="215" use="216" target="218" covered="0"/><du var="c" def="215" use="218" target="219" covered="0"/><du var="c" def="215" use="218" target="221" covered="0"/><du var="c" def="215" use="216" target="217" covered="0"/><du var="c" def="215" use="216" target="218" covered="0"/><du var="hasNumeric" def="217" use="227" target="228" covered="0"/><du var="hasNumeric" def="217" use="227" target="230" covered="0"/><du var="hasAlphanumeric" def="219" use="224" target="225" covered="0"/><du var="hasAlphanumeric" def="219" use="224" target="227" covered="0"/><du var="i" def="214" use="214" target="224" covered="0"/><du var="i" def="214" use="214" target="215" covered="0"/><du var="i" def="214" use="215" covered="0"/><du var="i" def="214" use="214" covered="0"/><counter type="DU" missed="34" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isOnlyDoubleByteKanji" desc="(Ljava/lang/String;)Z"><du var="bytes" def="236" use="245" covered="0"/><du var="length" def="240" use="241" target="242" covered="0"/><du var="length" def="240" use="241" target="244" covered="0"/><du var="length" def="240" use="244" target="250" covered="0"/><du var="length" def="240" use="244" target="245" covered="0"/><du var="i" def="244" use="244" target="250" covered="0"/><du var="i" def="244" use="244" target="245" covered="0"/><du var="i" def="244" use="245" covered="0"/><du var="i" def="244" use="244" covered="0"/><du var="byte1" def="245" use="246" target="246" covered="0"/><du var="byte1" def="245" use="246" target="246" covered="0"/><du var="byte1" def="245" use="246" target="246" covered="0"/><du var="byte1" def="245" use="246" target="247" covered="0"/><du var="byte1" def="245" use="246" target="247" covered="0"/><du var="byte1" def="245" use="246" target="244" covered="0"/><du var="byte1" def="245" use="246" target="246" covered="0"/><du var="byte1" def="245" use="246" target="244" covered="0"/><du var="i" def="244" use="244" target="250" covered="0"/><du var="i" def="244" use="244" target="245" covered="0"/><du var="i" def="244" use="245" covered="0"/><du var="i" def="244" use="244" covered="0"/><counter type="DU" missed="21" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="chooseMaskPattern" desc="(Lcom/google/zxing/common/BitArray;Lcom/google/zxing/qrcode/decoder/ErrorCorrectionLevel;Lcom/google/zxing/qrcode/decoder/Version;Lcom/google/zxing/qrcode/encoder/ByteMatrix;)I"><du var="bits" def="258" use="262" covered="0"/><du var="ecLevel" def="258" use="262" covered="0"/><du var="version" def="258" use="262" covered="0"/><du var="matrix" def="258" use="262" covered="0"/><du var="matrix" def="258" use="263" covered="0"/><du var="minPenalty" def="258" use="264" target="265" covered="0"/><du var="minPenalty" def="258" use="264" target="261" covered="0"/><du var="bestMaskPattern" def="259" use="269" covered="0"/><du var="maskPattern" def="261" use="261" target="269" covered="0"/><du var="maskPattern" def="261" use="261" target="262" covered="0"/><du var="maskPattern" def="261" use="262" covered="0"/><du var="maskPattern" def="261" use="261" covered="0"/><du var="maskPattern" def="261" use="266" covered="0"/><du var="penalty" def="263" use="264" target="265" covered="0"/><du var="penalty" def="263" use="264" target="261" covered="0"/><du var="penalty" def="263" use="265" covered="0"/><du var="minPenalty" def="265" use="264" target="265" covered="0"/><du var="minPenalty" def="265" use="264" target="261" covered="0"/><du var="bestMaskPattern" def="266" use="269" covered="0"/><du var="maskPattern" def="261" use="261" target="269" covered="0"/><du var="maskPattern" def="261" use="261" target="262" covered="0"/><du var="maskPattern" def="261" use="262" covered="0"/><du var="maskPattern" def="261" use="261" covered="0"/><du var="maskPattern" def="261" use="266" covered="0"/><counter type="DU" missed="24" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="chooseVersion" desc="(ILcom/google/zxing/qrcode/decoder/ErrorCorrectionLevel;)Lcom/google/zxing/qrcode/decoder/Version;"><du var="numInputBits" def="273" use="275" target="276" covered="0"/><du var="numInputBits" def="273" use="275" target="273" covered="0"/><du var="ecLevel" def="273" use="275" target="276" covered="0"/><du var="ecLevel" def="273" use="275" target="273" covered="0"/><du var="versionNum" def="273" use="273" target="279" covered="0"/><du var="versionNum" def="273" use="273" target="274" covered="0"/><du var="versionNum" def="273" use="274" covered="0"/><du var="versionNum" def="273" use="273" covered="0"/><du var="version" def="274" use="275" target="276" covered="0"/><du var="version" def="274" use="275" target="273" covered="0"/><du var="version" def="274" use="276" covered="0"/><du var="versionNum" def="273" use="273" target="279" covered="0"/><du var="versionNum" def="273" use="273" target="274" covered="0"/><du var="versionNum" def="273" use="274" covered="0"/><du var="versionNum" def="273" use="273" covered="0"/><counter type="DU" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="willFit" desc="(ILcom/google/zxing/qrcode/decoder/Version;Lcom/google/zxing/qrcode/decoder/ErrorCorrectionLevel;)Z"><du var="numDataBytes" def="294" use="296" target="296" covered="0"/><du var="numDataBytes" def="294" use="296" target="296" covered="0"/><du var="totalInputBytes" def="295" use="296" target="296" covered="0"/><du var="totalInputBytes" def="295" use="296" target="296" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="terminateBits" desc="(ILcom/google/zxing/common/BitArray;)V"><du var="numDataBytes" def="303" use="320" covered="0"/><du var="bits" def="303" use="304" target="305" covered="0"/><du var="bits" def="303" use="304" target="308" covered="0"/><du var="bits" def="303" use="313" covered="0"/><du var="bits" def="303" use="320" covered="0"/><du var="bits" def="303" use="322" covered="0"/><du var="bits" def="303" use="324" target="325" covered="0"/><du var="bits" def="303" use="324" target="327" covered="0"/><du var="bits" def="303" use="316" covered="0"/><du var="bits" def="303" use="308" target="313" covered="0"/><du var="bits" def="303" use="308" target="309" covered="0"/><du var="bits" def="303" use="309" covered="0"/><du var="bits" def="303" use="305" covered="0"/><du var="capacity" def="303" use="304" target="305" covered="0"/><du var="capacity" def="303" use="304" target="308" covered="0"/><du var="capacity" def="303" use="324" target="325" covered="0"/><du var="capacity" def="303" use="324" target="327" covered="0"/><du var="capacity" def="303" use="308" target="313" covered="0"/><du var="capacity" def="303" use="308" target="309" covered="0"/><du var="capacity" def="303" use="305" covered="0"/><du var="i" def="308" use="308" target="308" covered="0"/><du var="i" def="308" use="308" target="313" covered="0"/><du var="i" def="308" use="308" covered="0"/><du var="i" def="308" use="308" target="308" covered="0"/><du var="i" def="308" use="308" target="313" covered="0"/><du var="i" def="308" use="308" covered="0"/><du var="numBitsInLastByte" def="313" use="314" target="315" covered="0"/><du var="numBitsInLastByte" def="313" use="314" target="320" covered="0"/><du var="numBitsInLastByte" def="313" use="315" covered="0"/><du var="i" def="315" use="315" target="320" covered="0"/><du var="i" def="315" use="315" target="316" covered="0"/><du var="i" def="315" use="315" covered="0"/><du var="i" def="315" use="315" target="320" covered="0"/><du var="i" def="315" use="315" target="316" covered="0"/><du var="i" def="315" use="315" covered="0"/><du var="numPaddingBytes" def="320" use="321" target="324" covered="0"/><du var="numPaddingBytes" def="320" use="321" target="322" covered="0"/><du var="i" def="321" use="321" target="324" covered="0"/><du var="i" def="321" use="321" target="322" covered="0"/><du var="i" def="321" use="322" target="322" covered="0"/><du var="i" def="321" use="322" target="322" covered="0"/><du var="i" def="321" use="321" covered="0"/><du var="i" def="321" use="321" target="324" covered="0"/><du var="i" def="321" use="321" target="322" covered="0"/><du var="i" def="321" use="322" target="322" covered="0"/><du var="i" def="321" use="322" target="322" covered="0"/><du var="i" def="321" use="321" covered="0"/><counter type="DU" missed="47" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumDataBytesAndNumECBytesForBlockID" desc="(IIII[I[I)V"><du var="numTotalBytes" def="340" use="344" covered="0"/><du var="numTotalBytes" def="340" use="348" covered="0"/><du var="numTotalBytes" def="340" use="369" target="374" covered="0"/><du var="numTotalBytes" def="340" use="369" target="377" covered="0"/><du var="numDataBytes" def="340" use="352" covered="0"/><du var="numRSBlocks" def="340" use="340" target="341" covered="0"/><du var="numRSBlocks" def="340" use="340" target="344" covered="0"/><du var="numRSBlocks" def="340" use="344" covered="0"/><du var="numRSBlocks" def="340" use="346" covered="0"/><du var="numRSBlocks" def="340" use="348" covered="0"/><du var="numRSBlocks" def="340" use="352" covered="0"/><du var="numRSBlocks" def="340" use="365" target="366" covered="0"/><du var="numRSBlocks" def="340" use="365" target="369" covered="0"/><du var="blockID" def="340" use="340" target="341" covered="0"/><du var="blockID" def="340" use="340" target="344" covered="0"/><du var="blockID" def="340" use="377" target="378" covered="0"/><du var="blockID" def="340" use="377" target="381" covered="0"/><du var="numDataBytesInBlock" def="340" use="381" covered="0"/><du var="numDataBytesInBlock" def="340" use="378" covered="0"/><du var="numECBytesInBlock" def="340" use="382" covered="0"/><du var="numECBytesInBlock" def="340" use="379" covered="0"/><du var="numRsBlocksInGroup2" def="344" use="365" target="366" covered="0"/><du var="numRsBlocksInGroup2" def="344" use="365" target="369" covered="0"/><du var="numRsBlocksInGroup2" def="344" use="369" target="374" covered="0"/><du var="numRsBlocksInGroup2" def="344" use="369" target="377" covered="0"/><du var="numRsBlocksInGroup1" def="346" use="365" target="366" covered="0"/><du var="numRsBlocksInGroup1" def="346" use="365" target="369" covered="0"/><du var="numRsBlocksInGroup1" def="346" use="369" target="374" covered="0"/><du var="numRsBlocksInGroup1" def="346" use="369" target="377" covered="0"/><du var="numRsBlocksInGroup1" def="346" use="377" target="378" covered="0"/><du var="numRsBlocksInGroup1" def="346" use="377" target="381" covered="0"/><du var="numDataBytesInGroup1" def="352" use="369" target="374" covered="0"/><du var="numDataBytesInGroup1" def="352" use="369" target="377" covered="0"/><du var="numDataBytesInGroup1" def="352" use="378" covered="0"/><du var="numDataBytesInGroup2" def="354" use="369" target="374" covered="0"/><du var="numDataBytesInGroup2" def="354" use="369" target="377" covered="0"/><du var="numDataBytesInGroup2" def="354" use="381" covered="0"/><du var="numEcBytesInGroup1" def="356" use="361" target="362" covered="0"/><du var="numEcBytesInGroup1" def="356" use="361" target="365" covered="0"/><du var="numEcBytesInGroup1" def="356" use="369" target="374" covered="0"/><du var="numEcBytesInGroup1" def="356" use="369" target="377" covered="0"/><du var="numEcBytesInGroup1" def="356" use="379" covered="0"/><du var="numEcBytesInGroup2" def="358" use="361" target="362" covered="0"/><du var="numEcBytesInGroup2" def="358" use="361" target="365" covered="0"/><du var="numEcBytesInGroup2" def="358" use="369" target="374" covered="0"/><du var="numEcBytesInGroup2" def="358" use="369" target="377" covered="0"/><du var="numEcBytesInGroup2" def="358" use="382" covered="0"/><counter type="DU" missed="47" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="interleaveWithECBytes" desc="(Lcom/google/zxing/common/BitArray;III)Lcom/google/zxing/common/BitArray;"><du var="bits" def="396" use="396" target="397" covered="0"/><du var="bits" def="396" use="396" target="402" covered="0"/><du var="bits" def="396" use="418" covered="0"/><du var="numTotalBytes" def="396" use="412" covered="0"/><du var="numTotalBytes" def="396" use="450" target="451" covered="0"/><du var="numTotalBytes" def="396" use="450" target="455" covered="0"/><du var="numTotalBytes" def="396" use="451" covered="0"/><du var="numDataBytes" def="396" use="396" target="397" covered="0"/><du var="numDataBytes" def="396" use="396" target="402" covered="0"/><du var="numDataBytes" def="396" use="412" covered="0"/><du var="numDataBytes" def="396" use="426" target="427" covered="0"/><du var="numDataBytes" def="396" use="426" target="430" covered="0"/><du var="numRSBlocks" def="396" use="407" covered="0"/><du var="numRSBlocks" def="396" use="409" target="426" covered="0"/><du var="numRSBlocks" def="396" use="409" target="410" covered="0"/><du var="numRSBlocks" def="396" use="412" covered="0"/><du var="dataBytesOffset" def="402" use="418" covered="0"/><du var="dataBytesOffset" def="402" use="424" covered="0"/><du var="dataBytesOffset" def="402" use="426" target="427" covered="0"/><du var="dataBytesOffset" def="402" use="426" target="430" covered="0"/><du var="maxNumDataBytes" def="403" use="422" covered="0"/><du var="maxNumDataBytes" def="403" use="433" target="442" covered="0"/><du var="maxNumDataBytes" def="403" use="433" target="434" covered="0"/><du var="maxNumEcBytes" def="404" use="423" covered="0"/><du var="maxNumEcBytes" def="404" use="442" target="450" covered="0"/><du var="maxNumEcBytes" def="404" use="442" target="443" covered="0"/><du var="blocks" def="407" use="420" covered="0"/><du var="blocks" def="407" use="434" covered="0"/><du var="blocks" def="407" use="443" covered="0"/><du var="i" def="409" use="409" target="426" covered="0"/><du var="i" def="409" use="409" target="410" covered="0"/><du var="i" def="409" use="412" covered="0"/><du var="i" def="409" use="409" covered="0"/><du var="maxNumDataBytes" def="422" use="422" covered="0"/><du var="maxNumDataBytes" def="422" use="433" target="442" covered="0"/><du var="maxNumDataBytes" def="422" use="433" target="434" covered="0"/><du var="maxNumEcBytes" def="423" use="423" covered="0"/><du var="maxNumEcBytes" def="423" use="442" target="450" covered="0"/><du var="maxNumEcBytes" def="423" use="442" target="443" covered="0"/><du var="dataBytesOffset" def="424" use="418" covered="0"/><du var="dataBytesOffset" def="424" use="424" covered="0"/><du var="dataBytesOffset" def="424" use="426" target="427" covered="0"/><du var="dataBytesOffset" def="424" use="426" target="430" covered="0"/><du var="i" def="409" use="409" target="426" covered="0"/><du var="i" def="409" use="409" target="410" covered="0"/><du var="i" def="409" use="412" covered="0"/><du var="i" def="409" use="409" covered="0"/><du var="result" def="430" use="437" covered="0"/><du var="result" def="430" use="446" covered="0"/><du var="result" def="430" use="450" target="451" covered="0"/><du var="result" def="430" use="450" target="455" covered="0"/><du var="result" def="430" use="455" covered="0"/><du var="result" def="430" use="451" covered="0"/><du var="i" def="433" use="433" target="442" covered="0"/><du var="i" def="433" use="433" target="434" covered="0"/><du var="i" def="433" use="436" target="437" covered="0"/><du var="i" def="433" use="436" target="434" covered="0"/><du var="i" def="433" use="437" covered="0"/><du var="i" def="433" use="433" covered="0"/><du var="dataBytes" def="435" use="436" target="437" covered="0"/><du var="dataBytes" def="435" use="436" target="434" covered="0"/><du var="dataBytes" def="435" use="437" covered="0"/><du var="i" def="433" use="433" target="442" covered="0"/><du var="i" def="433" use="433" target="434" covered="0"/><du var="i" def="433" use="436" target="437" covered="0"/><du var="i" def="433" use="436" target="434" covered="0"/><du var="i" def="433" use="437" covered="0"/><du var="i" def="433" use="433" covered="0"/><du var="i" def="442" use="442" target="450" covered="0"/><du var="i" def="442" use="442" target="443" covered="0"/><du var="i" def="442" use="445" target="446" covered="0"/><du var="i" def="442" use="445" target="443" covered="0"/><du var="i" def="442" use="446" covered="0"/><du var="i" def="442" use="442" covered="0"/><du var="ecBytes" def="444" use="445" target="446" covered="0"/><du var="ecBytes" def="444" use="445" target="443" covered="0"/><du var="ecBytes" def="444" use="446" covered="0"/><du var="i" def="442" use="442" target="450" covered="0"/><du var="i" def="442" use="442" target="443" covered="0"/><du var="i" def="442" use="445" target="446" covered="0"/><du var="i" def="442" use="445" target="443" covered="0"/><du var="i" def="442" use="446" covered="0"/><du var="i" def="442" use="442" covered="0"/><counter type="DU" missed="89" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateECBytes" desc="([BI)[B"><du var="dataBytes" def="459" use="462" covered="0"/><du var="numEcBytesInBlock" def="459" use="464" covered="0"/><du var="numEcBytesInBlock" def="459" use="466" covered="0"/><du var="numEcBytesInBlock" def="459" use="467" target="470" covered="0"/><du var="numEcBytesInBlock" def="459" use="467" target="468" covered="0"/><du var="QR_CODE_FIELD_256" def="459" use="464" covered="0"/><du var="numDataBytes" def="459" use="461" target="464" covered="0"/><du var="numDataBytes" def="459" use="461" target="462" covered="0"/><du var="numDataBytes" def="459" use="468" covered="0"/><du var="toEncode" def="460" use="462" covered="0"/><du var="toEncode" def="460" use="464" covered="0"/><du var="toEncode" def="460" use="468" covered="0"/><du var="i" def="461" use="461" target="464" covered="0"/><du var="i" def="461" use="461" target="462" covered="0"/><du var="i" def="461" use="462" covered="0"/><du var="i" def="461" use="461" covered="0"/><du var="i" def="461" use="461" target="464" covered="0"/><du var="i" def="461" use="461" target="462" covered="0"/><du var="i" def="461" use="462" covered="0"/><du var="i" def="461" use="461" covered="0"/><du var="ecBytes" def="466" use="468" covered="0"/><du var="ecBytes" def="466" use="470" covered="0"/><du var="i" def="467" use="467" target="470" covered="0"/><du var="i" def="467" use="467" target="468" covered="0"/><du var="i" def="467" use="468" covered="0"/><du var="i" def="467" use="467" covered="0"/><du var="i" def="467" use="467" target="470" covered="0"/><du var="i" def="467" use="467" target="468" covered="0"/><du var="i" def="467" use="468" covered="0"/><du var="i" def="467" use="467" covered="0"/><counter type="DU" missed="30" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendLengthInfo" desc="(ILcom/google/zxing/qrcode/decoder/Version;Lcom/google/zxing/qrcode/decoder/Mode;Lcom/google/zxing/common/BitArray;)V"><du var="numLetters" def="485" use="486" target="487" covered="0"/><du var="numLetters" def="485" use="486" target="489" covered="0"/><du var="numLetters" def="485" use="489" covered="0"/><du var="numLetters" def="485" use="487" covered="0"/><du var="bits" def="485" use="489" covered="0"/><du var="numBits" def="485" use="486" target="487" covered="0"/><du var="numBits" def="485" use="486" target="489" covered="0"/><du var="numBits" def="485" use="489" covered="0"/><du var="numBits" def="485" use="487" covered="0"/><counter type="DU" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendBytes" desc="(Ljava/lang/String;Lcom/google/zxing/qrcode/decoder/Mode;Lcom/google/zxing/common/BitArray;Ljava/lang/String;)V"><du var="content" def="499" use="510" covered="0"/><du var="content" def="499" use="507" covered="0"/><du var="content" def="499" use="504" covered="0"/><du var="content" def="499" use="501" covered="0"/><du var="mode" def="499" use="499" target="513" covered="0"/><du var="mode" def="499" use="499" target="501" covered="0"/><du var="mode" def="499" use="499" target="504" covered="0"/><du var="mode" def="499" use="499" target="507" covered="0"/><du var="mode" def="499" use="499" target="510" covered="0"/><du var="mode" def="499" use="513" covered="0"/><du var="bits" def="499" use="510" covered="0"/><du var="bits" def="499" use="507" covered="0"/><du var="bits" def="499" use="504" covered="0"/><du var="bits" def="499" use="501" covered="0"/><du var="encoding" def="499" use="507" covered="0"/><counter type="DU" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendNumericBytes" desc="(Ljava/lang/CharSequence;Lcom/google/zxing/common/BitArray;)V"><du var="content" def="518" use="521" covered="0"/><du var="content" def="518" use="530" covered="0"/><du var="content" def="518" use="524" covered="0"/><du var="content" def="518" use="525" covered="0"/><du var="bits" def="518" use="535" covered="0"/><du var="bits" def="518" use="531" covered="0"/><du var="bits" def="518" use="526" covered="0"/><du var="length" def="518" use="520" target="539" covered="0"/><du var="length" def="518" use="520" target="521" covered="0"/><du var="length" def="518" use="522" target="524" covered="0"/><du var="length" def="518" use="522" target="528" covered="0"/><du var="length" def="518" use="528" target="530" covered="0"/><du var="length" def="518" use="528" target="535" covered="0"/><du var="i" def="519" use="520" target="539" covered="0"/><du var="i" def="519" use="520" target="521" covered="0"/><du var="i" def="519" use="521" covered="0"/><du var="i" def="519" use="522" target="524" covered="0"/><du var="i" def="519" use="522" target="528" covered="0"/><du var="i" def="519" use="528" target="530" covered="0"/><du var="i" def="519" use="528" target="535" covered="0"/><du var="i" def="519" use="536" covered="0"/><du var="i" def="519" use="530" covered="0"/><du var="i" def="519" use="532" covered="0"/><du var="i" def="519" use="524" covered="0"/><du var="i" def="519" use="525" covered="0"/><du var="i" def="519" use="527" covered="0"/><du var="num1" def="521" use="535" covered="0"/><du var="num1" def="521" use="531" covered="0"/><du var="num1" def="521" use="526" covered="0"/><du var="i" def="527" use="520" target="539" covered="0"/><du var="i" def="527" use="520" target="521" covered="0"/><du var="i" def="527" use="521" covered="0"/><du var="i" def="527" use="522" target="524" covered="0"/><du var="i" def="527" use="522" target="528" covered="0"/><du var="i" def="527" use="528" target="530" covered="0"/><du var="i" def="527" use="528" target="535" covered="0"/><du var="i" def="527" use="536" covered="0"/><du var="i" def="527" use="530" covered="0"/><du var="i" def="527" use="532" covered="0"/><du var="i" def="527" use="524" covered="0"/><du var="i" def="527" use="525" covered="0"/><du var="i" def="527" use="527" covered="0"/><du var="i" def="532" use="520" target="539" covered="0"/><du var="i" def="532" use="520" target="521" covered="0"/><du var="i" def="532" use="521" covered="0"/><du var="i" def="532" use="522" target="524" covered="0"/><du var="i" def="532" use="522" target="528" covered="0"/><du var="i" def="532" use="528" target="530" covered="0"/><du var="i" def="532" use="528" target="535" covered="0"/><du var="i" def="532" use="536" covered="0"/><du var="i" def="532" use="530" covered="0"/><du var="i" def="532" use="532" covered="0"/><du var="i" def="532" use="524" covered="0"/><du var="i" def="532" use="525" covered="0"/><du var="i" def="532" use="527" covered="0"/><du var="i" def="536" use="520" target="539" covered="0"/><du var="i" def="536" use="520" target="521" covered="0"/><du var="i" def="536" use="521" covered="0"/><du var="i" def="536" use="522" target="524" covered="0"/><du var="i" def="536" use="522" target="528" covered="0"/><du var="i" def="536" use="528" target="530" covered="0"/><du var="i" def="536" use="528" target="535" covered="0"/><du var="i" def="536" use="536" covered="0"/><du var="i" def="536" use="530" covered="0"/><du var="i" def="536" use="532" covered="0"/><du var="i" def="536" use="524" covered="0"/><du var="i" def="536" use="525" covered="0"/><du var="i" def="536" use="527" covered="0"/><counter type="DU" missed="68" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendAlphanumericBytes" desc="(Ljava/lang/CharSequence;Lcom/google/zxing/common/BitArray;)V"><du var="content" def="542" use="545" covered="0"/><du var="content" def="542" use="550" covered="0"/><du var="bits" def="542" use="559" covered="0"/><du var="bits" def="542" use="555" covered="0"/><du var="length" def="542" use="544" target="563" covered="0"/><du var="length" def="542" use="544" target="545" covered="0"/><du var="length" def="542" use="549" target="550" covered="0"/><du var="length" def="542" use="549" target="559" covered="0"/><du var="i" def="543" use="544" target="563" covered="0"/><du var="i" def="543" use="544" target="545" covered="0"/><du var="i" def="543" use="545" covered="0"/><du var="i" def="543" use="549" target="550" covered="0"/><du var="i" def="543" use="549" target="559" covered="0"/><du var="i" def="543" use="560" covered="0"/><du var="i" def="543" use="550" covered="0"/><du var="i" def="543" use="556" covered="0"/><du var="code1" def="545" use="546" target="547" covered="0"/><du var="code1" def="545" use="546" target="549" covered="0"/><du var="code1" def="545" use="559" covered="0"/><du var="code1" def="545" use="555" covered="0"/><du var="code2" def="550" use="551" target="552" covered="0"/><du var="code2" def="550" use="551" target="555" covered="0"/><du var="code2" def="550" use="555" covered="0"/><du var="i" def="556" use="544" target="563" covered="0"/><du var="i" def="556" use="544" target="545" covered="0"/><du var="i" def="556" use="545" covered="0"/><du var="i" def="556" use="549" target="550" covered="0"/><du var="i" def="556" use="549" target="559" covered="0"/><du var="i" def="556" use="560" covered="0"/><du var="i" def="556" use="550" covered="0"/><du var="i" def="556" use="556" covered="0"/><du var="i" def="560" use="544" target="563" covered="0"/><du var="i" def="560" use="544" target="545" covered="0"/><du var="i" def="560" use="545" covered="0"/><du var="i" def="560" use="549" target="550" covered="0"/><du var="i" def="560" use="549" target="559" covered="0"/><du var="i" def="560" use="560" covered="0"/><du var="i" def="560" use="550" covered="0"/><du var="i" def="560" use="556" covered="0"/><counter type="DU" missed="39" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append8BitBytes" desc="(Ljava/lang/String;Lcom/google/zxing/common/BitArray;Ljava/lang/String;)V"><du var="bits" def="569" use="574" covered="0"/><counter type="DU" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendKanjiBytes" desc="(Ljava/lang/String;Lcom/google/zxing/common/BitArray;)V"><du var="bits" def="581" use="600" covered="0"/><du var="bytes" def="581" use="587" covered="0"/><du var="bytes" def="581" use="588" covered="0"/><du var="length" def="585" use="586" target="602" covered="0"/><du var="length" def="585" use="586" target="587" covered="0"/><du var="i" def="586" use="586" target="602" covered="0"/><du var="i" def="586" use="586" target="587" covered="0"/><du var="i" def="586" use="587" covered="0"/><du var="i" def="586" use="588" covered="0"/><du var="i" def="586" use="586" covered="0"/><du var="code" def="589" use="591" target="591" covered="0"/><du var="code" def="589" use="591" target="593" covered="0"/><du var="code" def="589" use="593" target="593" covered="0"/><du var="code" def="589" use="593" target="596" covered="0"/><du var="code" def="589" use="593" target="594" covered="0"/><du var="code" def="589" use="593" target="596" covered="0"/><du var="code" def="589" use="594" covered="0"/><du var="code" def="589" use="591" target="592" covered="0"/><du var="code" def="589" use="591" target="593" covered="0"/><du var="code" def="589" use="592" covered="0"/><du var="subtracted" def="590" use="596" target="597" covered="0"/><du var="subtracted" def="590" use="596" target="599" covered="0"/><du var="subtracted" def="590" use="599" covered="0"/><du var="subtracted" def="592" use="596" target="597" covered="0"/><du var="subtracted" def="592" use="596" target="599" covered="0"/><du var="subtracted" def="592" use="599" covered="0"/><du var="subtracted" def="594" use="596" target="597" covered="0"/><du var="subtracted" def="594" use="596" target="599" covered="0"/><du var="subtracted" def="594" use="599" covered="0"/><du var="i" def="586" use="586" target="602" covered="0"/><du var="i" def="586" use="586" target="587" covered="0"/><du var="i" def="586" use="587" covered="0"/><du var="i" def="586" use="588" covered="0"/><du var="i" def="586" use="586" covered="0"/><counter type="DU" missed="34" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="$SWITCH_TABLE$com$google$zxing$qrcode$decoder$Mode" desc="()[I"><du var="$SWITCH_TABLE$com$google$zxing$qrcode$decoder$Mode" def="38" use="38" target="38" covered="0"/><du var="$SWITCH_TABLE$com$google$zxing$qrcode$decoder$Mode" def="38" use="38" target="38" covered="0"/><du var="$SWITCH_TABLE$com$google$zxing$qrcode$decoder$Mode" def="38" use="38" covered="0"/><du var="ALPHANUMERIC" def="38" use="38" covered="0"/><du var="BYTE" def="38" use="38" covered="0"/><du var="ECI" def="38" use="38" covered="0"/><du var="FNC1_FIRST_POSITION" def="38" use="38" covered="0"/><du var="FNC1_SECOND_POSITION" def="38" use="38" covered="0"/><du var="HANZI" def="38" use="38" covered="0"/><du var="KANJI" def="38" use="38" covered="0"/><du var="NUMERIC" def="38" use="38" covered="0"/><du var="STRUCTURED_APPEND" def="38" use="38" covered="0"/><du var="TERMINATOR" def="38" use="38" covered="0"/><counter type="DU" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="597" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/encoder/QRCode"><method name="toString" desc="()Ljava/lang/String;"><du var="this" def="63" use="73" target="74" covered="0"/><du var="this" def="63" use="73" target="76" covered="0"/><du var="this" def="63" use="77" covered="0"/><du var="this.matrix" def="63" use="73" target="74" covered="0"/><du var="this.matrix" def="63" use="73" target="76" covered="0"/><du var="this.matrix" def="63" use="77" covered="0"/><du var="result" def="63" use="76" covered="0"/><du var="result" def="63" use="77" covered="0"/><du var="result" def="63" use="79" covered="0"/><du var="result" def="63" use="80" covered="0"/><du var="result" def="63" use="74" covered="0"/><counter type="DU" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidMaskPattern" desc="(I)Z"><du var="maskPattern" def="105" use="105" target="105" covered="0"/><du var="maskPattern" def="105" use="105" target="105" covered="0"/><du var="maskPattern" def="105" use="105" target="105" covered="0"/><du var="maskPattern" def="105" use="105" target="105" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="15" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/qrcode/encoder/ByteMatrix"><method name="set" desc="(IIZ)V"><du var="this" def="67" use="67" covered="0"/><du var="x" def="67" use="67" covered="0"/><du var="y" def="67" use="67" covered="0"/><du var="value" def="67" use="67" target="67" covered="0"/><du var="value" def="67" use="67" target="67" covered="0"/><du var="this.bytes" def="67" use="67" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="(B)V"><du var="value" def="71" use="72" covered="0"/><counter type="DU" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><du var="this" def="78" use="79" target="96" covered="0"/><du var="this" def="78" use="79" target="80" covered="0"/><du var="this" def="78" use="80" covered="0"/><du var="this" def="78" use="81" target="94" covered="0"/><du var="this" def="78" use="81" target="82" covered="0"/><du var="this.width" def="78" use="81" target="94" covered="0"/><du var="this.width" def="78" use="81" target="82" covered="0"/><du var="this.height" def="78" use="79" target="96" covered="0"/><du var="this.height" def="78" use="79" target="80" covered="0"/><du var="this.bytes" def="78" use="80" covered="0"/><du var="result" def="78" use="87" covered="0"/><du var="result" def="78" use="84" covered="0"/><du var="result" def="78" use="90" covered="0"/><du var="result" def="78" use="94" covered="0"/><du var="result" def="78" use="96" covered="0"/><du var="y" def="79" use="79" target="96" covered="0"/><du var="y" def="79" use="79" target="80" covered="0"/><du var="y" def="79" use="80" covered="0"/><du var="y" def="79" use="79" covered="0"/><du var="bytesY" def="80" use="82" target="90" covered="0"/><du var="bytesY" def="80" use="82" target="84" covered="0"/><du var="bytesY" def="80" use="82" target="87" covered="0"/><du var="x" def="81" use="81" target="94" covered="0"/><du var="x" def="81" use="81" target="82" covered="0"/><du var="x" def="81" use="82" target="90" covered="0"/><du var="x" def="81" use="82" target="84" covered="0"/><du var="x" def="81" use="82" target="87" covered="0"/><du var="x" def="81" use="81" covered="0"/><du var="x" def="81" use="81" target="94" covered="0"/><du var="x" def="81" use="81" target="82" covered="0"/><du var="x" def="81" use="82" target="90" covered="0"/><du var="x" def="81" use="82" target="84" covered="0"/><du var="x" def="81" use="82" target="87" covered="0"/><du var="x" def="81" use="81" covered="0"/><du var="y" def="79" use="79" target="96" covered="0"/><du var="y" def="79" use="79" target="80" covered="0"/><du var="y" def="79" use="80" covered="0"/><du var="y" def="79" use="79" covered="0"/><counter type="DU" missed="38" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="56" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/decoder/Decoder"><method name="decode" desc="(Lcom/google/zxing/common/BitMatrix;)Lcom/google/zxing/common/DecoderResult;"><du var="this" def="66" use="87" covered="0"/><du var="dataBlocks" def="72" use="81" covered="0"/><du var="dataBlocks" def="72" use="84" covered="0"/><du var="totalBytes" def="75" use="77" covered="0"/><du var="totalBytes" def="75" use="79" covered="0"/><du var="totalBytes" def="77" use="77" covered="0"/><du var="totalBytes" def="77" use="79" covered="0"/><du var="resultBytes" def="79" use="90" covered="0"/><du var="resultBytes" def="79" use="95" covered="0"/><du var="dataBlocksCount" def="81" use="83" target="95" covered="0"/><du var="dataBlocksCount" def="81" use="83" target="84" covered="0"/><du var="dataBlocksCount" def="81" use="90" covered="0"/><du var="j" def="83" use="83" target="95" covered="0"/><du var="j" def="83" use="83" target="84" covered="0"/><du var="j" def="83" use="84" covered="0"/><du var="j" def="83" use="90" covered="0"/><du var="j" def="83" use="83" covered="0"/><du var="codewordBytes" def="85" use="90" covered="0"/><du var="numDataCodewords" def="86" use="88" target="83" covered="0"/><du var="numDataCodewords" def="86" use="88" target="90" covered="0"/><du var="i" def="88" use="88" target="83" covered="0"/><du var="i" def="88" use="88" target="90" covered="0"/><du var="i" def="88" use="90" covered="0"/><du var="i" def="88" use="88" covered="0"/><du var="i" def="88" use="88" target="83" covered="0"/><du var="i" def="88" use="88" target="90" covered="0"/><du var="i" def="88" use="90" covered="0"/><du var="i" def="88" use="88" covered="0"/><du var="j" def="83" use="83" target="95" covered="0"/><du var="j" def="83" use="83" target="84" covered="0"/><du var="j" def="83" use="84" covered="0"/><du var="j" def="83" use="90" covered="0"/><du var="j" def="83" use="83" covered="0"/><counter type="DU" missed="44" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="correctErrors" desc="([BI)V"><du var="this" def="107" use="114" covered="0"/><du var="codewordBytes" def="107" use="111" covered="0"/><du var="codewordBytes" def="107" use="114" covered="0"/><du var="codewordBytes" def="107" use="121" covered="0"/><du var="numDataCodewords" def="107" use="114" covered="0"/><du var="numDataCodewords" def="107" use="120" target="123" covered="0"/><du var="numDataCodewords" def="107" use="120" target="121" covered="0"/><du var="this.rsDecoder" def="107" use="114" covered="0"/><du var="numCodewords" def="107" use="110" target="114" covered="0"/><du var="numCodewords" def="107" use="110" target="111" covered="0"/><du var="codewordsInts" def="109" use="111" covered="0"/><du var="codewordsInts" def="109" use="114" covered="0"/><du var="codewordsInts" def="109" use="121" covered="0"/><du var="i" def="110" use="110" target="114" covered="0"/><du var="i" def="110" use="110" target="111" covered="0"/><du var="i" def="110" use="111" covered="0"/><du var="i" def="110" use="110" covered="0"/><du var="i" def="110" use="110" target="114" covered="0"/><du var="i" def="110" use="110" target="111" covered="0"/><du var="i" def="110" use="111" covered="0"/><du var="i" def="110" use="110" covered="0"/><du var="i" def="120" use="120" target="123" covered="0"/><du var="i" def="120" use="120" target="121" covered="0"/><du var="i" def="120" use="121" covered="0"/><du var="i" def="120" use="120" covered="0"/><du var="i" def="120" use="120" target="123" covered="0"/><du var="i" def="120" use="120" target="121" covered="0"/><du var="i" def="120" use="121" covered="0"/><du var="i" def="120" use="120" covered="0"/><counter type="DU" missed="29" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="73" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/decoder/BitMatrixParser"><method name="&lt;init&gt;" desc="(Lcom/google/zxing/common/BitMatrix;)V"><du var="this" def="35" use="41" covered="0"/><du var="this" def="35" use="42" covered="0"/><du var="this" def="35" use="43" covered="0"/><du var="this" def="35" use="43" covered="0"/><du var="bitMatrix" def="35" use="41" covered="0"/><du var="bitMatrix" def="35" use="42" covered="0"/><du var="dimension" def="36" use="37" target="37" covered="0"/><du var="dimension" def="36" use="37" target="38" covered="0"/><du var="dimension" def="36" use="37" target="37" covered="0"/><du var="dimension" def="36" use="37" target="38" covered="0"/><du var="dimension" def="36" use="37" target="38" covered="0"/><du var="dimension" def="36" use="37" target="41" covered="0"/><counter type="DU" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readCodewords" desc="()[B"><du var="this" def="77" use="139" target="140" covered="0"/><du var="this" def="77" use="139" target="142" covered="0"/><du var="this" def="77" use="128" target="129" covered="0"/><du var="this" def="77" use="128" target="131" covered="0"/><du var="this" def="77" use="129" covered="0"/><du var="this" def="77" use="117" target="118" covered="0"/><du var="this" def="77" use="117" target="120" covered="0"/><du var="this" def="77" use="118" covered="0"/><du var="this" def="77" use="110" covered="0"/><du var="this" def="77" use="105" covered="0"/><du var="this" def="77" use="100" covered="0"/><du var="this" def="77" use="95" covered="0"/><du var="this.version" def="77" use="139" target="140" covered="0"/><du var="this.version" def="77" use="139" target="142" covered="0"/><du var="this.readMappingMatrix" def="77" use="128" target="129" covered="0"/><du var="this.readMappingMatrix" def="77" use="128" target="131" covered="0"/><du var="this.readMappingMatrix" def="77" use="117" target="118" covered="0"/><du var="this.readMappingMatrix" def="77" use="117" target="120" covered="0"/><du var="result" def="77" use="142" covered="0"/><du var="result" def="77" use="129" covered="0"/><du var="result" def="77" use="118" covered="0"/><du var="result" def="77" use="110" covered="0"/><du var="result" def="77" use="105" covered="0"/><du var="result" def="77" use="100" covered="0"/><du var="result" def="77" use="95" covered="0"/><du var="resultOffset" def="78" use="139" target="140" covered="0"/><du var="resultOffset" def="78" use="139" target="142" covered="0"/><du var="resultOffset" def="78" use="129" covered="0"/><du var="resultOffset" def="78" use="118" covered="0"/><du var="resultOffset" def="78" use="110" covered="0"/><du var="resultOffset" def="78" use="105" covered="0"/><du var="resultOffset" def="78" use="100" covered="0"/><du var="resultOffset" def="78" use="95" covered="0"/><du var="row" def="80" use="94" target="94" covered="0"/><du var="row" def="80" use="94" target="99" covered="0"/><du var="row" def="80" use="99" target="99" covered="0"/><du var="row" def="80" use="99" target="104" covered="0"/><du var="row" def="80" use="104" target="104" covered="0"/><du var="row" def="80" use="104" target="109" covered="0"/><du var="row" def="80" use="109" target="109" covered="0"/><du var="row" def="80" use="109" target="117" covered="0"/><du var="row" def="80" use="117" target="117" covered="0"/><du var="row" def="80" use="117" target="120" covered="0"/><du var="row" def="80" use="120" covered="0"/><du var="row" def="80" use="117" target="118" covered="0"/><du var="row" def="80" use="117" target="120" covered="0"/><du var="row" def="80" use="118" covered="0"/><du var="row" def="80" use="111" covered="0"/><du var="row" def="80" use="106" covered="0"/><du var="row" def="80" use="101" covered="0"/><du var="row" def="80" use="96" covered="0"/><du var="column" def="81" use="121" covered="0"/><du var="column" def="81" use="117" target="117" covered="0"/><du var="column" def="81" use="117" target="120" covered="0"/><du var="column" def="81" use="117" target="118" covered="0"/><du var="column" def="81" use="117" target="120" covered="0"/><du var="column" def="81" use="118" covered="0"/><du var="column" def="81" use="109" target="109" covered="0"/><du var="column" def="81" use="109" target="117" covered="0"/><du var="column" def="81" use="112" covered="0"/><du var="column" def="81" use="104" target="104" covered="0"/><du var="column" def="81" use="104" target="109" covered="0"/><du var="column" def="81" use="107" covered="0"/><du var="column" def="81" use="99" target="99" covered="0"/><du var="column" def="81" use="99" target="104" covered="0"/><du var="column" def="81" use="102" covered="0"/><du var="column" def="81" use="94" target="94" covered="0"/><du var="column" def="81" use="94" target="99" covered="0"/><du var="column" def="81" use="97" covered="0"/><du var="numRows" def="83" use="94" target="94" covered="0"/><du var="numRows" def="83" use="94" target="99" covered="0"/><du var="numRows" def="83" use="99" target="99" covered="0"/><du var="numRows" def="83" use="99" target="104" covered="0"/><du var="numRows" def="83" use="104" target="104" covered="0"/><du var="numRows" def="83" use="104" target="109" covered="0"/><du var="numRows" def="83" use="109" target="109" covered="0"/><du var="numRows" def="83" use="109" target="117" covered="0"/><du var="numRows" def="83" use="117" target="117" covered="0"/><du var="numRows" def="83" use="117" target="120" covered="0"/><du var="numRows" def="83" use="133" target="133" covered="0"/><du var="numRows" def="83" use="133" target="134" covered="0"/><du var="numRows" def="83" use="137" target="137" covered="0"/><du var="numRows" def="83" use="137" target="94" covered="0"/><du var="numRows" def="83" use="129" covered="0"/><du var="numRows" def="83" use="118" covered="0"/><du var="numRows" def="83" use="110" covered="0"/><du var="numRows" def="83" use="105" covered="0"/><du var="numRows" def="83" use="100" covered="0"/><du var="numRows" def="83" use="95" covered="0"/><du var="numColumns" def="84" use="92" target="139" covered="0"/><du var="numColumns" def="84" use="92" target="94" covered="0"/><du var="numColumns" def="84" use="128" target="128" covered="0"/><du var="numColumns" def="84" use="128" target="131" covered="0"/><du var="numColumns" def="84" use="129" covered="0"/><du var="numColumns" def="84" use="116" target="123" covered="0"/><du var="numColumns" def="84" use="116" target="117" covered="0"/><du var="numColumns" def="84" use="118" covered="0"/><du var="numColumns" def="84" use="109" target="109" covered="0"/><du var="numColumns" def="84" use="109" target="117" covered="0"/><du var="numColumns" def="84" use="110" covered="0"/><du var="numColumns" def="84" use="104" target="104" covered="0"/><du var="numColumns" def="84" use="104" target="109" covered="0"/><du var="numColumns" def="84" use="105" covered="0"/><du var="numColumns" def="84" use="99" target="99" covered="0"/><du var="numColumns" def="84" use="99" target="104" covered="0"/><du var="numColumns" def="84" use="100" covered="0"/><du var="numColumns" def="84" use="95" covered="0"/><du var="corner1Read" def="86" use="94" target="95" covered="0"/><du var="corner1Read" def="86" use="94" target="99" covered="0"/><du var="corner2Read" def="87" use="99" target="100" covered="0"/><du var="corner2Read" def="87" use="99" target="104" covered="0"/><du var="corner3Read" def="88" use="104" target="105" covered="0"/><du var="corner3Read" def="88" use="104" target="109" covered="0"/><du var="corner4Read" def="89" use="109" target="110" covered="0"/><du var="corner4Read" def="89" use="109" target="117" covered="0"/><du var="resultOffset" def="95" use="129" covered="0"/><du var="resultOffset" def="95" use="118" covered="0"/><du var="resultOffset" def="95" use="110" covered="0"/><du var="resultOffset" def="95" use="105" covered="0"/><du var="resultOffset" def="95" use="100" covered="0"/><du var="resultOffset" def="95" use="95" covered="0"/><du var="resultOffset" def="95" use="139" target="140" covered="0"/><du var="resultOffset" def="95" use="139" target="142" covered="0"/><du var="row" def="96" use="137" target="137" covered="0"/><du var="row" def="96" use="137" target="94" covered="0"/><du var="row" def="96" use="94" target="94" covered="0"/><du var="row" def="96" use="94" target="99" covered="0"/><du var="row" def="96" use="99" target="99" covered="0"/><du var="row" def="96" use="99" target="104" covered="0"/><du var="row" def="96" use="104" target="104" covered="0"/><du var="row" def="96" use="104" target="109" covered="0"/><du var="row" def="96" use="109" target="109" covered="0"/><du var="row" def="96" use="109" target="117" covered="0"/><du var="row" def="96" use="117" target="117" covered="0"/><du var="row" def="96" use="117" target="120" covered="0"/><du var="row" def="96" use="120" covered="0"/><du var="row" def="96" use="117" target="118" covered="0"/><du var="row" def="96" use="117" target="120" covered="0"/><du var="row" def="96" use="118" covered="0"/><du var="row" def="96" use="111" covered="0"/><du var="row" def="96" use="106" covered="0"/><du var="row" def="96" use="101" covered="0"/><du var="row" def="96" use="96" covered="0"/><du var="column" def="97" use="121" covered="0"/><du var="column" def="97" use="117" target="117" covered="0"/><du var="column" def="97" use="117" target="120" covered="0"/><du var="column" def="97" use="117" target="118" covered="0"/><du var="column" def="97" use="117" target="120" covered="0"/><du var="column" def="97" use="118" covered="0"/><du var="column" def="97" use="109" target="109" covered="0"/><du var="column" def="97" use="109" target="117" covered="0"/><du var="column" def="97" use="112" covered="0"/><du var="column" def="97" use="104" target="104" covered="0"/><du var="column" def="97" use="104" target="109" covered="0"/><du var="column" def="97" use="107" covered="0"/><du var="column" def="97" use="99" target="99" covered="0"/><du var="column" def="97" use="99" target="104" covered="0"/><du var="column" def="97" use="102" covered="0"/><du var="column" def="97" use="94" target="94" covered="0"/><du var="column" def="97" use="94" target="99" covered="0"/><du var="column" def="97" use="97" covered="0"/><du var="column" def="97" use="92" target="139" covered="0"/><du var="column" def="97" use="92" target="94" covered="0"/><du var="corner1Read" def="98" use="94" target="95" covered="0"/><du var="corner1Read" def="98" use="94" target="99" covered="0"/><du var="resultOffset" def="100" use="129" covered="0"/><du var="resultOffset" def="100" use="118" covered="0"/><du var="resultOffset" def="100" use="110" covered="0"/><du var="resultOffset" def="100" use="105" covered="0"/><du var="resultOffset" def="100" use="100" covered="0"/><du var="resultOffset" def="100" use="95" covered="0"/><du var="resultOffset" def="100" use="139" target="140" covered="0"/><du var="resultOffset" def="100" use="139" target="142" covered="0"/><du var="row" def="101" use="137" target="137" covered="0"/><du var="row" def="101" use="137" target="94" covered="0"/><du var="row" def="101" use="94" target="94" covered="0"/><du var="row" def="101" use="94" target="99" covered="0"/><du var="row" def="101" use="99" target="99" covered="0"/><du var="row" def="101" use="99" target="104" covered="0"/><du var="row" def="101" use="104" target="104" covered="0"/><du var="row" def="101" use="104" target="109" covered="0"/><du var="row" def="101" use="109" target="109" covered="0"/><du var="row" def="101" use="109" target="117" covered="0"/><du var="row" def="101" use="117" target="117" covered="0"/><du var="row" def="101" use="117" target="120" covered="0"/><du var="row" def="101" use="120" covered="0"/><du var="row" def="101" use="117" target="118" covered="0"/><du var="row" def="101" use="117" target="120" covered="0"/><du var="row" def="101" use="118" covered="0"/><du var="row" def="101" use="111" covered="0"/><du var="row" def="101" use="106" covered="0"/><du var="row" def="101" use="101" covered="0"/><du var="row" def="101" use="96" covered="0"/><du var="column" def="102" use="121" covered="0"/><du var="column" def="102" use="117" target="117" covered="0"/><du var="column" def="102" use="117" target="120" covered="0"/><du var="column" def="102" use="117" target="118" covered="0"/><du var="column" def="102" use="117" target="120" covered="0"/><du var="column" def="102" use="118" covered="0"/><du var="column" def="102" use="109" target="109" covered="0"/><du var="column" def="102" use="109" target="117" covered="0"/><du var="column" def="102" use="112" covered="0"/><du var="column" def="102" use="104" target="104" covered="0"/><du var="column" def="102" use="104" target="109" covered="0"/><du var="column" def="102" use="107" covered="0"/><du var="column" def="102" use="99" target="99" covered="0"/><du var="column" def="102" use="99" target="104" covered="0"/><du var="column" def="102" use="102" covered="0"/><du var="column" def="102" use="94" target="94" covered="0"/><du var="column" def="102" use="94" target="99" covered="0"/><du var="column" def="102" use="97" covered="0"/><du var="column" def="102" use="92" target="139" covered="0"/><du var="column" def="102" use="92" target="94" covered="0"/><du var="corner2Read" def="103" use="99" target="100" covered="0"/><du var="corner2Read" def="103" use="99" target="104" covered="0"/><du var="resultOffset" def="105" use="129" covered="0"/><du var="resultOffset" def="105" use="118" covered="0"/><du var="resultOffset" def="105" use="110" covered="0"/><du var="resultOffset" def="105" use="105" covered="0"/><du var="resultOffset" def="105" use="100" covered="0"/><du var="resultOffset" def="105" use="95" covered="0"/><du var="resultOffset" def="105" use="139" target="140" covered="0"/><du var="resultOffset" def="105" use="139" target="142" covered="0"/><du var="row" def="106" use="137" target="137" covered="0"/><du var="row" def="106" use="137" target="94" covered="0"/><du var="row" def="106" use="94" target="94" covered="0"/><du var="row" def="106" use="94" target="99" covered="0"/><du var="row" def="106" use="99" target="99" covered="0"/><du var="row" def="106" use="99" target="104" covered="0"/><du var="row" def="106" use="104" target="104" covered="0"/><du var="row" def="106" use="104" target="109" covered="0"/><du var="row" def="106" use="109" target="109" covered="0"/><du var="row" def="106" use="109" target="117" covered="0"/><du var="row" def="106" use="117" target="117" covered="0"/><du var="row" def="106" use="117" target="120" covered="0"/><du var="row" def="106" use="120" covered="0"/><du var="row" def="106" use="117" target="118" covered="0"/><du var="row" def="106" use="117" target="120" covered="0"/><du var="row" def="106" use="118" covered="0"/><du var="row" def="106" use="111" covered="0"/><du var="row" def="106" use="106" covered="0"/><du var="row" def="106" use="101" covered="0"/><du var="row" def="106" use="96" covered="0"/><du var="column" def="107" use="121" covered="0"/><du var="column" def="107" use="117" target="117" covered="0"/><du var="column" def="107" use="117" target="120" covered="0"/><du var="column" def="107" use="117" target="118" covered="0"/><du var="column" def="107" use="117" target="120" covered="0"/><du var="column" def="107" use="118" covered="0"/><du var="column" def="107" use="109" target="109" covered="0"/><du var="column" def="107" use="109" target="117" covered="0"/><du var="column" def="107" use="112" covered="0"/><du var="column" def="107" use="104" target="104" covered="0"/><du var="column" def="107" use="104" target="109" covered="0"/><du var="column" def="107" use="107" covered="0"/><du var="column" def="107" use="99" target="99" covered="0"/><du var="column" def="107" use="99" target="104" covered="0"/><du var="column" def="107" use="102" covered="0"/><du var="column" def="107" use="94" target="94" covered="0"/><du var="column" def="107" use="94" target="99" covered="0"/><du var="column" def="107" use="97" covered="0"/><du var="column" def="107" use="92" target="139" covered="0"/><du var="column" def="107" use="92" target="94" covered="0"/><du var="corner3Read" def="108" use="104" target="105" covered="0"/><du var="corner3Read" def="108" use="104" target="109" covered="0"/><du var="resultOffset" def="110" use="129" covered="0"/><du var="resultOffset" def="110" use="118" covered="0"/><du var="resultOffset" def="110" use="110" covered="0"/><du var="resultOffset" def="110" use="105" covered="0"/><du var="resultOffset" def="110" use="100" covered="0"/><du var="resultOffset" def="110" use="95" covered="0"/><du var="resultOffset" def="110" use="139" target="140" covered="0"/><du var="resultOffset" def="110" use="139" target="142" covered="0"/><du var="row" def="111" use="137" target="137" covered="0"/><du var="row" def="111" use="137" target="94" covered="0"/><du var="row" def="111" use="94" target="94" covered="0"/><du var="row" def="111" use="94" target="99" covered="0"/><du var="row" def="111" use="99" target="99" covered="0"/><du var="row" def="111" use="99" target="104" covered="0"/><du var="row" def="111" use="104" target="104" covered="0"/><du var="row" def="111" use="104" target="109" covered="0"/><du var="row" def="111" use="109" target="109" covered="0"/><du var="row" def="111" use="109" target="117" covered="0"/><du var="row" def="111" use="117" target="117" covered="0"/><du var="row" def="111" use="117" target="120" covered="0"/><du var="row" def="111" use="120" covered="0"/><du var="row" def="111" use="117" target="118" covered="0"/><du var="row" def="111" use="117" target="120" covered="0"/><du var="row" def="111" use="118" covered="0"/><du var="row" def="111" use="111" covered="0"/><du var="row" def="111" use="106" covered="0"/><du var="row" def="111" use="101" covered="0"/><du var="row" def="111" use="96" covered="0"/><du var="column" def="112" use="121" covered="0"/><du var="column" def="112" use="117" target="117" covered="0"/><du var="column" def="112" use="117" target="120" covered="0"/><du var="column" def="112" use="117" target="118" covered="0"/><du var="column" def="112" use="117" target="120" covered="0"/><du var="column" def="112" use="118" covered="0"/><du var="column" def="112" use="109" target="109" covered="0"/><du var="column" def="112" use="109" target="117" covered="0"/><du var="column" def="112" use="112" covered="0"/><du var="column" def="112" use="104" target="104" covered="0"/><du var="column" def="112" use="104" target="109" covered="0"/><du var="column" def="112" use="107" covered="0"/><du var="column" def="112" use="99" target="99" covered="0"/><du var="column" def="112" use="99" target="104" covered="0"/><du var="column" def="112" use="102" covered="0"/><du var="column" def="112" use="94" target="94" covered="0"/><du var="column" def="112" use="94" target="99" covered="0"/><du var="column" def="112" use="97" covered="0"/><du var="column" def="112" use="92" target="139" covered="0"/><du var="column" def="112" use="92" target="94" covered="0"/><du var="corner4Read" def="113" use="109" target="110" covered="0"/><du var="corner4Read" def="113" use="109" target="117" covered="0"/><du var="resultOffset" def="118" use="118" covered="0"/><du var="resultOffset" def="118" use="110" covered="0"/><du var="resultOffset" def="118" use="105" covered="0"/><du var="resultOffset" def="118" use="100" covered="0"/><du var="resultOffset" def="118" use="95" covered="0"/><du var="resultOffset" def="118" use="139" target="140" covered="0"/><du var="resultOffset" def="118" use="139" target="142" covered="0"/><du var="resultOffset" def="118" use="129" covered="0"/><du var="row" def="120" use="122" target="122" covered="0"/><du var="row" def="120" use="122" target="123" covered="0"/><du var="row" def="120" use="123" covered="0"/><du var="row" def="120" use="117" target="117" covered="0"/><du var="row" def="120" use="117" target="120" covered="0"/><du var="row" def="120" use="120" covered="0"/><du var="row" def="120" use="117" target="118" covered="0"/><du var="row" def="120" use="117" target="120" covered="0"/><du var="row" def="120" use="118" covered="0"/><du var="column" def="121" use="124" covered="0"/><du var="column" def="121" use="116" target="123" covered="0"/><du var="column" def="121" use="116" target="117" covered="0"/><du var="column" def="121" use="121" covered="0"/><du var="column" def="121" use="117" target="117" covered="0"/><du var="column" def="121" use="117" target="120" covered="0"/><du var="column" def="121" use="117" target="118" covered="0"/><du var="column" def="121" use="117" target="120" covered="0"/><du var="column" def="121" use="118" covered="0"/><du var="row" def="123" use="128" target="128" covered="0"/><du var="row" def="123" use="128" target="131" covered="0"/><du var="row" def="123" use="131" covered="0"/><du var="row" def="123" use="128" target="129" covered="0"/><du var="row" def="123" use="128" target="131" covered="0"/><du var="row" def="123" use="129" covered="0"/><du var="column" def="124" use="132" covered="0"/><du var="column" def="124" use="128" target="128" covered="0"/><du var="column" def="124" use="128" target="131" covered="0"/><du var="column" def="124" use="128" target="129" covered="0"/><du var="column" def="124" use="128" target="131" covered="0"/><du var="column" def="124" use="129" covered="0"/><du var="resultOffset" def="129" use="129" covered="0"/><du var="resultOffset" def="129" use="118" covered="0"/><du var="resultOffset" def="129" use="110" covered="0"/><du var="resultOffset" def="129" use="105" covered="0"/><du var="resultOffset" def="129" use="100" covered="0"/><du var="resultOffset" def="129" use="95" covered="0"/><du var="resultOffset" def="129" use="139" target="140" covered="0"/><du var="resultOffset" def="129" use="139" target="142" covered="0"/><du var="row" def="131" use="133" target="133" covered="0"/><du var="row" def="131" use="133" target="134" covered="0"/><du var="row" def="131" use="134" covered="0"/><du var="row" def="131" use="128" target="128" covered="0"/><du var="row" def="131" use="128" target="131" covered="0"/><du var="row" def="131" use="131" covered="0"/><du var="row" def="131" use="128" target="129" covered="0"/><du var="row" def="131" use="128" target="131" covered="0"/><du var="row" def="131" use="129" covered="0"/><du var="column" def="132" use="135" covered="0"/><du var="column" def="132" use="127" target="134" covered="0"/><du var="column" def="132" use="127" target="128" covered="0"/><du var="column" def="132" use="132" covered="0"/><du var="column" def="132" use="128" target="128" covered="0"/><du var="column" def="132" use="128" target="131" covered="0"/><du var="column" def="132" use="128" target="129" covered="0"/><du var="column" def="132" use="128" target="131" covered="0"/><du var="column" def="132" use="129" covered="0"/><du var="row" def="134" use="137" target="137" covered="0"/><du var="row" def="134" use="137" target="94" covered="0"/><du var="row" def="134" use="94" target="94" covered="0"/><du var="row" def="134" use="94" target="99" covered="0"/><du var="row" def="134" use="99" target="99" covered="0"/><du var="row" def="134" use="99" target="104" covered="0"/><du var="row" def="134" use="104" target="104" covered="0"/><du var="row" def="134" use="104" target="109" covered="0"/><du var="row" def="134" use="109" target="109" covered="0"/><du var="row" def="134" use="109" target="117" covered="0"/><du var="row" def="134" use="117" target="117" covered="0"/><du var="row" def="134" use="117" target="120" covered="0"/><du var="row" def="134" use="120" covered="0"/><du var="row" def="134" use="117" target="118" covered="0"/><du var="row" def="134" use="117" target="120" covered="0"/><du var="row" def="134" use="118" covered="0"/><du var="row" def="134" use="111" covered="0"/><du var="row" def="134" use="106" covered="0"/><du var="row" def="134" use="101" covered="0"/><du var="row" def="134" use="96" covered="0"/><du var="column" def="135" use="121" covered="0"/><du var="column" def="135" use="117" target="117" covered="0"/><du var="column" def="135" use="117" target="120" covered="0"/><du var="column" def="135" use="117" target="118" covered="0"/><du var="column" def="135" use="117" target="120" covered="0"/><du var="column" def="135" use="118" covered="0"/><du var="column" def="135" use="109" target="109" covered="0"/><du var="column" def="135" use="109" target="117" covered="0"/><du var="column" def="135" use="112" covered="0"/><du var="column" def="135" use="104" target="104" covered="0"/><du var="column" def="135" use="104" target="109" covered="0"/><du var="column" def="135" use="107" covered="0"/><du var="column" def="135" use="99" target="99" covered="0"/><du var="column" def="135" use="99" target="104" covered="0"/><du var="column" def="135" use="102" covered="0"/><du var="column" def="135" use="94" target="94" covered="0"/><du var="column" def="135" use="94" target="99" covered="0"/><du var="column" def="135" use="97" covered="0"/><du var="column" def="135" use="92" target="139" covered="0"/><du var="column" def="135" use="92" target="94" covered="0"/><counter type="DU" missed="419" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readModule" desc="(IIII)Z"><du var="this" def="156" use="164" covered="0"/><du var="this" def="156" use="165" covered="0"/><du var="row" def="156" use="156" target="157" covered="0"/><du var="row" def="156" use="156" target="160" covered="0"/><du var="row" def="156" use="164" covered="0"/><du var="row" def="156" use="165" covered="0"/><du var="row" def="156" use="162" covered="0"/><du var="row" def="156" use="157" covered="0"/><du var="column" def="156" use="160" target="161" covered="0"/><du var="column" def="156" use="160" target="164" covered="0"/><du var="column" def="156" use="164" covered="0"/><du var="column" def="156" use="165" covered="0"/><du var="column" def="156" use="161" covered="0"/><du var="column" def="156" use="158" covered="0"/><du var="numRows" def="156" use="157" covered="0"/><du var="numRows" def="156" use="158" covered="0"/><du var="numColumns" def="156" use="161" covered="0"/><du var="numColumns" def="156" use="162" covered="0"/><du var="this.readMappingMatrix" def="156" use="164" covered="0"/><du var="this.mappingBitMatrix" def="156" use="165" covered="0"/><du var="row" def="157" use="164" covered="0"/><du var="row" def="157" use="165" covered="0"/><du var="row" def="157" use="162" covered="0"/><du var="column" def="158" use="160" target="161" covered="0"/><du var="column" def="158" use="160" target="164" covered="0"/><du var="column" def="158" use="164" covered="0"/><du var="column" def="158" use="165" covered="0"/><du var="column" def="158" use="161" covered="0"/><du var="column" def="161" use="164" covered="0"/><du var="column" def="161" use="165" covered="0"/><du var="row" def="162" use="164" covered="0"/><du var="row" def="162" use="165" covered="0"/><counter type="DU" missed="32" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readUtah" desc="(IIII)I"><du var="this" def="180" use="181" target="182" covered="0"/><du var="this" def="180" use="181" target="184" covered="0"/><du var="this" def="180" use="185" target="186" covered="0"/><du var="this" def="180" use="185" target="188" covered="0"/><du var="this" def="180" use="189" target="190" covered="0"/><du var="this" def="180" use="189" target="192" covered="0"/><du var="this" def="180" use="193" target="194" covered="0"/><du var="this" def="180" use="193" target="196" covered="0"/><du var="this" def="180" use="197" target="198" covered="0"/><du var="this" def="180" use="197" target="200" covered="0"/><du var="this" def="180" use="201" target="202" covered="0"/><du var="this" def="180" use="201" target="204" covered="0"/><du var="this" def="180" use="205" target="206" covered="0"/><du var="this" def="180" use="205" target="208" covered="0"/><du var="this" def="180" use="209" target="210" covered="0"/><du var="this" def="180" use="209" target="212" covered="0"/><du var="row" def="180" use="181" target="182" covered="0"/><du var="row" def="180" use="181" target="184" covered="0"/><du var="row" def="180" use="185" target="186" covered="0"/><du var="row" def="180" use="185" target="188" covered="0"/><du var="row" def="180" use="189" target="190" covered="0"/><du var="row" def="180" use="189" target="192" covered="0"/><du var="row" def="180" use="193" target="194" covered="0"/><du var="row" def="180" use="193" target="196" covered="0"/><du var="row" def="180" use="197" target="198" covered="0"/><du var="row" def="180" use="197" target="200" covered="0"/><du var="row" def="180" use="201" target="202" covered="0"/><du var="row" def="180" use="201" target="204" covered="0"/><du var="row" def="180" use="205" target="206" covered="0"/><du var="row" def="180" use="205" target="208" covered="0"/><du var="row" def="180" use="209" target="210" covered="0"/><du var="row" def="180" use="209" target="212" covered="0"/><du var="column" def="180" use="181" target="182" covered="0"/><du var="column" def="180" use="181" target="184" covered="0"/><du var="column" def="180" use="185" target="186" covered="0"/><du var="column" def="180" use="185" target="188" covered="0"/><du var="column" def="180" use="189" target="190" covered="0"/><du var="column" def="180" use="189" target="192" covered="0"/><du var="column" def="180" use="193" target="194" covered="0"/><du var="column" def="180" use="193" target="196" covered="0"/><du var="column" def="180" use="197" target="198" covered="0"/><du var="column" def="180" use="197" target="200" covered="0"/><du var="column" def="180" use="201" target="202" covered="0"/><du var="column" def="180" use="201" target="204" covered="0"/><du var="column" def="180" use="205" target="206" covered="0"/><du var="column" def="180" use="205" target="208" covered="0"/><du var="column" def="180" use="209" target="210" covered="0"/><du var="column" def="180" use="209" target="212" covered="0"/><du var="numRows" def="180" use="181" target="182" covered="0"/><du var="numRows" def="180" use="181" target="184" covered="0"/><du var="numRows" def="180" use="185" target="186" covered="0"/><du var="numRows" def="180" use="185" target="188" covered="0"/><du var="numRows" def="180" use="189" target="190" covered="0"/><du var="numRows" def="180" use="189" target="192" covered="0"/><du var="numRows" def="180" use="193" target="194" covered="0"/><du var="numRows" def="180" use="193" target="196" covered="0"/><du var="numRows" def="180" use="197" target="198" covered="0"/><du var="numRows" def="180" use="197" target="200" covered="0"/><du var="numRows" def="180" use="201" target="202" covered="0"/><du var="numRows" def="180" use="201" target="204" covered="0"/><du var="numRows" def="180" use="205" target="206" covered="0"/><du var="numRows" def="180" use="205" target="208" covered="0"/><du var="numRows" def="180" use="209" target="210" covered="0"/><du var="numRows" def="180" use="209" target="212" covered="0"/><du var="numColumns" def="180" use="181" target="182" covered="0"/><du var="numColumns" def="180" use="181" target="184" covered="0"/><du var="numColumns" def="180" use="185" target="186" covered="0"/><du var="numColumns" def="180" use="185" target="188" covered="0"/><du var="numColumns" def="180" use="189" target="190" covered="0"/><du var="numColumns" def="180" use="189" target="192" covered="0"/><du var="numColumns" def="180" use="193" target="194" covered="0"/><du var="numColumns" def="180" use="193" target="196" covered="0"/><du var="numColumns" def="180" use="197" target="198" covered="0"/><du var="numColumns" def="180" use="197" target="200" covered="0"/><du var="numColumns" def="180" use="201" target="202" covered="0"/><du var="numColumns" def="180" use="201" target="204" covered="0"/><du var="numColumns" def="180" use="205" target="206" covered="0"/><du var="numColumns" def="180" use="205" target="208" covered="0"/><du var="numColumns" def="180" use="209" target="210" covered="0"/><du var="numColumns" def="180" use="209" target="212" covered="0"/><du var="currentByte" def="180" use="184" covered="0"/><du var="currentByte" def="180" use="182" covered="0"/><du var="currentByte" def="182" use="184" covered="0"/><du var="currentByte" def="184" use="188" covered="0"/><du var="currentByte" def="184" use="186" covered="0"/><du var="currentByte" def="186" use="188" covered="0"/><du var="currentByte" def="188" use="192" covered="0"/><du var="currentByte" def="188" use="190" covered="0"/><du var="currentByte" def="190" use="192" covered="0"/><du var="currentByte" def="192" use="196" covered="0"/><du var="currentByte" def="192" use="194" covered="0"/><du var="currentByte" def="194" use="196" covered="0"/><du var="currentByte" def="196" use="200" covered="0"/><du var="currentByte" def="196" use="198" covered="0"/><du var="currentByte" def="198" use="200" covered="0"/><du var="currentByte" def="200" use="204" covered="0"/><du var="currentByte" def="200" use="202" covered="0"/><du var="currentByte" def="202" use="204" covered="0"/><du var="currentByte" def="204" use="208" covered="0"/><du var="currentByte" def="204" use="206" covered="0"/><du var="currentByte" def="206" use="208" covered="0"/><du var="currentByte" def="208" use="212" covered="0"/><du var="currentByte" def="208" use="210" covered="0"/><du var="currentByte" def="210" use="212" covered="0"/><counter type="DU" missed="104" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readCorner1" desc="(II)I"><du var="this" def="225" use="226" target="227" covered="0"/><du var="this" def="225" use="226" target="229" covered="0"/><du var="this" def="225" use="230" target="231" covered="0"/><du var="this" def="225" use="230" target="233" covered="0"/><du var="this" def="225" use="234" target="235" covered="0"/><du var="this" def="225" use="234" target="237" covered="0"/><du var="this" def="225" use="238" target="239" covered="0"/><du var="this" def="225" use="238" target="241" covered="0"/><du var="this" def="225" use="242" target="243" covered="0"/><du var="this" def="225" use="242" target="245" covered="0"/><du var="this" def="225" use="246" target="247" covered="0"/><du var="this" def="225" use="246" target="249" covered="0"/><du var="this" def="225" use="250" target="251" covered="0"/><du var="this" def="225" use="250" target="253" covered="0"/><du var="this" def="225" use="254" target="255" covered="0"/><du var="this" def="225" use="254" target="257" covered="0"/><du var="numRows" def="225" use="226" target="227" covered="0"/><du var="numRows" def="225" use="226" target="229" covered="0"/><du var="numRows" def="225" use="230" target="231" covered="0"/><du var="numRows" def="225" use="230" target="233" covered="0"/><du var="numRows" def="225" use="234" target="235" covered="0"/><du var="numRows" def="225" use="234" target="237" covered="0"/><du var="numRows" def="225" use="238" target="239" covered="0"/><du var="numRows" def="225" use="238" target="241" covered="0"/><du var="numRows" def="225" use="242" target="243" covered="0"/><du var="numRows" def="225" use="242" target="245" covered="0"/><du var="numRows" def="225" use="246" target="247" covered="0"/><du var="numRows" def="225" use="246" target="249" covered="0"/><du var="numRows" def="225" use="250" target="251" covered="0"/><du var="numRows" def="225" use="250" target="253" covered="0"/><du var="numRows" def="225" use="254" target="255" covered="0"/><du var="numRows" def="225" use="254" target="257" covered="0"/><du var="numColumns" def="225" use="226" target="227" covered="0"/><du var="numColumns" def="225" use="226" target="229" covered="0"/><du var="numColumns" def="225" use="230" target="231" covered="0"/><du var="numColumns" def="225" use="230" target="233" covered="0"/><du var="numColumns" def="225" use="234" target="235" covered="0"/><du var="numColumns" def="225" use="234" target="237" covered="0"/><du var="numColumns" def="225" use="238" target="239" covered="0"/><du var="numColumns" def="225" use="238" target="241" covered="0"/><du var="numColumns" def="225" use="242" target="243" covered="0"/><du var="numColumns" def="225" use="242" target="245" covered="0"/><du var="numColumns" def="225" use="246" target="247" covered="0"/><du var="numColumns" def="225" use="246" target="249" covered="0"/><du var="numColumns" def="225" use="250" target="251" covered="0"/><du var="numColumns" def="225" use="250" target="253" covered="0"/><du var="numColumns" def="225" use="254" target="255" covered="0"/><du var="numColumns" def="225" use="254" target="257" covered="0"/><du var="currentByte" def="225" use="229" covered="0"/><du var="currentByte" def="225" use="227" covered="0"/><du var="currentByte" def="227" use="229" covered="0"/><du var="currentByte" def="229" use="233" covered="0"/><du var="currentByte" def="229" use="231" covered="0"/><du var="currentByte" def="231" use="233" covered="0"/><du var="currentByte" def="233" use="237" covered="0"/><du var="currentByte" def="233" use="235" covered="0"/><du var="currentByte" def="235" use="237" covered="0"/><du var="currentByte" def="237" use="241" covered="0"/><du var="currentByte" def="237" use="239" covered="0"/><du var="currentByte" def="239" use="241" covered="0"/><du var="currentByte" def="241" use="245" covered="0"/><du var="currentByte" def="241" use="243" covered="0"/><du var="currentByte" def="243" use="245" covered="0"/><du var="currentByte" def="245" use="249" covered="0"/><du var="currentByte" def="245" use="247" covered="0"/><du var="currentByte" def="247" use="249" covered="0"/><du var="currentByte" def="249" use="253" covered="0"/><du var="currentByte" def="249" use="251" covered="0"/><du var="currentByte" def="251" use="253" covered="0"/><du var="currentByte" def="253" use="257" covered="0"/><du var="currentByte" def="253" use="255" covered="0"/><du var="currentByte" def="255" use="257" covered="0"/><counter type="DU" missed="72" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readCorner2" desc="(II)I"><du var="this" def="270" use="271" target="272" covered="0"/><du var="this" def="270" use="271" target="274" covered="0"/><du var="this" def="270" use="275" target="276" covered="0"/><du var="this" def="270" use="275" target="278" covered="0"/><du var="this" def="270" use="279" target="280" covered="0"/><du var="this" def="270" use="279" target="282" covered="0"/><du var="this" def="270" use="283" target="284" covered="0"/><du var="this" def="270" use="283" target="286" covered="0"/><du var="this" def="270" use="287" target="288" covered="0"/><du var="this" def="270" use="287" target="290" covered="0"/><du var="this" def="270" use="291" target="292" covered="0"/><du var="this" def="270" use="291" target="294" covered="0"/><du var="this" def="270" use="295" target="296" covered="0"/><du var="this" def="270" use="295" target="298" covered="0"/><du var="this" def="270" use="299" target="300" covered="0"/><du var="this" def="270" use="299" target="302" covered="0"/><du var="numRows" def="270" use="271" target="272" covered="0"/><du var="numRows" def="270" use="271" target="274" covered="0"/><du var="numRows" def="270" use="275" target="276" covered="0"/><du var="numRows" def="270" use="275" target="278" covered="0"/><du var="numRows" def="270" use="279" target="280" covered="0"/><du var="numRows" def="270" use="279" target="282" covered="0"/><du var="numRows" def="270" use="283" target="284" covered="0"/><du var="numRows" def="270" use="283" target="286" covered="0"/><du var="numRows" def="270" use="287" target="288" covered="0"/><du var="numRows" def="270" use="287" target="290" covered="0"/><du var="numRows" def="270" use="291" target="292" covered="0"/><du var="numRows" def="270" use="291" target="294" covered="0"/><du var="numRows" def="270" use="295" target="296" covered="0"/><du var="numRows" def="270" use="295" target="298" covered="0"/><du var="numRows" def="270" use="299" target="300" covered="0"/><du var="numRows" def="270" use="299" target="302" covered="0"/><du var="numColumns" def="270" use="271" target="272" covered="0"/><du var="numColumns" def="270" use="271" target="274" covered="0"/><du var="numColumns" def="270" use="275" target="276" covered="0"/><du var="numColumns" def="270" use="275" target="278" covered="0"/><du var="numColumns" def="270" use="279" target="280" covered="0"/><du var="numColumns" def="270" use="279" target="282" covered="0"/><du var="numColumns" def="270" use="283" target="284" covered="0"/><du var="numColumns" def="270" use="283" target="286" covered="0"/><du var="numColumns" def="270" use="287" target="288" covered="0"/><du var="numColumns" def="270" use="287" target="290" covered="0"/><du var="numColumns" def="270" use="291" target="292" covered="0"/><du var="numColumns" def="270" use="291" target="294" covered="0"/><du var="numColumns" def="270" use="295" target="296" covered="0"/><du var="numColumns" def="270" use="295" target="298" covered="0"/><du var="numColumns" def="270" use="299" target="300" covered="0"/><du var="numColumns" def="270" use="299" target="302" covered="0"/><du var="currentByte" def="270" use="274" covered="0"/><du var="currentByte" def="270" use="272" covered="0"/><du var="currentByte" def="272" use="274" covered="0"/><du var="currentByte" def="274" use="278" covered="0"/><du var="currentByte" def="274" use="276" covered="0"/><du var="currentByte" def="276" use="278" covered="0"/><du var="currentByte" def="278" use="282" covered="0"/><du var="currentByte" def="278" use="280" covered="0"/><du var="currentByte" def="280" use="282" covered="0"/><du var="currentByte" def="282" use="286" covered="0"/><du var="currentByte" def="282" use="284" covered="0"/><du var="currentByte" def="284" use="286" covered="0"/><du var="currentByte" def="286" use="290" covered="0"/><du var="currentByte" def="286" use="288" covered="0"/><du var="currentByte" def="288" use="290" covered="0"/><du var="currentByte" def="290" use="294" covered="0"/><du var="currentByte" def="290" use="292" covered="0"/><du var="currentByte" def="292" use="294" covered="0"/><du var="currentByte" def="294" use="298" covered="0"/><du var="currentByte" def="294" use="296" covered="0"/><du var="currentByte" def="296" use="298" covered="0"/><du var="currentByte" def="298" use="302" covered="0"/><du var="currentByte" def="298" use="300" covered="0"/><du var="currentByte" def="300" use="302" covered="0"/><counter type="DU" missed="72" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readCorner3" desc="(II)I"><du var="this" def="315" use="316" target="317" covered="0"/><du var="this" def="315" use="316" target="319" covered="0"/><du var="this" def="315" use="320" target="321" covered="0"/><du var="this" def="315" use="320" target="323" covered="0"/><du var="this" def="315" use="324" target="325" covered="0"/><du var="this" def="315" use="324" target="327" covered="0"/><du var="this" def="315" use="328" target="329" covered="0"/><du var="this" def="315" use="328" target="331" covered="0"/><du var="this" def="315" use="332" target="333" covered="0"/><du var="this" def="315" use="332" target="335" covered="0"/><du var="this" def="315" use="336" target="337" covered="0"/><du var="this" def="315" use="336" target="339" covered="0"/><du var="this" def="315" use="340" target="341" covered="0"/><du var="this" def="315" use="340" target="343" covered="0"/><du var="this" def="315" use="344" target="345" covered="0"/><du var="this" def="315" use="344" target="347" covered="0"/><du var="numRows" def="315" use="316" target="317" covered="0"/><du var="numRows" def="315" use="316" target="319" covered="0"/><du var="numRows" def="315" use="320" target="321" covered="0"/><du var="numRows" def="315" use="320" target="323" covered="0"/><du var="numRows" def="315" use="324" target="325" covered="0"/><du var="numRows" def="315" use="324" target="327" covered="0"/><du var="numRows" def="315" use="328" target="329" covered="0"/><du var="numRows" def="315" use="328" target="331" covered="0"/><du var="numRows" def="315" use="332" target="333" covered="0"/><du var="numRows" def="315" use="332" target="335" covered="0"/><du var="numRows" def="315" use="336" target="337" covered="0"/><du var="numRows" def="315" use="336" target="339" covered="0"/><du var="numRows" def="315" use="340" target="341" covered="0"/><du var="numRows" def="315" use="340" target="343" covered="0"/><du var="numRows" def="315" use="344" target="345" covered="0"/><du var="numRows" def="315" use="344" target="347" covered="0"/><du var="numColumns" def="315" use="316" target="317" covered="0"/><du var="numColumns" def="315" use="316" target="319" covered="0"/><du var="numColumns" def="315" use="320" target="321" covered="0"/><du var="numColumns" def="315" use="320" target="323" covered="0"/><du var="numColumns" def="315" use="324" target="325" covered="0"/><du var="numColumns" def="315" use="324" target="327" covered="0"/><du var="numColumns" def="315" use="328" target="329" covered="0"/><du var="numColumns" def="315" use="328" target="331" covered="0"/><du var="numColumns" def="315" use="332" target="333" covered="0"/><du var="numColumns" def="315" use="332" target="335" covered="0"/><du var="numColumns" def="315" use="336" target="337" covered="0"/><du var="numColumns" def="315" use="336" target="339" covered="0"/><du var="numColumns" def="315" use="340" target="341" covered="0"/><du var="numColumns" def="315" use="340" target="343" covered="0"/><du var="numColumns" def="315" use="344" target="345" covered="0"/><du var="numColumns" def="315" use="344" target="347" covered="0"/><du var="currentByte" def="315" use="319" covered="0"/><du var="currentByte" def="315" use="317" covered="0"/><du var="currentByte" def="317" use="319" covered="0"/><du var="currentByte" def="319" use="323" covered="0"/><du var="currentByte" def="319" use="321" covered="0"/><du var="currentByte" def="321" use="323" covered="0"/><du var="currentByte" def="323" use="327" covered="0"/><du var="currentByte" def="323" use="325" covered="0"/><du var="currentByte" def="325" use="327" covered="0"/><du var="currentByte" def="327" use="331" covered="0"/><du var="currentByte" def="327" use="329" covered="0"/><du var="currentByte" def="329" use="331" covered="0"/><du var="currentByte" def="331" use="335" covered="0"/><du var="currentByte" def="331" use="333" covered="0"/><du var="currentByte" def="333" use="335" covered="0"/><du var="currentByte" def="335" use="339" covered="0"/><du var="currentByte" def="335" use="337" covered="0"/><du var="currentByte" def="337" use="339" covered="0"/><du var="currentByte" def="339" use="343" covered="0"/><du var="currentByte" def="339" use="341" covered="0"/><du var="currentByte" def="341" use="343" covered="0"/><du var="currentByte" def="343" use="347" covered="0"/><du var="currentByte" def="343" use="345" covered="0"/><du var="currentByte" def="345" use="347" covered="0"/><counter type="DU" missed="72" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readCorner4" desc="(II)I"><du var="this" def="360" use="361" target="362" covered="0"/><du var="this" def="360" use="361" target="364" covered="0"/><du var="this" def="360" use="365" target="366" covered="0"/><du var="this" def="360" use="365" target="368" covered="0"/><du var="this" def="360" use="369" target="370" covered="0"/><du var="this" def="360" use="369" target="372" covered="0"/><du var="this" def="360" use="373" target="374" covered="0"/><du var="this" def="360" use="373" target="376" covered="0"/><du var="this" def="360" use="377" target="378" covered="0"/><du var="this" def="360" use="377" target="380" covered="0"/><du var="this" def="360" use="381" target="382" covered="0"/><du var="this" def="360" use="381" target="384" covered="0"/><du var="this" def="360" use="385" target="386" covered="0"/><du var="this" def="360" use="385" target="388" covered="0"/><du var="this" def="360" use="389" target="390" covered="0"/><du var="this" def="360" use="389" target="392" covered="0"/><du var="numRows" def="360" use="361" target="362" covered="0"/><du var="numRows" def="360" use="361" target="364" covered="0"/><du var="numRows" def="360" use="365" target="366" covered="0"/><du var="numRows" def="360" use="365" target="368" covered="0"/><du var="numRows" def="360" use="369" target="370" covered="0"/><du var="numRows" def="360" use="369" target="372" covered="0"/><du var="numRows" def="360" use="373" target="374" covered="0"/><du var="numRows" def="360" use="373" target="376" covered="0"/><du var="numRows" def="360" use="377" target="378" covered="0"/><du var="numRows" def="360" use="377" target="380" covered="0"/><du var="numRows" def="360" use="381" target="382" covered="0"/><du var="numRows" def="360" use="381" target="384" covered="0"/><du var="numRows" def="360" use="385" target="386" covered="0"/><du var="numRows" def="360" use="385" target="388" covered="0"/><du var="numRows" def="360" use="389" target="390" covered="0"/><du var="numRows" def="360" use="389" target="392" covered="0"/><du var="numColumns" def="360" use="361" target="362" covered="0"/><du var="numColumns" def="360" use="361" target="364" covered="0"/><du var="numColumns" def="360" use="365" target="366" covered="0"/><du var="numColumns" def="360" use="365" target="368" covered="0"/><du var="numColumns" def="360" use="369" target="370" covered="0"/><du var="numColumns" def="360" use="369" target="372" covered="0"/><du var="numColumns" def="360" use="373" target="374" covered="0"/><du var="numColumns" def="360" use="373" target="376" covered="0"/><du var="numColumns" def="360" use="377" target="378" covered="0"/><du var="numColumns" def="360" use="377" target="380" covered="0"/><du var="numColumns" def="360" use="381" target="382" covered="0"/><du var="numColumns" def="360" use="381" target="384" covered="0"/><du var="numColumns" def="360" use="385" target="386" covered="0"/><du var="numColumns" def="360" use="385" target="388" covered="0"/><du var="numColumns" def="360" use="389" target="390" covered="0"/><du var="numColumns" def="360" use="389" target="392" covered="0"/><du var="currentByte" def="360" use="364" covered="0"/><du var="currentByte" def="360" use="362" covered="0"/><du var="currentByte" def="362" use="364" covered="0"/><du var="currentByte" def="364" use="368" covered="0"/><du var="currentByte" def="364" use="366" covered="0"/><du var="currentByte" def="366" use="368" covered="0"/><du var="currentByte" def="368" use="372" covered="0"/><du var="currentByte" def="368" use="370" covered="0"/><du var="currentByte" def="370" use="372" covered="0"/><du var="currentByte" def="372" use="376" covered="0"/><du var="currentByte" def="372" use="374" covered="0"/><du var="currentByte" def="374" use="376" covered="0"/><du var="currentByte" def="376" use="380" covered="0"/><du var="currentByte" def="376" use="378" covered="0"/><du var="currentByte" def="378" use="380" covered="0"/><du var="currentByte" def="380" use="384" covered="0"/><du var="currentByte" def="380" use="382" covered="0"/><du var="currentByte" def="382" use="384" covered="0"/><du var="currentByte" def="384" use="388" covered="0"/><du var="currentByte" def="384" use="386" covered="0"/><du var="currentByte" def="386" use="388" covered="0"/><du var="currentByte" def="388" use="392" covered="0"/><du var="currentByte" def="388" use="390" covered="0"/><du var="currentByte" def="390" use="392" covered="0"/><counter type="DU" missed="72" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractDataRegion" desc="(Lcom/google/zxing/common/BitMatrix;)Lcom/google/zxing/common/BitMatrix;"><du var="this" def="403" use="410" covered="0"/><du var="this" def="403" use="411" covered="0"/><du var="bitMatrix" def="403" use="406" target="407" covered="0"/><du var="bitMatrix" def="403" use="406" target="410" covered="0"/><du var="bitMatrix" def="403" use="429" target="430" covered="0"/><du var="bitMatrix" def="403" use="429" target="427" covered="0"/><du var="this.version" def="403" use="410" covered="0"/><du var="this.version" def="403" use="411" covered="0"/><du var="symbolSizeRows" def="403" use="406" target="407" covered="0"/><du var="symbolSizeRows" def="403" use="406" target="410" covered="0"/><du var="symbolSizeRows" def="403" use="413" covered="0"/><du var="symbolSizeColumns" def="404" use="414" covered="0"/><du var="dataRegionSizeRows" def="410" use="421" covered="0"/><du var="dataRegionSizeRows" def="410" use="424" target="422" covered="0"/><du var="dataRegionSizeRows" def="410" use="424" target="425" covered="0"/><du var="dataRegionSizeRows" def="410" use="425" covered="0"/><du var="dataRegionSizeColumns" def="411" use="423" covered="0"/><du var="dataRegionSizeColumns" def="411" use="427" target="424" covered="0"/><du var="dataRegionSizeColumns" def="411" use="427" target="428" covered="0"/><du var="dataRegionSizeColumns" def="411" use="428" covered="0"/><du var="numDataRegionsRow" def="413" use="420" target="437" covered="0"/><du var="numDataRegionsRow" def="413" use="420" target="421" covered="0"/><du var="numDataRegionsColumn" def="414" use="422" target="420" covered="0"/><du var="numDataRegionsColumn" def="414" use="422" target="423" covered="0"/><du var="bitMatrixWithoutAlignment" def="419" use="431" covered="0"/><du var="bitMatrixWithoutAlignment" def="419" use="437" covered="0"/><du var="dataRegionRow" def="420" use="420" target="437" covered="0"/><du var="dataRegionRow" def="420" use="420" target="421" covered="0"/><du var="dataRegionRow" def="420" use="421" covered="0"/><du var="dataRegionRow" def="420" use="425" covered="0"/><du var="dataRegionRow" def="420" use="420" covered="0"/><du var="dataRegionRowOffset" def="421" use="426" covered="0"/><du var="dataRegionColumn" def="422" use="422" target="420" covered="0"/><du var="dataRegionColumn" def="422" use="422" target="423" covered="0"/><du var="dataRegionColumn" def="422" use="423" covered="0"/><du var="dataRegionColumn" def="422" use="428" covered="0"/><du var="dataRegionColumn" def="422" use="422" covered="0"/><du var="dataRegionColumnOffset" def="423" use="430" covered="0"/><du var="i" def="424" use="424" target="422" covered="0"/><du var="i" def="424" use="424" target="425" covered="0"/><du var="i" def="424" use="425" covered="0"/><du var="i" def="424" use="426" covered="0"/><du var="i" def="424" use="424" covered="0"/><du var="readRowOffset" def="425" use="429" target="430" covered="0"/><du var="readRowOffset" def="425" use="429" target="427" covered="0"/><du var="writeRowOffset" def="426" use="431" covered="0"/><du var="j" def="427" use="427" target="424" covered="0"/><du var="j" def="427" use="427" target="428" covered="0"/><du var="j" def="427" use="428" covered="0"/><du var="j" def="427" use="427" covered="0"/><du var="j" def="427" use="430" covered="0"/><du var="readColumnOffset" def="428" use="429" target="430" covered="0"/><du var="readColumnOffset" def="428" use="429" target="427" covered="0"/><du var="j" def="427" use="427" target="424" covered="0"/><du var="j" def="427" use="427" target="428" covered="0"/><du var="j" def="427" use="428" covered="0"/><du var="j" def="427" use="427" covered="0"/><du var="j" def="427" use="430" covered="0"/><du var="i" def="424" use="424" target="422" covered="0"/><du var="i" def="424" use="424" target="425" covered="0"/><du var="i" def="424" use="425" covered="0"/><du var="i" def="424" use="426" covered="0"/><du var="i" def="424" use="424" covered="0"/><du var="dataRegionColumn" def="422" use="422" target="420" covered="0"/><du var="dataRegionColumn" def="422" use="422" target="423" covered="0"/><du var="dataRegionColumn" def="422" use="423" covered="0"/><du var="dataRegionColumn" def="422" use="428" covered="0"/><du var="dataRegionColumn" def="422" use="422" covered="0"/><du var="dataRegionRow" def="420" use="420" target="437" covered="0"/><du var="dataRegionRow" def="420" use="420" target="421" covered="0"/><du var="dataRegionRow" def="420" use="421" covered="0"/><du var="dataRegionRow" def="420" use="425" covered="0"/><du var="dataRegionRow" def="420" use="420" covered="0"/><counter type="DU" missed="73" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="928" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/decoder/DecodedBitStreamParser"><method name="decode" desc="([B)Lcom/google/zxing/common/DecoderResult;"><du var="bytes" def="86" use="120" covered="0"/><du var="ASCII_ENCODE" def="86" use="92" target="93" covered="0"/><du var="ASCII_ENCODE" def="86" use="92" target="95" covered="0"/><du var="ASCII_ENCODE" def="86" use="114" covered="0"/><du var="PAD_ENCODE" def="86" use="116" target="116" covered="0"/><du var="PAD_ENCODE" def="86" use="116" target="117" covered="0"/><du var="bits" def="86" use="109" covered="0"/><du var="bits" def="86" use="91" target="117" covered="0"/><du var="bits" def="86" use="91" target="92" covered="0"/><du var="bits" def="86" use="106" covered="0"/><du var="bits" def="86" use="103" covered="0"/><du var="bits" def="86" use="100" covered="0"/><du var="bits" def="86" use="97" covered="0"/><du var="bits" def="86" use="93" covered="0"/><du var="result" def="87" use="109" covered="0"/><du var="result" def="87" use="120" covered="0"/><du var="result" def="87" use="118" covered="0"/><du var="result" def="87" use="106" covered="0"/><du var="result" def="87" use="103" covered="0"/><du var="result" def="87" use="100" covered="0"/><du var="result" def="87" use="97" covered="0"/><du var="result" def="87" use="93" covered="0"/><du var="resultTrailer" def="88" use="117" target="118" covered="0"/><du var="resultTrailer" def="88" use="117" target="120" covered="0"/><du var="resultTrailer" def="88" use="118" covered="0"/><du var="resultTrailer" def="88" use="93" covered="0"/><du var="byteSegments" def="89" use="109" covered="0"/><du var="byteSegments" def="89" use="120" target="120" covered="0"/><du var="byteSegments" def="89" use="120" target="120" covered="0"/><du var="byteSegments" def="89" use="120" covered="0"/><du var="mode" def="90" use="92" target="93" covered="0"/><du var="mode" def="90" use="92" target="95" covered="0"/><du var="mode" def="90" use="95" target="112" covered="0"/><du var="mode" def="90" use="95" target="97" covered="0"/><du var="mode" def="90" use="95" target="100" covered="0"/><du var="mode" def="90" use="95" target="103" covered="0"/><du var="mode" def="90" use="95" target="106" covered="0"/><du var="mode" def="90" use="95" target="109" covered="0"/><du var="mode" def="93" use="116" target="116" covered="0"/><du var="mode" def="93" use="116" target="117" covered="0"/><du var="mode" def="93" use="92" target="93" covered="0"/><du var="mode" def="93" use="92" target="95" covered="0"/><du var="mode" def="93" use="95" target="112" covered="0"/><du var="mode" def="93" use="95" target="97" covered="0"/><du var="mode" def="93" use="95" target="100" covered="0"/><du var="mode" def="93" use="95" target="103" covered="0"/><du var="mode" def="93" use="95" target="106" covered="0"/><du var="mode" def="93" use="95" target="109" covered="0"/><du var="mode" def="114" use="116" target="116" covered="0"/><du var="mode" def="114" use="116" target="117" covered="0"/><du var="mode" def="114" use="92" target="93" covered="0"/><du var="mode" def="114" use="92" target="95" covered="0"/><du var="mode" def="114" use="95" target="112" covered="0"/><du var="mode" def="114" use="95" target="97" covered="0"/><du var="mode" def="114" use="95" target="100" covered="0"/><du var="mode" def="114" use="95" target="103" covered="0"/><du var="mode" def="114" use="95" target="106" covered="0"/><du var="mode" def="114" use="95" target="109" covered="0"/><counter type="DU" missed="58" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeAsciiSegment" desc="(Lcom/google/zxing/common/BitSource;Ljava/lang/StringBuilder;Ljava/lang/StringBuilder;)Lcom/google/zxing/datamatrix/decoder/DecodedBitStreamParser$Mode;"><du var="bits" def="129" use="131" covered="0"/><du var="bits" def="129" use="130" target="195" covered="0"/><du var="bits" def="129" use="130" target="131" covered="0"/><du var="bits" def="129" use="188" target="189" covered="0"/><du var="bits" def="129" use="188" target="194" covered="0"/><du var="result" def="129" use="171" covered="0"/><du var="result" def="129" use="167" covered="0"/><du var="result" def="129" use="156" covered="0"/><du var="result" def="129" use="148" covered="0"/><du var="result" def="129" use="146" covered="0"/><du var="result" def="129" use="139" covered="0"/><du var="resultTrailer" def="129" use="172" covered="0"/><du var="resultTrailer" def="129" use="168" covered="0"/><du var="ASCII_ENCODE" def="129" use="195" covered="0"/><du var="ASCII_ENCODE" def="129" use="140" covered="0"/><du var="PAD_ENCODE" def="129" use="142" covered="0"/><du var="C40_ENCODE" def="129" use="152" covered="0"/><du var="BASE256_ENCODE" def="129" use="154" covered="0"/><du var="ANSIX12_ENCODE" def="129" use="175" covered="0"/><du var="TEXT_ENCODE" def="129" use="177" covered="0"/><du var="EDIFACT_ENCODE" def="129" use="179" covered="0"/><du var="upperShift" def="129" use="135" target="136" covered="0"/><du var="upperShift" def="129" use="135" target="139" covered="0"/><du var="oneByte" def="131" use="132" target="133" covered="0"/><du var="oneByte" def="131" use="132" target="134" covered="0"/><du var="oneByte" def="131" use="134" target="135" covered="0"/><du var="oneByte" def="131" use="134" target="141" covered="0"/><du var="oneByte" def="131" use="141" target="142" covered="0"/><du var="oneByte" def="131" use="141" target="143" covered="0"/><du var="oneByte" def="131" use="143" target="144" covered="0"/><du var="oneByte" def="131" use="143" target="150" covered="0"/><du var="oneByte" def="131" use="150" target="188" covered="0"/><du var="oneByte" def="131" use="150" target="152" covered="0"/><du var="oneByte" def="131" use="150" target="154" covered="0"/><du var="oneByte" def="131" use="150" target="156" covered="0"/><du var="oneByte" def="131" use="150" target="162" covered="0"/><du var="oneByte" def="131" use="150" target="164" covered="0"/><du var="oneByte" def="131" use="150" target="167" covered="0"/><du var="oneByte" def="131" use="150" target="171" covered="0"/><du var="oneByte" def="131" use="150" target="175" covered="0"/><du var="oneByte" def="131" use="150" target="177" covered="0"/><du var="oneByte" def="131" use="150" target="179" covered="0"/><du var="oneByte" def="131" use="150" target="184" covered="0"/><du var="oneByte" def="131" use="188" target="188" covered="0"/><du var="oneByte" def="131" use="188" target="194" covered="0"/><du var="oneByte" def="131" use="188" target="188" covered="0"/><du var="oneByte" def="131" use="188" target="189" covered="0"/><du var="oneByte" def="131" use="144" covered="0"/><du var="oneByte" def="131" use="139" covered="0"/><du var="oneByte" def="131" use="136" covered="0"/><du var="oneByte" def="136" use="139" covered="0"/><du var="value" def="144" use="145" target="146" covered="0"/><du var="value" def="144" use="145" target="148" covered="0"/><du var="value" def="144" use="148" covered="0"/><du var="upperShift" def="164" use="135" target="136" covered="0"/><du var="upperShift" def="164" use="135" target="139" covered="0"/><counter type="DU" missed="56" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeC40Segment" desc="(Lcom/google/zxing/common/BitSource;Ljava/lang/StringBuilder;)V"><du var="bits" def="205" use="212" target="213" covered="0"/><du var="bits" def="205" use="212" target="215" covered="0"/><du var="bits" def="205" use="215" covered="0"/><du var="bits" def="205" use="220" covered="0"/><du var="bits" def="205" use="210" target="286" covered="0"/><du var="bits" def="205" use="210" target="212" covered="0"/><du var="result" def="205" use="277" covered="0"/><du var="result" def="205" use="274" covered="0"/><du var="result" def="205" use="261" covered="0"/><du var="result" def="205" use="256" covered="0"/><du var="result" def="205" use="253" covered="0"/><du var="result" def="205" use="245" covered="0"/><du var="result" def="205" use="242" covered="0"/><du var="result" def="205" use="234" covered="0"/><du var="result" def="205" use="231" covered="0"/><du var="C40_BASIC_SET_CHARS" def="205" use="228" target="229" covered="0"/><du var="C40_BASIC_SET_CHARS" def="205" use="228" target="237" covered="0"/><du var="C40_BASIC_SET_CHARS" def="205" use="229" covered="0"/><du var="C40_SHIFT2_SET_CHARS" def="205" use="250" target="251" covered="0"/><du var="C40_SHIFT2_SET_CHARS" def="205" use="250" target="259" covered="0"/><du var="C40_SHIFT2_SET_CHARS" def="205" use="251" covered="0"/><du var="upperShift" def="205" use="273" target="274" covered="0"/><du var="upperShift" def="205" use="273" target="277" covered="0"/><du var="upperShift" def="205" use="252" target="253" covered="0"/><du var="upperShift" def="205" use="252" target="256" covered="0"/><du var="upperShift" def="205" use="241" target="242" covered="0"/><du var="upperShift" def="205" use="241" target="245" covered="0"/><du var="upperShift" def="205" use="230" target="231" covered="0"/><du var="upperShift" def="205" use="230" target="234" covered="0"/><du var="cValues" def="207" use="220" covered="0"/><du var="cValues" def="207" use="223" covered="0"/><du var="shift" def="208" use="224" target="282" covered="0"/><du var="shift" def="208" use="224" target="226" covered="0"/><du var="shift" def="208" use="224" target="241" covered="0"/><du var="shift" def="208" use="224" target="250" covered="0"/><du var="shift" def="208" use="224" target="273" covered="0"/><du var="firstByte" def="215" use="216" target="217" covered="0"/><du var="firstByte" def="215" use="216" target="220" covered="0"/><du var="firstByte" def="215" use="220" covered="0"/><du var="i" def="222" use="222" target="285" covered="0"/><du var="i" def="222" use="222" target="223" covered="0"/><du var="i" def="222" use="223" covered="0"/><du var="i" def="222" use="222" covered="0"/><du var="cValue" def="223" use="277" covered="0"/><du var="cValue" def="223" use="274" covered="0"/><du var="cValue" def="223" use="250" target="251" covered="0"/><du var="cValue" def="223" use="250" target="259" covered="0"/><du var="cValue" def="223" use="259" target="267" covered="0"/><du var="cValue" def="223" use="259" target="261" covered="0"/><du var="cValue" def="223" use="259" target="264" covered="0"/><du var="cValue" def="223" use="251" covered="0"/><du var="cValue" def="223" use="245" covered="0"/><du var="cValue" def="223" use="242" covered="0"/><du var="cValue" def="223" use="226" target="227" covered="0"/><du var="cValue" def="223" use="226" target="228" covered="0"/><du var="cValue" def="223" use="228" target="229" covered="0"/><du var="cValue" def="223" use="228" target="237" covered="0"/><du var="cValue" def="223" use="229" covered="0"/><du var="cValue" def="223" use="227" covered="0"/><du var="shift" def="227" use="224" target="282" covered="0"/><du var="shift" def="227" use="224" target="226" covered="0"/><du var="shift" def="227" use="224" target="241" covered="0"/><du var="shift" def="227" use="224" target="250" covered="0"/><du var="shift" def="227" use="224" target="273" covered="0"/><du var="c40char" def="229" use="234" covered="0"/><du var="c40char" def="229" use="231" covered="0"/><du var="upperShift" def="232" use="273" target="274" covered="0"/><du var="upperShift" def="232" use="273" target="277" covered="0"/><du var="upperShift" def="232" use="252" target="253" covered="0"/><du var="upperShift" def="232" use="252" target="256" covered="0"/><du var="upperShift" def="232" use="241" target="242" covered="0"/><du var="upperShift" def="232" use="241" target="245" covered="0"/><du var="upperShift" def="232" use="230" target="231" covered="0"/><du var="upperShift" def="232" use="230" target="234" covered="0"/><du var="upperShift" def="243" use="273" target="274" covered="0"/><du var="upperShift" def="243" use="273" target="277" covered="0"/><du var="upperShift" def="243" use="252" target="253" covered="0"/><du var="upperShift" def="243" use="252" target="256" covered="0"/><du var="upperShift" def="243" use="241" target="242" covered="0"/><du var="upperShift" def="243" use="241" target="245" covered="0"/><du var="upperShift" def="243" use="230" target="231" covered="0"/><du var="upperShift" def="243" use="230" target="234" covered="0"/><du var="shift" def="247" use="224" target="282" covered="0"/><du var="shift" def="247" use="224" target="226" covered="0"/><du var="shift" def="247" use="224" target="241" covered="0"/><du var="shift" def="247" use="224" target="250" covered="0"/><du var="shift" def="247" use="224" target="273" covered="0"/><du var="c40char" def="251" use="256" covered="0"/><du var="c40char" def="251" use="253" covered="0"/><du var="upperShift" def="254" use="273" target="274" covered="0"/><du var="upperShift" def="254" use="273" target="277" covered="0"/><du var="upperShift" def="254" use="252" target="253" covered="0"/><du var="upperShift" def="254" use="252" target="256" covered="0"/><du var="upperShift" def="254" use="241" target="242" covered="0"/><du var="upperShift" def="254" use="241" target="245" covered="0"/><du var="upperShift" def="254" use="230" target="231" covered="0"/><du var="upperShift" def="254" use="230" target="234" covered="0"/><du var="upperShift" def="264" use="273" target="274" covered="0"/><du var="upperShift" def="264" use="273" target="277" covered="0"/><du var="upperShift" def="264" use="252" target="253" covered="0"/><du var="upperShift" def="264" use="252" target="256" covered="0"/><du var="upperShift" def="264" use="241" target="242" covered="0"/><du var="upperShift" def="264" use="241" target="245" covered="0"/><du var="upperShift" def="264" use="230" target="231" covered="0"/><du var="upperShift" def="264" use="230" target="234" covered="0"/><du var="shift" def="270" use="224" target="282" covered="0"/><du var="shift" def="270" use="224" target="226" covered="0"/><du var="shift" def="270" use="224" target="241" covered="0"/><du var="shift" def="270" use="224" target="250" covered="0"/><du var="shift" def="270" use="224" target="273" covered="0"/><du var="upperShift" def="275" use="273" target="274" covered="0"/><du var="upperShift" def="275" use="273" target="277" covered="0"/><du var="upperShift" def="275" use="252" target="253" covered="0"/><du var="upperShift" def="275" use="252" target="256" covered="0"/><du var="upperShift" def="275" use="241" target="242" covered="0"/><du var="upperShift" def="275" use="241" target="245" covered="0"/><du var="upperShift" def="275" use="230" target="231" covered="0"/><du var="upperShift" def="275" use="230" target="234" covered="0"/><du var="shift" def="279" use="224" target="282" covered="0"/><du var="shift" def="279" use="224" target="226" covered="0"/><du var="shift" def="279" use="224" target="241" covered="0"/><du var="shift" def="279" use="224" target="250" covered="0"/><du var="shift" def="279" use="224" target="273" covered="0"/><du var="i" def="222" use="222" target="285" covered="0"/><du var="i" def="222" use="222" target="223" covered="0"/><du var="i" def="222" use="223" covered="0"/><du var="i" def="222" use="222" covered="0"/><counter type="DU" missed="127" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeTextSegment" desc="(Lcom/google/zxing/common/BitSource;Ljava/lang/StringBuilder;)V"><du var="bits" def="295" use="301" target="302" covered="0"/><du var="bits" def="295" use="301" target="304" covered="0"/><du var="bits" def="295" use="304" covered="0"/><du var="bits" def="295" use="309" covered="0"/><du var="bits" def="295" use="299" target="381" covered="0"/><du var="bits" def="295" use="299" target="301" covered="0"/><du var="result" def="295" use="369" covered="0"/><du var="result" def="295" use="366" covered="0"/><du var="result" def="295" use="351" covered="0"/><du var="result" def="295" use="346" covered="0"/><du var="result" def="295" use="343" covered="0"/><du var="result" def="295" use="334" covered="0"/><du var="result" def="295" use="331" covered="0"/><du var="result" def="295" use="323" covered="0"/><du var="result" def="295" use="320" covered="0"/><du var="TEXT_BASIC_SET_CHARS" def="295" use="317" target="318" covered="0"/><du var="TEXT_BASIC_SET_CHARS" def="295" use="317" target="326" covered="0"/><du var="TEXT_BASIC_SET_CHARS" def="295" use="318" covered="0"/><du var="TEXT_SHIFT2_SET_CHARS" def="295" use="340" target="341" covered="0"/><du var="TEXT_SHIFT2_SET_CHARS" def="295" use="340" target="349" covered="0"/><du var="TEXT_SHIFT2_SET_CHARS" def="295" use="341" covered="0"/><du var="TEXT_SHIFT3_SET_CHARS" def="295" use="363" target="364" covered="0"/><du var="TEXT_SHIFT3_SET_CHARS" def="295" use="363" target="373" covered="0"/><du var="TEXT_SHIFT3_SET_CHARS" def="295" use="364" covered="0"/><du var="upperShift" def="295" use="365" target="366" covered="0"/><du var="upperShift" def="295" use="365" target="369" covered="0"/><du var="upperShift" def="295" use="342" target="343" covered="0"/><du var="upperShift" def="295" use="342" target="346" covered="0"/><du var="upperShift" def="295" use="330" target="331" covered="0"/><du var="upperShift" def="295" use="330" target="334" covered="0"/><du var="upperShift" def="295" use="319" target="320" covered="0"/><du var="upperShift" def="295" use="319" target="323" covered="0"/><du var="cValues" def="297" use="309" covered="0"/><du var="cValues" def="297" use="312" covered="0"/><du var="shift" def="298" use="313" target="377" covered="0"/><du var="shift" def="298" use="313" target="315" covered="0"/><du var="shift" def="298" use="313" target="330" covered="0"/><du var="shift" def="298" use="313" target="340" covered="0"/><du var="shift" def="298" use="313" target="363" covered="0"/><du var="firstByte" def="304" use="305" target="306" covered="0"/><du var="firstByte" def="304" use="305" target="309" covered="0"/><du var="firstByte" def="304" use="309" covered="0"/><du var="i" def="311" use="311" target="380" covered="0"/><du var="i" def="311" use="311" target="312" covered="0"/><du var="i" def="311" use="312" covered="0"/><du var="i" def="311" use="311" covered="0"/><du var="cValue" def="312" use="363" target="364" covered="0"/><du var="cValue" def="312" use="363" target="373" covered="0"/><du var="cValue" def="312" use="364" covered="0"/><du var="cValue" def="312" use="340" target="341" covered="0"/><du var="cValue" def="312" use="340" target="349" covered="0"/><du var="cValue" def="312" use="349" target="357" covered="0"/><du var="cValue" def="312" use="349" target="351" covered="0"/><du var="cValue" def="312" use="349" target="354" covered="0"/><du var="cValue" def="312" use="341" covered="0"/><du var="cValue" def="312" use="334" covered="0"/><du var="cValue" def="312" use="331" covered="0"/><du var="cValue" def="312" use="315" target="316" covered="0"/><du var="cValue" def="312" use="315" target="317" covered="0"/><du var="cValue" def="312" use="317" target="318" covered="0"/><du var="cValue" def="312" use="317" target="326" covered="0"/><du var="cValue" def="312" use="318" covered="0"/><du var="cValue" def="312" use="316" covered="0"/><du var="shift" def="316" use="313" target="377" covered="0"/><du var="shift" def="316" use="313" target="315" covered="0"/><du var="shift" def="316" use="313" target="330" covered="0"/><du var="shift" def="316" use="313" target="340" covered="0"/><du var="shift" def="316" use="313" target="363" covered="0"/><du var="textChar" def="318" use="323" covered="0"/><du var="textChar" def="318" use="320" covered="0"/><du var="upperShift" def="321" use="365" target="366" covered="0"/><du var="upperShift" def="321" use="365" target="369" covered="0"/><du var="upperShift" def="321" use="342" target="343" covered="0"/><du var="upperShift" def="321" use="342" target="346" covered="0"/><du var="upperShift" def="321" use="330" target="331" covered="0"/><du var="upperShift" def="321" use="330" target="334" covered="0"/><du var="upperShift" def="321" use="319" target="320" covered="0"/><du var="upperShift" def="321" use="319" target="323" covered="0"/><du var="upperShift" def="332" use="365" target="366" covered="0"/><du var="upperShift" def="332" use="365" target="369" covered="0"/><du var="upperShift" def="332" use="342" target="343" covered="0"/><du var="upperShift" def="332" use="342" target="346" covered="0"/><du var="upperShift" def="332" use="330" target="331" covered="0"/><du var="upperShift" def="332" use="330" target="334" covered="0"/><du var="upperShift" def="332" use="319" target="320" covered="0"/><du var="upperShift" def="332" use="319" target="323" covered="0"/><du var="shift" def="336" use="313" target="377" covered="0"/><du var="shift" def="336" use="313" target="315" covered="0"/><du var="shift" def="336" use="313" target="330" covered="0"/><du var="shift" def="336" use="313" target="340" covered="0"/><du var="shift" def="336" use="313" target="363" covered="0"/><du var="textChar" def="341" use="346" covered="0"/><du var="textChar" def="341" use="343" covered="0"/><du var="upperShift" def="344" use="365" target="366" covered="0"/><du var="upperShift" def="344" use="365" target="369" covered="0"/><du var="upperShift" def="344" use="342" target="343" covered="0"/><du var="upperShift" def="344" use="342" target="346" covered="0"/><du var="upperShift" def="344" use="330" target="331" covered="0"/><du var="upperShift" def="344" use="330" target="334" covered="0"/><du var="upperShift" def="344" use="319" target="320" covered="0"/><du var="upperShift" def="344" use="319" target="323" covered="0"/><du var="upperShift" def="354" use="365" target="366" covered="0"/><du var="upperShift" def="354" use="365" target="369" covered="0"/><du var="upperShift" def="354" use="342" target="343" covered="0"/><du var="upperShift" def="354" use="342" target="346" covered="0"/><du var="upperShift" def="354" use="330" target="331" covered="0"/><du var="upperShift" def="354" use="330" target="334" covered="0"/><du var="upperShift" def="354" use="319" target="320" covered="0"/><du var="upperShift" def="354" use="319" target="323" covered="0"/><du var="shift" def="360" use="313" target="377" covered="0"/><du var="shift" def="360" use="313" target="315" covered="0"/><du var="shift" def="360" use="313" target="330" covered="0"/><du var="shift" def="360" use="313" target="340" covered="0"/><du var="shift" def="360" use="313" target="363" covered="0"/><du var="textChar" def="364" use="369" covered="0"/><du var="textChar" def="364" use="366" covered="0"/><du var="upperShift" def="367" use="365" target="366" covered="0"/><du var="upperShift" def="367" use="365" target="369" covered="0"/><du var="upperShift" def="367" use="342" target="343" covered="0"/><du var="upperShift" def="367" use="342" target="346" covered="0"/><du var="upperShift" def="367" use="330" target="331" covered="0"/><du var="upperShift" def="367" use="330" target="334" covered="0"/><du var="upperShift" def="367" use="319" target="320" covered="0"/><du var="upperShift" def="367" use="319" target="323" covered="0"/><du var="shift" def="371" use="313" target="377" covered="0"/><du var="shift" def="371" use="313" target="315" covered="0"/><du var="shift" def="371" use="313" target="330" covered="0"/><du var="shift" def="371" use="313" target="340" covered="0"/><du var="shift" def="371" use="313" target="363" covered="0"/><du var="i" def="311" use="311" target="380" covered="0"/><du var="i" def="311" use="311" target="312" covered="0"/><du var="i" def="311" use="312" covered="0"/><du var="i" def="311" use="311" covered="0"/><counter type="DU" missed="133" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeAnsiX12Segment" desc="(Lcom/google/zxing/common/BitSource;Ljava/lang/StringBuilder;)V"><du var="bits" def="391" use="394" target="395" covered="0"/><du var="bits" def="391" use="394" target="397" covered="0"/><du var="bits" def="391" use="397" covered="0"/><du var="bits" def="391" use="402" covered="0"/><du var="bits" def="391" use="392" target="431" covered="0"/><du var="bits" def="391" use="392" target="394" covered="0"/><du var="result" def="391" use="417" covered="0"/><du var="result" def="391" use="414" covered="0"/><du var="result" def="391" use="411" covered="0"/><du var="result" def="391" use="408" covered="0"/><du var="result" def="391" use="423" covered="0"/><du var="result" def="391" use="421" covered="0"/><du var="cValues" def="391" use="402" covered="0"/><du var="cValues" def="391" use="405" covered="0"/><du var="firstByte" def="397" use="398" target="399" covered="0"/><du var="firstByte" def="397" use="398" target="402" covered="0"/><du var="firstByte" def="397" use="402" covered="0"/><du var="i" def="404" use="404" target="430" covered="0"/><du var="i" def="404" use="404" target="405" covered="0"/><du var="i" def="404" use="405" covered="0"/><du var="i" def="404" use="404" covered="0"/><du var="cValue" def="405" use="406" target="420" covered="0"/><du var="cValue" def="405" use="406" target="408" covered="0"/><du var="cValue" def="405" use="406" target="411" covered="0"/><du var="cValue" def="405" use="406" target="414" covered="0"/><du var="cValue" def="405" use="406" target="417" covered="0"/><du var="cValue" def="405" use="420" target="421" covered="0"/><du var="cValue" def="405" use="420" target="422" covered="0"/><du var="cValue" def="405" use="422" target="423" covered="0"/><du var="cValue" def="405" use="422" target="425" covered="0"/><du var="cValue" def="405" use="423" covered="0"/><du var="cValue" def="405" use="421" covered="0"/><du var="i" def="404" use="404" target="430" covered="0"/><du var="i" def="404" use="404" target="405" covered="0"/><du var="i" def="404" use="405" covered="0"/><du var="i" def="404" use="404" covered="0"/><counter type="DU" missed="36" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeEdifactSegment" desc="(Lcom/google/zxing/common/BitSource;Ljava/lang/StringBuilder;)V"><du var="bits" def="449" use="449" target="450" covered="0"/><du var="bits" def="449" use="449" target="453" covered="0"/><du var="bits" def="449" use="454" covered="0"/><du var="bits" def="449" use="459" covered="0"/><du var="bits" def="449" use="461" covered="0"/><du var="bits" def="449" use="447" target="472" covered="0"/><du var="bits" def="449" use="447" target="449" covered="0"/><du var="result" def="449" use="469" covered="0"/><du var="i" def="453" use="453" target="471" covered="0"/><du var="i" def="453" use="453" target="454" covered="0"/><du var="i" def="453" use="453" covered="0"/><du var="edifactValue" def="454" use="457" target="459" covered="0"/><du var="edifactValue" def="454" use="457" target="466" covered="0"/><du var="edifactValue" def="454" use="466" target="467" covered="0"/><du var="edifactValue" def="454" use="466" target="469" covered="0"/><du var="edifactValue" def="454" use="469" covered="0"/><du var="edifactValue" def="454" use="467" covered="0"/><du var="bitsLeft" def="459" use="460" target="461" covered="0"/><du var="bitsLeft" def="459" use="460" target="463" covered="0"/><du var="bitsLeft" def="459" use="461" covered="0"/><du var="edifactValue" def="467" use="469" covered="0"/><du var="i" def="453" use="453" target="471" covered="0"/><du var="i" def="453" use="453" target="454" covered="0"/><du var="i" def="453" use="453" covered="0"/><counter type="DU" missed="24" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeBase256Segment" desc="(Lcom/google/zxing/common/BitSource;Ljava/lang/StringBuilder;Ljava/util/Collection;)V"><du var="bits" def="482" use="490" covered="0"/><du var="bits" def="482" use="502" target="503" covered="0"/><du var="bits" def="482" use="502" target="505" covered="0"/><du var="bits" def="482" use="505" covered="0"/><du var="bits" def="482" use="486" covered="0"/><du var="result" def="482" use="509" covered="0"/><du var="byteSegments" def="482" use="507" covered="0"/><du var="codewordPosition" def="483" use="490" covered="0"/><du var="codewordPosition" def="483" use="505" covered="0"/><du var="d1" def="483" use="485" target="486" covered="0"/><du var="d1" def="483" use="485" target="487" covered="0"/><du var="d1" def="483" use="487" target="488" covered="0"/><du var="d1" def="483" use="487" target="490" covered="0"/><du var="d1" def="483" use="490" covered="0"/><du var="d1" def="483" use="488" covered="0"/><du var="count" def="486" use="494" target="495" covered="0"/><du var="count" def="486" use="494" target="498" covered="0"/><du var="count" def="486" use="498" covered="0"/><du var="count" def="486" use="499" target="507" covered="0"/><du var="count" def="486" use="499" target="502" covered="0"/><du var="count" def="488" use="494" target="495" covered="0"/><du var="count" def="488" use="494" target="498" covered="0"/><du var="count" def="488" use="498" covered="0"/><du var="count" def="488" use="499" target="507" covered="0"/><du var="count" def="488" use="499" target="502" covered="0"/><du var="codewordPosition" def="490" use="505" covered="0"/><du var="count" def="490" use="494" target="495" covered="0"/><du var="count" def="490" use="494" target="498" covered="0"/><du var="count" def="490" use="498" covered="0"/><du var="count" def="490" use="499" target="507" covered="0"/><du var="count" def="490" use="499" target="502" covered="0"/><du var="bytes" def="498" use="505" covered="0"/><du var="bytes" def="498" use="507" covered="0"/><du var="bytes" def="498" use="509" covered="0"/><du var="i" def="499" use="499" target="507" covered="0"/><du var="i" def="499" use="499" target="502" covered="0"/><du var="i" def="499" use="505" covered="0"/><du var="i" def="499" use="499" covered="0"/><du var="codewordPosition" def="505" use="505" covered="0"/><du var="i" def="499" use="499" target="507" covered="0"/><du var="i" def="499" use="499" target="502" covered="0"/><du var="i" def="499" use="505" covered="0"/><du var="i" def="499" use="499" covered="0"/><counter type="DU" missed="43" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unrandomize255State" desc="(II)I"><du var="tempVariable" def="521" use="522" target="522" covered="0"/><du var="tempVariable" def="521" use="522" target="522" covered="0"/><du var="tempVariable" def="521" use="522" covered="0"/><counter type="DU" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="$SWITCH_TABLE$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode" desc="()[I"><du var="$SWITCH_TABLE$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode" def="37" use="37" target="37" covered="0"/><du var="$SWITCH_TABLE$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode" def="37" use="37" target="37" covered="0"/><du var="$SWITCH_TABLE$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode" def="37" use="37" covered="0"/><du var="ANSIX12_ENCODE" def="37" use="37" covered="0"/><du var="ASCII_ENCODE" def="37" use="37" covered="0"/><du var="BASE256_ENCODE" def="37" use="37" covered="0"/><du var="C40_ENCODE" def="37" use="37" covered="0"/><du var="EDIFACT_ENCODE" def="37" use="37" covered="0"/><du var="PAD_ENCODE" def="37" use="37" covered="0"/><du var="TEXT_ENCODE" def="37" use="37" covered="0"/><counter type="DU" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="490" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/decoder/DataBlock"><method name="getDataBlocks" desc="([BLcom/google/zxing/datamatrix/decoder/Version;)[Lcom/google/zxing/datamatrix/decoder/DataBlock;"><du var="rawCodewords" def="49" use="82" covered="0"/><du var="rawCodewords" def="49" use="90" covered="0"/><du var="rawCodewords" def="49" use="99" covered="0"/><du var="rawCodewords" def="49" use="103" target="104" covered="0"/><du var="rawCodewords" def="49" use="103" target="107" covered="0"/><du var="version" def="49" use="87" target="87" covered="0"/><du var="version" def="49" use="87" target="87" covered="0"/><du var="ecBlocks" def="49" use="64" covered="0"/><du var="ecBlocks" def="49" use="75" covered="0"/><du var="totalBlocks" def="52" use="55" covered="0"/><du var="totalBlocks" def="52" use="59" covered="0"/><du var="ecBlockArray" def="53" use="61" covered="0"/><du var="ecBlockArray" def="53" use="61" covered="0"/><du var="totalBlocks" def="55" use="55" covered="0"/><du var="totalBlocks" def="55" use="59" covered="0"/><du var="result" def="59" use="65" covered="0"/><du var="result" def="59" use="72" covered="0"/><du var="result" def="59" use="82" covered="0"/><du var="result" def="59" use="90" covered="0"/><du var="result" def="59" use="94" covered="0"/><du var="result" def="59" use="99" covered="0"/><du var="result" def="59" use="107" covered="0"/><du var="numResultBlocks" def="60" use="65" covered="0"/><du var="numResultBlocks" def="60" use="81" target="80" covered="0"/><du var="numResultBlocks" def="60" use="81" target="82" covered="0"/><du var="numResultBlocks" def="60" use="88" covered="0"/><du var="numResultBlocks" def="60" use="96" target="95" covered="0"/><du var="numResultBlocks" def="60" use="96" target="97" covered="0"/><du var="numResultBlocks" def="60" use="97" covered="0"/><du var="ecBlock" def="61" use="62" target="61" covered="0"/><du var="ecBlock" def="61" use="62" target="63" covered="0"/><du var="ecBlock" def="61" use="63" covered="0"/><du var="i" def="62" use="62" target="61" covered="0"/><du var="i" def="62" use="62" target="63" covered="0"/><du var="i" def="62" use="62" covered="0"/><du var="numResultBlocks" def="65" use="65" covered="0"/><du var="numResultBlocks" def="65" use="81" target="80" covered="0"/><du var="numResultBlocks" def="65" use="81" target="82" covered="0"/><du var="numResultBlocks" def="65" use="88" covered="0"/><du var="numResultBlocks" def="65" use="96" target="95" covered="0"/><du var="numResultBlocks" def="65" use="96" target="97" covered="0"/><du var="numResultBlocks" def="65" use="97" covered="0"/><du var="i" def="62" use="62" target="61" covered="0"/><du var="i" def="62" use="62" target="63" covered="0"/><du var="i" def="62" use="62" covered="0"/><du var="longerBlocksNumDataCodewords" def="75" use="90" covered="0"/><du var="longerBlocksNumDataCodewords" def="75" use="95" covered="0"/><du var="shorterBlocksNumDataCodewords" def="76" use="80" target="87" covered="0"/><du var="shorterBlocksNumDataCodewords" def="76" use="80" target="81" covered="0"/><du var="rawCodewordsOffset" def="79" use="82" covered="0"/><du var="rawCodewordsOffset" def="79" use="90" covered="0"/><du var="rawCodewordsOffset" def="79" use="99" covered="0"/><du var="rawCodewordsOffset" def="79" use="103" target="104" covered="0"/><du var="rawCodewordsOffset" def="79" use="103" target="107" covered="0"/><du var="i" def="80" use="80" target="87" covered="0"/><du var="i" def="80" use="80" target="81" covered="0"/><du var="i" def="80" use="82" covered="0"/><du var="i" def="80" use="80" covered="0"/><du var="j" def="81" use="81" target="80" covered="0"/><du var="j" def="81" use="81" target="82" covered="0"/><du var="j" def="81" use="82" covered="0"/><du var="j" def="81" use="81" covered="0"/><du var="rawCodewordsOffset" def="82" use="82" covered="0"/><du var="rawCodewordsOffset" def="82" use="90" covered="0"/><du var="rawCodewordsOffset" def="82" use="99" covered="0"/><du var="rawCodewordsOffset" def="82" use="103" target="104" covered="0"/><du var="rawCodewordsOffset" def="82" use="103" target="107" covered="0"/><du var="j" def="81" use="81" target="80" covered="0"/><du var="j" def="81" use="81" target="82" covered="0"/><du var="j" def="81" use="82" covered="0"/><du var="j" def="81" use="81" covered="0"/><du var="i" def="80" use="80" target="87" covered="0"/><du var="i" def="80" use="80" target="81" covered="0"/><du var="i" def="80" use="82" covered="0"/><du var="i" def="80" use="80" covered="0"/><du var="specialVersion" def="87" use="88" target="88" covered="0"/><du var="specialVersion" def="87" use="88" target="88" covered="0"/><du var="specialVersion" def="87" use="97" target="97" covered="0"/><du var="specialVersion" def="87" use="97" target="97" covered="0"/><du var="specialVersion" def="87" use="98" target="98" covered="0"/><du var="specialVersion" def="87" use="98" target="98" covered="0"/><du var="numLongerBlocks" def="88" use="89" target="94" covered="0"/><du var="numLongerBlocks" def="88" use="89" target="90" covered="0"/><du var="j" def="89" use="89" target="94" covered="0"/><du var="j" def="89" use="89" target="90" covered="0"/><du var="j" def="89" use="90" covered="0"/><du var="j" def="89" use="89" covered="0"/><du var="rawCodewordsOffset" def="90" use="90" covered="0"/><du var="rawCodewordsOffset" def="90" use="99" covered="0"/><du var="rawCodewordsOffset" def="90" use="103" target="104" covered="0"/><du var="rawCodewordsOffset" def="90" use="103" target="107" covered="0"/><du var="j" def="89" use="89" target="94" covered="0"/><du var="j" def="89" use="89" target="90" covered="0"/><du var="j" def="89" use="90" covered="0"/><du var="j" def="89" use="89" covered="0"/><du var="max" def="94" use="95" target="103" covered="0"/><du var="max" def="94" use="95" target="96" covered="0"/><du var="i" def="95" use="95" target="103" covered="0"/><du var="i" def="95" use="95" target="96" covered="0"/><du var="i" def="95" use="98" covered="0"/><du var="i" def="95" use="95" covered="0"/><du var="j" def="96" use="96" target="95" covered="0"/><du var="j" def="96" use="96" target="97" covered="0"/><du var="j" def="96" use="97" covered="0"/><du var="j" def="96" use="96" covered="0"/><du var="jOffset" def="97" use="99" covered="0"/><du var="jOffset" def="97" use="98" target="98" covered="0"/><du var="jOffset" def="97" use="98" target="98" covered="0"/><du var="rawCodewordsOffset" def="99" use="99" covered="0"/><du var="rawCodewordsOffset" def="99" use="103" target="104" covered="0"/><du var="rawCodewordsOffset" def="99" use="103" target="107" covered="0"/><du var="j" def="96" use="96" target="95" covered="0"/><du var="j" def="96" use="96" target="97" covered="0"/><du var="j" def="96" use="97" covered="0"/><du var="j" def="96" use="96" covered="0"/><du var="i" def="95" use="95" target="103" covered="0"/><du var="i" def="95" use="95" target="96" covered="0"/><du var="i" def="95" use="98" covered="0"/><du var="i" def="95" use="95" covered="0"/><counter type="DU" missed="141" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="141" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/decoder/Version"><method name="&lt;init&gt;" desc="(IIIIILcom/google/zxing/datamatrix/decoder/Version$ECBlocks;)V"><du var="this" def="39" use="59" covered="1"/><du var="total" def="53" use="57" covered="1"/><du var="total" def="53" use="59" covered="0"/><du var="ecCodewords" def="54" use="57" covered="1"/><du var="total" def="57" use="57" covered="1"/><du var="total" def="57" use="59" covered="1"/><counter type="DU" missed="2" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVersionForDimensions" desc="(II)Lcom/google/zxing/datamatrix/decoder/Version;"><du var="numRows" def="99" use="99" target="99" covered="0"/><du var="numRows" def="99" use="99" target="100" covered="0"/><du var="numRows" def="99" use="104" target="104" covered="0"/><du var="numRows" def="99" use="104" target="103" covered="0"/><du var="numColumns" def="99" use="99" target="100" covered="0"/><du var="numColumns" def="99" use="99" target="103" covered="0"/><du var="numColumns" def="99" use="104" target="105" covered="0"/><du var="numColumns" def="99" use="104" target="103" covered="0"/><du var="VERSIONS" def="99" use="103" covered="0"/><du var="VERSIONS" def="99" use="103" covered="0"/><du var="version" def="103" use="104" target="104" covered="0"/><du var="version" def="103" use="104" target="103" covered="0"/><du var="version" def="103" use="104" target="105" covered="0"/><du var="version" def="103" use="104" target="103" covered="0"/><du var="version" def="103" use="105" covered="0"/><du var="version.symbolSizeRows" def="103" use="104" target="104" covered="0"/><du var="version.symbolSizeRows" def="103" use="104" target="103" covered="0"/><du var="version.symbolSizeColumns" def="103" use="104" target="105" covered="0"/><du var="version.symbolSizeColumns" def="103" use="104" target="103" covered="0"/><counter type="DU" missed="30" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="32" covered="15"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/zxing/datamatrix/DataMatrixReader"><method name="decode" desc="(Lcom/google/zxing/BinaryBitmap;Ljava/util/Map;)Lcom/google/zxing/Result;"><du var="this" def="67" use="73" covered="0"/><du var="this" def="67" use="69" covered="0"/><du var="image" def="67" use="72" covered="0"/><du var="image" def="67" use="68" covered="0"/><du var="hints" def="67" use="67" target="67" covered="0"/><du var="hints" def="67" use="67" target="72" covered="0"/><du var="hints" def="67" use="67" target="68" covered="0"/><du var="hints" def="67" use="67" target="72" covered="0"/><du var="PURE_BARCODE" def="67" use="67" target="68" covered="0"/><du var="PURE_BARCODE" def="67" use="67" target="72" covered="0"/><du var="this.decoder" def="67" use="73" covered="0"/><du var="this.decoder" def="67" use="69" covered="0"/><du var="NO_POINTS" def="67" use="70" covered="0"/><du var="DATA_MATRIX" def="67" use="76" covered="0"/><du var="BYTE_SEGMENTS" def="67" use="80" covered="0"/><du var="ERROR_CORRECTION_LEVEL" def="67" use="84" covered="0"/><du var="decoderResult" def="69" use="76" covered="0"/><du var="decoderResult" def="69" use="78" covered="0"/><du var="decoderResult" def="69" use="82" covered="0"/><du var="points" def="70" use="76" covered="0"/><du var="decoderResult" def="73" use="76" covered="0"/><du var="decoderResult" def="73" use="78" covered="0"/><du var="decoderResult" def="73" use="82" covered="0"/><du var="points" def="74" use="76" covered="0"/><du var="result" def="76" use="86" covered="0"/><du var="result" def="76" use="84" covered="0"/><du var="result" def="76" use="80" covered="0"/><du var="byteSegments" def="78" use="79" target="80" covered="0"/><du var="byteSegments" def="78" use="79" target="82" covered="0"/><du var="byteSegments" def="78" use="80" covered="0"/><du var="ecLevel" def="82" use="83" target="84" covered="0"/><du var="ecLevel" def="82" use="83" target="86" covered="0"/><du var="ecLevel" def="82" use="84" covered="0"/><counter type="DU" missed="33" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractPureBits" desc="(Lcom/google/zxing/common/BitMatrix;)Lcom/google/zxing/common/BitMatrix;"><du var="image" def="104" use="110" covered="0"/><du var="image" def="104" use="135" target="136" covered="0"/><du var="image" def="104" use="135" target="134" covered="0"/><du var="leftTopBlack" def="104" use="106" target="106" covered="0"/><du var="leftTopBlack" def="104" use="106" target="107" covered="0"/><du var="leftTopBlack" def="104" use="110" covered="0"/><du var="leftTopBlack" def="104" use="112" covered="0"/><du var="leftTopBlack" def="104" use="114" covered="0"/><du var="rightBottomBlack" def="105" use="106" target="107" covered="0"/><du var="rightBottomBlack" def="105" use="106" target="110" covered="0"/><du var="rightBottomBlack" def="105" use="113" covered="0"/><du var="rightBottomBlack" def="105" use="115" covered="0"/><du var="moduleSize" def="110" use="126" covered="0"/><du var="moduleSize" def="110" use="133" covered="0"/><du var="moduleSize" def="110" use="135" target="136" covered="0"/><du var="moduleSize" def="110" use="135" target="134" covered="0"/><du var="top" def="112" use="127" covered="0"/><du var="left" def="114" use="128" covered="0"/><du var="matrixWidth" def="117" use="119" target="119" covered="0"/><du var="matrixWidth" def="117" use="119" target="120" covered="0"/><du var="matrixWidth" def="117" use="131" covered="0"/><du var="matrixWidth" def="117" use="134" target="132" covered="0"/><du var="matrixWidth" def="117" use="134" target="135" covered="0"/><du var="matrixHeight" def="118" use="119" target="120" covered="0"/><du var="matrixHeight" def="118" use="119" target="126" covered="0"/><du var="matrixHeight" def="118" use="131" covered="0"/><du var="matrixHeight" def="118" use="132" target="140" covered="0"/><du var="matrixHeight" def="118" use="132" target="133" covered="0"/><du var="top" def="127" use="133" covered="0"/><du var="left" def="128" use="135" target="136" covered="0"/><du var="left" def="128" use="135" target="134" covered="0"/><du var="bits" def="131" use="136" covered="0"/><du var="bits" def="131" use="140" covered="0"/><du var="y" def="132" use="132" target="140" covered="0"/><du var="y" def="132" use="132" target="133" covered="0"/><du var="y" def="132" use="133" covered="0"/><du var="y" def="132" use="136" covered="0"/><du var="y" def="132" use="132" covered="0"/><du var="iOffset" def="133" use="135" target="136" covered="0"/><du var="iOffset" def="133" use="135" target="134" covered="0"/><du var="x" def="134" use="134" target="132" covered="0"/><du var="x" def="134" use="134" target="135" covered="0"/><du var="x" def="134" use="135" target="136" covered="0"/><du var="x" def="134" use="135" target="134" covered="0"/><du var="x" def="134" use="134" covered="0"/><du var="x" def="134" use="136" covered="0"/><du var="x" def="134" use="134" target="132" covered="0"/><du var="x" def="134" use="134" target="135" covered="0"/><du var="x" def="134" use="135" target="136" covered="0"/><du var="x" def="134" use="135" target="134" covered="0"/><du var="x" def="134" use="134" covered="0"/><du var="x" def="134" use="136" covered="0"/><du var="y" def="132" use="132" target="140" covered="0"/><du var="y" def="132" use="132" target="133" covered="0"/><du var="y" def="132" use="133" covered="0"/><du var="y" def="132" use="136" covered="0"/><du var="y" def="132" use="132" covered="0"/><counter type="DU" missed="57" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="moduleSize" desc="([ILcom/google/zxing/common/BitMatrix;)I"><du var="leftTopBlack" def="144" use="154" covered="0"/><du var="image" def="144" use="147" target="150" covered="0"/><du var="image" def="144" use="147" target="148" covered="0"/><du var="width" def="144" use="147" target="147" covered="0"/><du var="width" def="144" use="147" target="150" covered="0"/><du var="width" def="144" use="150" target="151" covered="0"/><du var="width" def="144" use="150" target="154" covered="0"/><du var="x" def="145" use="147" target="147" covered="0"/><du var="x" def="145" use="147" target="150" covered="0"/><du var="x" def="145" use="150" target="151" covered="0"/><du var="x" def="145" use="150" target="154" covered="0"/><du var="x" def="145" use="154" covered="0"/><du var="x" def="145" use="147" target="150" covered="0"/><du var="x" def="145" use="147" target="148" covered="0"/><du var="x" def="145" use="148" covered="0"/><du var="y" def="146" use="147" target="150" covered="0"/><du var="y" def="146" use="147" target="148" covered="0"/><du var="x" def="148" use="147" target="147" covered="0"/><du var="x" def="148" use="147" target="150" covered="0"/><du var="x" def="148" use="150" target="151" covered="0"/><du var="x" def="148" use="150" target="154" covered="0"/><du var="x" def="148" use="154" covered="0"/><du var="x" def="148" use="147" target="150" covered="0"/><du var="x" def="148" use="147" target="148" covered="0"/><du var="x" def="148" use="148" covered="0"/><du var="moduleSize" def="154" use="155" target="156" covered="0"/><du var="moduleSize" def="154" use="155" target="158" covered="0"/><du var="moduleSize" def="154" use="158" covered="0"/><counter type="DU" missed="28" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="118" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/DataMatrixWriter"><method name="encode" desc="(Ljava/lang/String;Lcom/google/zxing/BarcodeFormat;IILjava/util/Map;)Lcom/google/zxing/common/BitMatrix;"><du var="contents" def="49" use="49" target="50" covered="0"/><du var="contents" def="49" use="49" target="53" covered="0"/><du var="contents" def="49" use="84" covered="0"/><du var="format" def="49" use="53" target="54" covered="0"/><du var="format" def="49" use="53" target="57" covered="0"/><du var="format" def="49" use="54" covered="0"/><du var="width" def="49" use="57" target="57" covered="0"/><du var="width" def="49" use="57" target="58" covered="0"/><du var="width" def="49" use="58" covered="0"/><du var="height" def="49" use="58" covered="0"/><du var="height" def="49" use="57" target="58" covered="0"/><du var="height" def="49" use="57" target="62" covered="0"/><du var="hints" def="49" use="65" target="66" covered="0"/><du var="hints" def="49" use="65" target="84" covered="0"/><du var="hints" def="49" use="66" covered="0"/><du var="hints" def="49" use="71" covered="0"/><du var="hints" def="49" use="76" covered="0"/><du var="DATA_MATRIX" def="49" use="53" target="54" covered="0"/><du var="DATA_MATRIX" def="49" use="53" target="57" covered="0"/><du var="FORCE_NONE" def="49" use="62" covered="0"/><du var="DATA_MATRIX_SHAPE" def="49" use="66" covered="0"/><du var="MIN_SIZE" def="49" use="71" covered="0"/><du var="MAX_SIZE" def="49" use="76" covered="0"/><du var="shape" def="62" use="84" covered="0"/><du var="shape" def="62" use="86" covered="0"/><du var="minSize" def="63" use="84" covered="0"/><du var="minSize" def="63" use="86" covered="0"/><du var="maxSize" def="64" use="84" covered="0"/><du var="maxSize" def="64" use="86" covered="0"/><du var="requestedShape" def="66" use="67" target="68" covered="0"/><du var="requestedShape" def="66" use="67" target="71" covered="0"/><du var="requestedShape" def="66" use="68" covered="0"/><du var="shape" def="68" use="84" covered="0"/><du var="shape" def="68" use="86" covered="0"/><du var="requestedMinSize" def="71" use="72" target="73" covered="0"/><du var="requestedMinSize" def="71" use="72" target="76" covered="0"/><du var="requestedMinSize" def="71" use="73" covered="0"/><du var="minSize" def="73" use="84" covered="0"/><du var="minSize" def="73" use="86" covered="0"/><du var="requestedMaxSize" def="76" use="77" target="78" covered="0"/><du var="requestedMaxSize" def="76" use="77" target="84" covered="0"/><du var="requestedMaxSize" def="76" use="78" covered="0"/><du var="maxSize" def="78" use="84" covered="0"/><du var="maxSize" def="78" use="86" covered="0"/><counter type="DU" missed="44" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeLowLevel" desc="(Lcom/google/zxing/datamatrix/encoder/DefaultPlacement;Lcom/google/zxing/datamatrix/encoder/SymbolInfo;)Lcom/google/zxing/common/BitMatrix;"><du var="placement" def="108" use="133" covered="0"/><du var="symbolInfo" def="108" use="118" target="119" covered="0"/><du var="symbolInfo" def="108" use="118" target="126" covered="0"/><du var="symbolInfo" def="108" use="129" target="130" covered="0"/><du var="symbolInfo" def="108" use="129" target="133" covered="0"/><du var="symbolInfo" def="108" use="136" target="137" covered="0"/><du var="symbolInfo" def="108" use="136" target="127" covered="0"/><du var="symbolInfo" def="108" use="143" target="144" covered="0"/><du var="symbolInfo" def="108" use="143" target="115" covered="0"/><du var="symbolInfo" def="108" use="145" target="149" covered="0"/><du var="symbolInfo" def="108" use="145" target="146" covered="0"/><du var="symbolInfo" def="108" use="120" target="124" covered="0"/><du var="symbolInfo" def="108" use="120" target="121" covered="0"/><du var="symbolInfo.matrixHeight" def="108" use="118" target="119" covered="0"/><du var="symbolInfo.matrixHeight" def="108" use="118" target="126" covered="0"/><du var="symbolInfo.matrixHeight" def="108" use="143" target="144" covered="0"/><du var="symbolInfo.matrixHeight" def="108" use="143" target="115" covered="0"/><du var="symbolInfo.matrixWidth" def="108" use="129" target="130" covered="0"/><du var="symbolInfo.matrixWidth" def="108" use="129" target="133" covered="0"/><du var="symbolInfo.matrixWidth" def="108" use="136" target="137" covered="0"/><du var="symbolInfo.matrixWidth" def="108" use="136" target="127" covered="0"/><du var="symbolWidth" def="108" use="127" target="141" covered="0"/><du var="symbolWidth" def="108" use="127" target="129" covered="0"/><du var="symbolHeight" def="109" use="115" target="153" covered="0"/><du var="symbolHeight" def="109" use="115" target="118" covered="0"/><du var="matrix" def="111" use="133" covered="0"/><du var="matrix" def="111" use="137" covered="0"/><du var="matrix" def="111" use="130" covered="0"/><du var="matrix" def="111" use="146" covered="0"/><du var="matrix" def="111" use="121" covered="0"/><du var="matrix" def="111" use="153" covered="0"/><du var="matrixY" def="113" use="133" covered="0"/><du var="matrixY" def="113" use="137" covered="0"/><du var="matrixY" def="113" use="130" covered="0"/><du var="matrixY" def="113" use="141" covered="0"/><du var="matrixY" def="113" use="121" covered="0"/><du var="matrixY" def="113" use="124" covered="0"/><du var="y" def="115" use="115" target="153" covered="0"/><du var="y" def="115" use="115" target="118" covered="0"/><du var="y" def="115" use="118" target="119" covered="0"/><du var="y" def="115" use="118" target="126" covered="0"/><du var="y" def="115" use="133" covered="0"/><du var="y" def="115" use="137" target="137" covered="0"/><du var="y" def="115" use="137" target="137" covered="0"/><du var="y" def="115" use="143" target="144" covered="0"/><du var="y" def="115" use="143" target="115" covered="0"/><du var="y" def="115" use="115" covered="0"/><du var="matrixX" def="119" use="121" covered="0"/><du var="matrixX" def="119" use="122" covered="0"/><du var="x" def="120" use="120" target="124" covered="0"/><du var="x" def="120" use="120" target="121" covered="0"/><du var="x" def="120" use="121" target="121" covered="0"/><du var="x" def="120" use="121" target="121" covered="0"/><du var="x" def="120" use="120" covered="0"/><du var="matrixX" def="122" use="121" covered="0"/><du var="matrixX" def="122" use="122" covered="0"/><du var="x" def="120" use="120" target="124" covered="0"/><du var="x" def="120" use="120" target="121" covered="0"/><du var="x" def="120" use="121" target="121" covered="0"/><du var="x" def="120" use="121" target="121" covered="0"/><du var="x" def="120" use="120" covered="0"/><du var="matrixY" def="124" use="133" covered="0"/><du var="matrixY" def="124" use="137" covered="0"/><du var="matrixY" def="124" use="130" covered="0"/><du var="matrixY" def="124" use="141" covered="0"/><du var="matrixX" def="126" use="133" covered="0"/><du var="matrixX" def="126" use="134" covered="0"/><du var="matrixX" def="126" use="130" covered="0"/><du var="matrixX" def="126" use="131" covered="0"/><du var="x" def="127" use="127" target="141" covered="0"/><du var="x" def="127" use="127" target="129" covered="0"/><du var="x" def="127" use="129" target="130" covered="0"/><du var="x" def="127" use="129" target="133" covered="0"/><du var="x" def="127" use="133" covered="0"/><du var="x" def="127" use="136" target="137" covered="0"/><du var="x" def="127" use="136" target="127" covered="0"/><du var="x" def="127" use="127" covered="0"/><du var="matrixX" def="131" use="133" covered="0"/><du var="matrixX" def="131" use="134" covered="0"/><du var="matrixX" def="134" use="133" covered="0"/><du var="matrixX" def="134" use="134" covered="0"/><du var="matrixX" def="134" use="130" covered="0"/><du var="matrixX" def="134" use="131" covered="0"/><du var="matrixX" def="134" use="137" covered="0"/><du var="matrixX" def="134" use="138" covered="0"/><du var="matrixX" def="138" use="133" covered="0"/><du var="matrixX" def="138" use="134" covered="0"/><du var="matrixX" def="138" use="130" covered="0"/><du var="matrixX" def="138" use="131" covered="0"/><du var="x" def="127" use="127" target="141" covered="0"/><du var="x" def="127" use="127" target="129" covered="0"/><du var="x" def="127" use="129" target="130" covered="0"/><du var="x" def="127" use="129" target="133" covered="0"/><du var="x" def="127" use="133" covered="0"/><du var="x" def="127" use="136" target="137" covered="0"/><du var="x" def="127" use="136" target="127" covered="0"/><du var="x" def="127" use="127" covered="0"/><du var="matrixY" def="141" use="133" covered="0"/><du var="matrixY" def="141" use="137" covered="0"/><du var="matrixY" def="141" use="130" covered="0"/><du var="matrixY" def="141" use="141" covered="0"/><du var="matrixY" def="141" use="121" covered="0"/><du var="matrixY" def="141" use="124" covered="0"/><du var="matrixY" def="141" use="146" covered="0"/><du var="matrixY" def="141" use="149" covered="0"/><du var="matrixX" def="144" use="146" covered="0"/><du var="matrixX" def="144" use="147" covered="0"/><du var="x" def="145" use="145" target="149" covered="0"/><du var="x" def="145" use="145" target="146" covered="0"/><du var="x" def="145" use="145" covered="0"/><du var="matrixX" def="147" use="146" covered="0"/><du var="matrixX" def="147" use="147" covered="0"/><du var="x" def="145" use="145" target="149" covered="0"/><du var="x" def="145" use="145" target="146" covered="0"/><du var="x" def="145" use="145" covered="0"/><du var="matrixY" def="149" use="133" covered="0"/><du var="matrixY" def="149" use="137" covered="0"/><du var="matrixY" def="149" use="130" covered="0"/><du var="matrixY" def="149" use="141" covered="0"/><du var="matrixY" def="149" use="121" covered="0"/><du var="matrixY" def="149" use="124" covered="0"/><du var="y" def="115" use="115" target="153" covered="0"/><du var="y" def="115" use="115" target="118" covered="0"/><du var="y" def="115" use="118" target="119" covered="0"/><du var="y" def="115" use="118" target="126" covered="0"/><du var="y" def="115" use="133" covered="0"/><du var="y" def="115" use="137" target="137" covered="0"/><du var="y" def="115" use="137" target="137" covered="0"/><du var="y" def="115" use="143" target="144" covered="0"/><du var="y" def="115" use="143" target="115" covered="0"/><du var="y" def="115" use="115" covered="0"/><counter type="DU" missed="131" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertByteMatrixToBitMatrix" desc="(Lcom/google/zxing/qrcode/encoder/ByteMatrix;)Lcom/google/zxing/common/BitMatrix;"><du var="matrix" def="163" use="171" target="172" covered="0"/><du var="matrix" def="163" use="171" target="169" covered="0"/><du var="matrixWidgth" def="163" use="168" target="177" covered="0"/><du var="matrixWidgth" def="163" use="168" target="169" covered="0"/><du var="matrixHeight" def="164" use="169" target="168" covered="0"/><du var="matrixHeight" def="164" use="169" target="171" covered="0"/><du var="output" def="166" use="172" covered="0"/><du var="output" def="166" use="177" covered="0"/><du var="i" def="168" use="168" target="177" covered="0"/><du var="i" def="168" use="168" target="169" covered="0"/><du var="i" def="168" use="171" target="172" covered="0"/><du var="i" def="168" use="171" target="169" covered="0"/><du var="i" def="168" use="172" covered="0"/><du var="i" def="168" use="168" covered="0"/><du var="j" def="169" use="169" target="168" covered="0"/><du var="j" def="169" use="169" target="171" covered="0"/><du var="j" def="169" use="171" target="172" covered="0"/><du var="j" def="169" use="171" target="169" covered="0"/><du var="j" def="169" use="169" covered="0"/><du var="j" def="169" use="172" covered="0"/><du var="j" def="169" use="169" target="168" covered="0"/><du var="j" def="169" use="169" target="171" covered="0"/><du var="j" def="169" use="171" target="172" covered="0"/><du var="j" def="169" use="171" target="169" covered="0"/><du var="j" def="169" use="169" covered="0"/><du var="j" def="169" use="172" covered="0"/><du var="i" def="168" use="168" target="177" covered="0"/><du var="i" def="168" use="168" target="169" covered="0"/><du var="i" def="168" use="171" target="172" covered="0"/><du var="i" def="168" use="171" target="169" covered="0"/><du var="i" def="168" use="172" covered="0"/><du var="i" def="168" use="168" covered="0"/><counter type="DU" missed="32" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="207" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/detector/Detector"><method name="detect" desc="()Lcom/google/zxing/common/DetectorResult;"><du var="this" def="59" use="141" covered="0"/><du var="this" def="59" use="142" covered="0"/><du var="this" def="59" use="165" covered="0"/><du var="this" def="59" use="171" covered="0"/><du var="this" def="59" use="172" covered="0"/><du var="this" def="59" use="184" covered="0"/><du var="this" def="59" use="191" covered="0"/><du var="this" def="59" use="197" covered="0"/><du var="this" def="59" use="204" covered="0"/><du var="this.image" def="59" use="184" covered="0"/><du var="this.image" def="59" use="204" covered="0"/><du var="pointA" def="60" use="122" target="123" covered="0"/><du var="pointA" def="60" use="122" target="124" covered="0"/><du var="pointA" def="60" use="123" covered="0"/><du var="pointB" def="61" use="124" target="125" covered="0"/><du var="pointB" def="61" use="124" target="126" covered="0"/><du var="pointB" def="61" use="125" covered="0"/><du var="pointC" def="62" use="126" target="127" covered="0"/><du var="pointC" def="62" use="126" target="129" covered="0"/><du var="pointC" def="62" use="127" covered="0"/><du var="pointD" def="63" use="129" covered="0"/><du var="pointCount" def="82" use="122" target="123" covered="0"/><du var="pointCount" def="82" use="122" target="124" covered="0"/><du var="pointCount" def="82" use="124" target="125" covered="0"/><du var="pointCount" def="82" use="124" target="126" covered="0"/><du var="pointCount" def="82" use="126" target="127" covered="0"/><du var="pointCount" def="82" use="126" target="129" covered="0"/><du var="maybeTopLeft" def="88" use="98" target="99" covered="0"/><du var="maybeTopLeft" def="88" use="98" target="101" covered="0"/><du var="maybeTopLeft" def="88" use="106" target="106" covered="0"/><du var="maybeTopLeft" def="88" use="106" target="107" covered="0"/><du var="maybeTopLeft" def="88" use="111" covered="0"/><du var="bottomLeft" def="89" use="106" target="106" covered="0"/><du var="bottomLeft" def="89" use="106" target="107" covered="0"/><du var="bottomLeft" def="89" use="111" covered="0"/><du var="maybeBottomRight" def="90" use="106" target="107" covered="0"/><du var="maybeBottomRight" def="90" use="106" target="111" covered="0"/><du var="maybeBottomRight" def="90" use="111" covered="0"/><du var="point" def="92" use="101" covered="0"/><du var="point" def="92" use="99" covered="0"/><du var="point" def="92" use="95" covered="0"/><du var="value" def="93" use="94" target="95" covered="0"/><du var="value" def="93" use="94" target="98" covered="0"/><du var="bottomLeft" def="95" use="106" target="106" covered="0"/><du var="bottomLeft" def="95" use="106" target="107" covered="0"/><du var="bottomLeft" def="95" use="111" covered="0"/><du var="maybeTopLeft" def="99" use="98" target="99" covered="0"/><du var="maybeTopLeft" def="99" use="98" target="101" covered="0"/><du var="maybeTopLeft" def="99" use="106" target="106" covered="0"/><du var="maybeTopLeft" def="99" use="106" target="107" covered="0"/><du var="maybeTopLeft" def="99" use="111" covered="0"/><du var="maybeBottomRight" def="101" use="106" target="107" covered="0"/><du var="maybeBottomRight" def="101" use="106" target="111" covered="0"/><du var="maybeBottomRight" def="101" use="111" covered="0"/><du var="bottomRight" def="116" use="142" covered="0"/><du var="bottomRight" def="116" use="165" covered="0"/><du var="bottomRight" def="116" use="172" covered="0"/><du var="bottomRight" def="116" use="184" covered="0"/><du var="bottomRight" def="116" use="213" covered="0"/><du var="bottomRight" def="116" use="191" covered="0"/><du var="bottomRight" def="116" use="197" covered="0"/><du var="bottomRight" def="116" use="204" covered="0"/><du var="bottomLeft" def="117" use="165" covered="0"/><du var="bottomLeft" def="117" use="184" covered="0"/><du var="bottomLeft" def="117" use="213" covered="0"/><du var="bottomLeft" def="117" use="191" covered="0"/><du var="bottomLeft" def="117" use="204" covered="0"/><du var="topLeft" def="118" use="141" covered="0"/><du var="topLeft" def="118" use="165" covered="0"/><du var="topLeft" def="118" use="171" covered="0"/><du var="topLeft" def="118" use="184" covered="0"/><du var="topLeft" def="118" use="213" covered="0"/><du var="topLeft" def="118" use="191" covered="0"/><du var="topLeft" def="118" use="197" covered="0"/><du var="topLeft" def="118" use="204" covered="0"/><du var="topRight" def="123" use="141" covered="0"/><du var="topRight" def="123" use="142" covered="0"/><du var="topRight" def="123" use="165" covered="0"/><du var="topRight" def="123" use="168" covered="0"/><du var="topRight" def="123" use="191" covered="0"/><du var="topRight" def="123" use="193" covered="0"/><du var="topRight" def="125" use="141" covered="0"/><du var="topRight" def="125" use="142" covered="0"/><du var="topRight" def="125" use="165" covered="0"/><du var="topRight" def="125" use="168" covered="0"/><du var="topRight" def="125" use="191" covered="0"/><du var="topRight" def="125" use="193" covered="0"/><du var="topRight" def="127" use="141" covered="0"/><du var="topRight" def="127" use="142" covered="0"/><du var="topRight" def="127" use="165" covered="0"/><du var="topRight" def="127" use="168" covered="0"/><du var="topRight" def="127" use="191" covered="0"/><du var="topRight" def="127" use="193" covered="0"/><du var="topRight" def="129" use="141" covered="0"/><du var="topRight" def="129" use="142" covered="0"/><du var="topRight" def="129" use="165" covered="0"/><du var="topRight" def="129" use="168" covered="0"/><du var="topRight" def="129" use="191" covered="0"/><du var="topRight" def="129" use="193" covered="0"/><du var="dimensionTop" def="141" use="144" target="146" covered="0"/><du var="dimensionTop" def="141" use="144" target="148" covered="0"/><du var="dimensionTop" def="141" use="148" covered="0"/><du var="dimensionTop" def="141" use="146" covered="0"/><du var="dimensionRight" def="142" use="150" target="152" covered="0"/><du var="dimensionRight" def="142" use="150" target="154" covered="0"/><du var="dimensionRight" def="142" use="154" covered="0"/><du var="dimensionRight" def="142" use="152" covered="0"/><du var="dimensionTop" def="146" use="148" covered="0"/><du var="dimensionTop" def="148" use="162" target="162" covered="0"/><du var="dimensionTop" def="148" use="162" target="166" covered="0"/><du var="dimensionTop" def="148" use="165" covered="0"/><du var="dimensionTop" def="148" use="162" target="166" covered="0"/><du var="dimensionTop" def="148" use="162" target="189" covered="0"/><du var="dimensionTop" def="148" use="189" covered="0"/><du var="dimensionRight" def="152" use="154" covered="0"/><du var="dimensionRight" def="154" use="162" target="162" covered="0"/><du var="dimensionRight" def="154" use="162" target="166" covered="0"/><du var="dimensionRight" def="154" use="165" covered="0"/><du var="dimensionRight" def="154" use="162" target="166" covered="0"/><du var="dimensionRight" def="154" use="162" target="189" covered="0"/><du var="dimensionRight" def="154" use="189" covered="0"/><du var="correctedTopRight" def="165" use="167" target="168" covered="0"/><du var="correctedTopRight" def="165" use="167" target="171" covered="0"/><du var="correctedTopRight" def="165" use="171" covered="0"/><du var="correctedTopRight" def="165" use="172" covered="0"/><du var="correctedTopRight" def="165" use="184" covered="0"/><du var="correctedTopRight" def="165" use="213" covered="0"/><du var="correctedTopRight" def="168" use="171" covered="0"/><du var="correctedTopRight" def="168" use="172" covered="0"/><du var="correctedTopRight" def="168" use="184" covered="0"/><du var="correctedTopRight" def="168" use="213" covered="0"/><du var="dimensionTop" def="171" use="174" target="176" covered="0"/><du var="dimensionTop" def="171" use="174" target="179" covered="0"/><du var="dimensionTop" def="171" use="184" covered="0"/><du var="dimensionTop" def="171" use="176" covered="0"/><du var="dimensionRight" def="172" use="179" target="181" covered="0"/><du var="dimensionRight" def="172" use="179" target="184" covered="0"/><du var="dimensionRight" def="172" use="184" covered="0"/><du var="dimensionRight" def="172" use="181" covered="0"/><du var="dimensionTop" def="176" use="184" covered="0"/><du var="dimensionRight" def="181" use="184" covered="0"/><du var="bits" def="184" use="213" covered="0"/><du var="correctedTopRight" def="191" use="192" target="193" covered="0"/><du var="correctedTopRight" def="191" use="192" target="197" covered="0"/><du var="correctedTopRight" def="191" use="197" covered="0"/><du var="correctedTopRight" def="191" use="204" covered="0"/><du var="correctedTopRight" def="191" use="213" covered="0"/><du var="correctedTopRight" def="193" use="197" covered="0"/><du var="correctedTopRight" def="193" use="204" covered="0"/><du var="correctedTopRight" def="193" use="213" covered="0"/><du var="dimensionCorrected" def="199" use="200" target="201" covered="0"/><du var="dimensionCorrected" def="199" use="200" target="204" covered="0"/><du var="dimensionCorrected" def="199" use="204" covered="0"/><du var="dimensionCorrected" def="199" use="201" covered="0"/><du var="dimensionCorrected" def="201" use="204" covered="0"/><du var="bits" def="204" use="213" covered="0"/><counter type="DU" missed="159" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="correctTopRightRectangular" desc="(Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;II)Lcom/google/zxing/ResultPoint;"><du var="this" def="227" use="241" target="242" covered="0"/><du var="this" def="227" use="241" target="247" covered="0"/><du var="this" def="227" use="247" target="248" covered="0"/><du var="this" def="227" use="247" target="251" covered="0"/><du var="this" def="227" use="251" covered="0"/><du var="this" def="227" use="253" covered="0"/><du var="this" def="227" use="242" target="243" covered="0"/><du var="this" def="227" use="242" target="245" covered="0"/><du var="bottomRight" def="227" use="251" covered="0"/><du var="bottomRight" def="227" use="253" covered="0"/><du var="topLeft" def="227" use="251" covered="0"/><du var="topLeft" def="227" use="253" covered="0"/><du var="dimensionTop" def="227" use="251" covered="0"/><du var="dimensionTop" def="227" use="253" covered="0"/><du var="dimensionRight" def="227" use="251" covered="0"/><du var="dimensionRight" def="227" use="253" covered="0"/><du var="c1" def="232" use="241" target="242" covered="0"/><du var="c1" def="232" use="241" target="247" covered="0"/><du var="c1" def="232" use="251" covered="0"/><du var="c1" def="232" use="257" covered="0"/><du var="c1" def="232" use="248" covered="0"/><du var="c2" def="239" use="247" target="248" covered="0"/><du var="c2" def="239" use="247" target="251" covered="0"/><du var="c2" def="239" use="253" covered="0"/><du var="c2" def="239" use="260" covered="0"/><du var="c2" def="239" use="242" target="243" covered="0"/><du var="c2" def="239" use="242" target="245" covered="0"/><du var="c2" def="239" use="243" covered="0"/><du var="l1" def="251" use="256" target="257" covered="0"/><du var="l1" def="251" use="256" target="260" covered="0"/><du var="l2" def="253" use="256" target="257" covered="0"/><du var="l2" def="253" use="256" target="260" covered="0"/><counter type="DU" missed="32" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="correctTopRight" desc="(Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;I)Lcom/google/zxing/ResultPoint;"><du var="this" def="273" use="287" target="288" covered="0"/><du var="this" def="273" use="287" target="293" covered="0"/><du var="this" def="273" use="293" target="294" covered="0"/><du var="this" def="273" use="293" target="297" covered="0"/><du var="this" def="273" use="297" covered="0"/><du var="this" def="273" use="299" covered="0"/><du var="this" def="273" use="288" target="289" covered="0"/><du var="this" def="273" use="288" target="291" covered="0"/><du var="bottomRight" def="273" use="297" covered="0"/><du var="bottomRight" def="273" use="299" covered="0"/><du var="topLeft" def="273" use="297" covered="0"/><du var="topLeft" def="273" use="299" covered="0"/><du var="c1" def="278" use="287" target="288" covered="0"/><du var="c1" def="278" use="287" target="293" covered="0"/><du var="c1" def="278" use="297" covered="0"/><du var="c1" def="278" use="302" covered="0"/><du var="c1" def="278" use="294" covered="0"/><du var="c2" def="285" use="293" target="294" covered="0"/><du var="c2" def="285" use="293" target="297" covered="0"/><du var="c2" def="285" use="299" covered="0"/><du var="c2" def="285" use="302" covered="0"/><du var="c2" def="285" use="288" target="289" covered="0"/><du var="c2" def="285" use="288" target="291" covered="0"/><du var="c2" def="285" use="289" covered="0"/><du var="l1" def="297" use="302" target="302" covered="0"/><du var="l1" def="297" use="302" target="302" covered="0"/><du var="l2" def="299" use="302" target="302" covered="0"/><du var="l2" def="299" use="302" target="302" covered="0"/><counter type="DU" missed="28" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValid" desc="(Lcom/google/zxing/ResultPoint;)Z"><du var="this" def="306" use="306" target="306" covered="0"/><du var="this" def="306" use="306" target="306" covered="0"/><du var="this" def="306" use="306" target="306" covered="0"/><du var="this" def="306" use="306" target="306" covered="0"/><du var="p" def="306" use="306" target="306" covered="0"/><du var="p" def="306" use="306" target="306" covered="0"/><du var="p" def="306" use="306" target="306" covered="0"/><du var="p" def="306" use="306" target="306" covered="0"/><du var="p" def="306" use="306" target="306" covered="0"/><du var="p" def="306" use="306" target="306" covered="0"/><du var="p" def="306" use="306" target="306" covered="0"/><du var="p" def="306" use="306" target="306" covered="0"/><du var="this.image" def="306" use="306" target="306" covered="0"/><du var="this.image" def="306" use="306" target="306" covered="0"/><du var="this.image" def="306" use="306" target="306" covered="0"/><du var="this.image" def="306" use="306" target="306" covered="0"/><counter type="DU" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="increment" desc="(Ljava/util/Map;Lcom/google/zxing/ResultPoint;)V"><du var="table" def="317" use="318" covered="0"/><du var="key" def="317" use="318" covered="0"/><du var="value" def="317" use="318" target="318" covered="0"/><du var="value" def="317" use="318" target="318" covered="0"/><du var="value" def="317" use="318" covered="0"/><counter type="DU" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transitionsBetween" desc="(Lcom/google/zxing/ResultPoint;Lcom/google/zxing/ResultPoint;)Lcom/google/zxing/datamatrix/detector/Detector$ResultPointsAndTransitions;"><du var="this" def="357" use="377" covered="0"/><du var="this" def="357" use="379" covered="0"/><du var="from" def="357" use="393" covered="0"/><du var="to" def="357" use="393" covered="0"/><du var="this.image" def="357" use="377" covered="0"/><du var="this.image" def="357" use="379" covered="0"/><du var="fromX" def="357" use="361" target="361" covered="0"/><du var="fromX" def="357" use="361" target="361" covered="0"/><du var="fromX" def="357" use="371" covered="0"/><du var="fromX" def="357" use="375" target="375" covered="0"/><du var="fromX" def="357" use="375" target="375" covered="0"/><du var="fromX" def="357" use="377" covered="0"/><du var="fromX" def="357" use="378" covered="0"/><du var="fromX" def="357" use="363" covered="0"/><du var="fromY" def="358" use="361" target="361" covered="0"/><du var="fromY" def="358" use="361" target="361" covered="0"/><du var="fromY" def="358" use="372" covered="0"/><du var="fromY" def="358" use="374" target="374" covered="0"/><du var="fromY" def="358" use="374" target="374" covered="0"/><du var="fromY" def="358" use="377" covered="0"/><du var="fromY" def="358" use="378" covered="0"/><du var="fromY" def="358" use="364" covered="0"/><du var="toX" def="359" use="361" target="361" covered="0"/><du var="toX" def="359" use="361" target="361" covered="0"/><du var="toX" def="359" use="371" covered="0"/><du var="toX" def="359" use="375" target="375" covered="0"/><du var="toX" def="359" use="375" target="375" covered="0"/><du var="toX" def="359" use="378" target="393" covered="0"/><du var="toX" def="359" use="378" target="379" covered="0"/><du var="toX" def="359" use="366" covered="0"/><du var="toY" def="360" use="361" target="361" covered="0"/><du var="toY" def="360" use="361" target="361" covered="0"/><du var="toY" def="360" use="372" covered="0"/><du var="toY" def="360" use="374" target="374" covered="0"/><du var="toY" def="360" use="374" target="374" covered="0"/><du var="toY" def="360" use="386" target="387" covered="0"/><du var="toY" def="360" use="386" target="389" covered="0"/><du var="toY" def="360" use="367" covered="0"/><du var="steep" def="361" use="362" target="363" covered="0"/><du var="steep" def="361" use="362" target="371" covered="0"/><du var="steep" def="361" use="377" target="377" covered="0"/><du var="steep" def="361" use="377" target="377" covered="0"/><du var="steep" def="361" use="377" target="377" covered="0"/><du var="steep" def="361" use="377" target="377" covered="0"/><du var="steep" def="361" use="379" target="379" covered="0"/><du var="steep" def="361" use="379" target="379" covered="0"/><du var="steep" def="361" use="379" target="379" covered="0"/><du var="steep" def="361" use="379" target="379" covered="0"/><du var="fromX" def="364" use="371" covered="0"/><du var="fromX" def="364" use="375" target="375" covered="0"/><du var="fromX" def="364" use="375" target="375" covered="0"/><du var="fromX" def="364" use="377" covered="0"/><du var="fromX" def="364" use="378" covered="0"/><du var="fromY" def="365" use="372" covered="0"/><du var="fromY" def="365" use="374" target="374" covered="0"/><du var="fromY" def="365" use="374" target="374" covered="0"/><du var="fromY" def="365" use="377" covered="0"/><du var="fromY" def="365" use="378" covered="0"/><du var="toX" def="367" use="371" covered="0"/><du var="toX" def="367" use="375" target="375" covered="0"/><du var="toX" def="367" use="375" target="375" covered="0"/><du var="toX" def="367" use="378" target="393" covered="0"/><du var="toX" def="367" use="378" target="379" covered="0"/><du var="toY" def="368" use="372" covered="0"/><du var="toY" def="368" use="374" target="374" covered="0"/><du var="toY" def="368" use="374" target="374" covered="0"/><du var="toY" def="368" use="386" target="387" covered="0"/><du var="toY" def="368" use="386" target="389" covered="0"/><du var="dx" def="371" use="390" covered="0"/><du var="dy" def="372" use="384" covered="0"/><du var="error" def="373" use="384" covered="0"/><du var="ystep" def="374" use="389" covered="0"/><du var="xstep" def="375" use="378" covered="0"/><du var="transitions" def="376" use="381" covered="0"/><du var="transitions" def="376" use="393" covered="0"/><du var="inBlack" def="377" use="380" target="381" covered="0"/><du var="inBlack" def="377" use="380" target="384" covered="0"/><du var="x" def="378" use="378" target="393" covered="0"/><du var="x" def="378" use="378" target="379" covered="0"/><du var="x" def="378" use="379" covered="0"/><du var="x" def="378" use="378" covered="0"/><du var="y" def="378" use="379" covered="0"/><du var="y" def="378" use="386" target="387" covered="0"/><du var="y" def="378" use="386" target="389" covered="0"/><du var="y" def="378" use="389" covered="0"/><du var="isBlack" def="379" use="380" target="381" covered="0"/><du var="isBlack" def="379" use="380" target="384" covered="0"/><du var="isBlack" def="379" use="382" covered="0"/><du var="transitions" def="381" use="381" covered="0"/><du var="transitions" def="381" use="393" covered="0"/><du var="inBlack" def="382" use="380" target="381" covered="0"/><du var="inBlack" def="382" use="380" target="384" covered="0"/><du var="error" def="384" use="385" target="386" covered="0"/><du var="error" def="384" use="385" target="378" covered="0"/><du var="error" def="384" use="384" covered="0"/><du var="error" def="384" use="390" covered="0"/><du var="y" def="389" use="379" covered="0"/><du var="y" def="389" use="386" target="387" covered="0"/><du var="y" def="389" use="386" target="389" covered="0"/><du var="y" def="389" use="389" covered="0"/><du var="error" def="390" use="384" covered="0"/><du var="x" def="378" use="378" target="393" covered="0"/><du var="x" def="378" use="378" target="379" covered="0"/><du var="x" def="378" use="379" covered="0"/><du var="x" def="378" use="378" covered="0"/><counter type="DU" missed="105" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="345" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/encoder/DefaultPlacement"><method name="getBit" desc="(II)Z"><du var="this" def="59" use="59" target="59" covered="0"/><du var="this" def="59" use="59" target="59" covered="0"/><du var="col" def="59" use="59" target="59" covered="0"/><du var="col" def="59" use="59" target="59" covered="0"/><du var="row" def="59" use="59" target="59" covered="0"/><du var="row" def="59" use="59" target="59" covered="0"/><du var="this.bits" def="59" use="59" target="59" covered="0"/><du var="this.bits" def="59" use="59" target="59" covered="0"/><du var="this.numcols" def="59" use="59" target="59" covered="0"/><du var="this.numcols" def="59" use="59" target="59" covered="0"/><counter type="DU" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBit" desc="(IIZ)V"><du var="this" def="63" use="63" covered="0"/><du var="col" def="63" use="63" covered="0"/><du var="row" def="63" use="63" covered="0"/><du var="bit" def="63" use="63" target="63" covered="0"/><du var="bit" def="63" use="63" target="63" covered="0"/><du var="this.numcols" def="63" use="63" covered="0"/><du var="this.bits" def="63" use="63" covered="0"/><counter type="DU" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasBit" desc="(II)Z"><du var="this" def="67" use="67" target="67" covered="0"/><du var="this" def="67" use="67" target="67" covered="0"/><du var="col" def="67" use="67" target="67" covered="0"/><du var="col" def="67" use="67" target="67" covered="0"/><du var="row" def="67" use="67" target="67" covered="0"/><du var="row" def="67" use="67" target="67" covered="0"/><du var="this.bits" def="67" use="67" target="67" covered="0"/><du var="this.bits" def="67" use="67" target="67" covered="0"/><du var="this.numcols" def="67" use="67" target="67" covered="0"/><du var="this.numcols" def="67" use="67" target="67" covered="0"/><counter type="DU" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="place" desc="()V"><du var="this" def="71" use="77" target="77" covered="0"/><du var="this" def="71" use="77" target="80" covered="0"/><du var="this" def="71" use="80" target="80" covered="0"/><du var="this" def="71" use="80" target="83" covered="0"/><du var="this" def="71" use="83" target="83" covered="0"/><du var="this" def="71" use="83" target="86" covered="0"/><du var="this" def="71" use="86" target="86" covered="0"/><du var="this" def="71" use="86" target="91" covered="0"/><du var="this" def="71" use="91" target="91" covered="0"/><du var="this" def="71" use="91" target="94" covered="0"/><du var="this" def="71" use="107" target="107" covered="0"/><du var="this" def="71" use="107" target="108" covered="0"/><du var="this" def="71" use="112" target="112" covered="0"/><du var="this" def="71" use="112" target="77" covered="0"/><du var="this" def="71" use="75" target="115" covered="0"/><du var="this" def="71" use="75" target="77" covered="0"/><du var="this" def="71" use="115" target="116" covered="0"/><du var="this" def="71" use="115" target="119" covered="0"/><du var="this" def="71" use="116" covered="0"/><du var="this" def="71" use="117" covered="0"/><du var="this" def="71" use="102" target="102" covered="0"/><du var="this" def="71" use="102" target="105" covered="0"/><du var="this" def="71" use="102" target="103" covered="0"/><du var="this" def="71" use="102" target="105" covered="0"/><du var="this" def="71" use="103" covered="0"/><du var="this" def="71" use="90" target="97" covered="0"/><du var="this" def="71" use="90" target="91" covered="0"/><du var="this" def="71" use="91" target="92" covered="0"/><du var="this" def="71" use="91" target="94" covered="0"/><du var="this" def="71" use="92" covered="0"/><du var="this" def="71" use="86" target="87" covered="0"/><du var="this" def="71" use="86" target="91" covered="0"/><du var="this" def="71" use="87" covered="0"/><du var="this" def="71" use="83" target="84" covered="0"/><du var="this" def="71" use="83" target="86" covered="0"/><du var="this" def="71" use="84" covered="0"/><du var="this" def="71" use="80" target="81" covered="0"/><du var="this" def="71" use="80" target="83" covered="0"/><du var="this" def="71" use="81" covered="0"/><du var="this" def="71" use="78" covered="0"/><du var="this.numrows" def="71" use="77" target="77" covered="0"/><du var="this.numrows" def="71" use="77" target="80" covered="0"/><du var="this.numrows" def="71" use="80" target="80" covered="0"/><du var="this.numrows" def="71" use="80" target="83" covered="0"/><du var="this.numrows" def="71" use="83" target="83" covered="0"/><du var="this.numrows" def="71" use="83" target="86" covered="0"/><du var="this.numrows" def="71" use="86" target="86" covered="0"/><du var="this.numrows" def="71" use="86" target="91" covered="0"/><du var="this.numrows" def="71" use="91" target="91" covered="0"/><du var="this.numrows" def="71" use="91" target="94" covered="0"/><du var="this.numrows" def="71" use="107" target="107" covered="0"/><du var="this.numrows" def="71" use="107" target="108" covered="0"/><du var="this.numrows" def="71" use="112" target="112" covered="0"/><du var="this.numrows" def="71" use="112" target="77" covered="0"/><du var="this.numrows" def="71" use="115" target="116" covered="0"/><du var="this.numrows" def="71" use="115" target="119" covered="0"/><du var="this.numrows" def="71" use="116" covered="0"/><du var="this.numrows" def="71" use="117" covered="0"/><du var="this.numcols" def="71" use="75" target="115" covered="0"/><du var="this.numcols" def="71" use="75" target="77" covered="0"/><du var="this.numcols" def="71" use="115" target="116" covered="0"/><du var="this.numcols" def="71" use="115" target="119" covered="0"/><du var="this.numcols" def="71" use="116" covered="0"/><du var="this.numcols" def="71" use="117" covered="0"/><du var="this.numcols" def="71" use="102" target="102" covered="0"/><du var="this.numcols" def="71" use="102" target="105" covered="0"/><du var="this.numcols" def="71" use="90" target="97" covered="0"/><du var="this.numcols" def="71" use="90" target="91" covered="0"/><du var="this.numcols" def="71" use="86" target="87" covered="0"/><du var="this.numcols" def="71" use="86" target="91" covered="0"/><du var="this.numcols" def="71" use="83" target="84" covered="0"/><du var="this.numcols" def="71" use="83" target="86" covered="0"/><du var="this.numcols" def="71" use="80" target="81" covered="0"/><du var="this.numcols" def="71" use="80" target="83" covered="0"/><du var="pos" def="71" use="103" covered="0"/><du var="pos" def="71" use="92" covered="0"/><du var="pos" def="71" use="87" covered="0"/><du var="pos" def="71" use="84" covered="0"/><du var="pos" def="71" use="81" covered="0"/><du var="pos" def="71" use="78" covered="0"/><du var="row" def="72" use="77" target="77" covered="0"/><du var="row" def="72" use="77" target="80" covered="0"/><du var="row" def="72" use="80" target="80" covered="0"/><du var="row" def="72" use="80" target="83" covered="0"/><du var="row" def="72" use="83" target="83" covered="0"/><du var="row" def="72" use="83" target="86" covered="0"/><du var="row" def="72" use="86" target="86" covered="0"/><du var="row" def="72" use="86" target="91" covered="0"/><du var="row" def="72" use="91" target="91" covered="0"/><du var="row" def="72" use="91" target="94" covered="0"/><du var="row" def="72" use="94" covered="0"/><du var="row" def="72" use="91" target="92" covered="0"/><du var="row" def="72" use="91" target="94" covered="0"/><du var="row" def="72" use="92" covered="0"/><du var="col" def="73" use="95" covered="0"/><du var="col" def="73" use="91" target="91" covered="0"/><du var="col" def="73" use="91" target="94" covered="0"/><du var="col" def="73" use="91" target="92" covered="0"/><du var="col" def="73" use="91" target="94" covered="0"/><du var="col" def="73" use="92" covered="0"/><du var="col" def="73" use="86" target="86" covered="0"/><du var="col" def="73" use="86" target="91" covered="0"/><du var="col" def="73" use="83" target="83" covered="0"/><du var="col" def="73" use="83" target="86" covered="0"/><du var="col" def="73" use="80" target="80" covered="0"/><du var="col" def="73" use="80" target="83" covered="0"/><du var="col" def="73" use="77" target="78" covered="0"/><du var="col" def="73" use="77" target="80" covered="0"/><du var="pos" def="78" use="78" covered="0"/><du var="pos" def="78" use="103" covered="0"/><du var="pos" def="78" use="92" covered="0"/><du var="pos" def="78" use="87" covered="0"/><du var="pos" def="78" use="84" covered="0"/><du var="pos" def="78" use="81" covered="0"/><du var="pos" def="81" use="81" covered="0"/><du var="pos" def="81" use="78" covered="0"/><du var="pos" def="81" use="103" covered="0"/><du var="pos" def="81" use="92" covered="0"/><du var="pos" def="81" use="87" covered="0"/><du var="pos" def="81" use="84" covered="0"/><du var="pos" def="84" use="84" covered="0"/><du var="pos" def="84" use="81" covered="0"/><du var="pos" def="84" use="78" covered="0"/><du var="pos" def="84" use="103" covered="0"/><du var="pos" def="84" use="92" covered="0"/><du var="pos" def="84" use="87" covered="0"/><du var="pos" def="87" use="87" covered="0"/><du var="pos" def="87" use="84" covered="0"/><du var="pos" def="87" use="81" covered="0"/><du var="pos" def="87" use="78" covered="0"/><du var="pos" def="87" use="103" covered="0"/><du var="pos" def="87" use="92" covered="0"/><du var="pos" def="92" use="92" covered="0"/><du var="pos" def="92" use="87" covered="0"/><du var="pos" def="92" use="84" covered="0"/><du var="pos" def="92" use="81" covered="0"/><du var="pos" def="92" use="78" covered="0"/><du var="pos" def="92" use="103" covered="0"/><du var="row" def="94" use="96" target="96" covered="0"/><du var="row" def="94" use="96" target="97" covered="0"/><du var="row" def="94" use="97" covered="0"/><du var="row" def="94" use="91" target="91" covered="0"/><du var="row" def="94" use="91" target="94" covered="0"/><du var="row" def="94" use="94" covered="0"/><du var="row" def="94" use="91" target="92" covered="0"/><du var="row" def="94" use="91" target="94" covered="0"/><du var="row" def="94" use="92" covered="0"/><du var="col" def="95" use="98" covered="0"/><du var="col" def="95" use="90" target="97" covered="0"/><du var="col" def="95" use="90" target="91" covered="0"/><du var="col" def="95" use="95" covered="0"/><du var="col" def="95" use="91" target="91" covered="0"/><du var="col" def="95" use="91" target="94" covered="0"/><du var="col" def="95" use="91" target="92" covered="0"/><du var="col" def="95" use="91" target="94" covered="0"/><du var="col" def="95" use="92" covered="0"/><du var="row" def="97" use="102" target="102" covered="0"/><du var="row" def="97" use="102" target="105" covered="0"/><du var="row" def="97" use="105" covered="0"/><du var="row" def="97" use="102" target="103" covered="0"/><du var="row" def="97" use="102" target="105" covered="0"/><du var="row" def="97" use="103" covered="0"/><du var="col" def="98" use="106" covered="0"/><du var="col" def="98" use="102" target="102" covered="0"/><du var="col" def="98" use="102" target="105" covered="0"/><du var="col" def="98" use="102" target="103" covered="0"/><du var="col" def="98" use="102" target="105" covered="0"/><du var="col" def="98" use="103" covered="0"/><du var="pos" def="103" use="103" covered="0"/><du var="pos" def="103" use="92" covered="0"/><du var="pos" def="103" use="87" covered="0"/><du var="pos" def="103" use="84" covered="0"/><du var="pos" def="103" use="81" covered="0"/><du var="pos" def="103" use="78" covered="0"/><du var="row" def="105" use="107" target="107" covered="0"/><du var="row" def="105" use="107" target="108" covered="0"/><du var="row" def="105" use="108" covered="0"/><du var="row" def="105" use="102" target="102" covered="0"/><du var="row" def="105" use="102" target="105" covered="0"/><du var="row" def="105" use="105" covered="0"/><du var="row" def="105" use="102" target="103" covered="0"/><du var="row" def="105" use="102" target="105" covered="0"/><du var="row" def="105" use="103" covered="0"/><du var="col" def="106" use="109" covered="0"/><du var="col" def="106" use="101" target="108" covered="0"/><du var="col" def="106" use="101" target="102" covered="0"/><du var="col" def="106" use="106" covered="0"/><du var="col" def="106" use="102" target="102" covered="0"/><du var="col" def="106" use="102" target="105" covered="0"/><du var="col" def="106" use="102" target="103" covered="0"/><du var="col" def="106" use="102" target="105" covered="0"/><du var="col" def="106" use="103" covered="0"/><du var="row" def="108" use="112" target="112" covered="0"/><du var="row" def="108" use="112" target="77" covered="0"/><du var="row" def="108" use="77" target="77" covered="0"/><du var="row" def="108" use="77" target="80" covered="0"/><du var="row" def="108" use="80" target="80" covered="0"/><du var="row" def="108" use="80" target="83" covered="0"/><du var="row" def="108" use="83" target="83" covered="0"/><du var="row" def="108" use="83" target="86" covered="0"/><du var="row" def="108" use="86" target="86" covered="0"/><du var="row" def="108" use="86" target="91" covered="0"/><du var="row" def="108" use="91" target="91" covered="0"/><du var="row" def="108" use="91" target="94" covered="0"/><du var="row" def="108" use="94" covered="0"/><du var="row" def="108" use="91" target="92" covered="0"/><du var="row" def="108" use="91" target="94" covered="0"/><du var="row" def="108" use="92" covered="0"/><du var="col" def="109" use="95" covered="0"/><du var="col" def="109" use="91" target="91" covered="0"/><du var="col" def="109" use="91" target="94" covered="0"/><du var="col" def="109" use="91" target="92" covered="0"/><du var="col" def="109" use="91" target="94" covered="0"/><du var="col" def="109" use="92" covered="0"/><du var="col" def="109" use="86" target="86" covered="0"/><du var="col" def="109" use="86" target="91" covered="0"/><du var="col" def="109" use="83" target="83" covered="0"/><du var="col" def="109" use="83" target="86" covered="0"/><du var="col" def="109" use="80" target="80" covered="0"/><du var="col" def="109" use="80" target="83" covered="0"/><du var="col" def="109" use="77" target="78" covered="0"/><du var="col" def="109" use="77" target="80" covered="0"/><du var="col" def="109" use="75" target="115" covered="0"/><du var="col" def="109" use="75" target="77" covered="0"/><counter type="DU" missed="224" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(IIII)V"><du var="this" def="122" use="131" covered="0"/><du var="this" def="122" use="133" covered="0"/><du var="this" def="122" use="127" covered="0"/><du var="this" def="122" use="128" covered="0"/><du var="this" def="122" use="123" covered="0"/><du var="this" def="122" use="124" covered="0"/><du var="row" def="122" use="122" target="123" covered="0"/><du var="row" def="122" use="122" target="126" covered="0"/><du var="row" def="122" use="133" covered="0"/><du var="row" def="122" use="128" covered="0"/><du var="row" def="122" use="123" covered="0"/><du var="col" def="122" use="126" target="127" covered="0"/><du var="col" def="122" use="126" target="131" covered="0"/><du var="col" def="122" use="133" covered="0"/><du var="col" def="122" use="127" covered="0"/><du var="col" def="122" use="124" covered="0"/><du var="pos" def="122" use="131" covered="0"/><du var="bit" def="122" use="132" covered="0"/><du var="this.numrows" def="122" use="123" covered="0"/><du var="this.numrows" def="122" use="124" covered="0"/><du var="this.numcols" def="122" use="127" covered="0"/><du var="this.numcols" def="122" use="128" covered="0"/><du var="this.codewords" def="122" use="131" covered="0"/><du var="row" def="123" use="133" covered="0"/><du var="row" def="123" use="128" covered="0"/><du var="col" def="124" use="126" target="127" covered="0"/><du var="col" def="124" use="126" target="131" covered="0"/><du var="col" def="124" use="133" covered="0"/><du var="col" def="124" use="127" covered="0"/><du var="col" def="127" use="133" covered="0"/><du var="row" def="128" use="133" covered="0"/><du var="v" def="132" use="133" target="133" covered="0"/><du var="v" def="132" use="133" target="133" covered="0"/><counter type="DU" missed="33" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="284" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/encoder/Base256Encoder"><method name="encode" desc="(Lcom/google/zxing/datamatrix/encoder/EncoderContext;)V"><du var="this" def="28" use="36" covered="0"/><du var="this" def="28" use="37" target="38" covered="0"/><du var="this" def="28" use="37" target="30" covered="0"/><du var="context" def="28" use="30" target="42" covered="0"/><du var="context" def="28" use="30" target="31" covered="0"/><du var="context" def="28" use="31" covered="0"/><du var="context" def="28" use="34" covered="0"/><du var="context" def="28" use="36" covered="0"/><du var="context" def="28" use="38" covered="0"/><du var="context" def="28" use="44" covered="0"/><du var="context" def="28" use="45" covered="0"/><du var="context" def="28" use="46" target="46" covered="0"/><du var="context" def="28" use="46" target="46" covered="0"/><du var="context" def="28" use="47" target="47" covered="0"/><du var="context" def="28" use="47" target="48" covered="0"/><du var="context" def="28" use="59" covered="0"/><du var="context.pos" def="28" use="34" covered="0"/><du var="buffer" def="28" use="32" covered="0"/><du var="buffer" def="28" use="42" covered="0"/><du var="buffer" def="28" use="51" covered="0"/><du var="buffer" def="28" use="52" covered="0"/><du var="buffer" def="28" use="58" covered="0"/><du var="buffer" def="28" use="59" covered="0"/><du var="buffer" def="28" use="49" covered="0"/><du var="context.pos" def="34" use="34" covered="0"/><du var="newMode" def="36" use="37" target="38" covered="0"/><du var="newMode" def="36" use="37" target="30" covered="0"/><du var="newMode" def="36" use="38" covered="0"/><du var="dataCount" def="42" use="48" target="49" covered="0"/><du var="dataCount" def="42" use="48" target="50" covered="0"/><du var="dataCount" def="42" use="50" target="51" covered="0"/><du var="dataCount" def="42" use="50" target="54" covered="0"/><du var="dataCount" def="42" use="54" covered="0"/><du var="dataCount" def="42" use="51" covered="0"/><du var="dataCount" def="42" use="52" covered="0"/><du var="dataCount" def="42" use="49" covered="0"/><du var="currentSize" def="44" use="46" target="46" covered="0"/><du var="currentSize" def="44" use="46" target="46" covered="0"/><du var="mustPad" def="46" use="47" target="48" covered="0"/><du var="mustPad" def="46" use="47" target="58" covered="0"/><du var="i" def="58" use="58" target="62" covered="0"/><du var="i" def="58" use="58" target="59" covered="0"/><du var="i" def="58" use="59" covered="0"/><du var="i" def="58" use="58" covered="0"/><du var="c" def="58" use="58" target="62" covered="0"/><du var="c" def="58" use="58" target="59" covered="0"/><du var="i" def="58" use="58" target="62" covered="0"/><du var="i" def="58" use="58" target="59" covered="0"/><du var="i" def="58" use="59" covered="0"/><du var="i" def="58" use="58" covered="0"/><counter type="DU" missed="50" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randomize255State" desc="(CI)C"><du var="tempVariable" def="66" use="67" target="68" covered="0"/><du var="tempVariable" def="66" use="67" target="70" covered="0"/><du var="tempVariable" def="66" use="70" covered="0"/><du var="tempVariable" def="66" use="68" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="54" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/encoder/X12Encoder"><method name="encode" desc="(Lcom/google/zxing/datamatrix/encoder/EncoderContext;)V"><du var="this" def="29" use="34" covered="0"/><du var="this" def="29" use="40" covered="0"/><du var="this" def="29" use="41" target="42" covered="0"/><du var="this" def="29" use="41" target="30" covered="0"/><du var="this" def="29" use="47" covered="0"/><du var="context" def="29" use="30" target="47" covered="0"/><du var="context" def="29" use="30" target="31" covered="0"/><du var="context" def="29" use="31" covered="0"/><du var="context" def="29" use="32" covered="0"/><du var="context" def="29" use="38" covered="0"/><du var="context" def="29" use="40" covered="0"/><du var="context" def="29" use="42" covered="0"/><du var="context" def="29" use="47" covered="0"/><du var="context.pos" def="29" use="32" covered="0"/><du var="buffer" def="29" use="34" covered="0"/><du var="buffer" def="29" use="36" covered="0"/><du var="buffer" def="29" use="38" covered="0"/><du var="buffer" def="29" use="47" covered="0"/><du var="context.pos" def="32" use="32" covered="0"/><du var="context.pos" def="32" use="40" covered="0"/><du var="count" def="36" use="37" target="38" covered="0"/><du var="count" def="36" use="37" target="30" covered="0"/><du var="newMode" def="40" use="41" target="42" covered="0"/><du var="newMode" def="40" use="41" target="30" covered="0"/><du var="newMode" def="40" use="42" covered="0"/><counter type="DU" missed="25" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeChar" desc="(CLjava/lang/StringBuilder;)I"><du var="c" def="52" use="52" target="66" covered="0"/><du var="c" def="52" use="52" target="54" covered="0"/><du var="c" def="52" use="52" target="63" covered="0"/><du var="c" def="52" use="52" target="57" covered="0"/><du var="c" def="52" use="52" target="60" covered="0"/><du var="c" def="52" use="66" target="66" covered="0"/><du var="c" def="52" use="66" target="68" covered="0"/><du var="c" def="52" use="68" target="68" covered="0"/><du var="c" def="52" use="68" target="71" covered="0"/><du var="c" def="52" use="71" covered="0"/><du var="c" def="52" use="68" target="69" covered="0"/><du var="c" def="52" use="68" target="71" covered="0"/><du var="c" def="52" use="69" covered="0"/><du var="c" def="52" use="66" target="67" covered="0"/><du var="c" def="52" use="66" target="68" covered="0"/><du var="c" def="52" use="67" covered="0"/><du var="sb" def="52" use="60" covered="0"/><du var="sb" def="52" use="57" covered="0"/><du var="sb" def="52" use="63" covered="0"/><du var="sb" def="52" use="54" covered="0"/><du var="sb" def="52" use="69" covered="0"/><du var="sb" def="52" use="67" covered="0"/><counter type="DU" missed="22" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleEOD" desc="(Lcom/google/zxing/datamatrix/encoder/EncoderContext;Ljava/lang/StringBuilder;)V"><du var="context" def="80" use="84" target="84" covered="0"/><du var="context" def="80" use="84" target="86" covered="0"/><du var="context" def="80" use="86" covered="0"/><du var="context" def="80" use="88" target="89" covered="0"/><du var="context" def="80" use="88" target="91" covered="0"/><du var="context" def="80" use="89" covered="0"/><du var="context" def="80" use="85" target="86" covered="0"/><du var="context" def="80" use="85" target="88" covered="0"/><du var="available" def="81" use="84" target="85" covered="0"/><du var="available" def="81" use="84" target="86" covered="0"/><du var="available" def="81" use="85" target="86" covered="0"/><du var="available" def="81" use="85" target="88" covered="0"/><counter type="DU" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="59" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/encoder/C40Encoder"><method name="encode" desc="(Lcom/google/zxing/datamatrix/encoder/EncoderContext;)V"><du var="this" def="29" use="34" covered="0"/><du var="this" def="29" use="60" covered="0"/><du var="this" def="29" use="61" target="62" covered="0"/><du var="this" def="29" use="61" target="30" covered="0"/><du var="this" def="29" use="53" covered="0"/><du var="this" def="29" use="47" covered="0"/><du var="this" def="29" use="67" covered="0"/><du var="context" def="29" use="30" target="67" covered="0"/><du var="context" def="29" use="30" target="31" covered="0"/><du var="context" def="29" use="31" covered="0"/><du var="context" def="29" use="32" covered="0"/><du var="context" def="29" use="38" covered="0"/><du var="context" def="29" use="39" covered="0"/><du var="context" def="29" use="40" covered="0"/><du var="context" def="29" use="42" target="44" covered="0"/><du var="context" def="29" use="42" target="58" covered="0"/><du var="context" def="29" use="60" covered="0"/><du var="context" def="29" use="62" covered="0"/><du var="context" def="29" use="53" covered="0"/><du var="context" def="29" use="47" covered="0"/><du var="context" def="29" use="67" covered="0"/><du var="context.pos" def="29" use="32" covered="0"/><du var="buffer" def="29" use="34" covered="0"/><du var="buffer" def="29" use="36" covered="0"/><du var="buffer" def="29" use="58" covered="0"/><du var="buffer" def="29" use="45" target="46" covered="0"/><du var="buffer" def="29" use="45" target="51" covered="0"/><du var="buffer" def="29" use="51" target="52" covered="0"/><du var="buffer" def="29" use="51" target="67" covered="0"/><du var="buffer" def="29" use="53" covered="0"/><du var="buffer" def="29" use="47" covered="0"/><du var="buffer" def="29" use="67" covered="0"/><du var="context.pos" def="32" use="32" covered="0"/><du var="context.pos" def="32" use="60" covered="0"/><du var="lastCharSize" def="34" use="52" target="52" covered="0"/><du var="lastCharSize" def="34" use="52" target="52" covered="0"/><du var="lastCharSize" def="34" use="51" target="55" covered="0"/><du var="lastCharSize" def="34" use="51" target="53" covered="0"/><du var="lastCharSize" def="34" use="53" covered="0"/><du var="lastCharSize" def="34" use="47" covered="0"/><du var="available" def="40" use="52" target="52" covered="0"/><du var="available" def="40" use="52" target="53" covered="0"/><du var="available" def="40" use="46" target="46" covered="0"/><du var="available" def="40" use="46" target="47" covered="0"/><du var="available" def="40" use="46" target="47" covered="0"/><du var="available" def="40" use="46" target="51" covered="0"/><du var="removed" def="44" use="53" covered="0"/><du var="removed" def="44" use="47" covered="0"/><du var="lastCharSize" def="47" use="52" target="52" covered="0"/><du var="lastCharSize" def="47" use="52" target="52" covered="0"/><du var="lastCharSize" def="47" use="51" target="55" covered="0"/><du var="lastCharSize" def="47" use="51" target="53" covered="0"/><du var="lastCharSize" def="47" use="53" covered="0"/><du var="lastCharSize" def="53" use="52" target="52" covered="0"/><du var="lastCharSize" def="53" use="52" target="52" covered="0"/><du var="lastCharSize" def="53" use="51" target="55" covered="0"/><du var="lastCharSize" def="53" use="51" target="53" covered="0"/><du var="lastCharSize" def="53" use="53" covered="0"/><du var="count" def="58" use="59" target="60" covered="0"/><du var="count" def="58" use="59" target="30" covered="0"/><du var="newMode" def="60" use="61" target="62" covered="0"/><du var="newMode" def="60" use="61" target="30" covered="0"/><du var="newMode" def="60" use="62" covered="0"/><counter type="DU" missed="63" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleEOD" desc="(Lcom/google/zxing/datamatrix/encoder/EncoderContext;Ljava/lang/StringBuilder;)V"><du var="context" def="93" use="119" covered="0"/><du var="context" def="93" use="122" covered="0"/><du var="context" def="93" use="127" covered="0"/><du var="context" def="93" use="121" target="122" covered="0"/><du var="context" def="93" use="121" target="127" covered="0"/><du var="context" def="93" use="110" covered="0"/><du var="context" def="93" use="112" target="113" covered="0"/><du var="context" def="93" use="112" target="116" covered="0"/><du var="context" def="93" use="116" covered="0"/><du var="context" def="93" use="113" covered="0"/><du var="context" def="93" use="103" covered="0"/><du var="context" def="93" use="105" target="106" covered="0"/><du var="context" def="93" use="105" target="127" covered="0"/><du var="context" def="93" use="106" covered="0"/><du var="buffer" def="93" use="118" target="121" covered="0"/><du var="buffer" def="93" use="118" target="119" covered="0"/><du var="buffer" def="93" use="119" covered="0"/><du var="buffer" def="93" use="109" target="112" covered="0"/><du var="buffer" def="93" use="109" target="110" covered="0"/><du var="buffer" def="93" use="110" covered="0"/><du var="buffer" def="93" use="101" covered="0"/><du var="buffer" def="93" use="102" target="105" covered="0"/><du var="buffer" def="93" use="102" target="103" covered="0"/><du var="buffer" def="93" use="103" covered="0"/><du var="context.pos" def="93" use="116" covered="0"/><du var="rest" def="94" use="100" target="101" covered="0"/><du var="rest" def="94" use="100" target="108" covered="0"/><du var="rest" def="94" use="117" target="118" covered="0"/><du var="rest" def="94" use="117" target="125" covered="0"/><du var="rest" def="94" use="108" target="109" covered="0"/><du var="rest" def="94" use="108" target="117" covered="0"/><du var="available" def="98" use="108" target="108" covered="0"/><du var="available" def="98" use="108" target="117" covered="0"/><du var="available" def="98" use="121" target="121" covered="0"/><du var="available" def="98" use="121" target="122" covered="0"/><counter type="DU" missed="35" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeChar" desc="(CLjava/lang/StringBuilder;)I"><du var="this" def="131" use="163" covered="0"/><du var="c" def="131" use="131" target="132" covered="0"/><du var="c" def="131" use="131" target="134" covered="0"/><du var="c" def="131" use="134" target="134" covered="0"/><du var="c" def="131" use="134" target="137" covered="0"/><du var="c" def="131" use="137" target="137" covered="0"/><du var="c" def="131" use="137" target="140" covered="0"/><du var="c" def="131" use="140" target="140" covered="0"/><du var="c" def="131" use="140" target="144" covered="0"/><du var="c" def="131" use="144" target="144" covered="0"/><du var="c" def="131" use="144" target="148" covered="0"/><du var="c" def="131" use="148" target="148" covered="0"/><du var="c" def="131" use="148" target="152" covered="0"/><du var="c" def="131" use="152" target="152" covered="0"/><du var="c" def="131" use="152" target="156" covered="0"/><du var="c" def="131" use="156" target="156" covered="0"/><du var="c" def="131" use="156" target="160" covered="0"/><du var="c" def="131" use="160" target="161" covered="0"/><du var="c" def="131" use="160" target="166" covered="0"/><du var="c" def="131" use="166" covered="0"/><du var="c" def="131" use="163" covered="0"/><du var="c" def="131" use="156" target="157" covered="0"/><du var="c" def="131" use="156" target="160" covered="0"/><du var="c" def="131" use="158" covered="0"/><du var="c" def="131" use="152" target="153" covered="0"/><du var="c" def="131" use="152" target="156" covered="0"/><du var="c" def="131" use="154" covered="0"/><du var="c" def="131" use="148" target="149" covered="0"/><du var="c" def="131" use="148" target="152" covered="0"/><du var="c" def="131" use="150" covered="0"/><du var="c" def="131" use="144" target="145" covered="0"/><du var="c" def="131" use="144" target="148" covered="0"/><du var="c" def="131" use="146" covered="0"/><du var="c" def="131" use="140" target="141" covered="0"/><du var="c" def="131" use="140" target="144" covered="0"/><du var="c" def="131" use="142" covered="0"/><du var="c" def="131" use="137" target="138" covered="0"/><du var="c" def="131" use="137" target="140" covered="0"/><du var="c" def="131" use="138" covered="0"/><du var="c" def="131" use="134" target="135" covered="0"/><du var="c" def="131" use="134" target="137" covered="0"/><du var="c" def="131" use="135" covered="0"/><du var="sb" def="131" use="161" covered="0"/><du var="sb" def="131" use="163" covered="0"/><du var="sb" def="131" use="157" covered="0"/><du var="sb" def="131" use="158" covered="0"/><du var="sb" def="131" use="153" covered="0"/><du var="sb" def="131" use="154" covered="0"/><du var="sb" def="131" use="149" covered="0"/><du var="sb" def="131" use="150" covered="0"/><du var="sb" def="131" use="145" covered="0"/><du var="sb" def="131" use="146" covered="0"/><du var="sb" def="131" use="141" covered="0"/><du var="sb" def="131" use="142" covered="0"/><du var="sb" def="131" use="138" covered="0"/><du var="sb" def="131" use="135" covered="0"/><du var="sb" def="131" use="132" covered="0"/><counter type="DU" missed="57" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="155" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/encoder/SymbolInfo"><method name="lookup" desc="(IZZ)Lcom/google/zxing/datamatrix/encoder/SymbolInfo;"><du var="dataCodewords" def="112" use="114" covered="0"/><du var="allowRectangular" def="112" use="112" target="113" covered="0"/><du var="allowRectangular" def="112" use="112" target="113" covered="0"/><du var="fail" def="112" use="114" covered="0"/><du var="FORCE_SQUARE" def="112" use="112" covered="0"/><du var="FORCE_NONE" def="112" use="112" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lookup" desc="(ILcom/google/zxing/datamatrix/encoder/SymbolShapeHint;Lcom/google/zxing/Dimension;Lcom/google/zxing/Dimension;Z)Lcom/google/zxing/datamatrix/encoder/SymbolInfo;"><du var="dataCodewords" def="126" use="143" target="144" covered="0"/><du var="dataCodewords" def="126" use="143" target="126" covered="0"/><du var="dataCodewords" def="126" use="148" covered="0"/><du var="shape" def="126" use="127" target="127" covered="0"/><du var="shape" def="126" use="127" target="130" covered="0"/><du var="shape" def="126" use="130" target="130" covered="0"/><du var="shape" def="126" use="130" target="133" covered="0"/><du var="minSize" def="126" use="133" target="134" covered="0"/><du var="minSize" def="126" use="133" target="138" covered="0"/><du var="minSize" def="126" use="134" target="135" covered="0"/><du var="minSize" def="126" use="134" target="126" covered="0"/><du var="minSize" def="126" use="135" target="136" covered="0"/><du var="minSize" def="126" use="135" target="138" covered="0"/><du var="maxSize" def="126" use="138" target="139" covered="0"/><du var="maxSize" def="126" use="138" target="143" covered="0"/><du var="maxSize" def="126" use="139" target="140" covered="0"/><du var="maxSize" def="126" use="139" target="126" covered="0"/><du var="maxSize" def="126" use="140" target="141" covered="0"/><du var="maxSize" def="126" use="140" target="143" covered="0"/><du var="fail" def="126" use="147" target="148" covered="0"/><du var="fail" def="126" use="147" target="152" covered="0"/><du var="FORCE_SQUARE" def="126" use="127" target="127" covered="0"/><du var="FORCE_SQUARE" def="126" use="127" target="130" covered="0"/><du var="FORCE_RECTANGLE" def="126" use="130" target="130" covered="0"/><du var="FORCE_RECTANGLE" def="126" use="130" target="133" covered="0"/><du var="symbol" def="126" use="143" target="144" covered="0"/><du var="symbol" def="126" use="143" target="126" covered="0"/><du var="symbol" def="126" use="144" covered="0"/><du var="symbol" def="126" use="139" target="140" covered="0"/><du var="symbol" def="126" use="139" target="126" covered="0"/><du var="symbol" def="126" use="140" target="141" covered="0"/><du var="symbol" def="126" use="140" target="143" covered="0"/><du var="symbol" def="126" use="134" target="135" covered="0"/><du var="symbol" def="126" use="134" target="126" covered="0"/><du var="symbol" def="126" use="135" target="136" covered="0"/><du var="symbol" def="126" use="135" target="138" covered="0"/><du var="symbol" def="126" use="130" target="131" covered="0"/><du var="symbol" def="126" use="130" target="133" covered="0"/><du var="symbol" def="126" use="127" target="128" covered="0"/><du var="symbol" def="126" use="127" target="130" covered="0"/><du var="symbol.rectangular" def="126" use="130" target="131" covered="0"/><du var="symbol.rectangular" def="126" use="130" target="133" covered="0"/><du var="symbol.rectangular" def="126" use="127" target="128" covered="0"/><du var="symbol.rectangular" def="126" use="127" target="130" covered="0"/><du var="symbol.dataCapacity" def="126" use="143" target="144" covered="0"/><du var="symbol.dataCapacity" def="126" use="143" target="126" covered="0"/><counter type="DU" missed="57" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHorizontalDataRegions" desc="()I"><du var="this" def="156" use="156" target="167" covered="0"/><du var="this" def="156" use="156" target="158" covered="0"/><du var="this" def="156" use="156" target="161" covered="0"/><du var="this" def="156" use="156" target="163" covered="0"/><du var="this" def="156" use="156" target="165" covered="0"/><du var="this.dataRegions" def="156" use="156" target="167" covered="0"/><du var="this.dataRegions" def="156" use="156" target="158" covered="0"/><du var="this.dataRegions" def="156" use="156" target="161" covered="0"/><du var="this.dataRegions" def="156" use="156" target="163" covered="0"/><du var="this.dataRegions" def="156" use="156" target="165" covered="0"/><counter type="DU" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVerticalDataRegions" desc="()I"><du var="this" def="172" use="172" target="183" covered="0"/><du var="this" def="172" use="172" target="175" covered="0"/><du var="this" def="172" use="172" target="177" covered="0"/><du var="this" def="172" use="172" target="179" covered="0"/><du var="this" def="172" use="172" target="181" covered="0"/><du var="this.dataRegions" def="172" use="172" target="183" covered="0"/><du var="this.dataRegions" def="172" use="172" target="175" covered="0"/><du var="this.dataRegions" def="172" use="172" target="177" covered="0"/><du var="this.dataRegions" def="172" use="172" target="179" covered="0"/><du var="this.dataRegions" def="172" use="172" target="181" covered="0"/><counter type="DU" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><du var="this" def="229" use="229" target="229" covered="0"/><du var="this" def="229" use="229" target="229" covered="0"/><du var="this" def="229" use="229" covered="0"/><du var="this.rectangular" def="229" use="229" target="229" covered="0"/><du var="this.rectangular" def="229" use="229" target="229" covered="0"/><du var="this.matrixWidth" def="229" use="229" covered="0"/><du var="this.matrixHeight" def="229" use="229" covered="0"/><du var="this.dataCapacity" def="229" use="229" covered="0"/><du var="this.errorCodewords" def="229" use="229" covered="0"/><counter type="DU" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="92" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/encoder/DataMatrixSymbolInfo144"><method name="getDataLengthForInterleavedBlock" desc="(I)I"><du var="index" def="32" use="32" target="32" covered="0"/><du var="index" def="32" use="32" target="32" covered="0"/><counter type="DU" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/encoder/EncoderContext"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><du var="this" def="35" use="46" covered="0"/><du var="this" def="35" use="47" covered="0"/><du var="this" def="35" use="48" covered="0"/><du var="this" def="35" use="49" covered="0"/><du var="msg" def="35" use="41" target="42" covered="0"/><du var="msg" def="35" use="41" target="44" covered="0"/><du var="msg" def="35" use="48" covered="0"/><du var="FORCE_NONE" def="35" use="47" covered="0"/><du var="msgBinary" def="37" use="40" covered="0"/><du var="sb" def="38" use="44" covered="0"/><du var="sb" def="38" use="46" covered="0"/><du var="i" def="39" use="39" target="46" covered="0"/><du var="i" def="39" use="39" target="40" covered="0"/><du var="i" def="39" use="40" covered="0"/><du var="i" def="39" use="39" covered="0"/><du var="i" def="39" use="41" target="42" covered="0"/><du var="i" def="39" use="41" target="44" covered="0"/><du var="c" def="39" use="39" target="46" covered="0"/><du var="c" def="39" use="39" target="40" covered="0"/><du var="ch" def="40" use="41" target="41" covered="0"/><du var="ch" def="40" use="41" target="44" covered="0"/><du var="ch" def="40" use="44" covered="0"/><du var="i" def="39" use="39" target="46" covered="0"/><du var="i" def="39" use="39" target="40" covered="0"/><du var="i" def="39" use="40" covered="0"/><du var="i" def="39" use="39" covered="0"/><du var="i" def="39" use="41" target="42" covered="0"/><du var="i" def="39" use="41" target="44" covered="0"/><counter type="DU" missed="28" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasMoreCharacters" desc="()Z"><du var="this" def="106" use="106" target="106" covered="0"/><du var="this" def="106" use="106" target="106" covered="0"/><du var="this.pos" def="106" use="106" target="106" covered="0"/><du var="this.pos" def="106" use="106" target="106" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updateSymbolInfo" desc="(I)V"><du var="this" def="126" use="126" target="126" covered="0"/><du var="this" def="126" use="126" target="127" covered="0"/><du var="this" def="126" use="127" covered="0"/><du var="this" def="126" use="126" target="127" covered="0"/><du var="this" def="126" use="126" target="129" covered="0"/><du var="len" def="126" use="127" covered="0"/><du var="len" def="126" use="126" target="127" covered="0"/><du var="len" def="126" use="126" target="129" covered="0"/><du var="this.symbolInfo" def="126" use="126" target="126" covered="0"/><du var="this.symbolInfo" def="126" use="126" target="127" covered="0"/><du var="this.symbolInfo" def="126" use="126" target="127" covered="0"/><du var="this.symbolInfo" def="126" use="126" target="129" covered="0"/><du var="this.shape" def="126" use="127" covered="0"/><du var="this.minSize" def="126" use="127" covered="0"/><du var="this.maxSize" def="126" use="127" covered="0"/><counter type="DU" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="47" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/encoder/TextEncoder"><method name="encodeChar" desc="(CLjava/lang/StringBuilder;)I"><du var="this" def="28" use="78" covered="0"/><du var="c" def="28" use="28" target="29" covered="0"/><du var="c" def="28" use="28" target="32" covered="0"/><du var="c" def="28" use="32" target="32" covered="0"/><du var="c" def="28" use="32" target="36" covered="0"/><du var="c" def="28" use="36" target="36" covered="0"/><du var="c" def="28" use="36" target="40" covered="0"/><du var="c" def="28" use="40" target="40" covered="0"/><du var="c" def="28" use="40" target="45" covered="0"/><du var="c" def="28" use="45" target="45" covered="0"/><du var="c" def="28" use="45" target="50" covered="0"/><du var="c" def="28" use="50" target="50" covered="0"/><du var="c" def="28" use="50" target="55" covered="0"/><du var="c" def="28" use="55" target="55" covered="0"/><du var="c" def="28" use="55" target="60" covered="0"/><du var="c" def="28" use="60" target="61" covered="0"/><du var="c" def="28" use="60" target="65" covered="0"/><du var="c" def="28" use="65" target="65" covered="0"/><du var="c" def="28" use="65" target="70" covered="0"/><du var="c" def="28" use="70" target="70" covered="0"/><du var="c" def="28" use="70" target="75" covered="0"/><du var="c" def="28" use="75" target="76" covered="0"/><du var="c" def="28" use="75" target="81" covered="0"/><du var="c" def="28" use="81" covered="0"/><du var="c" def="28" use="78" covered="0"/><du var="c" def="28" use="70" target="71" covered="0"/><du var="c" def="28" use="70" target="75" covered="0"/><du var="c" def="28" use="72" covered="0"/><du var="c" def="28" use="65" target="66" covered="0"/><du var="c" def="28" use="65" target="70" covered="0"/><du var="c" def="28" use="67" covered="0"/><du var="c" def="28" use="62" covered="0"/><du var="c" def="28" use="55" target="56" covered="0"/><du var="c" def="28" use="55" target="60" covered="0"/><du var="c" def="28" use="57" covered="0"/><du var="c" def="28" use="50" target="51" covered="0"/><du var="c" def="28" use="50" target="55" covered="0"/><du var="c" def="28" use="52" covered="0"/><du var="c" def="28" use="45" target="46" covered="0"/><du var="c" def="28" use="45" target="50" covered="0"/><du var="c" def="28" use="47" covered="0"/><du var="c" def="28" use="40" target="41" covered="0"/><du var="c" def="28" use="40" target="45" covered="0"/><du var="c" def="28" use="42" covered="0"/><du var="c" def="28" use="36" target="37" covered="0"/><du var="c" def="28" use="36" target="40" covered="0"/><du var="c" def="28" use="37" covered="0"/><du var="c" def="28" use="32" target="33" covered="0"/><du var="c" def="28" use="32" target="36" covered="0"/><du var="c" def="28" use="33" covered="0"/><du var="sb" def="28" use="76" covered="0"/><du var="sb" def="28" use="78" covered="0"/><du var="sb" def="28" use="71" covered="0"/><du var="sb" def="28" use="72" covered="0"/><du var="sb" def="28" use="66" covered="0"/><du var="sb" def="28" use="67" covered="0"/><du var="sb" def="28" use="61" covered="0"/><du var="sb" def="28" use="62" covered="0"/><du var="sb" def="28" use="56" covered="0"/><du var="sb" def="28" use="57" covered="0"/><du var="sb" def="28" use="51" covered="0"/><du var="sb" def="28" use="52" covered="0"/><du var="sb" def="28" use="46" covered="0"/><du var="sb" def="28" use="47" covered="0"/><du var="sb" def="28" use="41" covered="0"/><du var="sb" def="28" use="42" covered="0"/><du var="sb" def="28" use="37" covered="0"/><du var="sb" def="28" use="33" covered="0"/><du var="sb" def="28" use="29" covered="0"/><counter type="DU" missed="69" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="69" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/encoder/ErrorCorrection"><method name="encodeECC200" desc="(Ljava/lang/String;Lcom/google/zxing/datamatrix/encoder/SymbolInfo;)Ljava/lang/String;"><du var="codewords" def="102" use="102" target="103" covered="0"/><du var="codewords" def="102" use="102" target="106" covered="0"/><du var="codewords" def="102" use="107" covered="0"/><du var="codewords" def="102" use="128" covered="0"/><du var="codewords" def="102" use="110" covered="0"/><du var="symbolInfo" def="102" use="102" target="103" covered="0"/><du var="symbolInfo" def="102" use="102" target="106" covered="0"/><du var="symbolInfo" def="102" use="106" covered="0"/><du var="symbolInfo" def="102" use="108" covered="0"/><du var="symbolInfo" def="102" use="118" covered="0"/><du var="symbolInfo" def="102" use="119" covered="0"/><du var="symbolInfo" def="102" use="127" target="130" covered="0"/><du var="symbolInfo" def="102" use="127" target="128" covered="0"/><du var="symbolInfo" def="102" use="133" covered="0"/><du var="symbolInfo" def="102" use="110" covered="0"/><du var="sb" def="106" use="113" covered="0"/><du var="sb" def="106" use="133" covered="0"/><du var="sb" def="106" use="137" covered="0"/><du var="sb" def="106" use="111" covered="0"/><du var="blockCount" def="108" use="109" target="110" covered="0"/><du var="blockCount" def="108" use="109" target="113" covered="0"/><du var="blockCount" def="108" use="114" covered="0"/><du var="blockCount" def="108" use="115" covered="0"/><du var="blockCount" def="108" use="116" covered="0"/><du var="blockCount" def="108" use="117" target="125" covered="0"/><du var="blockCount" def="108" use="117" target="118" covered="0"/><du var="blockCount" def="108" use="125" target="137" covered="0"/><du var="blockCount" def="108" use="125" target="126" covered="0"/><du var="blockCount" def="108" use="127" covered="0"/><du var="blockCount" def="108" use="132" target="125" covered="0"/><du var="blockCount" def="108" use="132" target="133" covered="0"/><du var="blockCount" def="108" use="132" covered="0"/><du var="dataSizes" def="114" use="118" covered="0"/><du var="dataSizes" def="114" use="122" covered="0"/><du var="dataSizes" def="114" use="126" covered="0"/><du var="errorSizes" def="115" use="119" covered="0"/><du var="errorSizes" def="115" use="130" covered="0"/><du var="errorSizes" def="115" use="132" target="125" covered="0"/><du var="errorSizes" def="115" use="132" target="133" covered="0"/><du var="startPos" def="116" use="120" covered="0"/><du var="startPos" def="116" use="122" covered="0"/><du var="i" def="117" use="117" target="125" covered="0"/><du var="i" def="117" use="117" target="118" covered="0"/><du var="i" def="117" use="118" covered="0"/><du var="i" def="117" use="119" covered="0"/><du var="i" def="117" use="120" covered="0"/><du var="i" def="117" use="121" target="122" covered="0"/><du var="i" def="117" use="121" target="117" covered="0"/><du var="i" def="117" use="117" covered="0"/><du var="i" def="117" use="122" covered="0"/><du var="i" def="117" use="117" target="125" covered="0"/><du var="i" def="117" use="117" target="118" covered="0"/><du var="i" def="117" use="118" covered="0"/><du var="i" def="117" use="119" covered="0"/><du var="i" def="117" use="120" covered="0"/><du var="i" def="117" use="121" target="122" covered="0"/><du var="i" def="117" use="121" target="117" covered="0"/><du var="i" def="117" use="117" covered="0"/><du var="i" def="117" use="122" covered="0"/><du var="block" def="125" use="125" target="137" covered="0"/><du var="block" def="125" use="125" target="126" covered="0"/><du var="block" def="125" use="126" covered="0"/><du var="block" def="125" use="127" covered="0"/><du var="block" def="125" use="130" covered="0"/><du var="block" def="125" use="132" covered="0"/><du var="block" def="125" use="132" target="125" covered="0"/><du var="block" def="125" use="132" target="133" covered="0"/><du var="block" def="125" use="125" covered="0"/><du var="temp" def="126" use="128" covered="0"/><du var="temp" def="126" use="130" covered="0"/><du var="d" def="127" use="127" target="130" covered="0"/><du var="d" def="127" use="127" target="128" covered="0"/><du var="d" def="127" use="128" covered="0"/><du var="d" def="127" use="127" covered="0"/><du var="d" def="127" use="127" target="130" covered="0"/><du var="d" def="127" use="127" target="128" covered="0"/><du var="d" def="127" use="128" covered="0"/><du var="d" def="127" use="127" covered="0"/><du var="ecc" def="130" use="133" covered="0"/><du var="pos" def="131" use="133" covered="0"/><du var="e" def="132" use="132" target="125" covered="0"/><du var="e" def="132" use="132" target="133" covered="0"/><du var="e" def="132" use="133" covered="0"/><du var="e" def="132" use="132" covered="0"/><du var="pos" def="133" use="133" covered="0"/><du var="e" def="132" use="132" target="125" covered="0"/><du var="e" def="132" use="132" target="133" covered="0"/><du var="e" def="132" use="133" covered="0"/><du var="e" def="132" use="132" covered="0"/><du var="block" def="125" use="125" target="137" covered="0"/><du var="block" def="125" use="125" target="126" covered="0"/><du var="block" def="125" use="126" covered="0"/><du var="block" def="125" use="127" covered="0"/><du var="block" def="125" use="130" covered="0"/><du var="block" def="125" use="132" covered="0"/><du var="block" def="125" use="132" target="125" covered="0"/><du var="block" def="125" use="132" target="133" covered="0"/><du var="block" def="125" use="125" covered="0"/><counter type="DU" missed="98" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createECCBlock" desc="(Ljava/lang/CharSequence;III)Ljava/lang/String;"><du var="codewords" def="146" use="163" covered="0"/><du var="start" def="146" use="162" covered="0"/><du var="start" def="146" use="162" target="177" covered="0"/><du var="start" def="146" use="162" target="163" covered="0"/><du var="len" def="146" use="162" target="177" covered="0"/><du var="len" def="146" use="162" target="163" covered="0"/><du var="numECWords" def="146" use="148" target="149" covered="0"/><du var="numECWords" def="146" use="148" target="147" covered="0"/><du var="numECWords" def="146" use="158" covered="0"/><du var="numECWords" def="146" use="159" target="162" covered="0"/><du var="numECWords" def="146" use="159" target="160" covered="0"/><du var="numECWords" def="146" use="163" covered="0"/><du var="numECWords" def="146" use="164" covered="0"/><du var="numECWords" def="146" use="177" covered="0"/><du var="numECWords" def="146" use="178" target="181" covered="0"/><du var="numECWords" def="146" use="178" target="179" covered="0"/><du var="numECWords" def="146" use="179" covered="0"/><du var="numECWords" def="146" use="154" covered="0"/><du var="FACTOR_SETS" def="146" use="147" target="153" covered="0"/><du var="FACTOR_SETS" def="146" use="147" target="148" covered="0"/><du var="FACTOR_SETS" def="146" use="148" target="149" covered="0"/><du var="FACTOR_SETS" def="146" use="148" target="147" covered="0"/><du var="FACTORS" def="146" use="157" covered="0"/><du var="ALOG" def="146" use="166" covered="0"/><du var="ALOG" def="146" use="172" covered="0"/><du var="LOG" def="146" use="166" covered="0"/><du var="LOG" def="146" use="172" covered="0"/><du var="table" def="146" use="153" target="154" covered="0"/><du var="table" def="146" use="153" target="157" covered="0"/><du var="table" def="146" use="157" covered="0"/><du var="i" def="147" use="147" target="153" covered="0"/><du var="i" def="147" use="147" target="148" covered="0"/><du var="i" def="147" use="148" target="149" covered="0"/><du var="i" def="147" use="148" target="147" covered="0"/><du var="i" def="147" use="147" covered="0"/><du var="i" def="147" use="149" covered="0"/><du var="table" def="149" use="153" target="154" covered="0"/><du var="table" def="149" use="153" target="157" covered="0"/><du var="table" def="149" use="157" covered="0"/><du var="i" def="147" use="147" target="153" covered="0"/><du var="i" def="147" use="147" target="148" covered="0"/><du var="i" def="147" use="148" target="149" covered="0"/><du var="i" def="147" use="148" target="147" covered="0"/><du var="i" def="147" use="147" covered="0"/><du var="i" def="147" use="149" covered="0"/><du var="poly" def="157" use="165" target="166" covered="0"/><du var="poly" def="157" use="165" target="168" covered="0"/><du var="poly" def="157" use="166" covered="0"/><du var="poly" def="157" use="171" target="172" covered="0"/><du var="poly" def="157" use="171" target="174" covered="0"/><du var="poly" def="157" use="172" covered="0"/><du var="ecc" def="158" use="160" covered="0"/><du var="ecc" def="158" use="163" covered="0"/><du var="ecc" def="158" use="168" covered="0"/><du var="ecc" def="158" use="166" covered="0"/><du var="ecc" def="158" use="174" covered="0"/><du var="ecc" def="158" use="172" covered="0"/><du var="ecc" def="158" use="179" covered="0"/><du var="i" def="159" use="159" target="162" covered="0"/><du var="i" def="159" use="159" target="160" covered="0"/><du var="i" def="159" use="160" covered="0"/><du var="i" def="159" use="159" covered="0"/><du var="i" def="159" use="159" target="162" covered="0"/><du var="i" def="159" use="159" target="160" covered="0"/><du var="i" def="159" use="160" covered="0"/><du var="i" def="159" use="159" covered="0"/><du var="i" def="162" use="162" target="177" covered="0"/><du var="i" def="162" use="162" target="163" covered="0"/><du var="i" def="162" use="163" covered="0"/><du var="i" def="162" use="162" covered="0"/><du var="m" def="163" use="165" target="165" covered="0"/><du var="m" def="163" use="165" target="168" covered="0"/><du var="m" def="163" use="166" covered="0"/><du var="m" def="163" use="171" target="171" covered="0"/><du var="m" def="163" use="171" target="174" covered="0"/><du var="m" def="163" use="172" covered="0"/><du var="k" def="164" use="164" target="171" covered="0"/><du var="k" def="164" use="164" target="165" covered="0"/><du var="k" def="164" use="168" covered="0"/><du var="k" def="164" use="164" covered="0"/><du var="k" def="164" use="165" target="166" covered="0"/><du var="k" def="164" use="165" target="168" covered="0"/><du var="k" def="164" use="166" covered="0"/><du var="k" def="164" use="164" target="171" covered="0"/><du var="k" def="164" use="164" target="165" covered="0"/><du var="k" def="164" use="168" covered="0"/><du var="k" def="164" use="164" covered="0"/><du var="k" def="164" use="165" target="166" covered="0"/><du var="k" def="164" use="165" target="168" covered="0"/><du var="k" def="164" use="166" covered="0"/><du var="i" def="162" use="162" target="177" covered="0"/><du var="i" def="162" use="162" target="163" covered="0"/><du var="i" def="162" use="163" covered="0"/><du var="i" def="162" use="162" covered="0"/><du var="eccReversed" def="177" use="179" covered="0"/><du var="eccReversed" def="177" use="181" covered="0"/><du var="i" def="178" use="178" target="181" covered="0"/><du var="i" def="178" use="178" target="179" covered="0"/><du var="i" def="178" use="179" covered="0"/><du var="i" def="178" use="178" covered="0"/><du var="i" def="178" use="178" target="181" covered="0"/><du var="i" def="178" use="178" target="179" covered="0"/><du var="i" def="178" use="179" covered="0"/><du var="i" def="178" use="178" covered="0"/><counter type="DU" missed="104" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="202" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/encoder/ASCIIEncoder"><method name="encode" desc="(Lcom/google/zxing/datamatrix/encoder/EncoderContext;)V"><du var="this" def="29" use="36" covered="0"/><du var="this" def="29" use="37" target="38" covered="0"/><du var="this" def="29" use="37" target="62" covered="0"/><du var="context" def="29" use="35" covered="0"/><du var="context" def="29" use="36" covered="0"/><du var="context" def="29" use="67" covered="0"/><du var="context" def="29" use="68" covered="0"/><du var="context" def="29" use="63" covered="0"/><du var="context" def="29" use="64" covered="0"/><du var="context" def="29" use="65" covered="0"/><du var="context" def="29" use="40" covered="0"/><du var="context" def="29" use="41" covered="0"/><du var="context" def="29" use="56" covered="0"/><du var="context" def="29" use="57" covered="0"/><du var="context" def="29" use="48" covered="0"/><du var="context" def="29" use="49" covered="0"/><du var="context" def="29" use="52" covered="0"/><du var="context" def="29" use="53" covered="0"/><du var="context" def="29" use="44" covered="0"/><du var="context" def="29" use="45" covered="0"/><du var="context" def="29" use="31" covered="0"/><du var="context" def="29" use="33" covered="0"/><du var="context.pos" def="29" use="36" covered="0"/><du var="context.pos" def="29" use="68" covered="0"/><du var="context.pos" def="29" use="65" covered="0"/><du var="context.pos" def="29" use="31" covered="0"/><du var="context.pos" def="29" use="33" covered="0"/><du var="n" def="29" use="30" target="31" covered="0"/><du var="n" def="29" use="30" target="35" covered="0"/><du var="c" def="35" use="62" target="63" covered="0"/><du var="c" def="35" use="62" target="67" covered="0"/><du var="c" def="35" use="67" covered="0"/><du var="c" def="35" use="64" covered="0"/><du var="newMode" def="36" use="37" target="38" covered="0"/><du var="newMode" def="36" use="37" target="62" covered="0"/><du var="newMode" def="36" use="38" target="60" covered="0"/><du var="newMode" def="36" use="38" target="44" covered="0"/><du var="newMode" def="36" use="38" target="52" covered="0"/><du var="newMode" def="36" use="38" target="48" covered="0"/><du var="newMode" def="36" use="38" target="56" covered="0"/><du var="newMode" def="36" use="38" target="40" covered="0"/><du var="newMode" def="36" use="60" covered="0"/><counter type="DU" missed="42" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeASCIIDigits" desc="(CC)C"><du var="digit1" def="75" use="75" target="75" covered="0"/><du var="digit1" def="75" use="75" target="79" covered="0"/><du var="digit1" def="75" use="79" covered="0"/><du var="digit1" def="75" use="76" covered="0"/><du var="digit2" def="75" use="79" covered="0"/><du var="digit2" def="75" use="75" target="76" covered="0"/><du var="digit2" def="75" use="75" target="79" covered="0"/><du var="digit2" def="75" use="76" covered="0"/><counter type="DU" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="50" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/encoder/HighLevelEncoder"><method name="randomize253State" desc="(CI)C"><du var="tempVariable" def="130" use="131" target="131" covered="0"/><du var="tempVariable" def="130" use="131" target="131" covered="0"/><du var="tempVariable" def="130" use="131" covered="0"/><counter type="DU" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeHighLevel" desc="(Ljava/lang/String;Lcom/google/zxing/datamatrix/encoder/SymbolShapeHint;Lcom/google/zxing/Dimension;Lcom/google/zxing/Dimension;)Ljava/lang/String;"><du var="msg" def="161" use="170" target="170" covered="0"/><du var="msg" def="161" use="170" target="174" covered="0"/><du var="msg" def="161" use="174" target="174" covered="0"/><du var="msg" def="161" use="174" target="180" covered="0"/><du var="msg" def="161" use="174" target="175" covered="0"/><du var="msg" def="161" use="174" target="180" covered="0"/><du var="msg" def="161" use="170" target="171" covered="0"/><du var="msg" def="161" use="170" target="174" covered="0"/><du var="encoders" def="161" use="182" covered="0"/><du var="context" def="166" use="181" target="188" covered="0"/><du var="context" def="166" use="181" target="182" covered="0"/><du var="context" def="166" use="182" covered="0"/><du var="context" def="166" use="183" target="184" covered="0"/><du var="context" def="166" use="183" target="181" covered="0"/><du var="context" def="166" use="184" covered="0"/><du var="context" def="166" use="185" covered="0"/><du var="context" def="166" use="188" covered="0"/><du var="context" def="166" use="189" covered="0"/><du var="context" def="166" use="190" covered="0"/><du var="context" def="166" use="197" covered="0"/><du var="context" def="166" use="205" covered="0"/><du var="context" def="166" use="193" covered="0"/><du var="context" def="166" use="175" covered="0"/><du var="context" def="166" use="176" covered="0"/><du var="context" def="166" use="177" covered="0"/><du var="context" def="166" use="171" covered="0"/><du var="context" def="166" use="172" covered="0"/><du var="context" def="166" use="173" covered="0"/><du var="context.pos" def="166" use="177" covered="0"/><du var="context.pos" def="166" use="173" covered="0"/><du var="encodingMode" def="180" use="182" covered="0"/><du var="encodingMode" def="180" use="192" target="192" covered="0"/><du var="encodingMode" def="180" use="192" target="197" covered="0"/><du var="encodingMode" def="180" use="192" target="193" covered="0"/><du var="encodingMode" def="180" use="192" target="197" covered="0"/><du var="encodingMode" def="184" use="182" covered="0"/><du var="encodingMode" def="184" use="192" target="192" covered="0"/><du var="encodingMode" def="184" use="192" target="197" covered="0"/><du var="encodingMode" def="184" use="192" target="193" covered="0"/><du var="encodingMode" def="184" use="192" target="197" covered="0"/><du var="len" def="188" use="191" target="192" covered="0"/><du var="len" def="188" use="191" target="197" covered="0"/><du var="capacity" def="190" use="191" target="192" covered="0"/><du var="capacity" def="190" use="191" target="197" covered="0"/><du var="capacity" def="190" use="198" target="199" covered="0"/><du var="capacity" def="190" use="198" target="201" covered="0"/><du var="capacity" def="190" use="201" target="205" covered="0"/><du var="capacity" def="190" use="201" target="202" covered="0"/><du var="codewords" def="197" use="198" target="199" covered="0"/><du var="codewords" def="197" use="198" target="201" covered="0"/><du var="codewords" def="197" use="201" target="205" covered="0"/><du var="codewords" def="197" use="201" target="202" covered="0"/><du var="codewords" def="197" use="202" covered="0"/><du var="codewords" def="197" use="199" covered="0"/><counter type="DU" missed="54" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lookAheadTest" desc="(Ljava/lang/CharSequence;II)I"><du var="msg" def="209" use="209" target="210" covered="0"/><du var="msg" def="209" use="209" target="214" covered="0"/><du var="msg" def="209" use="224" target="225" covered="0"/><du var="msg" def="209" use="224" target="249" covered="0"/><du var="msg" def="209" use="249" covered="0"/><du var="msg" def="209" use="342" target="352" covered="0"/><du var="msg" def="209" use="342" target="343" covered="0"/><du var="msg" def="209" use="343" covered="0"/><du var="startpos" def="209" use="209" target="210" covered="0"/><du var="startpos" def="209" use="209" target="214" covered="0"/><du var="startpos" def="209" use="224" target="225" covered="0"/><du var="startpos" def="209" use="224" target="249" covered="0"/><du var="startpos" def="209" use="249" covered="0"/><du var="startpos" def="209" use="341" covered="0"/><du var="currentMode" def="209" use="214" target="215" covered="0"/><du var="currentMode" def="209" use="214" target="217" covered="0"/><du var="currentMode" def="209" use="218" covered="0"/><du var="currentMode" def="209" use="210" covered="0"/><du var="charCounts" def="215" use="259" covered="0"/><du var="charCounts" def="215" use="260" covered="0"/><du var="charCounts" def="215" use="269" covered="0"/><du var="charCounts" def="215" use="278" covered="0"/><du var="charCounts" def="215" use="287" covered="0"/><du var="charCounts" def="215" use="296" covered="0"/><du var="charCounts" def="215" use="303" covered="0"/><du var="charCounts" def="215" use="310" covered="0"/><du var="charCounts" def="215" use="301" covered="0"/><du var="charCounts" def="215" use="294" covered="0"/><du var="charCounts" def="215" use="292" covered="0"/><du var="charCounts" def="215" use="285" covered="0"/><du var="charCounts" def="215" use="283" covered="0"/><du var="charCounts" def="215" use="276" covered="0"/><du var="charCounts" def="215" use="274" covered="0"/><du var="charCounts" def="215" use="267" covered="0"/><du var="charCounts" def="215" use="265" covered="0"/><du var="charCounts" def="215" use="256" covered="0"/><du var="charCounts" def="215" use="257" covered="0"/><du var="charCounts" def="215" use="254" covered="0"/><du var="charCounts" def="215" use="228" covered="0"/><du var="charCounts" def="217" use="259" covered="0"/><du var="charCounts" def="217" use="260" covered="0"/><du var="charCounts" def="217" use="269" covered="0"/><du var="charCounts" def="217" use="278" covered="0"/><du var="charCounts" def="217" use="287" covered="0"/><du var="charCounts" def="217" use="296" covered="0"/><du var="charCounts" def="217" use="303" covered="0"/><du var="charCounts" def="217" use="310" covered="0"/><du var="charCounts" def="217" use="301" covered="0"/><du var="charCounts" def="217" use="294" covered="0"/><du var="charCounts" def="217" use="292" covered="0"/><du var="charCounts" def="217" use="285" covered="0"/><du var="charCounts" def="217" use="283" covered="0"/><du var="charCounts" def="217" use="276" covered="0"/><du var="charCounts" def="217" use="274" covered="0"/><du var="charCounts" def="217" use="267" covered="0"/><du var="charCounts" def="217" use="265" covered="0"/><du var="charCounts" def="217" use="256" covered="0"/><du var="charCounts" def="217" use="257" covered="0"/><du var="charCounts" def="217" use="254" covered="0"/><du var="charCounts" def="217" use="228" covered="0"/><du var="charsProcessed" def="221" use="224" target="225" covered="0"/><du var="charsProcessed" def="221" use="224" target="249" covered="0"/><du var="charsProcessed" def="221" use="249" covered="0"/><du var="charsProcessed" def="221" use="250" covered="0"/><du var="mins" def="226" use="243" target="244" covered="0"/><du var="mins" def="226" use="243" target="246" covered="0"/><du var="mins" def="226" use="240" target="241" covered="0"/><du var="mins" def="226" use="240" target="243" covered="0"/><du var="mins" def="226" use="237" target="238" covered="0"/><du var="mins" def="226" use="237" target="240" covered="0"/><du var="mins" def="226" use="234" target="235" covered="0"/><du var="mins" def="226" use="234" target="237" covered="0"/><du var="intCharCounts" def="227" use="231" target="232" covered="0"/><du var="intCharCounts" def="227" use="231" target="234" covered="0"/><du var="min" def="228" use="231" target="232" covered="0"/><du var="min" def="228" use="231" target="234" covered="0"/><du var="minCount" def="229" use="234" target="234" covered="0"/><du var="minCount" def="229" use="234" target="237" covered="0"/><du var="minCount" def="229" use="237" target="237" covered="0"/><du var="minCount" def="229" use="237" target="240" covered="0"/><du var="minCount" def="229" use="240" target="240" covered="0"/><du var="minCount" def="229" use="240" target="243" covered="0"/><du var="minCount" def="229" use="243" target="243" covered="0"/><du var="minCount" def="229" use="243" target="246" covered="0"/><du var="c" def="249" use="253" target="254" covered="0"/><du var="c" def="249" use="253" target="255" covered="0"/><du var="c" def="249" use="255" target="256" covered="0"/><du var="c" def="249" use="255" target="259" covered="0"/><du var="c" def="249" use="264" target="265" covered="0"/><du var="c" def="249" use="264" target="266" covered="0"/><du var="c" def="249" use="266" target="267" covered="0"/><du var="c" def="249" use="266" target="269" covered="0"/><du var="c" def="249" use="273" target="274" covered="0"/><du var="c" def="249" use="273" target="275" covered="0"/><du var="c" def="249" use="275" target="276" covered="0"/><du var="c" def="249" use="275" target="278" covered="0"/><du var="c" def="249" use="282" target="283" covered="0"/><du var="c" def="249" use="282" target="284" covered="0"/><du var="c" def="249" use="284" target="285" covered="0"/><du var="c" def="249" use="284" target="287" covered="0"/><du var="c" def="249" use="291" target="292" covered="0"/><du var="c" def="249" use="291" target="293" covered="0"/><du var="c" def="249" use="293" target="294" covered="0"/><du var="c" def="249" use="293" target="296" covered="0"/><du var="c" def="249" use="300" target="301" covered="0"/><du var="c" def="249" use="300" target="303" covered="0"/><du var="charsProcessed" def="250" use="307" target="308" covered="0"/><du var="charsProcessed" def="250" use="307" target="224" covered="0"/><du var="charsProcessed" def="250" use="224" target="225" covered="0"/><du var="charsProcessed" def="250" use="224" target="249" covered="0"/><du var="charsProcessed" def="250" use="249" covered="0"/><du var="charsProcessed" def="250" use="250" covered="0"/><du var="charsProcessed" def="250" use="341" covered="0"/><du var="intCharCounts" def="308" use="313" target="314" covered="0"/><du var="intCharCounts" def="308" use="313" target="320" covered="0"/><du var="intCharCounts" def="308" use="320" target="321" covered="0"/><du var="intCharCounts" def="308" use="320" target="322" covered="0"/><du var="intCharCounts" def="308" use="333" target="334" covered="0"/><du var="intCharCounts" def="308" use="333" target="224" covered="0"/><du var="intCharCounts" def="308" use="334" target="335" covered="0"/><du var="intCharCounts" def="308" use="334" target="224" covered="0"/><du var="intCharCounts" def="308" use="335" target="336" covered="0"/><du var="intCharCounts" def="308" use="335" target="224" covered="0"/><du var="intCharCounts" def="308" use="336" target="337" covered="0"/><du var="intCharCounts" def="308" use="336" target="224" covered="0"/><du var="intCharCounts" def="308" use="337" target="338" covered="0"/><du var="intCharCounts" def="308" use="337" target="340" covered="0"/><du var="intCharCounts" def="308" use="340" target="341" covered="0"/><du var="intCharCounts" def="308" use="340" target="224" covered="0"/><du var="intCharCounts" def="308" use="314" target="315" covered="0"/><du var="intCharCounts" def="308" use="314" target="320" covered="0"/><du var="intCharCounts" def="308" use="315" target="316" covered="0"/><du var="intCharCounts" def="308" use="315" target="320" covered="0"/><du var="intCharCounts" def="308" use="316" target="317" covered="0"/><du var="intCharCounts" def="308" use="316" target="320" covered="0"/><du var="intCharCounts" def="308" use="317" target="318" covered="0"/><du var="intCharCounts" def="308" use="317" target="320" covered="0"/><du var="mins" def="309" use="321" target="322" covered="0"/><du var="mins" def="309" use="321" target="324" covered="0"/><du var="mins" def="309" use="330" target="331" covered="0"/><du var="mins" def="309" use="330" target="333" covered="0"/><du var="mins" def="309" use="327" target="328" covered="0"/><du var="mins" def="309" use="327" target="330" covered="0"/><du var="mins" def="309" use="324" target="325" covered="0"/><du var="mins" def="309" use="324" target="327" covered="0"/><du var="minCount" def="311" use="324" target="324" covered="0"/><du var="minCount" def="311" use="324" target="327" covered="0"/><du var="minCount" def="311" use="327" target="327" covered="0"/><du var="minCount" def="311" use="327" target="330" covered="0"/><du var="minCount" def="311" use="330" target="330" covered="0"/><du var="minCount" def="311" use="330" target="333" covered="0"/><du var="p" def="341" use="342" target="352" covered="0"/><du var="p" def="341" use="342" target="343" covered="0"/><du var="p" def="341" use="343" covered="0"/><du var="p" def="341" use="350" covered="0"/><du var="tc" def="343" use="344" target="345" covered="0"/><du var="tc" def="343" use="344" target="347" covered="0"/><du var="tc" def="343" use="347" target="348" covered="0"/><du var="tc" def="343" use="347" target="350" covered="0"/><du var="p" def="350" use="342" target="352" covered="0"/><du var="p" def="350" use="342" target="343" covered="0"/><du var="p" def="350" use="343" covered="0"/><du var="p" def="350" use="350" covered="0"/><counter type="DU" missed="163" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findMinimums" desc="([F[II[B)I"><du var="charCounts" def="360" use="362" covered="0"/><du var="intCharCounts" def="360" use="362" covered="0"/><du var="intCharCounts" def="360" use="363" covered="0"/><du var="min" def="360" use="364" target="365" covered="0"/><du var="min" def="360" use="364" target="368" covered="0"/><du var="min" def="360" use="368" target="369" covered="0"/><du var="min" def="360" use="368" target="361" covered="0"/><du var="min" def="360" use="373" covered="0"/><du var="mins" def="360" use="369" covered="0"/><du var="mins" def="360" use="366" covered="0"/><du var="i" def="361" use="361" target="373" covered="0"/><du var="i" def="361" use="361" target="362" covered="0"/><du var="i" def="361" use="362" covered="0"/><du var="i" def="361" use="363" covered="0"/><du var="i" def="361" use="361" covered="0"/><du var="i" def="361" use="369" covered="0"/><du var="current" def="363" use="364" target="365" covered="0"/><du var="current" def="363" use="364" target="368" covered="0"/><du var="current" def="363" use="368" target="369" covered="0"/><du var="current" def="363" use="368" target="361" covered="0"/><du var="current" def="363" use="365" covered="0"/><du var="min" def="365" use="368" target="369" covered="0"/><du var="min" def="365" use="368" target="361" covered="0"/><du var="min" def="365" use="364" target="365" covered="0"/><du var="min" def="365" use="364" target="368" covered="0"/><du var="min" def="365" use="373" covered="0"/><du var="i" def="361" use="361" target="373" covered="0"/><du var="i" def="361" use="361" target="362" covered="0"/><du var="i" def="361" use="362" covered="0"/><du var="i" def="361" use="363" covered="0"/><du var="i" def="361" use="361" covered="0"/><du var="i" def="361" use="369" covered="0"/><counter type="DU" missed="32" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinimumCount" desc="([B)I"><du var="mins" def="377" use="379" covered="0"/><du var="minCount" def="377" use="379" covered="0"/><du var="minCount" def="377" use="381" covered="0"/><du var="i" def="378" use="378" target="381" covered="0"/><du var="i" def="378" use="378" target="379" covered="0"/><du var="i" def="378" use="379" covered="0"/><du var="i" def="378" use="378" covered="0"/><du var="minCount" def="379" use="379" covered="0"/><du var="minCount" def="379" use="381" covered="0"/><du var="i" def="378" use="378" target="381" covered="0"/><du var="i" def="378" use="378" target="379" covered="0"/><du var="i" def="378" use="379" covered="0"/><du var="i" def="378" use="378" covered="0"/><counter type="DU" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDigit" desc="(C)Z"><du var="ch" def="385" use="385" target="385" covered="0"/><du var="ch" def="385" use="385" target="385" covered="0"/><du var="ch" def="385" use="385" target="385" covered="0"/><du var="ch" def="385" use="385" target="385" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExtendedASCII" desc="(C)Z"><du var="ch" def="389" use="389" target="389" covered="0"/><du var="ch" def="389" use="389" target="389" covered="0"/><du var="ch" def="389" use="389" target="389" covered="0"/><du var="ch" def="389" use="389" target="389" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNativeC40" desc="(C)Z"><du var="ch" def="393" use="393" target="393" covered="0"/><du var="ch" def="393" use="393" target="393" covered="0"/><du var="ch" def="393" use="393" target="393" covered="0"/><du var="ch" def="393" use="393" target="393" covered="0"/><du var="ch" def="393" use="393" target="393" covered="0"/><du var="ch" def="393" use="393" target="393" covered="0"/><du var="ch" def="393" use="393" target="393" covered="0"/><du var="ch" def="393" use="393" target="393" covered="0"/><du var="ch" def="393" use="393" target="393" covered="0"/><du var="ch" def="393" use="393" target="393" covered="0"/><counter type="DU" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNativeText" desc="(C)Z"><du var="ch" def="397" use="397" target="397" covered="0"/><du var="ch" def="397" use="397" target="397" covered="0"/><du var="ch" def="397" use="397" target="397" covered="0"/><du var="ch" def="397" use="397" target="397" covered="0"/><du var="ch" def="397" use="397" target="397" covered="0"/><du var="ch" def="397" use="397" target="397" covered="0"/><du var="ch" def="397" use="397" target="397" covered="0"/><du var="ch" def="397" use="397" target="397" covered="0"/><du var="ch" def="397" use="397" target="397" covered="0"/><du var="ch" def="397" use="397" target="397" covered="0"/><counter type="DU" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNativeX12" desc="(C)Z"><du var="ch" def="401" use="401" target="401" covered="0"/><du var="ch" def="401" use="401" target="401" covered="0"/><du var="ch" def="401" use="401" target="401" covered="0"/><du var="ch" def="401" use="401" target="401" covered="0"/><du var="ch" def="401" use="401" target="401" covered="0"/><du var="ch" def="401" use="401" target="401" covered="0"/><du var="ch" def="401" use="401" target="401" covered="0"/><du var="ch" def="401" use="401" target="401" covered="0"/><du var="ch" def="401" use="401" target="401" covered="0"/><du var="ch" def="401" use="401" target="401" covered="0"/><du var="ch" def="401" use="401" target="401" covered="0"/><du var="ch" def="401" use="401" target="401" covered="0"/><counter type="DU" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isX12TermSep" desc="(C)Z"><du var="ch" def="405" use="405" target="406" covered="0"/><du var="ch" def="405" use="405" target="405" covered="0"/><du var="ch" def="405" use="406" target="407" covered="0"/><du var="ch" def="405" use="406" target="405" covered="0"/><du var="ch" def="405" use="407" target="405" covered="0"/><du var="ch" def="405" use="407" target="405" covered="0"/><counter type="DU" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNativeEDIFACT" desc="(C)Z"><du var="ch" def="411" use="411" target="411" covered="0"/><du var="ch" def="411" use="411" target="411" covered="0"/><du var="ch" def="411" use="411" target="411" covered="0"/><du var="ch" def="411" use="411" target="411" covered="0"/><counter type="DU" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="determineConsecutiveDigitCount" desc="(Ljava/lang/CharSequence;I)I"><du var="msg" def="426" use="430" covered="0"/><du var="msg" def="426" use="435" covered="0"/><du var="count" def="426" use="439" covered="0"/><du var="count" def="426" use="432" covered="0"/><du var="len" def="427" use="429" target="430" covered="0"/><du var="len" def="427" use="429" target="439" covered="0"/><du var="len" def="427" use="431" target="439" covered="0"/><du var="len" def="427" use="431" target="432" covered="0"/><du var="len" def="427" use="434" target="435" covered="0"/><du var="len" def="427" use="434" target="431" covered="0"/><du var="idx" def="428" use="429" target="430" covered="0"/><du var="idx" def="428" use="429" target="439" covered="0"/><du var="idx" def="428" use="430" covered="0"/><du var="idx" def="428" use="431" target="439" covered="0"/><du var="idx" def="428" use="431" target="432" covered="0"/><du var="idx" def="428" use="433" covered="0"/><du var="ch" def="430" use="431" target="431" covered="0"/><du var="ch" def="430" use="431" target="439" covered="0"/><du var="count" def="432" use="439" covered="0"/><du var="count" def="432" use="432" covered="0"/><du var="idx" def="433" use="434" target="435" covered="0"/><du var="idx" def="433" use="434" target="431" covered="0"/><du var="idx" def="433" use="431" target="439" covered="0"/><du var="idx" def="433" use="431" target="432" covered="0"/><du var="idx" def="433" use="433" covered="0"/><du var="idx" def="433" use="435" covered="0"/><du var="ch" def="435" use="431" target="431" covered="0"/><du var="ch" def="435" use="431" target="439" covered="0"/><counter type="DU" missed="28" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="343" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/datamatrix/encoder/EdifactEncoder"><method name="encode" desc="(Lcom/google/zxing/datamatrix/encoder/EncoderContext;)V"><du var="this" def="29" use="40" covered="0"/><du var="this" def="29" use="41" target="42" covered="0"/><du var="this" def="29" use="41" target="30" covered="0"/><du var="context" def="29" use="30" target="47" covered="0"/><du var="context" def="29" use="30" target="31" covered="0"/><du var="context" def="29" use="31" covered="0"/><du var="context" def="29" use="33" covered="0"/><du var="context" def="29" use="37" covered="0"/><du var="context" def="29" use="40" covered="0"/><du var="context" def="29" use="42" covered="0"/><du var="context" def="29" use="48" covered="0"/><du var="context.pos" def="29" use="33" covered="0"/><du var="buffer" def="29" use="32" covered="0"/><du var="buffer" def="29" use="35" covered="0"/><du var="buffer" def="29" use="37" covered="0"/><du var="buffer" def="29" use="38" covered="0"/><du var="buffer" def="29" use="47" covered="0"/><du var="buffer" def="29" use="48" covered="0"/><du var="context.pos" def="33" use="33" covered="0"/><du var="context.pos" def="33" use="40" covered="0"/><du var="count" def="35" use="36" target="37" covered="0"/><du var="count" def="35" use="36" target="30" covered="0"/><du var="newMode" def="40" use="41" target="42" covered="0"/><du var="newMode" def="40" use="41" target="30" covered="0"/><counter type="DU" missed="24" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleEOD" desc="(Lcom/google/zxing/datamatrix/encoder/EncoderContext;Ljava/lang/CharSequence;)V"><du var="context" def="59" use="78" target="78" covered="0"/><du var="context" def="59" use="78" target="78" covered="0"/><du var="context" def="59" use="95" covered="0"/><du var="context" def="59" use="98" covered="0"/><du var="context" def="59" use="92" covered="0"/><du var="context" def="59" use="93" covered="0"/><du var="context" def="59" use="82" covered="0"/><du var="context" def="59" use="83" covered="0"/><du var="context" def="59" use="86" covered="0"/><du var="context" def="59" use="65" covered="0"/><du var="context" def="59" use="66" covered="0"/><du var="context" def="59" use="67" covered="0"/><du var="context" def="59" use="98" covered="0"/><du var="context" def="59" use="98" covered="0"/><du var="buffer" def="59" use="77" covered="0"/><du var="context.pos" def="59" use="93" covered="0"/><du var="count" def="59" use="60" target="98" covered="0"/><du var="count" def="59" use="60" target="63" covered="0"/><du var="count" def="59" use="63" target="65" covered="0"/><du var="count" def="59" use="63" target="73" covered="0"/><du var="count" def="59" use="73" target="74" covered="0"/><du var="count" def="59" use="73" target="76" covered="0"/><du var="count" def="59" use="76" covered="0"/><du var="available" def="66" use="68" target="98" covered="0"/><du var="available" def="66" use="68" target="73" covered="0"/><du var="remaining" def="67" use="68" target="68" covered="0"/><du var="remaining" def="67" use="68" target="73" covered="0"/><du var="restChars" def="76" use="81" target="82" covered="0"/><du var="restChars" def="76" use="81" target="91" covered="0"/><du var="restChars" def="76" use="93" covered="0"/><du var="restChars" def="76" use="82" covered="0"/><du var="restChars" def="76" use="79" target="79" covered="0"/><du var="restChars" def="76" use="79" target="79" covered="0"/><du var="encoded" def="77" use="95" covered="0"/><du var="encoded" def="77" use="86" covered="0"/><du var="endOfSymbolReached" def="78" use="79" target="79" covered="0"/><du var="endOfSymbolReached" def="78" use="79" target="79" covered="0"/><du var="restInAscii" def="79" use="91" target="92" covered="0"/><du var="restInAscii" def="79" use="91" target="95" covered="0"/><du var="available" def="83" use="84" target="85" covered="0"/><du var="available" def="83" use="84" target="91" covered="0"/><du var="restInAscii" def="85" use="91" target="92" covered="0"/><du var="restInAscii" def="85" use="91" target="95" covered="0"/><counter type="DU" missed="43" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeChar" desc="(CLjava/lang/StringBuilder;)V"><du var="c" def="103" use="103" target="103" covered="0"/><du var="c" def="103" use="103" target="105" covered="0"/><du var="c" def="103" use="105" target="105" covered="0"/><du var="c" def="103" use="105" target="108" covered="0"/><du var="c" def="103" use="108" covered="0"/><du var="c" def="103" use="105" target="106" covered="0"/><du var="c" def="103" use="105" target="108" covered="0"/><du var="c" def="103" use="106" covered="0"/><du var="c" def="103" use="103" target="104" covered="0"/><du var="c" def="103" use="103" target="105" covered="0"/><du var="c" def="103" use="104" covered="0"/><du var="sb" def="103" use="106" covered="0"/><du var="sb" def="103" use="104" covered="0"/><counter type="DU" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeToCodewords" desc="(Ljava/lang/CharSequence;I)Ljava/lang/String;"><du var="sb" def="113" use="117" covered="0"/><du var="sb" def="113" use="118" covered="0"/><du var="sb" def="113" use="119" covered="0"/><du var="sb" def="113" use="120" covered="0"/><du var="startPos" def="113" use="117" covered="0"/><du var="startPos" def="113" use="118" covered="0"/><du var="startPos" def="113" use="119" covered="0"/><du var="startPos" def="113" use="120" covered="0"/><du var="len" def="113" use="114" target="115" covered="0"/><du var="len" def="113" use="114" target="117" covered="0"/><du var="len" def="113" use="118" target="118" covered="0"/><du var="len" def="113" use="118" target="118" covered="0"/><du var="len" def="113" use="119" target="119" covered="0"/><du var="len" def="113" use="119" target="119" covered="0"/><du var="len" def="113" use="120" target="120" covered="0"/><du var="len" def="113" use="120" target="120" covered="0"/><du var="len" def="113" use="128" target="129" covered="0"/><du var="len" def="113" use="128" target="131" covered="0"/><du var="len" def="113" use="131" target="132" covered="0"/><du var="len" def="113" use="131" target="134" covered="0"/><du var="c1" def="117" use="122" covered="0"/><du var="c2" def="118" use="122" covered="0"/><du var="c3" def="119" use="122" covered="0"/><du var="cw2" def="124" use="129" covered="0"/><du var="cw3" def="125" use="132" covered="0"/><du var="res" def="126" use="134" covered="0"/><du var="res" def="126" use="132" covered="0"/><du var="res" def="126" use="129" covered="0"/><counter type="DU" missed="28" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="108" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/zxing/ResultPoint"><method name="equals" desc="(Ljava/lang/Object;)Z"><du var="this" def="47" use="49" target="49" covered="0"/><du var="this" def="47" use="49" target="49" covered="0"/><du var="this" def="47" use="49" target="49" covered="0"/><du var="this" def="47" use="49" target="49" covered="0"/><du var="other" def="47" use="47" target="48" covered="0"/><du var="other" def="47" use="47" target="51" covered="0"/><du var="other" def="47" use="48" covered="0"/><du var="this.x" def="47" use="49" target="49" covered="0"/><du var="this.x" def="47" use="49" target="49" covered="0"/><du var="this.y" def="47" use="49" target="49" covered="0"/><du var="this.y" def="47" use="49" target="49" covered="0"/><du var="otherPoint" def="48" use="49" target="49" covered="0"/><du var="otherPoint" def="48" use="49" target="49" covered="0"/><du var="otherPoint" def="48" use="49" target="49" covered="0"/><du var="otherPoint" def="48" use="49" target="49" covered="0"/><du var="otherPoint.x" def="48" use="49" target="49" covered="0"/><du var="otherPoint.x" def="48" use="49" target="49" covered="0"/><du var="otherPoint.y" def="48" use="49" target="49" covered="0"/><du var="otherPoint.y" def="48" use="49" target="49" covered="0"/><counter type="DU" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="orderBestPatterns" desc="([Lcom/google/zxing/ResultPoint;)V"><du var="patterns" def="73" use="90" covered="0"/><du var="patterns" def="73" use="91" covered="0"/><du var="patterns" def="73" use="92" covered="0"/><du var="patterns" def="73" use="105" covered="0"/><du var="patterns" def="73" use="106" covered="0"/><du var="patterns" def="73" use="107" covered="0"/><du var="patterns" def="73" use="86" covered="0"/><du var="patterns" def="73" use="87" covered="0"/><du var="patterns" def="73" use="88" covered="0"/><du var="patterns" def="73" use="82" covered="0"/><du var="patterns" def="73" use="83" covered="0"/><du var="patterns" def="73" use="84" covered="0"/><du var="zeroOneDistance" def="73" use="81" target="81" covered="0"/><du var="zeroOneDistance" def="73" use="81" target="85" covered="0"/><du var="zeroOneDistance" def="73" use="85" target="86" covered="0"/><du var="zeroOneDistance" def="73" use="85" target="90" covered="0"/><du var="oneTwoDistance" def="74" use="81" target="81" covered="0"/><du var="oneTwoDistance" def="74" use="81" target="85" covered="0"/><du var="oneTwoDistance" def="74" use="85" target="85" covered="0"/><du var="oneTwoDistance" def="74" use="85" target="90" covered="0"/><du var="oneTwoDistance" def="74" use="81" target="82" covered="0"/><du var="oneTwoDistance" def="74" use="81" target="85" covered="0"/><du var="zeroTwoDistance" def="75" use="85" target="85" covered="0"/><du var="zeroTwoDistance" def="75" use="85" target="90" covered="0"/><du var="zeroTwoDistance" def="75" use="85" target="86" covered="0"/><du var="zeroTwoDistance" def="75" use="85" target="90" covered="0"/><du var="zeroTwoDistance" def="75" use="81" target="82" covered="0"/><du var="zeroTwoDistance" def="75" use="81" target="85" covered="0"/><du var="pointB" def="82" use="99" target="100" covered="0"/><du var="pointB" def="82" use="99" target="105" covered="0"/><du var="pointB" def="82" use="106" covered="0"/><du var="pointA" def="83" use="99" target="100" covered="0"/><du var="pointA" def="83" use="99" target="105" covered="0"/><du var="pointA" def="83" use="105" covered="0"/><du var="pointA" def="83" use="100" covered="0"/><du var="pointC" def="84" use="99" target="100" covered="0"/><du var="pointC" def="84" use="99" target="105" covered="0"/><du var="pointC" def="84" use="107" covered="0"/><du var="pointC" def="84" use="101" covered="0"/><du var="pointB" def="86" use="99" target="100" covered="0"/><du var="pointB" def="86" use="99" target="105" covered="0"/><du var="pointB" def="86" use="106" covered="0"/><du var="pointA" def="87" use="99" target="100" covered="0"/><du var="pointA" def="87" use="99" target="105" covered="0"/><du var="pointA" def="87" use="105" covered="0"/><du var="pointA" def="87" use="100" covered="0"/><du var="pointC" def="88" use="99" target="100" covered="0"/><du var="pointC" def="88" use="99" target="105" covered="0"/><du var="pointC" def="88" use="107" covered="0"/><du var="pointC" def="88" use="101" covered="0"/><du var="pointB" def="90" use="99" target="100" covered="0"/><du var="pointB" def="90" use="99" target="105" covered="0"/><du var="pointB" def="90" use="106" covered="0"/><du var="pointA" def="91" use="99" target="100" covered="0"/><du var="pointA" def="91" use="99" target="105" covered="0"/><du var="pointA" def="91" use="105" covered="0"/><du var="pointA" def="91" use="100" covered="0"/><du var="pointC" def="92" use="99" target="100" covered="0"/><du var="pointC" def="92" use="99" target="105" covered="0"/><du var="pointC" def="92" use="107" covered="0"/><du var="pointC" def="92" use="101" covered="0"/><du var="pointA" def="101" use="105" covered="0"/><du var="pointC" def="102" use="107" covered="0"/><counter type="DU" missed="63" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="DU" missed="82" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><counter type="DU" missed="26246" covered="3956"/><counter type="METHOD" missed="607" covered="130"/><counter type="CLASS" missed="163" covered="38"/></report>